{"version":3,"sources":["webpack:///./node_modules/echarts/lib/util/layout.js","webpack:///./node_modules/echarts/lib/chart/boxplot.js","webpack:///./node_modules/echarts/lib/component/axis/AxisBuilder.js","webpack:///./node_modules/echarts/lib/preprocessor/backwardCompat.js","webpack:///./node_modules/echarts/lib/component/helper/BrushController.js","webpack:///./node_modules/echarts/lib/coord/polar/Polar.js","webpack:///./node_modules/echarts/lib/visual/seriesColor.js","webpack:///./node_modules/echarts/lib/processor/dataSample.js","webpack:///./node_modules/echarts/lib/model/mixin/textStyle.js","webpack:///./node_modules/echarts/lib/chart/boxplot/BoxplotSeries.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/Brush.js","webpack:///./node_modules/echarts/lib/component/axisPointer/viewHelper.js","webpack:///./node_modules/echarts/lib/processor/dataFilter.js","webpack:///./node_modules/echarts/lib/chart/graph/simpleLayout.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/MagicType.js","webpack:///./node_modules/zrender/lib/vml/core.js","webpack:///./node_modules/echarts/lib/chart/sankey/SankeySeries.js","webpack:///./node_modules/echarts/lib/component/geo.js","webpack:///./node_modules/echarts/lib/coord/calendar/Calendar.js","webpack:///./node_modules/echarts/lib/processor/dataStack.js","webpack:///./node_modules/echarts/lib/component/legend.js","webpack:///./node_modules/zrender/lib/Handler.js","webpack:///./node_modules/echarts/lib/chart/graph/graphAction.js","webpack:///./node_modules/zrender/lib/graphic/shape/Polyline.js","webpack:///./node_modules/echarts/lib/component/axisPointer/AxisPointerView.js","webpack:///./node_modules/zrender/lib/graphic/CompoundPath.js","webpack:///./node_modules/echarts/lib/chart/line/poly.js","webpack:///./node_modules/zrender/lib/core/LRU.js","webpack:///./node_modules/zrender/lib/Element.js","webpack:///./node_modules/echarts/lib/chart/bar/PictorialBarSeries.js","webpack:///./node_modules/echarts/lib/component/visualMap/visualMapAction.js","webpack:///./node_modules/echarts/lib/chart/sunburst.js","webpack:///./node_modules/echarts/lib/component/toolbox/ToolboxView.js","webpack:///./node_modules/echarts/lib/action/roamHelper.js","webpack:///./node_modules/zrender/lib/contain/path.js","webpack:///./node_modules/echarts/lib/coord/parallel/Parallel.js","webpack:///./node_modules/echarts/lib/coord/polar/AxisModel.js","webpack:///./node_modules/zrender/lib/graphic/shape/Circle.js","webpack:///./node_modules/echarts/lib/chart/treemap.js","webpack:///./node_modules/echarts/lib/component/markPoint.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/Restore.js","webpack:///./node_modules/zrender/lib/graphic/Pattern.js","webpack:///./node_modules/zrender/lib/svg/Painter.js","webpack:///./node_modules/echarts/lib/component/axisPointer/BaseAxisPointer.js","webpack:///./node_modules/echarts/lib/chart/boxplot/BoxplotView.js","webpack:///./node_modules/echarts/lib/component/dataZoomSelect.js","webpack:///./node_modules/echarts/lib/component/timeline/SliderTimelineModel.js","webpack:///./node_modules/zrender/lib/graphic/RadialGradient.js","webpack:///./node_modules/zrender/lib/core/guid.js","webpack:///./node_modules/echarts/lib/model/mixin/boxLayout.js","webpack:///./node_modules/echarts/lib/chart/graph/edgeVisual.js","webpack:///./node_modules/echarts/lib/coord/parallel/AxisModel.js","webpack:///./node_modules/echarts/lib/chart/custom.js","webpack:///./node_modules/echarts/lib/coord/axisTickLabelBuilder.js","webpack:///./node_modules/echarts/lib/util/model.js","webpack:///./node_modules/echarts/lib/scale/Scale.js","webpack:///./node_modules/zrender/lib/container/Group.js","webpack:///./node_modules/zrender/lib/core/bbox.js","webpack:///./node_modules/echarts/lib/chart/bar/helper.js","webpack:///./node_modules/zrender/lib/contain/cubic.js","webpack:///./node_modules/echarts/lib/chart/helper/whiskerBoxCommon.js","webpack:///./node_modules/echarts/lib/chart/helper/createListSimply.js","webpack:///./node_modules/echarts/lib/model/mixin/colorPalette.js","webpack:///./node_modules/echarts/lib/util/animation.js","webpack:///./node_modules/echarts/lib/component/legend/scrollableLegendAction.js","webpack:///./node_modules/echarts/lib/component/axisPointer/axisTrigger.js","webpack:///./node_modules/zrender/lib/contain/text.js","webpack:///./node_modules/echarts/lib/view/Chart.js","webpack:///./node_modules/zrender/lib/vml/Painter.js","webpack:///./node_modules/echarts/lib/chart/candlestick/preprocessor.js","webpack:///./node_modules/echarts/lib/component/visualMap/VisualMapModel.js","webpack:///./node_modules/echarts/lib/coord/polar/prepareCustom.js","webpack:///./node_modules/echarts/lib/component/helper/sliderMove.js","webpack:///./node_modules/echarts/lib/chart/line.js","webpack:///./node_modules/echarts/lib/chart/tree.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Axis2D.js","webpack:///./node_modules/echarts/lib/data/Source.js","webpack:///./node_modules/echarts/lib/chart/boxplot/boxplotLayout.js","webpack:///./node_modules/zrender/lib/Painter.js","webpack:///./node_modules/echarts/lib/component/timeline/TimelineModel.js","webpack:///./node_modules/echarts/lib/util/format.js","webpack:///./node_modules/echarts/lib/coord/single/singleAxisHelper.js","webpack:///./node_modules/echarts/lib/data/helper/dataStackHelper.js","webpack:///./node_modules/echarts/lib/component/calendar/CalendarView.js","webpack:///./node_modules/echarts/lib/util/array/nest.js","webpack:///./node_modules/zrender/lib/tool/transformPath.js","webpack:///./node_modules/echarts/lib/component/timeline.js","webpack:///./node_modules/echarts/lib/chart/lines/linesVisual.js","webpack:///./node_modules/echarts/lib/coord/geo/geoCreator.js","webpack:///./node_modules/echarts/lib/chart/graph/forceHelper.js","webpack:///./node_modules/echarts/lib/chart/line/lineAnimationDiff.js","webpack:///./node_modules/echarts/lib/component/axisPointer/SingleAxisPointer.js","webpack:///./node_modules/echarts/lib/component/legend/ScrollableLegendModel.js","webpack:///./node_modules/echarts/lib/chart/line/LineView.js","webpack:///./node_modules/zrender/lib/vml/vml.js","webpack:///./node_modules/echarts/lib/theme/dark.js","webpack:///./node_modules/echarts/lib/component/axis/CartesianAxisView.js","webpack:///./node_modules/echarts/lib/coord/geo/Region.js","webpack:///./node_modules/echarts/lib/component/parallel.js","webpack:///./node_modules/echarts/lib/component/brush/BrushModel.js","webpack:///./node_modules/echarts/lib/chart/pie/PieSeries.js","webpack:///./node_modules/echarts/lib/stream/task.js","webpack:///./node_modules/echarts/lib/component/helper/brushHelper.js","webpack:///./node_modules/echarts/lib/component/angleAxis.js","webpack:///./node_modules/echarts/lib/chart/treemap/Breadcrumb.js","webpack:///./node_modules/echarts/lib/chart/map/mapDataStatistic.js","webpack:///./node_modules/echarts/lib/chart/helper/SymbolDraw.js","webpack:///./node_modules/echarts/lib/component/dataset.js","webpack:///./node_modules/echarts/lib/component/visualMap/PiecewiseView.js","webpack:///./node_modules/echarts/lib/chart/parallel/ParallelSeries.js","webpack:///./node_modules/echarts/lib/component/tooltip.js","webpack:///./node_modules/echarts/lib/chart/funnel/FunnelSeries.js","webpack:///./node_modules/echarts/lib/coord/geo/prepareCustom.js","webpack:///./node_modules/echarts/lib/coord/geo/Geo.js","webpack:///./node_modules/echarts/lib/coord/cartesian/cartesianAxisHelper.js","webpack:///./node_modules/echarts/lib/component/helper/roamHelper.js","webpack:///./node_modules/echarts/lib/component/gridSimple.js","webpack:///./node_modules/echarts/lib/chart/gauge.js","webpack:///./node_modules/echarts/lib/component/tooltip/TooltipContent.js","webpack:///./node_modules/zrender/lib/core/timsort.js","webpack:///./node_modules/zrender/lib/contain/polygon.js","webpack:///./node_modules/zrender/lib/animation/Animator.js","webpack:///./node_modules/echarts/lib/data/Tree.js","webpack:///./node_modules/echarts/lib/component/visualMap/PiecewiseModel.js","webpack:///./node_modules/zrender/lib/core/GestureMgr.js","webpack:///./node_modules/echarts/lib/component/legendScroll.js","webpack:///./node_modules/echarts/lib/chart/parallel.js","webpack:///./node_modules/echarts/lib/chart/candlestick.js","webpack:///./node_modules/echarts/lib/component/timeline/TimelineAxis.js","webpack:///./node_modules/echarts/lib/chart/candlestick/candlestickLayout.js","webpack:///./node_modules/echarts/lib/component/dataZoom.js","webpack:///./node_modules/echarts/lib/coord/parallel/ParallelAxis.js","webpack:///./node_modules/echarts/lib/data/helper/sourceHelper.js","webpack:///./node_modules/echarts/lib/chart/helper/EffectLine.js","webpack:///./node_modules/zrender/lib/core/arrayDiff2.js","webpack:///./node_modules/echarts/lib/component/helper/MapDraw.js","webpack:///./node_modules/zrender/lib/mixin/Transformable.js","webpack:///./node_modules/zrender/lib/graphic/Image.js","webpack:///./node_modules/echarts/lib/chart/sankey/sankeyVisual.js","webpack:///./node_modules/echarts/lib/component/legend/ScrollableLegendView.js","webpack:///./node_modules/echarts/lib/component/brush/visualEncoding.js","webpack:///./node_modules/echarts/lib/chart/effectScatter.js","webpack:///./node_modules/echarts/lib/component/axisPointer/findPointFromSeries.js","webpack:///./node_modules/echarts/lib/coord/radar/RadarModel.js","webpack:///./node_modules/echarts/lib/coord/geo/fix/textCoord.js","webpack:///./node_modules/echarts/lib/chart/bar/BarSeries.js","webpack:///./node_modules/echarts/lib/component/axisPointer/globalListener.js","webpack:///./node_modules/echarts/lib/chart/helper/Symbol.js","webpack:///./node_modules/echarts/lib/chart/radar/RadarView.js","webpack:///./node_modules/echarts/lib/component/axis/RadiusAxisView.js","webpack:///./node_modules/echarts/lib/helper.js","webpack:///./node_modules/echarts/lib/chart/scatter.js","webpack:///./node_modules/zrender/lib/core/matrix.js","webpack:///./node_modules/echarts/lib/scale/Ordinal.js","webpack:///./node_modules/echarts/lib/component/marker/MarkLineModel.js","webpack:///./node_modules/echarts/lib/chart/candlestick/CandlestickView.js","webpack:///./node_modules/zrender/lib/graphic/Displayable.js","webpack:///./node_modules/echarts/lib/chart/pie/PieView.js","webpack:///./node_modules/zrender/lib/mixin/Eventful.js","webpack:///./node_modules/echarts/lib/chart/graph/simpleLayoutHelper.js","webpack:///./node_modules/echarts/lib/coord/polar/polarCreator.js","webpack:///./node_modules/echarts/lib/layout/barPolar.js","webpack:///./node_modules/echarts/lib/chart/gauge/PointerPath.js","webpack:///./node_modules/echarts/lib/coord/geo/GeoModel.js","webpack:///./node_modules/echarts/lib/chart/graph.js","webpack:///./node_modules/echarts/lib/coord/radar/Radar.js","webpack:///./node_modules/echarts/lib/chart/helper/createGraphFromNodeEdge.js","webpack:///./node_modules/echarts/lib/coord/axisModelCommonMixin.js","webpack:///./node_modules/echarts/lib/CoordinateSystem.js","webpack:///./node_modules/zrender/lib/core/PathProxy.js","webpack:///./node_modules/echarts/lib/component/toolbox/featureManager.js","webpack:///./node_modules/echarts/lib/chart/tree/TreeSeries.js","webpack:///./node_modules/echarts/lib/scale/Time.js","webpack:///./node_modules/echarts/lib/chart/line/LineSeries.js","webpack:///./node_modules/echarts/lib/coord/parallel/ParallelModel.js","webpack:///./node_modules/zrender/lib/core/env.js","webpack:///./node_modules/echarts/lib/chart/tree/layoutHelper.js","webpack:///./node_modules/echarts/lib/util/graphic.js","webpack:///./node_modules/echarts/lib/component/dataZoom/SliderZoomView.js","webpack:///./node_modules/echarts/lib/component/marker/MarkerModel.js","webpack:///./node_modules/echarts/lib/chart/funnel/funnelLayout.js","webpack:///./node_modules/echarts/lib/chart/themeRiver/ThemeRiverView.js","webpack:///./node_modules/echarts/lib/preprocessor/helper/compatStyle.js","webpack:///./node_modules/zrender/lib/graphic/Style.js","webpack:///./node_modules/echarts/lib/visual/visualSolution.js","webpack:///./node_modules/echarts/lib/model/mixin/makeStyleMapper.js","webpack:///./node_modules/echarts/lib/chart/pie/pieLayout.js","webpack:///./node_modules/echarts/lib/chart/graph/categoryVisual.js","webpack:///./node_modules/echarts/lib/lang.js","webpack:///./node_modules/echarts/lib/component/visualMapPiecewise.js","webpack:///./node_modules/echarts/lib/data/helper/dataProvider.js","webpack:///./node_modules/echarts/lib/data/helper/dimensionHelper.js","webpack:///./node_modules/echarts/lib/component/polar.js","webpack:///./node_modules/echarts/lib/chart/boxplot/boxplotVisual.js","webpack:///./node_modules/echarts/lib/component/dataZoom/dataZoomProcessor.js","webpack:///./node_modules/zrender/lib/config.js","webpack:///./node_modules/echarts/lib/component/singleAxis.js","webpack:///./node_modules/echarts/lib/component/brush.js","webpack:///./node_modules/echarts/lib/chart/bar/BaseBarSeries.js","webpack:///./node_modules/echarts/lib/component/marker/MarkLineView.js","webpack:///./node_modules/echarts/lib/component/visualMap/ContinuousModel.js","webpack:///./node_modules/echarts/lib/coord/single/prepareCustom.js","webpack:///./node_modules/zrender/lib/animation/Animation.js","webpack:///./node_modules/echarts/lib/chart/sankey.js","webpack:///./node_modules/echarts/index.js","webpack:///./node_modules/echarts/lib/data/helper/linkList.js","webpack:///./node_modules/echarts/lib/coord/geo/fix/nanhai.js","webpack:///./node_modules/echarts/lib/component/dataZoom/InsideZoomView.js","webpack:///./node_modules/echarts/lib/chart/helper/createListFromArray.js","webpack:///./node_modules/echarts/lib/chart/bar/PictorialBarView.js","webpack:///./node_modules/echarts/lib/component/dataZoom/SliderZoomModel.js","webpack:///./node_modules/echarts/lib/chart/sunburst/SunburstView.js","webpack:///./node_modules/zrender/lib/tool/path.js","webpack:///./node_modules/echarts/lib/component/timeline/SliderTimelineView.js","webpack:///./node_modules/echarts/lib/util/number.js","webpack:///./node_modules/echarts/lib/model/mixin/dataFormat.js","webpack:///./node_modules/echarts/lib/model/mixin/lineStyle.js","webpack:///./node_modules/zrender/lib/graphic/IncrementalDisplayable.js","webpack:///./node_modules/echarts/lib/component/timeline/timelineAction.js","webpack:///./node_modules/echarts/lib/chart/heatmap/HeatmapSeries.js","webpack:///./node_modules/echarts/lib/component/dataZoom/DataZoomModel.js","webpack:///./node_modules/zrender/lib/svg/graphic.js","webpack:///./node_modules/echarts/lib/component/visualMap/ContinuousView.js","webpack:///./node_modules/echarts/lib/echarts.js","webpack:///./node_modules/echarts/lib/component/marker/MarkAreaModel.js","webpack:///./node_modules/zrender/lib/core/vector.js","webpack:///./node_modules/echarts/lib/component/dataZoom/SelectZoomModel.js","webpack:///./node_modules/zrender/lib/tool/color.js","webpack:///./node_modules/zrender/lib/graphic/Gradient.js","webpack:///./node_modules/echarts/lib/component/tooltip/TooltipView.js","webpack:///./node_modules/echarts/lib/model/Model.js","webpack:///./node_modules/echarts/lib/coord/single/singleCreator.js","webpack:///./node_modules/echarts/lib/chart/effectScatter/EffectScatterView.js","webpack:///./node_modules/echarts/lib/chart/treemap/treemapAction.js","webpack:///./node_modules/zrender/lib/animation/Clip.js","webpack:///./node_modules/echarts/lib/chart/sunburst/sunburstAction.js","webpack:///./node_modules/echarts/lib/chart/helper/Polyline.js","webpack:///./node_modules/zrender/lib/graphic/shape/Ring.js","webpack:///./node_modules/echarts/lib/component/legend/legendAction.js","webpack:///./node_modules/echarts/lib/coord/calendar/prepareCustom.js","webpack:///./node_modules/echarts/lib/coord/single/Single.js","webpack:///./node_modules/echarts/lib/chart/heatmap/HeatmapView.js","webpack:///./node_modules/echarts/lib/chart/graph/adjustEdge.js","webpack:///./node_modules/zrender/lib/graphic/LinearGradient.js","webpack:///./node_modules/echarts/lib/component/axisPointer/AxisPointerModel.js","webpack:///./node_modules/echarts/lib/coord/cartesian/AxisModel.js","webpack:///./node_modules/zrender/lib/core/log.js","webpack:///./node_modules/echarts/lib/action/geoRoam.js","webpack:///./node_modules/echarts/lib/component/helper/RoamController.js","webpack:///./node_modules/zrender/lib/core/curve.js","webpack:///./node_modules/echarts/lib/component/axisPointer/CartesianAxisPointer.js","webpack:///./node_modules/zrender/lib/graphic/shape/Sector.js","webpack:///./node_modules/zrender/lib/svg/helper/Definable.js","webpack:///./node_modules/echarts/lib/component/dataZoom/SelectZoomView.js","webpack:///./node_modules/echarts/lib/model/Series.js","webpack:///./node_modules/zrender/lib/graphic/helper/poly.js","webpack:///./node_modules/echarts/lib/chart/candlestick/candlestickVisual.js","webpack:///./node_modules/echarts/lib/chart/funnel/FunnelView.js","webpack:///./node_modules/echarts/lib/chart/gauge/GaugeSeries.js","webpack:///./node_modules/echarts/lib/config.js","webpack:///./node_modules/echarts/lib/chart/map/MapSeries.js","webpack:///./node_modules/echarts/lib/chart/sunburst/SunburstPiece.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/SaveAsImage.js","webpack:///./node_modules/echarts/lib/component/dataZoom/helper.js","webpack:///./node_modules/echarts/lib/chart/themeRiver/themeRiverLayout.js","webpack:///./node_modules/echarts/lib/component/visualMap.js","webpack:///./node_modules/echarts/lib/chart/map/mapVisual.js","webpack:///./node_modules/echarts/lib/model/mixin/itemStyle.js","webpack:///./node_modules/echarts/lib/component/radar.js","webpack:///./node_modules/echarts/lib/component/dataZoom/roams.js","webpack:///./node_modules/echarts/lib/chart/helper/treeHelper.js","webpack:///./node_modules/zrender/lib/graphic/helper/roundRect.js","webpack:///./node_modules/echarts/lib/chart/sankey/SankeyView.js","webpack:///./node_modules/echarts/lib/chart/graph/forceLayout.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Grid.js","webpack:///./node_modules/echarts/lib/chart/heatmap.js","webpack:///./node_modules/zrender/lib/Layer.js","webpack:///./node_modules/zrender/lib/graphic/helper/image.js","webpack:///./node_modules/echarts/lib/component/legend/LegendView.js","webpack:///./node_modules/echarts/lib/visual/VisualMapping.js","webpack:///./node_modules/zrender/lib/core/event.js","webpack:///./node_modules/echarts/lib/chart/parallel/ParallelView.js","webpack:///./node_modules/echarts/lib/visual/visualDefault.js","webpack:///./node_modules/echarts/lib/data/List.js","webpack:///./node_modules/zrender/lib/graphic/helper/smoothSpline.js","webpack:///./node_modules/echarts/lib/util/clazz.js","webpack:///./node_modules/echarts/lib/component/title.js","webpack:///./node_modules/echarts/lib/chart/graph/categoryFilter.js","webpack:///./node_modules/echarts/lib/chart/map.js","webpack:///./node_modules/echarts/lib/chart/effectScatter/EffectScatterSeries.js","webpack:///./node_modules/echarts/lib/chart/bar/BarView.js","webpack:///./node_modules/echarts/lib/coord/parallel/parallelPreprocessor.js","webpack:///./node_modules/echarts/lib/chart/lines/linesLayout.js","webpack:///./node_modules/echarts/lib/component/axis/AxisView.js","webpack:///./node_modules/echarts/lib/component/timeline/preprocessor.js","webpack:///./node_modules/echarts/lib/coord/single/SingleAxis.js","webpack:///./node_modules/echarts/lib/coord/geo/fix/geoCoord.js","webpack:///./node_modules/zrender/lib/contain/quadratic.js","webpack:///./node_modules/echarts/lib/component/dataZoom/typeDefaulter.js","webpack:///./node_modules/zrender/lib/zrender.js","webpack:///./node_modules/echarts/lib/coord/axisHelper.js","webpack:///./node_modules/echarts/lib/stream/Scheduler.js","webpack:///./node_modules/echarts/lib/chart/helper/EffectPolyline.js","webpack:///./node_modules/echarts/lib/component/axisPointer/PolarAxisPointer.js","webpack:///./node_modules/echarts/lib/component/dataZoom/history.js","webpack:///./node_modules/echarts/lib/component/radar/RadarView.js","webpack:///./node_modules/echarts/lib/chart/themeRiver.js","webpack:///./node_modules/echarts/lib/model/Component.js","webpack:///./node_modules/echarts/lib/coord/View.js","webpack:///./node_modules/echarts/lib/chart/tree/TreeView.js","webpack:///./node_modules/zrender/lib/core/util.js","webpack:///./node_modules/echarts/lib/chart/tree/traversalHelper.js","webpack:///./node_modules/echarts/lib/data/Graph.js","webpack:///./node_modules/echarts/lib/chart/helper/LineDraw.js","webpack:///./node_modules/echarts/lib/component/helper/selectableMixin.js","webpack:///./node_modules/echarts/lib/coord/axisDefault.js","webpack:///./node_modules/echarts/lib/chart/themeRiver/themeRiverVisual.js","webpack:///./node_modules/echarts/lib/chart/lines/LinesSeries.js","webpack:///./node_modules/echarts/lib/component/visualMap/VisualMapView.js","webpack:///./node_modules/echarts/lib/action/createDataSelectAction.js","webpack:///./node_modules/echarts/lib/component/visualMapContinuous.js","webpack:///./node_modules/zrender/lib/animation/easing.js","webpack:///./node_modules/echarts/lib/component/geo/GeoView.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/DataView.js","webpack:///./node_modules/zrender/lib/graphic/Text.js","webpack:///./node_modules/echarts/lib/coord/radar/IndicatorAxis.js","webpack:///./node_modules/echarts/lib/chart/radar/backwardCompat.js","webpack:///./node_modules/echarts/lib/coord/polar/PolarModel.js","webpack:///./node_modules/echarts/lib/component/helper/listComponent.js","webpack:///./node_modules/echarts/lib/component/radiusAxis.js","webpack:///./node_modules/echarts/lib/chart/graph/createView.js","webpack:///./node_modules/echarts/lib/component/graphic.js","webpack:///./node_modules/echarts/lib/chart/helper/LinePath.js","webpack:///./node_modules/echarts/lib/visual/symbol.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/DataZoom.js","webpack:///./node_modules/zrender/lib/graphic/helper/fixShadow.js","webpack:///./node_modules/echarts/lib/component/dataZoom/DataZoomView.js","webpack:///./node_modules/echarts/lib/component/markArea.js","webpack:///./node_modules/echarts/lib/chart/helper/Line.js","webpack:///./node_modules/echarts/lib/model/Global.js","webpack:///./node_modules/echarts/lib/component/marker/MarkPointView.js","webpack:///./node_modules/echarts/lib/coord/calendar/CalendarModel.js","webpack:///./node_modules/echarts/lib/data/DataDiffer.js","webpack:///./node_modules/echarts/lib/chart/sankey/sankeyLayout.js","webpack:///./node_modules/echarts/lib/chart/graph/GraphSeries.js","webpack:///./node_modules/zrender/lib/graphic/shape/Polygon.js","webpack:///./node_modules/echarts/lib/layout/points.js","webpack:///./node_modules/echarts/lib/ExtensionAPI.js","webpack:///./node_modules/echarts/lib/component/axis/parallelAxisAction.js","webpack:///./node_modules/echarts/lib/coord/parallel/parallelCreator.js","webpack:///./node_modules/echarts/lib/coord/Axis.js","webpack:///./node_modules/echarts/lib/component/legend/LegendModel.js","webpack:///./node_modules/zrender/lib/contain/util.js","webpack:///./node_modules/echarts/lib/data/helper/completeDimensions.js","webpack:///./node_modules/echarts/lib/chart/radar/radarLayout.js","webpack:///./node_modules/zrender/lib/svg/core.js","webpack:///./node_modules/zrender/lib/contain/windingLine.js","webpack:///./node_modules/echarts/lib/model/referHelper.js","webpack:///./node_modules/echarts/lib/util/throttle.js","webpack:///./node_modules/echarts/lib/component/marker/MarkerView.js","webpack:///./node_modules/echarts/lib/util/component.js","webpack:///./node_modules/echarts/lib/model/globalDefault.js","webpack:///./node_modules/zrender/lib/graphic/helper/fixClipWithShadow.js","webpack:///./node_modules/echarts/lib/scale/Interval.js","webpack:///./node_modules/echarts/lib/scale/Log.js","webpack:///./node_modules/zrender/lib/graphic/shape/Arc.js","webpack:///./node_modules/echarts/lib/chart/radar.js","webpack:///./node_modules/echarts/lib/data/OrdinalMeta.js","webpack:///./node_modules/echarts/lib/component/marker/MarkAreaView.js","webpack:///./node_modules/echarts/lib/component/toolbox/ToolboxModel.js","webpack:///./node_modules/echarts/lib/coord/cartesian/GridModel.js","webpack:///./node_modules/zrender/lib/svg/svg.js","webpack:///./node_modules/echarts/lib/component/calendar.js","webpack:///./node_modules/echarts/lib/data/helper/sourceType.js","webpack:///./node_modules/echarts/lib/component/legend/legendFilter.js","webpack:///./node_modules/echarts/lib/chart/treemap/treemapVisual.js","webpack:///./node_modules/echarts/lib/component/marker/markerHelper.js","webpack:///./node_modules/echarts/lib/coord/polar/RadiusAxis.js","webpack:///./node_modules/echarts/lib/chart/treemap/TreemapSeries.js","webpack:///./node_modules/echarts/lib/component/timeline/TimelineView.js","webpack:///./node_modules/echarts/lib/scale/helper.js","webpack:///./node_modules/echarts/lib/chart/map/backwardCompat.js","webpack:///./node_modules/echarts/lib/chart/bar.js","webpack:///./node_modules/echarts/lib/chart/graph/circularLayoutHelper.js","webpack:///./node_modules/echarts/lib/component/markLine.js","webpack:///./node_modules/zrender/lib/contain/line.js","webpack:///./node_modules/echarts/lib/chart/graph/GraphView.js","webpack:///./node_modules/echarts/lib/model/mixin/areaStyle.js","webpack:///./node_modules/zrender/lib/core/BoundingRect.js","webpack:///./node_modules/zrender/lib/animation/requestAnimationFrame.js","webpack:///./node_modules/echarts/lib/visual/dataColor.js","webpack:///./node_modules/echarts/lib/loading/default.js","webpack:///./node_modules/zrender/lib/contain/arc.js","webpack:///./node_modules/echarts/lib/chart/line/helper.js","webpack:///./node_modules/echarts/theme/shine.js","webpack:///./node_modules/zrender/lib/svg/helper/ClippathManager.js","webpack:///./node_modules/zrender/lib/graphic/helper/smoothBezier.js","webpack:///./node_modules/echarts/lib/chart/treemap/treemapLayout.js","webpack:///./node_modules/echarts/lib/layout/barGrid.js","webpack:///./node_modules/zrender/lib/graphic/mixin/RectText.js","webpack:///./node_modules/echarts/lib/coord/axisModelCreator.js","webpack:///./node_modules/echarts/lib/component/dataZoom/dataZoomAction.js","webpack:///./node_modules/echarts/lib/chart/helper/LargeLineDraw.js","webpack:///./node_modules/echarts/lib/chart/radar/RadarSeries.js","webpack:///./node_modules/echarts/lib/component/timeline/typeDefaulter.js","webpack:///./node_modules/echarts/lib/util/symbol.js","webpack:///./node_modules/echarts/lib/component/dataZoom/InsideZoomModel.js","webpack:///./node_modules/echarts/lib/chart/lines.js","webpack:///./node_modules/echarts/lib/coord/geo/fix/diaoyuIsland.js","webpack:///./node_modules/echarts/lib/chart/gauge/GaugeView.js","webpack:///./node_modules/echarts/lib/chart/funnel.js","webpack:///./node_modules/echarts/lib/component/helper/interactionMutex.js","webpack:///./node_modules/echarts/lib/chart/map/MapView.js","webpack:///./node_modules/zrender/lib/graphic/helper/text.js","webpack:///./node_modules/echarts/lib/chart/scatter/ScatterView.js","webpack:///./node_modules/echarts/lib/chart/parallel/parallelVisual.js","webpack:///./node_modules/zrender/lib/vml/graphic.js","webpack:///./node_modules/echarts/lib/component/brush/selector.js","webpack:///./node_modules/echarts/lib/component/marker/MarkPointModel.js","webpack:///./node_modules/echarts/lib/component/tooltip/TooltipModel.js","webpack:///./node_modules/echarts/lib/coord/polar/AngleAxis.js","webpack:///./node_modules/echarts/lib/chart/sunburst/SunburstSeries.js","webpack:///./node_modules/echarts/lib/coord/cartesian/prepareCustom.js","webpack:///./node_modules/echarts/lib/chart/pictorialBar.js","webpack:///./node_modules/echarts/lib/component/visualMap/visualEncoding.js","webpack:///./node_modules/zrender/lib/Storage.js","webpack:///./node_modules/zrender/lib/graphic/shape/BezierCurve.js","webpack:///./node_modules/echarts/lib/chart/graph/circularLayout.js","webpack:///./node_modules/echarts/lib/chart/themeRiver/ThemeRiverSeries.js","webpack:///./node_modules/echarts/lib/chart/lines/LinesView.js","webpack:///./node_modules/echarts/lib/component/brush/preprocessor.js","webpack:///./node_modules/echarts/lib/component/axis.js","webpack:///./node_modules/echarts/lib/chart/treemap/TreemapView.js","webpack:///./node_modules/echarts/lib/component/axis/ParallelAxisView.js","webpack:///./node_modules/echarts/lib/component/toolbox.js","webpack:///./node_modules/echarts/lib/view/Component.js","webpack:///./node_modules/zrender/lib/svg/helper/GradientManager.js","webpack:///./node_modules/echarts/lib/data/helper/createDimensions.js","webpack:///./node_modules/echarts/lib/component/visualMap/preprocessor.js","webpack:///./node_modules/echarts/lib/component/axis/AngleAxisView.js","webpack:///./node_modules/echarts/lib/chart/bar/barItemStyle.js","webpack:///./node_modules/echarts/lib/export.js","webpack:///./node_modules/echarts/lib/chart/pie/labelLayout.js","webpack:///./node_modules/echarts/lib/visual/aria.js","webpack:///./node_modules/echarts/lib/component/brush/brushAction.js","webpack:///./node_modules/echarts/lib/chart/tree/treeAction.js","webpack:///./node_modules/echarts/lib/component/visualMap/typeDefaulter.js","webpack:///./node_modules/zrender/lib/svg/helper/ShadowManager.js","webpack:///./node_modules/echarts/lib/component/axis/SingleAxisView.js","webpack:///./node_modules/zrender/lib/mixin/Animatable.js","webpack:///./node_modules/echarts/lib/component/helper/BrushTargetManager.js","webpack:///./node_modules/echarts/lib/chart/candlestick/CandlestickSeries.js","webpack:///./node_modules/echarts/lib/coord/geo/parseGeoJson.js","webpack:///./node_modules/echarts/lib/chart/sankey/sankeyAction.js","webpack:///./node_modules/echarts/lib/chart/pie.js","webpack:///./node_modules/echarts/lib/component/brush/BrushView.js","webpack:///./node_modules/echarts/lib/chart/helper/labelHelper.js","webpack:///./node_modules/zrender/lib/graphic/shape/Rect.js","webpack:///./node_modules/echarts/lib/component/parallelAxis.js","webpack:///./node_modules/echarts/lib/component/helper/cursorHelper.js","webpack:///./node_modules/echarts/lib/theme/light.js","webpack:///./node_modules/echarts/lib/coord/single/AxisModel.js","webpack:///./node_modules/zrender/lib/graphic/Path.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Cartesian2D.js","webpack:///./node_modules/zrender/lib/mixin/Draggable.js","webpack:///./node_modules/echarts/lib/chart/scatter/ScatterSeries.js","webpack:///./node_modules/echarts/lib/chart/sunburst/sunburstLayout.js","webpack:///./node_modules/echarts/lib/component/axisPointer.js","webpack:///./node_modules/echarts/lib/component/visualMap/helper.js","webpack:///./node_modules/echarts/lib/chart/helper/EffectSymbol.js","webpack:///./node_modules/echarts/lib/chart/helper/LargeSymbolDraw.js","webpack:///./node_modules/echarts/lib/chart/tree/treeLayout.js","webpack:///./node_modules/echarts/lib/model/OptionManager.js","webpack:///./node_modules/zrender/lib/graphic/shape/Line.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Cartesian.js","webpack:///./node_modules/echarts/lib/component/dataZoom/AxisProxy.js","webpack:///./node_modules/echarts/lib/chart/helper/createRenderPlanner.js","webpack:///./node_modules/echarts/lib/component/grid.js","webpack:///./node_modules/echarts/lib/component/axisPointer/modelHelper.js","webpack:///./node_modules/echarts/lib/chart/heatmap/HeatmapLayer.js","webpack:///./node_modules/zrender/lib/dom/HandlerProxy.js","webpack:///./node_modules/echarts/lib/chart/map/mapSymbolLayout.js"],"names":["zrUtil","__webpack_require__","BoundingRect","_number","parsePercent","formatUtil","each","LOCATION_PARAMS","HV_NAMES","boxLayout","orient","group","gap","maxWidth","maxHeight","x","y","Infinity","currentLineMaxSize","eachChild","child","idx","nextX","nextY","position","rect","getBoundingRect","nextChild","childAt","nextChildRect","moveX","width","newline","height","Math","max","moveY","box","vbox","curry","hbox","getAvailableSize","positionInfo","containerRect","margin","containerWidth","containerHeight","x2","y2","isNaN","parseFloat","normalizeCssArray","getLayoutRect","left","top","right","bottom","verticalMargin","horizontalMargin","aspect","positionElement","el","opt","h","hv","v","boundingMode","type","needLocalTransform","transform","getLocalTransform","clone","applyTransform","defaults","elPos","dx","dy","attr","sizeCalculable","option","hvIdx","mergeLayoutParam","targetOption","newOption","isObject","ignoreSize","isArray","hResult","merge","vResult","names","newParams","newValueCount","merged","mergedValueCount","enoughParamNumber","name","hasProp","hasValue","i","length","obj","hasOwnProperty","copy","target","source","getLayoutParams","copyLayoutParams","exports","echarts","boxplotVisual","boxplotLayout","registerVisual","registerLayout","_util","retrieve","extend","graphic","Model","isRadianAroundZero","remRadian","_symbol","createSymbol","matrixUtil","_vector","v2ApplyTransform","PI","makeAxisEventDataBase","axisModel","eventData","componentType","mainType","componentIndex","AxisBuilder","this","labelOffset","nameDirection","tickDirection","labelDirection","silent","Group","dumbGroup","slice","rotation","updateTransform","_transform","_dumbGroup","prototype","constructor","hasBuilder","builders","add","call","getGroup","axisLine","get","extent","axis","getExtent","matrix","pt1","pt2","lineStyle","lineCap","getModel","getLineStyle","Line","subPixelOptimizeLine","anid","shape","x1","y1","style","strokeContainThreshold","z2","arrows","arrowSize","arrowOffset","symbolWidth","symbolHeight","rotate","offset","r","sqrt","point","index","symbol","stroke","pos","cos","sin","axisTickLabel","tickEls","buildAxisTick","labelEls","buildAxisLabel","fixMinMaxLabelShow","axisName","labelLayout","axisNameAvailableWidth","nameLocation","textStyleModel","gapSignal","isNameLocationCenter","nameRotation","innerTextLayout","endTextLayout","abs","isFinite","textFont","getFont","truncateOpt","ellipsis","nameTruncateMaxWidth","truncatedText","truncateText","minChar","placeholder","tooltipOpt","formatterParams","$vars","textEl","Text","__fullText","__truncatedText","isSilent","tooltip","show","content","formatter","setTextStyle","text","textFill","getTextColor","textAlign","textVerticalAlign","targetType","decomposeTransform","axisRotation","textRotation","direction","rotationDiff","textPosition","textRotate","inverse","onLeft","showMinLabel","showMaxLabel","firstLabel","nextLabel","lastLabel","prevLabel","firstTick","nextTick","lastTick","prevTick","ignoreEl","isTwoLabelOverlapped","ignore","current","next","firstRect","nextRect","mRotationBack","identity","mul","intersect","axisBuilder","scale","isBlank","tickModel","lineStyleModel","tickLen","ticksCoords","getTicksCoords","tickCoord","coord","tickEl","tickValue","push","axisLabelShow","labelModel","labelMargin","labels","getViewLabels","labelRotation","labelRotate","rawCategoryData","getCategories","triggerEvent","labelItem","formattedLabel","rawLabel","itemLabelModel","textStyle","ecModel","textColor","dataToCoord","getShallow","value","_default","module","compatStyle","_model","normalizeToArray","path","split","set","val","overwrite","key","compatLayoutProperties","LAYOUT_PROPERTIES","prop","COMPATITABLE_COMPONENTS","isTheme","series","seriesOpt","seriesType","clockWise","clockwise","pointerColor","dataRange","visualMap","componentName","options","_config","__DEV__","Eventful","interactionMutex","DataDiffer","map","mathMin","min","mathMax","mathPow","pow","COVER_Z","UNSELECT_THRESHOLD","MIN_RESIZE_LINE_WIDTH","MUTEX_RESOURCE_KEY","DIRECTION_MAP","w","e","n","s","CURSOR_MAP","ne","sw","nw","se","DEFAULT_BRUSH_OPT","brushStyle","lineWidth","fill","transformable","brushMode","removeOnClick","baseUID","BrushController","zr","_zr","_brushType","_brushOption","_panels","_track","_dragging","_covers","_creatingCover","_creatingPanel","_enableGlobalPan","_uid","_handlers","mouseHandlers","handler","eventName","bind","doEnableBrush","controller","brushOption","take","on","brushType","doDisableBrush","release","off","createCover","cover","coverRenderers","__brushOption","updateZ","endCreating","creatingCover","coverRenderer","getCoverRenderer","updateCoverShape","range","z","traverse","updateCoverAfterCreation","updateCommon","getPanelByPoint","localCursorPoint","panel","panels","pn","isTargetByCursor","getPanelByCover","panelId","clearCovers","covers","originalLength","remove","trigger","areas","isEnd","shouldShowCover","track","p2","p1","dist","getTrackEnds","tail","createBaseRectCover","doDrift","edgeNames","Rect","makeStyle","draggable","cursor","drift","ondragend","opacity","invisible","updateBaseRect","localRange","handleSize","xa","ya","x2a","y2a","widtha","heighta","updateRectShape","mainEl","useStyle","childOfName","globalDir","getGlobalDirection","setShape","pointsToRect","clipByPanel","strokeNoScale","formatRectRange","getTransform","localDirection","reverse","join","inverseMap","transformDirection","driftRect","toRectRange","fromRectRange","rectRange","localDelta","toLocalDelta","namePart","ind","driftPolygon","thisGroup","localD","transformCoordToLocal","localZero","data","clipPath","points","xmin","ymin","xmax","ymax","resetCursor","currPanel","contain","setCursorStyle","preventDefault","rawE","event","mainShapeContain","updateCoverByMouse","eventParams","thisBrushOption","determineBrushType","coverBrushOption","getCreatingRange","defaultBrushType","enableBrush","setPanels","panelOpts","mount","enableGlobalPan","eachCover","cb","context","updateCovers","brushOptionList","tmpIdPrefix","oldCovers","newCovers","oldGetKey","getKey","addOrUpdate","update","execute","id","newIndex","oldIndex","newBrushOption","unmount","dispose","mixin","mousedown","handleDragEnd","offsetX","offsetY","mousemove","mouseup","lineX","getLineRenderer","lineY","localTrack","ends","polygon","Polyline","Polygon","xyIndex","otherExtent","getLinearBrushOtherExtent","getWidth","getHeight","RadiusAxis","AngleAxis","Polar","cx","cy","_radiusAxis","_angleAxis","polar","axisPointerEnabled","dimensions","model","containPoint","pointToCoord","containData","getAxis","dim","getAxes","getAxesByScale","scaleType","axes","angleAxis","radiusAxis","getAngleAxis","getRadiusAxis","getOtherAxis","getBaseAxis","getTooltipAxes","baseAxis","baseAxes","otherAxes","dataToPoint","clamp","coordToPoint","dataToRadius","dataToAngle","pointToData","radiusToData","angleToData","minAngle","maxAngle","radius","radian","atan2","dir","Gradient","createOnAllSeries","performRawSeries","reset","seriesModel","getData","colorAccessPath","visualColorAccessPath","color","getColorFromPalette","getSeriesCount","setVisual","isSeriesFiltered","setItemVisual","getDataParams","dataEach","itemModel","getItemModel","hasItemOption","samplers","average","frame","sum","count","NaN","nearest","indexSampler","round","modifyOutputEnd","api","sampling","coordSys","coordinateSystem","sampler","valueAxis","size","rate","setData","downSample","mapDimension","textContain","graphicUtil","PATH_COLOR","isEmphasis","fontStyle","fontWeight","fontSize","fontFamily","getTextRect","SeriesModel","_whiskerBoxCommon","seriesModelMixin","BoxplotSeries","dependencies","defaultValueDimensions","defaultTooltip","defaultOption","zlevel","legendHoverLink","hoverAnimation","layout","boxWidth","itemStyle","borderWidth","emphasis","shadowBlur","shadowOffsetX","shadowOffsetY","shadowColor","animationEasing","animationDuration","featureManager","lang","brushLang","toolbox","brush","Brush","_brushMode","icon","keep","clear","title","proto","render","updateView","featureModel","isBrushed","eachComponent","brushModel","setIconStatus","getIcons","availableIcons","icons","onclick","dispatchAction","intervals","command","register","axisHelper","buildElStyle","axisPointerModel","axisPointerType","styleModel","getAreaStyle","buildLabelElOption","elOption","labelPos","getValueLabel","precision","paddings","font","textRect","align","verticalAlign","confineInContainer","bgColor","label","viewWidth","viewHeight","seriesDataIndices","parse","getLabel","params","getAxisRawValue","seriesData","idxItem","getSeriesByIndex","seriesIndex","dataIndex","dataIndexInside","dataParams","isString","replace","isFunction","getTransformedPosition","layoutInfo","create","translate","buildCartesianSingleLabelElOption","textLayout","makeLineShape","xDimIndex","makeRectShape","xy","wh","makeSectorShape","r0","startAngle","endAngle","legendModels","findComponents","filterSelf","getName","isSelected","_simpleLayoutHelper","simpleLayout","simpleLayoutEdge","eachSeriesByType","coordDim","concat","setItemLayout","graph","magicTypeLang","magicType","MagicType","line","bar","stack","tiled","seriesOptGenreator","seriesId","markPoint","markLine","radioTypes","generateNewSeriesTypes","subType","newSeriesOpt","categoryAxis","axisDim","axisType","queryComponents","axisIndex","boundaryGap","radio","indexOf","item","query","currentType","registerAction","payload","mergeOption","doCreateNode","env","urn","win","window","vmlInited","doc","document","createNode","tagName","canvasSupported","namespaces","zrvml","createElement","initVML","styleSheets","createStyleSheet","addRule","createGraphFromNodeEdge","_format","encodeHTML","SankeySeries","getInitialData","links","edges","nodes","setNodePosition","localPosition","dataItem","localX","localY","getGraph","getEdgeData","edgeData","formatTooltip","multipleSeries","dataType","rawDataOpt","html","superCall","nodeWidth","nodeGap","layoutIterations","borderColor","curveness","makeAction","method","actionInfo","selected","geoModel","geo","regions","region","numberUtil","CoordinateSystem","PROXIMATE_ONE_DAY","Calendar","calendarModel","doConvert","methodName","finder","getDimensionsInfo","getRangeInfo","_rangeInfo","getRect","_rect","getCellWidth","_sw","getCellHeight","_sh","getOrient","_orient","getFirstDayOfWeek","_firstDayOfWeek","getDateInfo","date","parseDate","getFullYear","m","getMonth","d","getDate","day","getDay","time","getTime","formatedDate","getNextNDay","Date","setDate","_lineWidth","getItemStyle","_getRangeInfo","_initRangeOption","weeks","whNames","cellSize","layoutParams","getBoxLayoutParams","cellNumbers","cellSizeSpecified","whGlobal","calendarRect","dayInfo","start","end","week","nthWeek","pointToDate","dataToRect","contentShape","center","tl","tr","br","bl","nthX","floor","nthY","_getDateByWeeksAndDay","convertToPixel","convertFromPixel","rg","test","firstDay","setMonth","tmp","reversed","allDay","startDateNum","endDateNum","sign","fweek","lweek","rangeInfo","nthDay","calendarList","calendar","eachSeries","calendarSeries","createHashMap","stackInfoMap","stackInfoList","stackInfo","stackResultDimension","getCalculationInfo","stackedOverDimension","stackedDimension","stackedByDimension","isStackedByIndex","setCalculationInfo","calculateStack","targetStackInfo","idxInStack","resultVal","resultNaN","dims","targetData","newData","v0","v1","byValue","stackedDataRawIndex","getRawIndex","stackedOver","j","rawIndexOf","getByRawIndex","hostModel","legendFilter","Component","registerProcessor","registerSubTypeDefaulter","util","vec2","Draggable","SILENT","makeEventPacket","eveType","targetInfo","topTarget","cancelBubble","zrX","zrY","gestureEvent","pinchX","pinchY","pinchScale","wheelDelta","zrDelta","zrByTouch","which","EmptyProxy","handlerNames","Handler","storage","painter","proxy","painterRoot","_hovered","_lastTouchMoment","_lastX","_lastY","setHandlerProxy","isHover","displayable","rectHover","parent","lastHovered","lastHoveredTarget","__zr","findHover","hovered","hoveredTarget","setCursor","dispatchToElement","mouseout","innerDom","element","toElement","relatedTarget","parentNode","nodeType","resize","dispatch","eventArgs","cursorStyle","eventHandler","eventPacket","eachOtherLayer","layer","exclude","list","getDisplayList","out","hoverCheckResult","_downEl","_downPoint","_upEl","_roamHelper","updateCenterAndZoom","res","setCenter","setZoom","zoom","Path","polyHelper","smooth","smoothConstraint","buildPath","ctx","globalListener","AxisPointerView","extendComponentView","globalAxisPointerModel","globalTooltipModel","getComponent","triggerOn","currTrigger","unregister","getZr","superApply","arguments","paths","_updatePathDirty","dirtyPath","__dirtyPath","__dirty","beforeBrush","getGlobalScale","createPathProxy","setScale","afterBrush","fixClipWithShadow","vec2Min","vec2Max","scaleAndAdd","v2Copy","cp0","cp1","isPointNull","p","drawSegment","segLen","allLen","smoothMin","smoothMax","smoothMonotone","connectNulls","drawMono","apply","drawNonMono","prevIdx","k","prevP","ctrlLen","bezierCurveTo","lineTo","nextIdx","nextP","ratioNextSeg","lenPrevSeg","lenNextSeg","sub","getBoundingBox","ptMin","ptMax","pt","len","result","stackedOnPoints","stackedOnSmooth","bbox","stackedOnBBox","closePath","LinkedList","head","_len","linkedListProto","insert","entry","Entry","insertEntry","prev","LRU","maxSize","_list","_map","_maxSize","_lastRemovedEntry","LRUProto","put","removed","leastUsedEntry","guid","Transformable","Animatable","Element","opts","isGroup","dirty","beforeUpdate","afterUpdate","attrKV","hide","refresh","setClipPath","addSelfToZr","removeClipPath","__clipTarget","removeSelfFromZr","animators","animation","addAnimator","removeAnimator","BaseBarSeries","PictorialBarSeries","symbolSize","symbolRotate","symbolPosition","symbolOffset","symbolMargin","symbolRepeat","symbolRepeatDirection","symbolClip","symbolBoundingData","symbolPatternSize","barGap","progressive","setSelected","dataColor","sunburstLayout","dataFilter","listComponentHelper","toolboxModel","removeAll","itemSize","featureOpts","features","_features","featureNames","_featureNames","processFeature","makeBackground","titleText","__title","hoverStyle","makeFont","needPutOnTop","topOffset","feature","featureName","oldName","featureOpt","isUserFeatureName","Feature","unusable","createIconPaths","iconName","status","iconPaths","iconStatus","iconStyleModel","iconStyleEmphasisModel","titles","iconStr","createIcon","setStyle","setHoverStyle","view","zoomLimit","previousZoom","getZoom","getCenter","zoomMin","zoomMax","fixX","originX","fixY","originY","PathProxy","cubic","quadratic","arc","normalizeRadian","curve","windingLine","CMD","PI2","EPSILON","isAroundEqual","a","b","roots","extrema","swapExtrema","windingCubic","x0","y0","x3","y3","nRoots","cubicRootAt","y0_","y1_","nExtrema","t","unit","x_","cubicAt","cubicExtrema","windingQuadratic","quadraticRootAt","quadraticExtremum","y_","quadraticAt","windingArc","anticlockwise","diff","angle","containPath","isStroke","xi","yi","cmd","M","L","containStroke","C","Q","A","rx","ry","theta","dTheta","_x","R","Z","pathData","layoutUtil","ParallelAxis","sliderMove","mathFloor","mathCeil","ceil","Parallel","parallelModel","_axesMap","_axesLayout","_init","restrict","layoutAxisWithoutExpand","step","layoutLength","axisCount","layoutAxisWithExpand","axisExpandWidth","axisCollapseWidth","winInnerIndices","axisExpandWindow0Pos","axisExpandWindow","parallelAxisIndex","createScaleByModel","isCategory","onBand","_updateAxesFromSeries","_makeLayoutInfo","axisBase","layoutBase","pixelDimIndex","pAxis","pLayout","axisLength","contains","unionExtentFromData","niceScaleExtent","_layoutAxes","winSize","layoutExtent","axisExpandCount","axisExpandable","axisExpandCenter","axisExtent","setExtent","posInfo","positionTable","horizontal","vertical","rotationTable","axisCoordToPoint","eachActiveState","callback","axesMap","dataDimensions","axisModels","hasActiveSet","hasAxisBrushed","activeState","values","getValues","lenj","state","getActiveState","axisLayout","getAxisLayout","getSlidedAxisExpandWindow","behavior","delta","pointCoord","triggerArea","useJump","ComponentModel","axisModelCreator","axisModelCommonMixin","PolarAxisModel","getCoordSysModel","polarIndex","polarId","polarAxisDefaultExtendedOption","splitNumber","axisLabel","getAxisType","inBundle","moveTo","treemapVisual","treemapLayout","registerPreprocessor","history","restoreLang","restore","Restore","from","uid","resetOption","Pattern","image","repeat","getCanvasPattern","createPattern","_core","zrLog","ZImage","ZText","arrayDiff","GradientManager","ClippathManager","ShadowManager","_graphic","svgPath","svgImage","svgText","parseInt10","parseInt","getSvgProxy","checkParentAvailable","insertAfter","prevSibling","nextSibling","insertBefore","appendChild","prepend","firstChild","removeChild","getTextSvgElement","__textSvgEl","getSvgElement","__svgEl","SVGPainter","root","zrId","_opts","svgRoot","setAttribute","cssText","gradientManager","clipPathManager","shadowManager","viewport","_svgRoot","_viewport","_visibleList","createMethodNotSupport","getType","getViewportRoot","getViewportRootOffset","viewportRoot","offsetLeft","offsetTop","_paintList","setBackgroundColor","backgroundColor","background","markAllUnused","visibleList","listLen","newVisibleList","svgProxy","svgElement","prevSvgElement","indices","textSvgElement","added","addWithoutUpdate","markUsed","removeUnused","_getDefs","isForceCreating","defs","getElementsByTagName","children","display","_getSize","_width","_height","viewportStyle","whIdx","cwh","plt","prb","stl","defaultView","getComputedStyle","innerHTML","pathToDataUrl","outerHTML","clazzUtil","axisPointerModelHelper","eventTool","throttleUtil","makeInner","inner","BaseAxisPointer","updateProps","animationModel","moveAnimation","props","propsEqual","lastProp","stopAnimation","lastProps","newProps","equals","updateLabelShowHide","labelEl","getHandleTransProps","trans","updateMandatoryProps","_group","_lastGraphicKey","_handle","_lastValue","_lastStatus","_payloadInfo","animationThreshold","forceRender","_axisModel","_axisPointerModel","_api","handle","makeElOption","graphicKey","_moveAnimation","determineAnimation","doUpdateProps","updatePointerEl","updateLabelEl","createPointerEl","createLabelEl","_renderHandle","isCategoryAxis","useSnap","getBandWidth","seriesDataCount","getAxisInfo","pointerOption","pointer","pointerEl","updateHandleTransform","isInit","handleModel","onmousemove","stop","onmousedown","_onHandleDragMove","_onHandleDragEnd","includeStyles","createOrUpdate","_moveHandleToValue","getHandleTransform","_doDispatchAxisPointer","payloadInfo","cursorPoint","tooltipOption","axesInfo","doClear","buildLabel","enableClassExtend","ChartView","NORMAL_ITEM_STYLE_PATH","EMPHASIS_ITEM_STYLE_PATH","BoxplotView","oldData","_data","constDim","newIdx","itemLayout","getItemLayout","symbolEl","createNormalBox","setItemGraphicEl","oldIdx","getItemGraphicEl","updateNormalBoxData","eachItemGraphicEl","noop","BoxPath","transInit","updateMethod","normalItemStyleModel","getItemVisual","initBaseline","TimelineModel","dataFormatMixin","SliderTimelineModel","interval","checkpointStyle","controlStyle","showPlayBtn","showPrevBtn","showNextBtn","itemGap","playIcon","stopIcon","nextIcon","prevIcon","RadialGradient","colorStops","globalCoord","global","inherits","idStart","normalize","Array","symbolType","colorQuery","opacityQuery","edge","getEdgeByIndex","node1","getVisual","node2","makeStyleMapper","AxisModel","activeIntervals","getAreaSelectStyle","setActiveIntervals","asc","areaSelectStyle","realtime","_labelHelper","getDefaultLabel","createListFromArray","_barGrid","getLayoutOnAxis","prepareCartesian2d","prepareGeo","prepareSingleAxis","preparePolar","prepareCalendar","ITEM_STYLE_NORMAL_PATH","ITEM_STYLE_EMPHASIS_PATH","LABEL_NORMAL","LABEL_EMPHASIS","GROUP_DIFF_PREFIX","prepareCustoms","cartesian2d","singleAxis","createEl","graphicType","makePath","__customPathData","Image","__customImagePath","__customText","Clz","charAt","toUpperCase","__customGraphicType","updateEl","animatableModel","targetProps","elOptionStyle","origin","targetStyle","prepareStyleTransition","textStroke","targetOpacity","initProps","styleEmphasis","oldElStyle","makeRenderItem","customSeries","renderItem","prepareResult","currDataIndexInside","currItemModel","currLabelNormalModel","currLabelEmphasisModel","currVisualColor","userAPI","getDevicePixelRatio","visual","barLayout","currentSeriesIndices","userParams","seriesName","dataInsideLength","encode","wrapEncodeDef","currDirty","updateCache","getDimension","extra","autoColor","isRectText","retrieve2","getFormattedLabel","retrieve3","visualType","getCurrentSeriesIndices","encodeDef","dimName","dataDimIndex","dimInfo","getDimensionInfo","isExtraCoord","dataDims","coordDimIndex","doCreateOrUpdate","elOptionType","oldChildren","newChildren","diffChildrenByName","diffGroupChildren","processAddUpdate","processRemove","childOption","extendSeriesModel","getSource","extendChartView","incrementalPrepareRender","incrementalRender","setIncrementalAndHoverLayer","incremental","useHoverLayer","_axisHelper","makeLabelFormatter","createAxisLabels","makeCategoryLabels","makeRealNumberLabels","createAxisTicks","makeCategoryTicks","ticks","getTicks","getLabelModel","makeCategoryLabelsActually","labelCategoryInterval","numericLabelInterval","labelsCache","getListCache","optionLabelInterval","getOptionCategoryInterval","listCacheGet","makeLabelsByCustomizedCategoryInterval","makeAutoCategoryInterval","makeLabelsByNumericCategoryInterval","listCacheSet","tickCategoryInterval","ticksCache","optionTickInterval","labelsResult","labelFormatter","cache","autoInterval","calculateCategoryInterval","fetchAutoCategoryIntervalCalculationParams","axisRotate","ordinalScale","ordinalExtent","tickCount","unitSpan","unitW","unitH","maxW","maxH","dw","dh","lastAutoInterval","lastTickCount","getRotate","isHorizontal","categoryInterval","onlyTick","startTick","showMinMax","addItem","tVal","DUMMY_COMPONENT_NAME_PREFIX","defaultEmphasis","subOpts","subOptName","TEXT_STYLE_OPTIONS","getDataItemValue","isDataItemOption","mappingToExists","exists","newCptOptions","exist","cptOption","isIdInner","makeIdAndName","mapResult","idMap","existCpt","assert","keyInfo","idNum","isNameSpecified","componentModel","compressBatches","batchA","batchB","mapA","mapB","makeMap","mapToArray","sourceBatch","otherMap","dataIndices","otherDataIndices","isData","queryDataIndex","indexOfRawIndex","indexOfName","innerUniqueIndex","random","toFixed","hostObj","parseFinder","defaultMainType","has","parsedKey","match","queryType","toLowerCase","includeMainTypes","queryParam","models","dom","getAttribute","Scale","setting","_setting","_extent","_interval","init","getSetting","unionExtent","other","getApproximateExtent","thisExtent","_isBlank","setBlank","enableClassManagement","registerWhenExtend","_children","__storage","childCount","_doAdd","addBefore","splice","addToStorage","addChildrenToStorage","delFromStorage","delChildrenFromStorage","includeChildren","tmpRect","tmpMat","childRect","union","mathSin","mathCos","extremity","fromPoints","fromLine","xDim","yDim","fromCubic","fromQuadratic","tx","ty","fromArc","setLabel","normalStyle","labelPositionOutside","hoverLabelModel","setLabelStyle","labelFetcher","labelDataIndex","defaultText","fixPosition","_l","cubicProjectPoint","createListSimply","_dimensionHelper","getDimensionTypeByAxis","_baseAxisDim","ordinalMeta","addOrdinal","xAxisModel","yAxisModel","xAxisType","yAxisType","getOrdinalMeta","coordDims","baseAxisDimIndex","baseAxisDim","otherAxisDim","baseAxisType","otherAxisType","newOptionData","newItem","unshift","coordDimensions","otherDims","itemName","dimsDef","dimensionsCount","createDimensions","List","nameList","dimensionsInfo","initData","getNearestColorPalette","colors","requestColorNum","paletteNum","clearColorPalette","colorIdx","colorNameMap","scope","scopeFields","defaultColorPalette","layeredColorPalette","colorPalette","createWrap","doneCallback","elExistsMap","delay","easing","done","animateTo","scrollDataIndex","legendModel","setScrollDataIndex","modelHelper","findPointFromSeries","coordSysAxesInfo","illegalPoint","isIllegalPoint","inputAxesInfo","shouldHide","outputFinder","showValueMap","dataByCoordSys","updaters","showPointer","showTooltip","coordSysMap","coordSysKey","coordSysContainsPoint","axisInfo","inputAxisInfo","findInputAxisInfo","processOnAxis","linkTriggers","tarAxisInfo","tarKey","linkGroup","srcAxisInfo","srcKey","srcValItem","mapper","makeMapperParam","updateModelActually","dispatchTooltipActually","dispatchHighDownActually","newValue","dontSnap","involveSeries","buildPayloadsBySeries","payloadBatch","snapToValue","snap","minDist","Number","MAX_VALUE","minDiff","seriesModels","seriesNestestValue","dataDim","getAxisTooltipData","nestestValue","indicesOfNearest","triggerTooltip","coordSysModel","makeKey","coordSysItem","coordSysId","coordSysIndex","coordSysType","coordSysMainType","dataByAxis","axisId","valueLabelOpt","outputAxesInfo","valItem","useHandle","sampleItem","escapeConnect","highDownKey","lastHighlights","newHighlights","batchItem","toHighlight","toDownplay","batch","imageHelper","getContext","trim","textWidthCache","textWidthCacheCounter","TEXT_CACHE_MAX","STYLE_REG","DEFAULT_FONT","methods","$override","fn","textLines","l","measureText","textPadding","rich","truncate","getRichTextRect","getPlainTextRect","contentBlock","parsePlainText","outerWidth","outerHeight","adjustTextX","adjustTextY","lineHeight","parseRichText","adjustTextPositionOnRect","distance","halfHeight","prepareTruncateOptions","truncateSingleLine","maxIterations","cnCharWidth","ascCharWidth","contentWidth","ellipsisWidth","textLine","subLength","estimateLength","substr","charCode","charCodeAt","getLineHeight","padding","lines","truncOuterHeight","truncOuterWidth","lastIndex","exec","matchedIndex","pushTokens","substring","contentHeight","pendingList","stlPadding","truncateWidth","truncateHeight","tokens","token","tokenStyle","styleName","tokenHeight","textHeight","textLineHeight","textWidth","tokenWidth","tokenWidthNotSpecified","percentWidth","textBackgroundColor","bgImg","findExistImage","isImageReady","paddingW","remianTruncWidth","block","str","isEmptyStr","strs","isLineHolder","tokensLen","componentUtil","modelUtil","_task","createTask","createRenderPlanner","renderPlanner","Chart","getUID","renderTask","plan","renderTaskPlan","renderTaskReset","highlight","toggleHighlight","downplay","chartProto","elSetState","dataIdx","progressiveRender","pipelineContext","progressMethodMap","updateLayout","updateVisual","markUpdateMethod","progress","forceFirstProgress","vmlCore","VMLPainter","vmlViewport","vmlRoot","_vmlRoot","_vmlViewport","oldDelFromStorage","oldAddToStorage","onRemove","onAdd","_firstPaint","__alreadyNotVisible","brushVML","_getWidth","_getHeight","vmlViewportStyle","currentStyle","clientWidth","paddingLeft","paddingRight","clientHeight","paddingTop","paddingBottom","seriesItem","visualDefault","VisualMapping","visualSolution","mapVisual","eachVisual","linearMap","VisualMapModel","extendComponentModel","stateList","replacableOptionKeys","dataBound","layoutMode","dimension","inRange","outOfRange","itemWidth","itemHeight","contentColor","inactiveColor","textGap","parentModel","_dataExtent","targetVisuals","controllerVisuals","mergeDefaultAndTheme","optionUpdated","thisOption","replaceVisualOption","resetItemSize","completeVisualOption","resetVisual","supplementVisualOption","createVisualMappings","getTargetSeriesIndices","optionSeriesIndex","seriesIndices","eachTargetSeries","isTargetSeries","is","formatValueText","edgeSymbols","isMinMax","textValue","resetExtent","getDataDimension","optDim","listDimensions","dimNames","isCalculationCoord","base","completeSingle","defa","completeInactive","stateExist","stateAbsent","optExist","optAbsent","visualData","isValidType","completeController","symbolExists","symbolSizeExists","visuals","categories","getValueState","getVisualMeta","dataToCoordSize","dataSize","dimIdx","halfSize","handleEnds","handleIndex","minSpan","maxSpan","extentSpan","originalDistSign","getSpanSign","extentMinSpan","realExtent","currDistSign","span","visualSymbol","layoutPoints","dataSample","PRIORITY","PROCESSOR","STATISTIC","treeLayout","Axis","Axis2D","coordExtent","getAxesOnZeroOf","getGlobalExtent","ret","toGlobalCoord","grid","coordToData","toLocalCoord","isTypedArray","_clazz","enableClassCheck","_sourceType","SOURCE_FORMAT_ORIGINAL","SERIES_LAYOUT_BY_COLUMN","SOURCE_FORMAT_UNKNOWN","SOURCE_FORMAT_TYPED_ARRAY","SOURCE_FORMAT_KEYED_COLUMNS","Source","fields","fromDataset","sourceFormat","seriesLayoutBy","dimensionsDefine","encodeDefine","startIndex","dimensionsDetectCount","seriesDataToSource","groupResult","groupSeriesByAxis","groupItem","calculateBase","layoutSingleSeries","boxOffsetList","boxWidthList","axisList","bandWidth","seriesCount","boundList","maxDataCount","boxWidthBound","availableWidth","boxGap","halfWidth","cDimIdx","vDimIdx","cDim","vDims","axisDimVal","median","getPoint","end1","end2","end4","end5","addBodyEnd","layEndLine","point1","point2","endCenter","to","devicePixelRatio","log","timsort","Layer","requestAnimationFrame","HOVER_LAYER_ZLEVEL","CANVAS_ZLEVEL","EL_AFTER_INCREMENTAL_INC","INCREMENTAL_INC","isLayerValid","__builtin__","viewRect","isDisplayableCulled","isClipPathChanged","clipPaths","prevClipPaths","doClip","setTransform","beginPath","clip","restoreTransform","createRoot","domRoot","Painter","singleCanvas","nodeName","dpr","_singleCanvas","rootStyle","zlevelList","_zlevelList","layers","_layers","_layerConfig","_needsManuallyCompositing","mainLayer","initContext","_domRoot","_hoverlayer","_hoverElements","isSingleCanvas","paintAll","_redrawId","clearColor","_backgroundColor","refreshHover","addHover","__hoverMir","elMirror","__from","removeHover","hoverElements","clearHover","hoverLayer","displayableSortFunc","getLayer","save","originalEl","invTransform","__clipPaths","_doPaintEl","getHoverLayer","redrawId","_updateLayerStatus","finished","_doPaintList","_compositeManually","self","clearRect","eachBuiltinLayer","virtual","drawImage","layerList","zi","__startIndex","__drawIndex","useTimer","now","startTime","__endIndex","firstEl","notClear","console","error","dTime","prevElClipPaths","wxa","draw","currentLayer","forcePaint","culling","prevEl","insertLayer","layersMap","prevLayer","prevDom","eachLayer","getLayers","updatePrevLayer","__used","incrementalLayerCount","getElementCount","_clearLayer","configLayer","config","layerConfig","_zlevel","delLayer","_progressiveLayers","clearLayer","getRenderedCanvas","imageLayer","pixelRatio","renderToCanvas","displayList","pathToImage","canvas","shadowBlurSize","hasStroke","leftMargin","rightMargin","topMargin","bottomMargin","pathTransform","ImageShape","imgShape","controlPosition","autoPlay","rewind","loop","playInterval","currentIndex","_names","_initData","setCurrentIndex","getCurrentIndex","isIndexMax","setPlayState","getPlayState","dataArr","idxArr","dimType","category","addCommas","toCamelCase","upperCaseFirst","group1","replaceReg","replaceMap","&","<",">","\"","'","c","TPL_VAR_ALIAS","wrapVar","varName","seriesIdx","formatTpl","tpl","paramsList","seriesLen","alias","formatTplSimple","param","getTooltipMarker","extraCssText","pad","formatTime","isUTC","utc","S","capitalFirst","single","axisPosition","rectBound","positionMap","directionMap","labelInside","enableDataStack","dimensionInfoList","stackedByDimInfo","stackedDimInfo","byIndex","stackedCoordDimension","mayStack","dimensionInfo","createInvertedIndices","stackedDimCoordDim","stackedDimType","stackedDimCoordIndex","isDimensionStacked","stackedDim","getStackedDimension","targetDim","MONTH_TEXT","EN","CN","WEEK_TEXT","_tlpoints","_blpoints","_firstDayOfMonth","_firstDayPoints","rangeData","_renderDayRect","_renderLines","_renderYearText","_renderMonthText","_renderWeekText","itemRectStyleModel","sh","addPoints","_getLinePointsOfOneWeek","_drawSplitline","_getEdgesPoints","rs","poyline","tmpD","_formatterLabel","nameMap","_yearTextPositionControl","aligns","yearLabel","xc","yc","posPoints","yearText","_monthTextPositionControl","isCenter","vAlign","monthLabel","termPoints","firstDayPoints","yyyy","yy","MM","monthText","_weekTextPositionControl","isStart","dayLabel","firstDayOfWeek","weekText","nest","keysFunction","sortKeysFunction","array","depth","keyFunction","mapObject","valuesByKey","keyValue","entriesMap","sortKeyFunction","sort","sortKeys","order","entries","mathSqrt","mathAtan2","nPoint","sx","sy","preprocessor","Geo","resizeGeo","boundingCoords","leftTop","rightBottom","setBoundingRect","boxLayoutOption","aspectScale","useCenterAndSize","setViewRect","setGeoCoords","geoCoord","addGeoCoord","geoCreator","geoList","mapData","getMap","geoJson","specialAreas","geoIndex","mapModelGroupBySeries","getHostGeoModel","mapType","getMapType","mapSeries","nameMapList","singleMapSeries","mergeAll","getFilledRegions","originRegionArr","mapName","regionsArr","dataNameMap","properties","registerCoordinateSystem","forceLayout","gravity","pp","friction","warmUp","setFixed","fixed","setUnfixed","v12","nLen","n1","n2","repFact","rep","_helper","prepareDataCoordInfo","getStackedOnPoint","diffData","diffResult","idx1","oldStackedOnPoints","newStackedOnPoints","oldCoordSys","newCoordSys","oldValueOrigin","newValueOrigin","currPoints","nextPoints","currStackedPoints","nextStackedPoints","sortedIndices","rawIndices","newDataOldCoordInfo","oldDataNewCoordInfo","diffItem","pointAdded","currentPt","nextPt","dataDimsForPoint","rawIndex","sortedCurrPoints","sortedNextPoints","sortedCurrStackedPoints","sortedNextStackedPoints","sortedStatus","stackedOnCurrent","stackedOnNext","viewHelper","singleAxisHelper","AxisView","XY","WH","SingleAxisPointer","getPointDimIndex","pixelValue","elStyle","pointerShapeBuilder","dimIndex","currPosition","cursorOtherValue","targetShape","shadow","registerAxisPointerClass","LegendModel","_layout","ScrollableLegendModel","pageButtonItemGap","pageButtonGap","pageButtonPosition","pageFormatter","pageIcons","pageIconColor","pageIconInactiveColor","pageIconSize","pageTextStyle","animationDurationUpdate","extraOpt","inputPositionParams","mergeAndNormalizeLayoutParams","raw","SymbolDraw","SymbolClz","lineAnimationDiff","_poly","isPointsSame","points1","points2","getSmooth","getAxisExtentWithGap","halfBandWidth","getStackedOnPoints","dataCoordInfo","valueDim","createGridClipShape","cartesian","hasAnimation","forSymbol","xExtent","yExtent","expandSize","createPolarClipShape","radiusExtent","angleExtent","RADIAN","Sector","createClipShape","turnPointsIntoStep","stepTurnAt","baseIndex","stepPoints","stepPt","middle","stepPt2","getVisualGradient","visualMetaList","visualMeta","stops","stopLen","outerColors","tinyExtent","minCoord","maxCoord","coordSpan","gradient","LinearGradient","getIsIgnoreFunc","showAllSymbol","isAuto","canShowAllSymbolForCategory","categoryDataDim","labelMap","availSize","dataLen","getSymbolSize","lineGroup","symbolDraw","_symbolDraw","_lineGroup","areaStyleModel","mapArray","isCoordSysPolar","prevCoordSys","_coordSys","polyline","_polyline","_polygon","isAreaChart","isEmpty","valueOrigin","showSymbol","isIgnoreFunc","__temp","_step","_newPolygon","updateData","isIgnore","clipShape","_stackedOnPoints","_points","_updateAnimation","_newPolyline","visualColor","lineJoin","stackedOnSeries","_valueOrigin","setZ","stopSymbolAnimation","__points","updatedDataInfo","diffStatus","ptIdx","during","_zrender","registerPainter","contrastColor","axisCommon","axisTick","splitLine","splitArea","areaStyle","theme","axisPointer","crossStyle","legend","iconStyle","normal","dataZoom","timeline","timeAxis","logAxis","gauge","candlestick","color0","borderColor0","cartesianAxisHelper","axisBuilderAttrs","selfBuilderAttrs","CartesianAxisView","axisPointerClass","oldAxisGroup","_axisGroup","gridModel","groupTransition","_splitAreaColors","_splitLine","splitLineModel","lineColors","gridRect","lineCount","colorIndex","_splitArea","splitAreaModel","areaColors","areaColorsLen","lastSplitAreaColors","newSplitAreaColors","cIndex","polygonContain","Region","geometries","cp","MAX_NUMBER","min2","max2","exterior","loopGeo","interiors","transformTo","calculateTransform","parallelPreprocessor","CLICK_THRESHOLD","handlers","_throttledDispatchExpand","_dispatchExpand","checkTrigger","_mouseDownPoint","mouseDownPoint","debounceNextCall","DEFAULT_OUT_OF_BRUSH_COLOR","BrushModel","brushLink","xAxisIndex","yAxisIndex","throttleType","throttleDelay","coordInfoList","inBrush","outOfBrush","liftZ","setAreas","area","generateBrushOption","setBrushOption","getPercentWithPrecision","dataSelectableMixin","_dataProvider","retrieveRawAttr","PieSeries","legendDataProvider","getRawData","updateSelectedMap","_createSelectableList","_defaultLabelLine","targetList","valueList","percent","labelLineNormalOpt","labelLine","labelLineEmphasisOpt","selectedOffset","hoverOffset","avoidLabelOverlap","percentPrecision","stillShowZeroSum","length2","animationType","define","Task","_reset","_plan","_count","_onDirty","onDirty","_dirty","taskProto","perform","performArgs","planResult","upTask","_upstream","skip","outputData","__pipeline","currentTask","lastModBy","normalizeModBy","_modBy","lastModDataCount","_modDataCount","modBy","modDataCount","_dueEnd","_outputDueEnd","_progress","_dueIndex","doProgress","outputDueEnd","_settedOutputEnd","unfinished","iterator","winCount","it","sStep","sCount","modNext","sequentialNext","taskIns","_callingProgress","downstream","_downstream","pipe","downTask","_disposed","getUpstream","getDownstream","setOutputEnd","_cursorHelper","onIrrelevantElement","makeRectPanelClipPath","normalizeRect","localPoints","clipPointsByRect","makeLinearBrushOtherExtent","specifiedXYIndex","brushWidth","makeRectIsTargetByCursor","targetModel","_treeHelper","wrapTreePathInfo","TEXT_PADDING","ITEM_GAP","ARRAY_LENGTH","Breadcrumb","containerGroup","makeItemPoints","packEventData","itemNode","componentSubType","selfType","nodeData","treePathInfo","targetNode","onSelect","normalStyleModel","layoutParam","emptyItemWidth","totalWidth","renderList","_prepare","_renderContent","node","lastX","availableSize","dataStatistics","datas","statisticType","mapKey","seriesGroups","hostGeoModel","seriesList","originalData","seriesGroup","needsDrawMap","cloneShallow","mainSeries","symbolCtor","_symbolCtor","symbolDrawProto","symbolNeedsDraw","normalizeUpdateOpt","makeSeriesScope","hoverItemStyle","SymbolCtor","seriesScope","fadeOut","isPersistent","incrementalPrepareUpdate","_seriesScope","incrementalUpdate","taskParams","updateIncrementalAndHover","enableAnimation","ComponentView","_sourceHelper","detectSourceFormat","sourceHeader","VisualMapView","helper","PiecewiseVisualMapView","doRender","visualMapModel","itemAlign","_getItemAlign","viewData","_getViewData","endsText","showLabel","piece","itemGroup","_onItemClick","_enableHoverLink","indexInModelPieceList","representValue","getRepresentValue","_createItemSymbol","visualState","_renderEndsText","viewPieceList","renderBackground","positionGroup","pieceIndex","onHoverLink","hoverLink","convertDataIndex","findTargetDataIndices","modelOption","getItemAlign","getPieceList","shapeParam","getControllerVisual","newKey","getSelectedMapKey","selectedMode","o","visualMapId","setEncodeAndDimensions","getRawIndicesByActiveState","theActiveState","parallelIndex","inactiveOpacity","activeOpacity","convertDimNameToNumber","FunnelSeries","getSum","minSize","funnelAlign","parseGeoJson","View","fixNanhai","fixTextCoord","fixGeoCoord","fixDiaoyuIsland","geoFixFuncs","_nameCoordMap","loadGeoJson","getReferringComponents","containCoord","message","regionsMap","regionName","specialArea","_regionsMap","fixFunc","rawTransformable","_rawTransformable","_updateTransform","getRegion","getRegionByCoord","getGeoCoord","regionRect","noRoam","otherAxisOnZeroOf","rawAxisPosition","onZero","axisOffset","posBound","onZeroCoord","dirMap","updateViewOnPan","controllerHost","updateViewOnZoom","zoomDelta","zoomX","zoomY","newZoom","zoomScale","xAxis","yAxis","zrColor","eventUtil","vendors","gCssText","assembleTransition","duration","transitionCurve","transitionText","vendorPrefix","assembleFont","assembleCssText","tooltipModel","transitionDuration","toHex","borderName","camelCase","TooltipContent","container","_y","_container","_show","_hideTimeout","onmouseenter","_enterable","clearTimeout","_inContent","normalizeEvent","onmouseleave","hideLater","_hideDelay","domStyle","setContent","setEnterable","enterable","getSize","viewportRootOffset","setTimeout","isShow","DEFAULT_MIN_MERGE","DEFAULT_MIN_GALLOPING","minRunLength","makeAscendingRun","lo","hi","compare","runHi","reverseRun","binaryInsertionSort","mid","pivot","gallopLeft","hint","lastOffset","maxOffset","gallopRight","TimSort","runStart","runLength","minGallop","stackSize","pushRun","_runStart","_runLength","mergeRuns","mergeAt","forceMergeRuns","start1","length1","start2","mergeLow","mergeHigh","cursor1","cursor2","dest","count1","count2","exit","_minGallop","Error","customCursor","customDest","remaining","ts","minRun","force","p0","Clip","isArrayLike","arraySlice","defaultGetter","defaultSetter","interpolateNumber","interpolateString","interpolateArray","arrDim","len2","fillArr","arr0","arr1","arr0Len","arr1Len","isPreviousLarger","isArraySame","catmullRomInterpolateArray","p3","t2","t3","catmullRomInterpolate","cloneValue","rgba2String","rgba","getArrayDim","keyframes","lastValue","createTrackClip","animator","oneTrackDone","propName","forceAnimate","getter","_getter","setter","_setter","useSpline","trackLen","trackMaxTime","firstVal","isValueArray","isValueColor","isValueString","kfPercents","kfValues","prevValue","isAllValueEqual","colorArray","_target","lastFrame","lastFramePercent","onframe","life","_loop","_delay","ondestroy","Animator","_tracks","_clipCount","_doneList","_onframeList","_clipList","when","tracks","pause","_paused","resume","isPaused","_doneCallback","doneList","lastClip","clipCount","addClip","oldOnFrame","forwardToLast","clipList","removeClip","getClips","linkList","TreeNode","hostTree","viewChildren","Tree","levelOptions","leavesOption","_nodes","levelModels","levelDefine","leavesModel","addChild","isRemoved","eachNode","suppressVisitSub","updateDepthAndHeight","getNodeById","getId","getAncestors","includeSelf","ancestors","getValue","setLayout","getLayout","levelModel","getLevelModel","isExpand","getLeavesModel","ignoreParent","isAncestorOf","isDescendantOf","getNodeByDataIndex","getNodeByName","clearLayouts","clearItemLayouts","createTree","dataRoot","treeOptions","tree","levels","leaves","listData","dimMax","buildHierarchy","dataNode","mainData","struct","structAttr","reformIntervals","PiecewiseModel","minOpen","maxOpen","itemSymbol","pieceList","_pieceList","mode","_mode","_determineMode","resetMethods","_resetSelected","mappingOption","mappingMethod","dataExtent","visualTypesInPieces","visualTypes","listVisualTypes","pieces","hasSel","findPieceIndex","pIdx","pieceInterval","getColorVisual","curr","setStop","valueState","splitStep","close","cate","normalizeReverse","pieceListItem","closeList","infinityList","useMinMax","lg","retrieveVisuals","GestureMgr","pointPair","recognize","_doTrack","_recognize","touches","trackItem","touch","clientToLocal","recognizers","gestureInfo","pinch","pinchEnd","pinchPre","pinchCenter","parallelVisual","candlestickVisual","candlestickLayout","TimelineAxis","subPixelOptimize","LargeArr","Float32Array","candleWidth","calculateCandleWidth","openDim","closeDim","lowestDim","highestDim","isSimpleBox","large","largeProgress","normalProgress","openVal","closeVal","lowestVal","highestVal","ocLow","ocHigh","ocLowPoint","ocHighPoint","lowestPoint","highestPoint","subPixelOptimizePoint","getSign","brushRect","makeBrushRect","pmin","pmax","tmpIn","tmpOut","barMaxWidth","barMinWidth","barWidth","_referHelper","getCoordSysDefineBySeries","SOURCE_FORMAT_ARRAY_ROWS","SOURCE_FORMAT_OBJECT_ROWS","SERIES_LAYOUT_BY_ROW","datasetModel","resetSourceDefaulter","datasetMap","prepareSource","seriesOption","getDatasetModel","datasetOption","completeResult","completeBySourceData","makeDefaultEncode","normalizeDimensionsDefine","findPotentialName","potentialNameDimIndex","arrayRowsTravelFirst","objectRowsCollectDimensions","colArr","value0","displayName","maxLoop","firstIndex","coordSysDefine","encodeItemName","encodeSeriesName","nSeriesMap","cSeriesMap","datasetRecord","categoryWayDim","valueWayDim","coordSysDims","firstCategoryDimIndex","categoryAxisMap","firstNotOrdinal","doGuessOrdinal","nameDimIndex","thisData","datasetIndex","guessOrdinal","sample","detectValue","row","curveUtil","EffectLine","lineData","createLine","_updateEffectSymbol","effectLineProto","effectModel","_symbolType","setColor","_updateEffectAnimation","period","constantSpeed","delayExpr","isDelayFunc","updateAnimationPoints","getLineLength","_period","__t","animate","updateSymbolPosition","__p1","__cp1","__p2","quadraticDerivativeAt","Diff","buildValues","components","newArr","oldArr","componentPos","componentLen","newPos","oldPos","component","clonePath","newLen","oldLen","editLength","maxEditLength","bestPath","extractCommon","execEditLength","diagonalPath","basePath","addPath","removePath","undefined","canAdd","canRemove","pushComponent","last","commonCount","tokenize","RoamController","roamHelper","getFixedItemStyle","areaColor","updateMapSelectHandler","mapDraw","mapOrGeoModel","fromView","_mouseDownFlag","__regions","action","updateMapSelected","otherRegionEl","MapDraw","updateGroup","_controller","_controllerHost","_updateGroup","isGeo","groupNewProp","itemStyleAccessPath","hoverItemStyleAccessPath","labelAccessPath","hoverLabelAccessPath","regionGroup","compoundPath","CompoundPath","regionModel","getRegionModel","itemStyleModel","hoverItemStyleModel","geometry","hoverShowLabel","isDataNaN","useInsideStyle","groupRegions","hoverSilentOnTouch","_updateController","enable","makeActionBase","mouseX","mouseY","setPointerChecker","getViewRectAfterRoam","vector","mIdentity","isNotAroundZero","transformableProto","parentHasTransform","invert","tmpTransform","v2","transformCoordToGlobal","Displayable","src","_image","createOrUpdateImage","onload","sWidth","sHeight","drawRectText","minValue","maxValue","nodeValue","mapping","mapValueToColor","mapValueToVisual","customColor","LegendView","ScrollableLegendView","newlineDisabled","_currentIndex","_containerGroup","getContentGroup","_controllerGroup","_showController","resetInner","__rectSize","renderInner","me","controllerGroup","createPageButton","pageTextStyleModel","iconIdx","pageDataIndexName","_pageGo","layoutInner","contentGroup","orientIdx","hw","yx","contentRect","controllerRect","showController","contentPos","containerPos","controllerPos","mainRect","pageInfo","_getPageInfo","pageIndex","contentPosition","_updatePageInfoView","legendId","canJump","pageText","total","pageCount","pagePrevDataIndex","pageNextDataIndex","targetItemGroup","currDataIndex","containerRectSize","__legendDataIndex","itemRect","itemLoc","startIdx","winRect","getItemRect","startItem","startRect","selector","BrushTargetManager","STATE_LIST","DISPATCH_METHOD","DISPATCH_FLAG","PRIORITY_BRUSH","VISUAL","BRUSH","brushSelected","doDispatch","isDisposed","checkInRange","selectorsByBrushType","rangeInfoList","selectors","getSelectorsByBrushType","brushSelector","sels","selectorsByElementType","bSelector","sel","brushModelNotControll","bindSelector","selFn","elType","brushTargetManager","setInputRanges","brushIndex","thisBrushSelected","brushId","brushName","linkedSeriesMap","selectedDataIndexForLink","rangeInfoBySeries","hasBrushExists","boundingRect","boundingRectBuilders","visualMappings","linkOthers","brushed","stepAParallel","stepAOthers","controlSeries","seriesBrushSelected","applyVisual","getBoundingRectFromMinMax","minMax","getTooltipPosition","axisDefault","valueAxisDefault","defaultsShow","RadarModel","nameTextStyle","showName","nameFormatter","nameGap","indicatorModels","indicatorOpt","iNameTextStyle","indName","getIndicatorModels","indicator","coordsOffsetMap","南海诸岛","广东","香港","澳门","天津","coordFix","getProgressive","getProgressiveThreshold","progressiveThreshold","largeThreshold","records","initGlobalListeners","record","useHandler","eventType","dis","makeDispatchAction","dispatchTooltipFinally","pendings","initialized","doEnter","onLeave","actuallyPayload","showLen","showTip","hideLen","hideTip","symbolProto","getScale","driftSymbol","_createSymbol","keepAspect","symbolPath","toLastFrame","getSymbolPath","setDraggable","_updateCommon","fadeIn","_seriesModel","normalStyleAccessPath","emphasisStyleAccessPath","normalLabelAccessPath","emphasisLabelAccessPath","symbolInnerColor","z2Origin","__z2Origin","useNameLabel","getLabelDefaultText","isAnimationEnabled","onEmphasis","ratio","onNormal","keepLabel","symbolUtil","normalizeSymbolSize","updateSymbols","oldPoints","newPoints","symbolGroup","__dimIdx","getInitialPoints","hoverAreaStyleModel","polygonIgnore","hoverPolygonIgnore","itemHoverStyle","labelHoverModel","labelDimIndex","radiusAxisModel","axisAngle","layoutAxis","splitLines","Circle","mergePath","splitAreas","prevRadius","_dataStackHelper","_completeDimensions","completeDimensions","_createDimensions","createList","dataStack","createScale","isInstance","mixinAxisModelCommonMethods","ArrayCtor","m1","m2","out0","out1","out2","out3","out4","out5","rad","aa","ac","atx","ab","ad","aty","st","ct","vx","vy","det","OrdinalMeta","scaleProto","OrdinalScale","_ordinalMeta","getOrdinal","rank","niceTicks","niceExtent","MarkerModel","SKIP_PROPS","CandlestickView","_updateDrawMode","_isLargeDraw","_renderLarge","_renderNormal","_clear","_incrementalRenderLarge","_incrementalRenderNormal","isLargeDraw","setBoxCommon","createLarge","NormalBoxPath","__simpleBox","LargeBoxPath","__sign","largePoints","elP","elN","setLargeStyle","suffix","Style","RectText","dragging","inplace","rectContain","animateStyle","updateDataSelected","toggleItemSelected","midAngle","PiePiece","sector","hoverIgnore","normalIgnore","piePieceProto","firstCreate","sectorShape","_updateLabel","labelText","linePoints","labelLineModel","labelLineHoverModel","inside","PieView","sectorGroup","_sectorGroup","isFirstRender","onSectorClick","piePiece","_createClipPath","arrySlice","_$handlers","one","_h","newList","args","argLen","triggerWithContext","eachEdge","resizePolar","polarModel","updatePolarScale","setAxis","polarCreator","polarList","findAxisModel","angleAxisModel","getSeriesStackId","getAxisKey","barLayoutPolar","lastStackCoords","barWidthAndOffset","calRadialBar","filter","getSeriesByType","stackId","columnLayoutInfo","columnOffset","columnWidth","barMinHeight","barMinAngle","baseDim","stacked","valueAxisStart","baseValue","baseCoord","radiusSpan","angleSpan","barSeries","columnsMap","columnsOnAxis","remainedWidth","autoWidthCount","categoryGap","stacks","barCategoryGap","coordSysName","barGapPercent","autoWidth","column","lastColumn","widthSum","selectableMixin","GeoModel","_optionModelMap","reduce","optionModelMap","regionOpt","scaleLimit","categoryFilter","categoryVisual","edgeVisual","circularLayout","createView","IndicatorAxis","IntervalScale","getScaleExtent","Radar","radarModel","_indicatorAxes","indicatorModel","indicatorAxis","getIndicatorAxes","indicatorIndex","closestAxis","minRadianDiff","closestAxisIdx","coodToData","viewSize","indicatorAxes","radarSeries","increaseInterval","exp10","LN10","f","rawExtent","fixedMin","getMin","fixedMax","getMax","getInterval","setInterval","nicedSplitNumber","halfSplitNumber","radarList","radar","Graph","directed","beforeLink","addNode","linkNameList","validEdges","linkCount","link","addEdge","coordSysCtor","dimensionNames","datasAttr","rangeStart","eqNaN","rangeEnd","getNeedCrossZero","setRange","resetRange","coordinateSystemCreators","CoordinateSystemManager","_coordinateSystems","coordinateSystems","creater","getCoordinateSystems","coordinateSystemCreator","mathAbs","hasTypedArray","notSaveData","_saveData","_ctx","_xi","_yi","_x0","_y0","_ux","_uy","_lineDash","_dashOffset","_dashIdx","_dashSum","addData","exceedUnit","_needsDash","_dashedLineTo","_dashedBezierTo","quadraticCurveTo","_dashedQuadraticTo","arcTo","toStatic","setLineDash","lineDash","lineDashSum","setLineDashOffset","appendPath","appendSize","appendPathData","_expandData","_prevCmd","dash","dashSum","nDash","bezierLen","tmpLen","rebuildPath","ux","uy","psi","fs","scaleX","scaleY","isEllipse","ctor","treeOption","treeDepth","expandAndCollapse","expandTreeDepth","initialTreeDepth","getRawDataItem","collapsed","realRoot","scaleHelper","intervalScaleProto","ONE_SECOND","ONE_MINUTE","ONE_HOUR","ONE_DAY","bisect","TimeScale","stepLvl","_stepLvl","minInterval","maxInterval","fixMin","fixMax","approxTickNum","approxInterval","scaleLevelsLen","scaleLevels","level","yearSpan","yearStep","nice","timezoneOffset","getTimezoneOffset","fixExtent","_niceExtent","useUTC","clipOverflow","hoverLayerThreshold","axisExpandRate","axisExpandDebounce","axisExpandSlideTriggerArea","axisExpandTriggerOn","parallelAxisDefault","_initDimensions","setAxisExpand","dependentModels","parallelAxis","wx","getSystemInfoSync","browser","os","svgSupported","touchEventsSupported","worker","navigator","detect","userAgent","ua","firefox","ie","weChat","version","SVGRect","pointerEventsSupported","hierNode","defaultAncestor","ancestor","prelim","modifier","change","shift","thread","pop","firstWalk","separation","siblings","subtreeW","executeShifts","midPoint","apportion","secondWalk","nodeX","defaultSeparation","radialCoordinate","radialCoor","getViewRect","subtreeV","nodeOutRight","nodeInRight","nodeOutLeft","nodeInLeft","sumOutRight","sumInRight","sumOutLeft","sumInLeft","nextRight","nextLeft","moveSubtree","nextAncestor","wl","wr","pathTool","colorTool","Ring","BezierCurve","Arc","IncrementalDisplayable","EMPTY_OBJ","extendShape","extendPath","extendFromString","createFromString","centerGraphic","resizePath","makeImage","imageUrl","img","pathRect","subPixelOptimizeRect","originWidth","originHeight","positiveOrNegative","doubledPosition","hasFillOrStroke","fillOrStroke","liftColor","lift","cacheElementStl","__hoverStlDirty","__hoverStl","__normalStl","doSingleEnterHover","__isHover","insideRollbackOpt","rollbackInsideStyle","extendFrom","applyInsideStyle","insideOriginalTextPosition","doSingleLeaveHover","normalStl","doEnterHover","doLeaveHover","setElementHoverStl","hoverStl","onElementMouseOver","__hoverSilentOnTouch","__isEmphasis","onElementMouseOut","enterEmphasis","leaveEmphasis","emphasisStyle","normalModel","emphasisModel","normalSpecified","emphasisSpecified","baseText","showNormal","showEmphasis","normalStyleText","emphasisStyleText","specifiedTextStyle","setTextStyleCommon","host","setText","defaultColor","textOffset","textDistance","richResult","globalTextStyle","richItemNames","getRichItemNames","richTextStyle","setTokenTextStyle","forceRich","richItemNameMap","isBlock","getAutoColor","textBorderColor","textStrokeWidth","textBorderWidth","originalTextPosition","insideRollback","textTag","disableBox","textBorderRadius","textBoxShadowColor","textBoxShadowBlur","textBoxShadowOffsetX","textBoxShadowOffsetY","textShadowColor","textShadowBlur","textShadowOffsetX","textShadowOffsetY","gTextStyleModel","animateOrSetProps","isUpdate","animationEnabled","postfix","animationDelay","getAnimationDelayParams","mat","hBase","vBase","vertex","g1","g2","elMap1","getElMap","oldEl","newProp","getAnimatableProps","g","elMap","clipRectByRect","targetRect","throttle","DataZoomView","DEFAULT_LOCATION_EDGE_GAP","DEFAULT_FRAME_BORDER_WIDTH","DEFAULT_FILLER_SIZE","HORIZONTAL","VERTICAL","LABEL_GAP","SHOW_DATA_SHADOW_SERIES_TYPE","SliderZoomView","_displayables","_range","_handleEnds","_size","_handleWidth","_handleHeight","_location","_dataShadowInfo","dataZoomModel","_buildView","_updateView","_resetLocation","_resetInterval","barGroup","_renderBackground","_renderDataShadow","_positionGroup","coordRect","_findCoordRect","ecSize","layoutRect","location","targetAxisModel","getFirstTargetAxisModel","otherAxisInverse","_getViewExtent","_onClickPanelClick","info","_prepareDataShadowInfo","otherDim","getShadowDim","otherDataExtent","getDataExtent","otherOffset","lastIsEmpty","otherShadowExtent","thisShadowExtent","areaPoints","thisCoord","stride","otherCoord","showDataShadow","eachTargetAxis","getAxisProxy","getTargetSeriesModels","thisAxis","getOtherDim","thisDim","displaybles","handles","handleLabels","filler","getCursor","_onDragMove","ondragstart","_showDataInfo","_onDragEnd","onmouseover","onmouseout","bRect","handleColor","getPercentRange","viewExtent","_updateInterval","viewExtend","minMaxSpan","findRepresentativeAxisProxy","getMinMaxSpan","percentExtent","lastRange","nonRealtime","handleInterval","handleHeight","_updateDataInfo","labelTexts","axisProxy","getAxisModel","dataInterval","calculateDataWindow","valueWindow","getDataValueWindow","_formatLabel","orderedHandleEnds","barTransform","textPoint","labelPrecision","getPixelPrecision","valueStr","showOrHide","changed","_dispatchZoomAction","localPoint","dataZoomId","getTargetCoordInfo","fillLabel","createdBySelf","hostSeries","__hostSeries","newOpt","modelPropName","markerOpt","markerModel","getRawValue","formattedValue","getSortedIndices","valueArr","isAscending","textX","textY","labelPosition","isLabelInside","labelLineLen","sizeExtent","getLinePoints","offY","layerSeries","getLayerSeries","keyGetter","dataDiffer","_layersSeries","newLayersGroups","process","oldLayersGroups","points0","layerGroup","rectEl","POSSIBLE_STYLES","compatEC2ItemStyle","itemStyleOpt","normalItemStyleOpt","emphasisItemStyleOpt","convertNormalEmphasis","optType","useExtend","normalOpt","emphasisOpt","removeEC3NormalStatus","compatTextStyle","labelOptSingle","compatEC3CommonStyles","processSeries","markArea","mpData","mlData","breadcrumb","toArr","toObj","axisOpt","parallel","parallelOpt","calendarOpt","radarOpt","geoOpt","regionObj","timelineOpt","toolboxOpt","fixShadow","STYLE_COMMON_PROPS","createLinearGradient","canvasGradient","createRadialGradient","lineDashOffset","transformText","textOrigin","blend","prevStyle","firstDraw","fillStyle","strokeStyle","globalAlpha","globalCompositeOperation","getLineScale","hasFill","otherStyle","newStyle","getGradient","addColorStop","styleProto","hasKeys","mappings","createMappings","__hidden","__alphaForOpacity","Creater","keys","visualTypesMap","eachItem","valueOrIndex","rawDataItem","prepareVisualTypes","incrementalApplyVisual","excludes","includes","validDataCount","unitRadian","roseType","restAngle","valueSumLargerThanMinAngle","currentAngle","paletteScope","categoriesData","getCategoriesData","categoryNameIdxMap","dataView","back","saveAsImage","typeNames","pie","scatter","effectScatter","treemap","boxplot","heatmap","sankey","funnel","pictorialBar","themeRiver","sunburst","aria","general","withTitle","withoutTitle","prefix","withName","withoutName","multiple","separator","allData","partialData","DefaultDataProvider","dimSize","_source","_offset","_dimSize","providerMethods","providerProto","pure","persistent","arrayRows_column","getItem","appendData","appendDataSimply","arrayRows_row","objectRows","countSimply","getItemSimply","keyedColumns","col","newCol","oldCol","original","typedArray","clean","rawValueGetters","arrayRows","getRawValueSimply","defaultDimValueGetters","getDimValueSimply","converDataValue","_dimensionInfos","_rawData","parseAndCollect","retrieveRawValue","getProvider","OTHER_DIMENSIONS","summarizeDimensions","summary","notExtraCoordDimMap","defaultedLabel","defaultedTooltip","dimItem","coordDimArr","mayLabelDimType","otherDimArr","dataDimsOnCoord","encodeFirstDimNotExtra","dimArr","encodeLabel","encodeTooltip","barPolar","borderColorQuery","globalColors","eachRawSeriesByType","defaulColor","legendSymbol","getTargetSeries","seriesModelMap","overallReset","filterData","percentRange","getDataPercentWindow","valueRange","setRawRange","startValue","endValue","debugMode","getMarkerPosition","clampData","offsetIndex","progressiveChunkMode","markerHelper","LineDraw","MarkerView","markLineTransform","mlModel","mlType","valueDataDim","numCalculate","valueIndex","mlFrom","mlTo","dataTransform","isInifinity","ifMarkLineHasOnlyDim","fromCoord","toCoord","otherDimIndex","markLineFilter","updateSingleMarkerEndLayout","isFrom","xPx","yPx","markLineModel","fromData","toData","__to","markerGroupMap","renderSeries","lineDrawMap","lineDraw","updateDataVisualAndLayout","lineColor","fromSymbolSize","fromSymbol","toSymbolSize","toSymbol","dataModel","__keep","coordDimsInfos","optData","dimValueGetter","DEFAULT_BAR_BOUND","ContinuousModel","calculable","hoverLinkDataSize","hoverLinkOnHandle","_resetRange","auto","getSelected","oVals","getColorStopValues","iVals","iIdx","oIdx","iLen","oLen","first","stopsLen","stopValues","_event","Dispatcher","Animation","stage","_clips","_running","_time","_pausedTime","_pauseStart","clips","_update","deferredEvents","deferredClips","_needsRemove","fire","_startLoop","isFinished","sankeyLayout","sankeyVisual","_echarts","_export","DATAS","MAIN_DATA","main","linkAll","TRANSFERABLE_METHODS","wrapMethod","transferInjection","cloneShallowInjection","CHANGABLE_METHODS","changeInjection","isMainData","linkSingle","getLinkedData","roams","InsideZoomView","allCoordIds","coordInfo","generateCoordId","coordModel","dataZoomOption","coordId","containsPoint","throttleRate","panGetRange","_onPan","zoomGetRange","_onZoom","zoomLock","disabled","roamControllerOpt","zoomOnMouseWheel","moveOnMouseMove","preventDefaultMouseMove","oldX","oldY","newX","newY","directionInfo","getDirectionInfo","percentDelta","signal","pixel","pixelLength","percentPoint","pixelStart","oldPoint","newPoint","coordSysDimDefs","registeredCoordSys","axisMap","hasNameEncode","dimInfoList","generateCoord","categoryAxisModel","stackCalculationInfo","isNeedCompleteOrdinalData","itemOpt","defaultDimValueGetter","firstDataNotNull","isNumeric","BAR_BORDER_WIDTH_QUERY","LAYOUT_ATTRS","posDesc","pathForLineWidth","BarView","coordSysRect","coordSysExtent","categoryDim","symbolMeta","getSymbolMeta","createBar","pictorialShapeStr","getShapeStr","__pictorialShapeStr","updateBar","__pictorialSymbolMeta","removeBar","prepareBarLength","prepareSymbolSize","boundingLength","pxSign","prepareLineWidth","symbolScale","prepareLayoutInfo","valueLineWidth","repeatCutLength","output","zeroPx","pxSignIdx","symbolBoundingExtent","convertToCoordOnAxis","categorySize","unitLength","pathLen","absBoundingLength","hasEndGap","lastIndexOf","uLenWithMargin","endFix","repeatSpecified","repeatTimes","toIntTimes","mDiff","sizeFix","pathPosition","bundlePosition","barRectShape","createPath","createOrUpdateRepeatSymbols","bundle","__pictorialBundle","eachPath","__pictorialAnimationIndex","__pictorialRepeatTimes","updateAttr","makeTarget","updateHoverAnimation","onMouseOver","onMouseOut","createOrUpdateSingleSymbol","mainPath","__pictorialMainPath","createOrUpdateBarRect","rectShape","barRect","__pictorialBarRect","createOrUpdateClip","__pictorialClipPath","labelRect","pathes","immediateAttrs","animationAttrs","barRectHoverStyle","barPositionOutside","times","roundedTimes","DataZoomModel","SliderZoomModel","dataBackground","fillerColor","handleIcon","handleStyle","showDetail","SunburstPiece","ROOT_TO_NODE_ACTION","SunburstView","that","virtualRoot","newRoot","getViewRoot","renderLabelForZeroData","_oldChildren","dualTravel","renderRollUp","highlightPolicy","unhighlight","virtualPiece","processNode","newId","oldId","newNode","oldNode","doRenderNode","removeNode","viewRoot","_onclickEvent","_rootToNode","_initEvents","targetFound","nodeClick","linkTarget","open","treeRoot","transformPath","cc","vMag","vRatio","u","vAngle","acos","processArc","fa","psiDeg","xp","yp","lambda","cxp","cyp","createPathProxyFromString","cs","RegExp","prevCmd","arr","cpx","cpy","ctlPtx","ctlPty","createPathOptions","pathProxy","pathEls","pathList","pathEl","pathBundle","TimelineView","_axis","_viewRect","_timer","_currentPointer","_mainGroup","_labelGroup","timelineModel","mainGroup","_createGroup","labelGroup","_createAxis","_renderAxisLabel","_position","_doPlayStop","_clearTimer","labelPosOpt","playPosition","prevBtnPosition","nextBtnPosition","labelAlignMap","labelBaselineMap","rotationMap","mainLength","controlModel","showControl","controlSize","controlGap","sizePlusGap","xLeft","xRight","labelAlign","labelBaseline","rotateOriginX","rotateOriginY","viewBound","getBound","mainBound","labelBound","mainPosition","labelsPosition","mainBoundIdx","toBound","setOrigin","targetGroup","fromPos","boundIdx","newGroup","_renderAxisLine","_renderAxisTick","hoverStyleModel","symbolOpt","_changeTimeline","giveSymbol","normalLabelModel","_renderControl","playState","makeBtn","iconPath","willRotate","btn","makeIcon","_handlePlayClick","_renderCurrentPointer","pointerModel","onCreate","_handlePointerDrag","_handlePointerDragend","pointerMoveTo","onUpdate","nextState","_pointerChangeTimeline","mousePos","_toAxisCoord","targetDataIndex","_findNearestTick","handleFrame","axisCoord","nextIndex","objPath","noAnimation","RADIAN_EPSILON","_trim","domain","subDomain","subRange","all","returnStr","getPrecision","getPrecisionSafe","toString","eIndex","dotIndex","pixelExtent","dataQuantity","sizeQuantity","acc","digits","votesPerQuota","targetSeats","seats","votes","currentSum","remainder","NEGATIVE_INFINITY","maxId","MAX_SAFE_INTEGER","pi2","TIME_REG","hour","UTC","quantity","quantityExponent","nf","exponent","littleThan","currClose","DIMENSION_LABEL_REG","rawValue","rawDataIndex","marker","labelProp","getLineDash","lineType","dotSize","dashSize","Displayble","IncrementalDisplayble","_temporaryDisplayables","_cursor","clearDisplaybles","addDisplayable","notPersistent","addDisplayables","displayables","eachPendingDisplayable","localPos","preventIncremental","coordSysCreator","blurSize","pointSize","maxOpacity","minOpacity","AxisProxy","eachAxisDim","filterMode","minValueSpan","maxValueSpan","rangeMode","_dataIntervalByAxis","_dataInfo","_axisProxies","_autoThrottle","_rangePropMode","rawOption","retrieveRaw","doInit","_setDefaultThrottle","updateRangeUse","_resetTarget","_giveAxisProxies","axisProxies","__dzAxisProxy","autoMode","_judgeAutoMode","axisIndexName","_autoSetAxisIndex","_autoSetOrient","hasIndexSpecified","autoAxisIndex","singleAxisModel","singleAxisIndex","axisIndices","_isSeriesHasAllAxesTypeOf","seriesAxisIndex","globalOption","firstAxisModel","ignoreUpdateRangeUsg","getValueRange","axisDimName","hostedBy","getRangePropMode","rangePropMode","rangeModeInOption","percentSpecified","valueSpecified","textHelper","arrayJoin","NONE","mathRound","degree","round4","isAroundZero","pathHasFill","isText","pathHasStroke","svgEl","attrXLink","setAttributeNS","bindStyle","strokeWidth","strokeScale","miterLimit","pathDataToString","dataLength","cmdStr","nData","dThetaPositive","isCircle","pathStr","svgTextDrawRectText","HTMLImageElement","__imageSrc","normalizeTextStyle","textSvgEl","getVerticalAlignForSvg","nTextLines","textAnchor","__text","__textFont","tspanList","__tspanList","tspan","createTextNode","HOVER_LINK_SIZE","HOVER_LINK_OUT","ContinuousView","_shapes","_dataInterval","_useHandle","_hoverLinkDataIndices","_hovering","_renderBar","dataRangeText","_enableHoverLinkToSeries","_enableHoverLinkFromSeries","endsIndex","_applyTransform","shapes","_createBarGroup","createPolygon","_dragHandle","textSize","handleThumbs","handleLabelPoints","_createHandle","_createIndicator","onDrift","onDragEnd","handleThumb","createHandlePoints","handleLabel","handleLabelPoint","indicatorLabel","indicatorLabelPoint","_clearHoverLinkToSeries","useHoverLinkOnHandle","_doHoverLinkToSeries","forSketch","outOfRangeHandleEnds","inRangeHandleEnds","visualInRange","_createBarVisual","visualOutOfRange","barColor","barPoints","_updateHandle","forceState","convertOpacityToAlpha","_makeColorGradient","symbolSizes","_createBarPoints","handlesColor","sampleNumber","currValue","_showIndicator","cursorValue","rangeSymbol","halfHoverLinkSize","createIndicatorPoints","_hoverLinkFromSeriesMouseOver","_hideIndicator","_clearHoverLinkFromSeries","cursorPos","hoverOnBar","getHalfHoverLinkSize","hoverRange","oldBatch","newBatch","resultBatches","_dispatchHighDown","isRange","extentMax","zrender","GlobalModel","ExtensionAPI","OptionManager","backwardCompat","_throttle","seriesColor","loadingDefault","Scheduler","lightTheme","darkTheme","parseClassType","TEST_FRAME_REMAIN_TIME","PRIORITY_PROCESSOR_FILTER","PRIORITY_PROCESSOR_STATISTIC","PRIORITY_VISUAL_LAYOUT","PRIORITY_VISUAL_GLOBAL","PRIORITY_VISUAL_CHART","PRIORITY_VISUAL_COMPONENT","PRIORITY_VISUAL_BRUSH","FILTER","LAYOUT","GLOBAL","CHART","COMPONENT","IN_MAIN_PROCESS","OPTION_UPDATED","ACTION_REG","createRegisterEventWithLowercaseName","MessageCenter","ECharts","themeStorage","_dom","defaultRenderer","renderer","_throttledZrFlush","flush","_theme","_chartsViews","_chartsMap","_componentsViews","_componentsMap","_coordSysMgr","createExtensionAPI","prioritySortFunc","__prio","visualFuncs","dataProcessorFuncs","_scheduler","_messageCenter","_pendingActions","_onframe","bindRenderedEvent","setAsPrimitive","echartsProto","doConvertPixel","coordSysList","scheduler","prepare","updateMethods","flushPendingActions","triggerUpdatedEvent","remainTime","performSeriesTasks","performDataProcessorTasks","updateStreamModes","performVisualTasks","getDom","setOption","notMerge","lazyUpdate","optionManager","optionPreprocessorFuncs","setTheme","getOption","getSvgDataUrl","getDataURL","excludeComponents","excludesComponentViews","__viewId","url","toDataURL","getConnectedDataURL","groupId","connectedGroups","canvasList","instances","chart","getBoundingClientRect","targetCanvas","createCanvas","refreshImmediately","containPixel","getViewOfComponentModel","getViewOfSeriesModel","prepareAndUpdate","coordSysMgr","restoreData","colorArr","stringify","performPostUpdateFuncs","ecIns","componentDirtyList","componentView","__alive","seriesDirtyMap","chartView","setDirty","dirtyMap","restorePipelines","prepareStageTasks","prepareView","updateDirectly","condition","excludeSeriesId","callView","__model","chartsMap","doDispatchAction","payloadType","actionWrap","actions","cptType","payloads","batched","eventObj","eventObjBatch","isHighDown","pendingActions","isComponent","viewList","viewMap","doPrepare","viewId","classType","Clazz","getClass","__id","__ecComponentInfo","renderComponents","dirtyList","updatePayload","getPerformArgs","updateBlend","updateHoverLayerStatus","postUpdateFuncs","func","_loadingFX","optionChanged","showLoading","cfg","hideLoading","loadingEffects","makeActionFromEvent","eventActionMap","MOUSE_EVENT_NAMES","elCount","blendMode","ecInstance","getComponentByElement","modelInfo","eveName","actionType","DOM_ATTRIBUTE_KEY","idBase","groupIdBase","mapDataStores","enableConnect","STATUS_PENDING","STATUS_UPDATING","STATUS_UPDATED","STATUS_KEY","updateConnectedChartsStatus","charts","otherChart","otherCharts","existInstance","getInstanceByDom","connect","disConnect","disconnect","getInstanceById","registerTheme","preprocessorFunc","priority","processor","normalizeRegister","registerPostUpdate","postUpdateFunc","getCoordinateSystemDimensions","layoutTask","visualTask","defaultPriority","stageHandler","wrapStageHandler","__raw","registerLoading","loadingFx","setCanvasCreator","creator","registerMap","JSON","Function","dataTool","___ec_export","lenSquare","lengthSquare","div","dot","distanceSquare","distSquare","negate","lerp","kCSSColorTable","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","clampCssByte","clampCssAngle","clampCssFloat","parseCssInt","parseCssFloat","cssHueToRgb","lerpNumber","setRgba","copyRgba","colorCache","lastRemovedArr","putToCache","colorStr","rgbaArr","cached","op","ep","fname","alpha","hsla2rgba","iv","hsla","rgba2hsla","H","G","B","vMin","vMax","deltaR","deltaG","deltaB","fastLerp","normalizedValue","leftIndex","rightIndex","leftColor","rightColor","dv","fastMapToColor","fullOutput","mapToColor","modifyHSL","modifyAlpha","arrColor","axisPointerViewHelper","proxyRect","tooltipContent","_tooltipContent","_tooltipModel","_ecModel","_lastDataByCoordSys","_alwaysShowContent","_initGlobalListener","_keepShow","_tryShow","_hide","_refreshUpdateTimeout","manuallyShowTip","_ticket","_manuallyAxisShowTip","pointInfo","manuallyHideTip","buildTooltipModel","_showAxisTooltip","_showSeriesItemTooltip","_showComponentItemTooltip","_showOrMove","_showTimout","singleDefaultHTML","singleParamsList","singleTooltipModel","itemCoordSys","axisValue","seriesDefaultHTML","valueLabel","axisValueLabel","firstLine","positionExpr","_updateContentNotChangedOnAxis","_updatePosition","_showTooltipContent","tooltipTrigger","defaultHtml","asyncTicket","subTooltipModel","cbTicket","contentSize","calcTooltipPosition","refixTooltipPosition","isCenterAlign","confineTooltipPosition","lastCoordSys","contentNotChanged","lastItemCoordSys","indexCoordSys","lastDataByAxis","thisItemCoordSys","thisDataByAxis","lastItem","indexAxis","thisItem","lastIndices","newIndices","lastIdxItem","newIdxItem","modelCascade","resultModel","gapH","gapV","getOuterSize","borderLeftWidth","borderRightWidth","borderTopWidth","borderBottomWidth","domWidth","domHeight","rectWidth","rectHeight","lineStyleMixin","areaStyleMixin","textStyleMixin","itemStyleMixin","doGet","pathArr","getParent","getParentMethod","parsePath","thisParentModel","Ctor","setReadOnly","customizeGetParent","Single","singles","EffectSymbol","pointsLayout","effectSymbolDraw","_updateGroupTransform","getRoamTransform","actionTypes","handleRootToNode","types","retrieveTargetInfo","originViewRoot","aboveViewRoot","resetViewRoot","easingFuncs","_life","_initialized","onrestart","globalTime","deltaTime","_startTime","easingFunc","schedule","restart","arg","HIGHLIGHT_ACTION","handleHighlight","UNHIGHLIGHT_ACTION","handleUnhighlight","_createPolyline","polylineProto","_updateCommonStl","hoverLineStyle","legendSelectActionHandler","selectedMap","isToggleSelect","legendData","isItemSelected","cellWidth","cellHeight","dayCount","SingleAxis","_adjustAxis","_updateAxisTransform","coordBase","extentSum","HeatmapLayer","getIsInPiecewiseRange","dataSpan","getIsInContinuousRange","isGeoCoordSys","visualMapOfThisSeries","targetSeries","_incrementalDisplayable","_renderOnCartesianAndCalendar","_renderOnGeo","itemStyleQuery","hoverItemStyleQuery","labelQuery","hoverLabelQuery","inRangeVisuals","outOfRangeVisuals","hmLayer","_hmLayer","roamTransform","lng","lat","isInRange","getNormalizer","getColorMapper","curveTool","v3","v2DistSquare","intersectCurveCircle","curvePoints","radiusSquare","_t","nextDiff","tmp0","quadraticSubdivide","pts","pts2","__original","originalPoints","AxisPointerModel","shadowStyle","gridIndex","gridId","extraOption","pointerChecker","_opt","mousedownHandler","mousemoveHandler","mouseupHandler","mousewheelHandler","mousewheel","pinchHandler","controlType","disable","isDragging","isPinching","_pinching","notLeftMouse","checkKeyBinding","isTaken","roamController","v2Create","EPSILON_NUMERIC","THREE_SQRT","ONE_THIRD","_v0","_v1","_v2","onet","cubicDerivativeAt","t1","disc","K","discSqrt","Y1","Y2","T","ASqrt","cubicSubdivide","p01","p12","p23","p012","p123","p0123","d1","d2","divider","quadraticProjectPoint","CartesianAxisPointer","getCartesian","tooltipOptions","getAxisDimIndex","unitX","unitY","MARK_UNUSED","MARK_USED","Definable","tagNames","markLabel","domName","_zrId","_tagNames","_markLabel","_domName","nextId","getDefs","addDom","removeDom","getDoms","doms","tags","colorPaletteMixin","dataTask","dataTaskCount","dataTaskReset","wrapData","dataBeforeProcessed","autoSeriesName","themeSubType","hasClass","getTheme","getDefaultOption","fillDataTextStyle","newSeriesOption","task","getCurrentTask","formatArrayValue","vertially","setEachItem","dimHead","valStr","tooltipDims","formatSingleValue","tooltipDimLen","isValueArr","colorEl","coordDimToDataDim","pipeTask","getSeriesAutoName","nameArr","dataTaskProgress","onDataSelfChange","pipeline","getPipeline","agentStubMap","smoothSpline","smoothBezier","controlPoints","cp2","positiveBorderColorQuery","negativeBorderColorQuery","positiveColorQuery","negativeColorQuery","isLargeRender","colorP","getColor","colorN","borderColorP","getBorderColor","borderColorN","FunnelPiece","funnelPieceProto","opacityAccessPath","FunnelView","funnelPiece","GaugeSeries","dataOpt","offsetCenter","detail","dev","MapSeries","_fillOption","seriesNames","otherIndex","showLegendSymbol","dataRangeHoverLink","NodeHighlightPolicy","DESCENDANT","ANCESTOR","SELF","DEFAULT_SECTOR_Z","DEFAULT_TEXT_Z","SunburstPieceProto","getNodeColor","stateStyle","isNodeHighlighted","onHighlight","onDownplay","getLabelAttr","labelMinAngle","labelPadding","rotateType","stateAttr","getRootId","activeNode","policy","saveAsImageLang","SaveAsImage","$a","download","href","MouseEvent","msSaveOrOpenBlob","bstr","atob","u8arr","Uint8Array","blob","Blob","tab","write","evt","bubbles","cancelable","dispatchEvent","AXIS_DIMS","COORDS","isCoordSupported","coordType","createNameEach","attrs","capitalNames","capitalAttrs","nameObj","capital","createLinkedNodesFinder","forEachNode","forEachEdgeType","edgeIdGetter","sourceNode","existsLink","edgeType","absorb","processSingleNode","isNodeAbsorded","isLinked","hasLink","edgeId","themeRiverLayout","baseY0","timeDim","layerPoints","singleLayer","computeBaseline","baseLine","ky","layerIndex","layerNum","pointNum","sums","temp","colorList","getBorderLineDash","ATTR","dataZoomInfo","store","giveStore","theDataZoomId","theCoordId","dataZoomInfos","cleanStore","createController","controllerParams","mergeControllerParams","newRecord","onPan","onZoom","wrapAndDispatch","getRange","typePriority","type_true","type_move","type_false","type_undefined","oneType","validPayloadTypes","targetNodeId","getPathToRoot","viewPath","nodeDataIndex","r1","r2","r3","r4","SankeyShape","cpx1","cpy1","cpx2","cpy2","halfExtent","curvature","n1Layout","node1Model","dragX1","dragY1","n2Layout","node2Model","dragX2","dragY2","edgeLayout","dragX","dragY","_forceHelper","_circularLayoutHelper","graphSeries","preservedPoints","forceModel","initLayout","nodeDataExtent","edgeDataExtent","repulsion","edgeLength","forceInstance","oldStep","getNodeByIndex","stopped","ifAxisCrossZero","estimateLabelUnionRect","Cartesian2D","isAxisUsedInTheGrid","Grid","_coordsMap","_coordsList","_axesList","_initCartesian","gridProto","fixAxisOnZero","otherAxis","onZeroAxisIndex","canOnZeroToAxis","updateAxisTransform","axisExtentSum","_updateScale","ignoreContainLabel","axesList","adjustAxes","labelUnionRect","axesMapOnDim","coordList","getCartesians","_findConvertTarget","coordsList","axisPositionUsed","axesCount","createAxisCreator","addAxis","isCartesian2D","axesModels","findAxesModels","axesTypes","grids","returnFalse","createDom","newDom","newDomStyle","onselectstart","domBack","ctxBack","motionBlur","lastFrameAlpha","createBackBuffer","clearAll","clearColorGradientOrPattern","haveMotionBLur","__canvasGradient","fillRect","globalImageCache","newImageOrSrc","cachedImgObj","hostEl","cbPayload","__zrImageSrc","pendingWrap","pending","imageOnLoad","__cachedImgObj","_listComponent","_contentGroup","_backgroundEl","viewportSize","legendDrawnMap","selectMode","eachRawSeries","getSeriesByName","legendSymbolType","_createItem","dispatchSelectAction","dispatchHighlightAction","dispatchDownplayAction","symbolKeepAspect","itemIcon","legendGlobalTooltipModel","hitRect","legendIndex","dataName","CATEGORY_DEFAULT_VISUAL_INDEX","_normalizeData","normalizers","visualHandler","visualHandlers","_doMap","normalizeVisualRange","preprocessForPiecewise","preprocessForSpecifiedCategory","normalized","makeApplyVisual","isNormalized","doMapCategory","returnRGBArray","parsedVisual","linear","piecewise","getSpecifiedVisual","doMapFixed","colorHue","makePartialColorVisualHandler","colorSaturation","colorLightness","colorAlpha","makeDoMap","symbolCfg","doMapToArray","hasSpecialVisual","originIndex","categoryMap","visualArr","setVisualToOption","doNotNeedPair","applyValue","sourceExtent","addVisualHandler","isPrimary","newVisual","newVal","hasVisual","type1","type2","dependsOn","visualType1","visualType2","findClosestWhenOutside","possibleI","pieceValue","updatePossible","newAbs","isDomLevel2","addEventListener","MOUSE_EVENT_REG","calculate","defaultGetZrXY","layerX","layerY","clientX","clientY","isTouch","targetTouches","changedTouches","button","attachEvent","removeEventListener","detachEvent","stopPropagation","returnValue","DEFAULT_SMOOTH","ParallelView","_dataGroup","dataGroup","newDataIndex","addEl","updateElCommon","oldDataIndex","createLinePoints","isEmptyValue","active","inactive","UNDEFINED","ID_PREFIX","dataCtors","float","Float64Array","int","Int32Array","ordinal","number","CtorUint32Array","Uint32Array","CtorUint16Array","Uint16Array","getIndicesCtor","_rawCount","cloneChunk","originalChunk","TRANSFERABLE_PROPERTIES","CLONE_PROPERTIES","transferProperties","__wrappedMethods","_calculationInfo","dimensionInfos","invertedIndicesMap","dimensionName","_indices","_storage","_nameList","_idList","_optionModels","_visual","_itemVisuals","hasItemVisual","_itemLayouts","_graphicEls","_chunkSize","_chunkCount","_rawExtent","_approximateExtent","_dimensionsSummary","_invertedIndicesMap","listProto","prepareInvertedIndex","invertedIndices","getRawValueFromStore","chunkSize","chunkIndex","chunkOffset","chunk","getRawIndexWithoutIndices","getRawIndexWithIndices","_idDimIdx","normalizeDimensions","cloneListForMapAndSample","excludeDimensions","allDimensions","originalStorage","cloneDimStore","getInitialExtent","originalDimStore","newDimStore","getDimensionsOnCoord","dimensionsSummary","notProvider","_nameRepeatCount","_dimValueGetter","_initDataFromProvider","rawData","nameDimIdx","dimLen","dimensionInfoMap","idList","nameRepeatCount","chunkCount","lastChunkIndex","_nameDimIdx","itemId","DataCtor","resizeChunkArray","newStore","dimStorage","dimRawExtent","nameDim","nameDimChunk","getIndices","thisCount","buffer","chunkStore","rawIdx","dimStore","_getFast","dimData","initialExtent","dimExtent","currEnd","useRaw","setApproximateExtent","getMedian","dimDataArray","sortedDimDataArray","maxDistance","nearestIndices","contextCompat","dim0","selectRange","originalCount","quickFinished","chunkStorage","dimStorage2","chunkStorage2","val2","dimk","tmpRetValue","dataCount","retValue","rawExtentOnDim","sampleValue","sampleIndex","targetStorage","frameValues","frameSize","originalChunkIndex","originalChunkOffset","sampleFrameIdx","sampleChunkIndex","sampleChunkOffset","otherList","thisList","itemVisual","clearAllVisual","setItemDataAndSeriesIndex","injectFunction","originalMethod","v2Distance","interpolate","isLoop","segs","w2","w3","TYPE_DELIMITER","IS_CONTAINER","checkClassType","RootClass","mandatoryMethods","$constructor","superClass","ExtendedClass","classBase","classAttr","entity","makeContainer","registerClass","componentMainType","throwWhenNotFound","getClassesByMainType","getAllClassMainTypes","hasSubTypes","originalExtend","subtext","subtarget","subtextStyle","titleModel","subtextStyleModel","textBaseline","subText","subTextEl","sublink","groupRect","layoutOption","alignStyle","categoryNames","mapSymbolLayout","mapDataStatistic","createDataSelectAction","effectType","showEffectOn","rippleEffect","barItemStyle","coordinateSystemType","isHorizontalOrRadial","elementCreator","updateStyle","removeRect","removeSector","animateProperty","animateTarget","isRadial","fixedLineWidth","getLineWidth","signX","signY","isPolar","getBarItemStyle","rawLayout","LargePath","startPoint","__startPoint","valueIdx","__valueIdx","createParallelIfNeeded","mergeAxisOptionFromParallel","hasParallelSeries","axisOption","parallelOption","isPolyline","isLarge","lineCoords","segCount","totalCoordsCount","getLineCoordsCount","getLineCoords","_axisPointer","fixValue","updateAxisPointer","disposeAxisPointer","axisView","getAxisPointerClass","getAxisPointerModel","axisPointerClazz","clazz","compatibleEC2","ec2Types","transferItem","itemStyleEmphasis","labelNormal","excludeLabelAttr","geoCoordMap","Russia","United States","United States of America","_curve","Storage","HandlerProxy","useVML","painterCtors","ZRender","getInstance","delInstance","rendererType","vml","handerProxy","_needsRefresh","addRoot","delRoot","zLevel","triggerRendered","_needsRefreshHover","refreshHoverImmediately","clearAnimation","prepareLayoutBarSeries","makeColumnLayout","retrieveColumnLayout","axisDataLen","originalExtent","isBaseAxisAndHasBarSeries","barSeriesModels","adjustedScale","adjustScaleForOverflow","barsOnCurrentAxis","minOverflow","maxOverflow","totalOverFlow","oldRange","oldRangePercentOfNew","overflowBuffer","categoryTickStart","tick","realNumberScaleTicks","categoryScaleExtent","axisLabelModel","unrotatedSingleRect","singleRect","rotateTextRect","rotateRadians","boundingBox","plain","beforeWidth","beforeHeight","afterWidth","afterHeight","rotatedRect","_component","dataProcessorHandlers","_dataProcessorHandlers","_visualHandlers","_allHandlers","_stageTaskMap","performStageTasks","stageHandlers","needSetDirty","stageHandlerRecord","seriesTaskMap","overallTask","overallNeedDirty","stub","pipelineId","taskRecord","_pipelineMap","pCtx","progressiveEnabled","__idxInPipeline","blockIndex","threshold","pipelineMap","stageTaskMap","createSeriesStageTask","createOverallStageTask","__block","seriesTaskPlan","seriesTaskReset","seriesTaskCount","useClearVisual","isVisual","isLayout","removeKey","overallTaskReset","overallProgress","createStub","stubReset","stubOnDirty","agent","getSeries","upstreamContext","stubProgress","resetDefines","makeSeriesTaskProgress","singleSeriesTaskProgress","resetDefineIdx","resetDefine","detectSeriseType","legacyFunc","ecModelMock","apiMock","mockMethods","cond","EffectPolyline","_lastFrame","_lastFramePercent","effectPolylineProto","accLenArr","_offsets","_length","offsets","PolarAxisPointer","coordValue","getLabelPosition","newSnapshot","snapshot","_buildAxes","_buildSplitLineAndArea","axisBuilders","showSplitLine","showSplitArea","splitLineColors","splitAreaColors","ticksRadius","getColorIndex","realSplitNumber","axesTicksPoints","prevPoints","areaOrLine","areaOrLineColorList","themeRiverVisual","boxLayoutMixin","themeModel","newCptOption","optList","Class","getDependencies","deps","enableSubTypeDefaulter","enableTopologicalTravel","TransformDummy","_roamTransformable","_center","_zoom","rawTransform","centerCoord","_updateCenterAndZoom","getDefaultCenter","rawRect","rawTransformMatrix","defaultCenter","roamTransformable","_rawTransform","_layoutHelper","_oldTree","updateNode","getTreeNodeStyle","sourceSymbolEl","sourceLayout","sourceOldLayout","rawX","__radialOldRawX","rawY","__radialOldRawY","targetLayout","__radialRawX","__radialRawY","isLeft","rootLayout","__edge","getEdgeShape","radialCoor1","radialCoor2","radialCoor3","radialCoor4","BUILTIN_OBJECT","[object Function]","[object RegExp]","[object Date]","[object Error]","[object CanvasGradient]","[object CanvasPattern]","[object Image]","[object Canvas]","TYPED_ARRAY","[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]","objToString","Object","arrayProto","nativeForEach","forEach","nativeFilter","nativeSlice","nativeMap","nativeReduce","typeStr","isPrimitive","isDom","targetProp","sourceProp","isBuiltInObject","targetAndSources","overlay","baseClazz","clazzPrototype","F","memo","find","ownerDocument","value1","value2","primitiveKey","HashMap","isArr","thisMap","visit","concatArray","newArray","eachAfter","eachBefore","generateNodeKey","_directed","_nodesMap","_edgesMap","graphProto","Node","inEdges","outEdges","hostGraph","Edge","isDirected","nodesMap","edgesMap","getEdge","breadthFirstTraverse","startNode","__visited","queue","currentNode","otherNode","inDegree","outDegree","createGraphDataProxyMixin","hostName","getGraphicEl","LineGroup","_ctor","lineDrawProto","doAdd","lineNeedsDraw","doUpdate","oldLineData","newLineData","itemEl","isPointNaN","_lineData","_clearIncremental","_incremental","_targetList","_selectTargetMap","targetMap","select","unSelect","toggleSelected","nameRotate","nameTruncate","deduplication","alignWithLabel","logBase","idxMap","Uint32Arr","Float64Arr","compatEc2","coords","fromName","toName","LinesSeries","_processFlatCoordsArray","_flatCoords","flatCoords","_flatCoordsOffset","flatCoordsOffset","_getCoordsFromItemModel","startOffset","coordsOffsetAndLenStorage","coordsStorage","coordsCursor","offsetCursor","effect","trailLength","autoPositionValues","targetValue","visualCluster","visualObj","visualMapping","actionInfos","quadraticIn","quadraticOut","quadraticInOut","cubicIn","cubicOut","cubicInOut","quarticIn","quarticOut","quarticInOut","quinticIn","quinticOut","quinticInOut","sinusoidalIn","sinusoidalOut","sinusoidalInOut","exponentialIn","exponentialOut","exponentialInOut","circularIn","circularOut","circularInOut","elasticIn","asin","elasticOut","elasticInOut","backIn","backOut","backInOut","bounceIn","bounceOut","bounceInOut","_mapDraw","dataViewLang","BLOCK_SPLITER","ITEM_SPLITER","groupSeries","seriesGroupByCategoryAxis","otherSeries","meta","assembleSeriesWithCategoryAxis","tables","valueAxisDim","headers","columns","items","assembleOtherSeries","vals","getContentFromModel","isTSVFormat","itemSplitRegex","parseTSVContents","tsv","tsvLines","header","parseListContents","hasName","parseContents","blockMetaList","blocks","blockMeta","axisKey","DataView","tryMergeDataOption","readOnly","optionToContent","contentToOption","textareaColor","textareaBorderColor","buttonColor","buttonTextColor","viewMain","textarea","htmlOrDom","buttonContainer","buttonStyle","closeButton","refreshButton","keyCode","selectionStart","selectionEnd","newSeriesOptList","needDrawText","renderText","getStroke","polarOptArr","polarNotRadar","polarOpt","radarIndex","foundAxisModel","layoutBox","boxLayoutParams","positions","bbWidth","bbHeight","viewCoordSys","graphicOption","elements","GraphicModel","parentId","_elOptionsToUpdate","existList","flattenedList","_flatten","mappingResult","elOptionsToUpdate","resultItem","newElOption","setKeyInfoToNewElOption","mergeNewElOptionToExist","setLayoutInfoToExist","$action","optionList","parentOption","useElOptionsToUpdate","els","targetElParent","__ecGraphicId","removeEl","existEl","existElParent","getCleanedElOption","isSetLoc","isSet","existElOption","newElParentOption","newElOptCopy","existItem","_elMap","_lastGraphicModel","graphicModel","_updateElements","_relocate","rootGroup","elOptionCleaned","__ecGraphicWidth","__ecGraphicHeight","elOptions","parentEl","containerInfo","bounding","straightLineProto","bezierCurveProto","isLine","pointAt","tangentAt","defaultSymbolType","hasCallback","itemSymbolType","itemSymbolSize","itemSymbolKeepAspect","dataZoomLang","DATA_ZOOM_ID_BASE","DataZoom","_brushController","_onBrush","_isZoomActive","updateZoomBtnStatus","updateBackBtnStatus","nextActive","dataZoomSelectActive","retrieveAxisSetting","zoomActive","include","makePanelOpts","xAxisDeclared","yAxisDeclared","matchOutputRanges","coordRange","setBatch","findDataZoom","found","dzModel","dataZoomOpts","dataZoomOpt","addForAxis","axisIndicesName","givenAxisIndices","forEachComponent","$fromToolbox","SHADOW_PROPS","coordSysLists","coordIndex","LinePath","SYMBOL_CATEGORIES","makeSymbolTypeKey","symbolCategory","setLinePoints","updateSymbolAndLabelBeforeLineUpdate","symbolFrom","symbolTo","invScale","toPos","tangent","__position","halfPercent","__verticalAlign","__textAlign","_createLine","lineProto","visualOpacity","defaultLabelColor","rawVal","normalText","emphasisText","labelStyle","linePath","globalDefault","OPTION_INNER_KEY","_optionManager","baseOption","mountOption","initBase","timelineOption","getTimelineOption","mediaOptions","getMediaOption","mediaOption","componentsMap","newCptTypes","visitComponent","newCptOptionList","determineSubType","getComponentsByTypes","ComponentModelClass","createSeriesIndices","componentOption","topologicalTravel","_seriesIndicesMap","_seriesIndices","cpts","isIdArray","cpt","isNameArray","filterBySubType","queryCond","getQueryCond","doFilter","q","indexAttr","idAttr","nameAttr","queryResult","oneSeries","assertSeriesInitialized","rawSeriesIndex","filterSeries","filteredSeries","componentTypes","isNotTargetSeries","seiresIndex","mergeTheme","notMergeColorLayer","colorLayer","themeItem","existComponent","updateMarkerLayout","markPointModel","mpModel","symbolDrawMap","CalendarModel","defaultKeyGetter","oldKeyGetter","newKeyGetter","_old","_new","_oldKeyGetter","_newKeyGetter","initIndexMap","keyArr","keyGetterName","existence","_add","_remove","oldDataIndexMap","newDataIndexMap","oldDataKeyArr","newDataKeyArr","computeNodeValues","filteredNodes","iterations","layoutSankey","computeNodeBreadths","computeNodeDepths","computeEdgeDepths","getEdgeValue","remainEdges","indegreeArr","zeroIndegrees","nextNode","kx","indexEdge","nodeIndex","moveSinksRight","scaleNodeBreadths","nodesByBreadth","ascending","initializeNodeDepth","resolveCollisions","relaxRightToLeft","relaxLeftToRight","kyArray","ky0","nodeDy","edgeDy","ascendingDepth","nodeY","weightedTarget","weightedSource","ascendingTargetDepth","ascendingSourceDepth","GraphSeries","_categoriesData","_updateCategoriesData","categoriesModels","_categoriesModels","categoryIdx","categoryModel","edgeLabelModel","fakeSeriesModel","emphasisEdgeLabelModel","emphasisFakeSeriesModel","edgeGetParent","sourceName","targetName","focusNodeAdjacency","circular","rotateLabel","layoutAnimation","edgeSymbol","edgeSymbolSize","edgeLabel","roam","nodeScaleRatio","stackResultDim","echartsAPIList","chartInstance","parallelAxisModel","_axisTickLabelBuilder","NORMALIZED_EXTENT","fixExtentWithBands","nTick","fixOnBandTicksCoords","ticksLen","ticksItem","getTickModel","_updateData","hasSelected","potentialData","availableNames","isPotential","_availableNames","borderRadius","sysDims","dataDimNameMap","coordDimNameMap","dimCount","getDimCount","dimDefItem","userDimName","validDataDims","resultDimIdx","applyDim","availDimIdx","sysDimItem","sysDimIndex","sysDimItemDimsDef","sysDimItemOtherDims","sysDimItemDimsDefItem","generateCoordCount","fromZero","genName","optDimCount","pointsConverter","svgURI","createElementNS","fetch","fetchers","ORIGIN_METHOD","RATE","THROTTLE_TYPE","debounce","currCall","lastCall","lastExec","timer","thisDelay","thisDebounce","debounceDelay","fnAttr","originFn","lastThrottleType","lastRate","markerModelKey","subTypeDefaulters","defaulter","componentTypeMain","dependencyGetter","makeDepndencyGraph","fullNameList","noEntryList","createDependencyGraphItem","originalDeps","availableDeps","getAvailableDependencies","entryCount","dependentName","predecessor","thatItem","successor","dep","targetNameList","targetNameSet","currComponentType","currVertex","isInTargetNameSet","removeEdgeAndAdd","removeEdge","succComponentType","platform","gradientColor","animationEasingUpdate","shadowTemp","orignalBrush","modified","roundNumber","_intervalPrecision","getIntervalPrecision","intervalScaleGetTicks","intervalScaleNiceTicks","intervalPrecision","niceTickExtent","roundingErrorFix","mathLog","LogScale","_originalScale","originalScale","powVal","__fixMin","fixRoundingError","__fixMax","err","originalVal","radarLayout","_needCollect","needCollect","_deduplication","createByAxisModel","dedplication","getOrCreateMap","colorUtil","markAreaTransform","maModel","lt","rb","ltCoord","rbCoord","markAreaFilter","getSingleMarkerEndPoint","dimPermutations","areaData","markAreaModel","areaGroupMap","polygonGroup","__data","ToolboxModel","showTitle","containLabel","ITEM_STYLE_NORMAL","seriesItemStyleModel","levelItemStyles","travelTree","designatedVisual","viewRootAncestors","nodeModel","nodeLayout","isInView","thisNodeColor","nodeItemStyleModel","levelItemStyle","buildVisuals","borderColorSaturation","calculateColor","calculateBorderColor","buildVisualMapping","childVisual","visualName","getValueVisualDefine","rangeVisual","getRangeVisual","visualMin","visualMax","colorMappingBy","__drColorMappingBy","childVisuals","mappingType","mapIdToIndex","hasXOrY","hasXAndY","markerTypeCalculatorWithExtent","otherDataDim","targetDataDim","otherCoordIndex","targetCoordIndex","coordArr","calcDataDim","markerTypeCalculator","baseDataDim","dataDimToCoordDim","_viewRoot","clipWindow","squareRatio","leafDepth","drillDownIcon","zoomToNodeRatio","upperLabel","gapWidth","visualDimension","visibleMin","childrenVisibleMin","completeTreeValue","setDefault","setLayoutInfo","idIndexMap","_idIndexMap","_idIndexMapCount","childValue","thisValue","globalColorList","hasColorDefine","modelColor","level0","safeLimit","mapLocation","largeLayout","unitAngle","x12","y12","_a","_b","_s","adjustEdge","nodeOpacityPath","lineOpacityPath","getItemOpacity","opacityPath","fadeOutItem","opacityRatio","fadeInItem","_lineDraw","_firstRender","_nodeScaleRatio","_getNodeGlobalScale","_updateNodeAndLinkScale","_layoutTimeout","_startForceLayoutIteration","_layouting","__focusNodeAdjacency","__unfocusNodeAdjacency","edgeDataIndex","circularRotateLabel","adjacentEdge","unfocusNodeAdjacency","nodeScale","groupScale","groupZoom","roamZoom","lb","rt","maxX","maxY","ax0","ax1","ay0","ay1","bx0","bx1","by0","by1","msRequestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","seiresModelMap","__paletteScope","dataAll","filteredIdx","singleDataColor","maskColor","mask","animateShape","valueStart","getValueStart","baseDataOffset","stackedData","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","factory","msg","dataBackgroundColor","updateDom","clipPathEl","cloneNode","_textDom","v2Min","v2Max","v2Scale","v2Add","v2Clone","v2Sub","constraint","prevPoint","nextPoint","cps","d0","retrieveValue","PATH_BORDER_WIDTH","PATH_GAP_WIDTH","PATH_UPPER_LABEL_SHOW","PATH_UPPER_LABEL_HEIGHT","ecWidth","ecHeight","rootRect","viewAbovePath","rootSize","estimateRootSize","viewRootLayout","squarify","upperHeight","calculateRootPosition","prunning","hideChildren","thisLayout","halfGapWidth","upperLabelHeight","getUpperLabelHeight","layoutOffset","layoutOffsetUpper","totalArea","initChildren","rowFixedLength","best","score","worst","orderBy","overLeafDepth","statistic","filterByThreshold","isLeafRoot","orderedChildren","deletePoint","areaMax","areaMin","squareArea","idx0WhenH","idx1WhenH","rowOtherLength","rowLen","wh1","remain","modWH","wh0","currNode","defaultSize","viewArea","currNodeValue","defaultPosition","targetCenter","clipRect","nodeInViewAbovePath","isAboveViewRoot","childClipRect","STACK_PREFIX","LARGE_BAR_MIN_WIDTH","widthAndOffsets","doCalBarWidthAndOffset","isOnCartesian","isInLargeMode","seriesInfoList","seriesInfo","lastStackCoordsOrigin","isValueAxisH","getValueAxisStart","valueAxisHorizontal","valueDimIdx","valuePair","AXIS_TYPES","BaseAxisModelClass","axisTypeDefaulter","extraDefaultOption","__ordinalMeta","linkedNodesFinder","effectedModels","lineContain","quadraticContain","LargeLineShape","findDataIndex","LargeLineDraw","largeLineProto","lineEl","_setCommon","isIncremental","RadarSeries","Triangle","Diamond","Pin","tanX","tanY","cpLen","cpLen2","Arrow","symbolCtors","roundRect","square","circle","diamond","pin","arrow","triangle","symbolShapeMakers","symbolBuildProxies","proxySymbol","symbolPathSetColor","innerColor","symbolStyle","symbolShape","__isEmptyBrush","linesLayout","linesVisual","PointerPath","parsePosition","formatLabel","GaugeView","_renderMain","axisLineModel","angleRangeSpan","prevEndAngle","axisLineWidth","_renderTicks","_renderPointer","_renderTitle","_renderDetail","minVal","maxVal","subSplitNumber","splitLineLen","subStep","splitLineStyle","tickLineStyle","tickLine","valueExtent","detailModel","funnelLayout","resourceKey","userKey","getStore","uKey","mapModel","_renderSymbols","fullData","fullIndex","polygonGroups","__mapOriginalZ2","roundRectHelper","VALID_TEXT_ALIGN","VALID_TEXT_VERTICAL_ALIGN","normalizeStyle","renderRichText","renderPlainText","setCtx","__textCotentBlock","boxPos","getBoxPosition","baseX","baseY","applyTextRotation","boxY","needDrawBg","needDrawBackground","boxX","drawBackground","getTextXForPadding","getFill","strokeText","fillText","drawRichText","lineTop","tokenCount","usedWidth","lineXLeft","lineXRight","placeToken","isPlainBg","onBgImageLoaded","blockHeiht","LargeSymbolDraw","_updateSymbolDraw","_finished","opacityMap","itemOpacity","comma","imageTransformPrefix","Z2","ZLEVEL_BASE","Z_BASE","initRootElStyle","coordsize","coordorigin","encodeHtmlAttribute","String","rgb2Str","append","getZIndex","setColorAndOpacity","getColorAndAlpha","updateFillNode","zrEl","gradientType","focus","expansion","cs1","cs2","colorAndAlphaList","colorAndAlpha","color1","color2","opacity1","opacity2","focusposition","updateStrokeNode","dashstyle","updateFillAndStroke","vmlEl","isFill","_vmlEl","needTransform","strokeEl","weight","zIndex","removeRectText","appendRectText","isImage","ow","oh","_imageSrc","_imageWidth","_imageHeight","imageRuntimeStyle","runtimeStyle","oldRuntimeWidth","oldRuntimeHeight","hasCrop","vmlElStyle","hasRotation","transformFilter","imageEl","_imageEl","cropEl","_cropEl","imageELStyle","tmpImage","overflow","cropElStyle","filterStr","textMeasureEl","DEFAULT_STYLE_NORMAL","fontStyleCache","fontStyleCacheCount","MAX_FONT_CACHE_SIZE","fontEl","getFontStyle","fontString","variant","fontVariant","family","body","ex","offsetWidth","fromTextEl","textPathEl","skewEl","textVmlEl","_textVmlEl","textpathok","textVmlElStyle","string","getLineSelectors","lineIntersectPolygon","inLineRange","layoutRange","lx","ly","l2x","l2y","lineIntersect","a1x","a1y","a2x","a2y","b1x","b1y","b2x","b2y","determinant","nearZero","namenda","miu","v4","showContent","alwaysShowContent","displayMode","confine","showDelay","hideDelay","VISUAL_PRIORITY","resultVisual","concreteDim","shapeCompareFunc","_roots","_displayList","_displayListLen","includeIgnore","updateDisplayList","_updateAndAddDisplayable","userSetClipPath","currentClipPath","parentClipPath","_renderList","someVectorAt","isTangent","DATA_NAME_INDEX","ThemeRiverSeries","fixData","rawDataLength","dataByName","layData","dataList","largestLayer","timeValue","keyIndex","lenCount","indexArr","comparer","index1","index2","nearestIdx","theValue","htmlName","htmlValue","_updateLineDraw","isSvg","_lastZlevel","_showEffect","hasEffect","_hasEffet","_isPolyline","DEFAULT_TOOLBOX_BTNS","isNew","brushComponents","brushComponentSpecifiedBtns","brushOpt","tbs","toolboxFeature","toolboxBrush","brushTypes","removeDuplicate","flag","animationUtil","DRAG_THRESHOLD","PATH_LABEL_NOAMAL","PATH_LABEL_EMPHASIS","PATH_UPPERLABEL_NORMAL","PATH_UPPERLABEL_EMPHASIS","Z_BG","Z_CONTENT","getItemStyleEmphasis","getItemStyleNormal","createStorage","_breadcrumb","_state","thisStorage","reRoot","rootNodeGroup","nodeGroup","_giveContainerGroup","renderResult","_doRender","renderFinally","_doAnimation","_resetController","_renderBreadcrumb","thisTree","oldTree","lastsForAnimation","oldStorage","willInvisibleEls","renderNode","willDeleteEls","clearStorage","thisViewChildren","oldViewChildren","parentGroup","sameTree","thisNode","storageName","delEls","__tmWillDelete","animationWrap","__tmNodeWidth","__tmNodeHeight","targetX","targetY","old","fadein","_clearController","findTarget","_zoomToNode","bgEl","thisWidth","thisHeight","thisInvisible","thisRawIndex","oldRawIndex","isParent","itemStyleNormalModel","itemStyleEmphasisModel","giveGraphic","bg","renderContent","useUpperLabel","visualBorderColor","emphasisBorderColor","upperLabelWidth","prepareText","__tmWillVisible","upperLabelRect","iconChar","emphasisLabelModel","lasts","prepareAnimationWhenHasOld","calculateZ","__tmDepth","__tmStorageName","prepareAnimationWhenNoOld","lastCfg","parentOldX","parentOldY","parentOldBg","zInLevel","zb","brushHelper","elementList","fromAxisAreaSelect","areaWidth","builderOpt","_refreshBrushController","extentLen","getCoverInfoList","coverInfoList","coverInfo","parallelAxisId","componentProto","splitList","getAxisLineShape","rExtent","getRadiusIdx","fixAngleOverlap","firstItem","ticksAngles","_axisLine","_axisTick","tickAngleItem","_axisLabel","commonLabelModel","labelTextAlign","labelTextVerticalAlign","prevAngle","format","ecHelper","parseGeoJSON","_List","_Model","_Axis","_env","ecUtil","adjustSingleSide","shiftDown","shiftUp","changeX","isDownList","lastDeltaX","deltaY","deltaX","lastY","upList","downList","avoidOverlap","labelLayoutList","leftList","rightList","hasLabelRotate","labelLineLen2","ariaModel","seriesCnt","ariaLabel","maxDataCnt","maxSeriesCnt","displaySeriesCnt","getTitle","getConfig","seriesLabels","seriesLabel","seriesTpl","getSeriesTypeName","displayCnt","dataLabels","keyValues","userConfig","hasShadow","_shadowDom","_shadowDomId","domChild","blur","stdDx","stdDy","stdDeviation","selfBuilderAttr","SingleAxisView","animatingShape","pathSplitted","_animateToShallow","objShallow","propertyCount","COORD_CONVERTS","INCLUDE_FINDER_MAIN_TYPES","targetInfoList","_targetInfoList","foundCpts","targetInfoBuilders","builder","formatMinMax","setOutputRanges","coordRanges","coordConvert","__rangeOffset","diffProcessor","xyMinMax","findTargetInfo","coordSyses","rangeOffset","getScales","getDefaultBrushType","getPanelRect","areaPanelId","targetInfoMatchers","xAxisModels","yAxisModels","gridModels","gridModelMap","xAxesHas","yAxesHas","cartesians","panelRectBuilder","geoModels","axisConvert","rangeOrCoordRange","xminymin","xmaxymax","axisNameIndex","axisDiffProcessor","refer","scales","xyMinMaxCurr","xyMinMaxOrigin","sizeCurr","sizeOrigin","CandlestickSeries","animationUpdate","decode","json","UTF8Encoding","encodeScale","UTF8Scale","coordinates","encodeOffsets","coordinate","decodePolygon","c2","prevX","prevY","featureObj","pieLayout","updateController","modelId","$from","labelDims","IRRELEVANT_EXCLUDES","targetCoordSysModel","colorAll","pathContain","pathProxyForDraw","hasFillGradient","hasStrokeGradient","hasFillPattern","hasStrokePattern","_fillGradient","_strokeGradient","ctxLineDash","shapeCfg","needsUpdateRect","rectWithStroke","_rectWithStroke","lineScale","Sub","defaultShape","thisShape","Cartesian","axisX","axisY","reserved","xScale","yScale","xAxisExtent","yAxisExtent","_dragStart","_drag","_dragEnd","draggingTarget","_draggingTarget","dropTarget","lastDropTarget","_dropTarget","rootDepth","renderRollupNode","rPerLevel","rStart","rEnd","siblingAngle","isAsc","sortOrder","axisTrigger","collect","realIndex","paramsSet","reals","fakeValue","layoutInput","rParam","EFFECT_RIPPLE_NUMBER","updateRipplePath","rippleGroup","effectCfg","ripplePath","effectSymbolProto","stopEffectAnimation","startEffectAnimation","effectOffset","rippleScale","updateEffectAnimation","oldEffectCfg","_effectCfg","DIFFICULT_PROPS","BOOST_SIZE_THRESHOLD","LargeSymbolPath","symbolProxy","symbolProxyShape","canBoost","largeSymbolProto","endIndex","byteOffset","extrudeShadow","_traversalHelper","sep","commonLayout","coorX","coorY","finalCoor","QUERY_REG","_timelineOptions","_mediaList","_mediaDefault","_currentMediaIndices","_optionBackup","_newBaseOption","parseRawOption","mediaDefault","timelineOptions","mediaList","media","singleMedia","preProcess","applyMediaQuery","realMap","aspectratio","applicatable","matched","operator","realAttr","real","expect","indicesEquals","indices1","indices2","oldOption","newCptOpt","oldCptOpt","oldOptionBackup","newParsedOption","isRecreate","optionBackup","dimAxisMapper","_axes","_dimList","_dataCoordConvert","input","dimList","_dimName","_axisIndex","_valueWindow","_percentWindow","_minMaxSpan","_dataZoomModel","calculateDataExtent","seriesExtent","fixExtentByAxis","setAxisModel","isRestore","percentWindow","useOrigin","setMinMaxSpan","valueSpan","getOtherAxisModel","coordSysIndexName","foundOtherAxisModel","isCartesian","otherAxisModel","boundValue","boundPercent","dataWindow","leftOut","rightOut","thisHasValue","thisLeftOut","thisRightOut","isInWindow","originalLarge","originalProgressive","seriesInvolved","collectAxesInfo","collectSeriesInfo","linksOption","linkGroups","axesInfoInCoordSys","baseTooltipModel","saveTooltipAxisInfo","triggerAxis","cross","tooltipAxes","fromTooltip","axisPointerShow","isHandleTrigger","makeAxisPointerModel","groupIndex","getLinkGroupIndex","tooltipAxisPointerModel","volatileOption","field","labelOption","tooltipAxisPointerLabelShow","seriesTooltipTrigger","seriesTooltipShow","linkOption","checkPropInLink","linkPropValue","axisPropValue","GRADIENT_LEVELS","Heatmap","_gradientPixels","colorFunc","_getBrush","gradientInRange","_getGradient","gradientOutOfRange","imageData","getImageData","pixels","pixelLen","diffOpacity","gradientOffset","putImageData","brushCanvas","_brushCanvas","gradientPixels","pixelsSingleState","Uint8ClampedArray","TOUCH_CLICK_DELAY","mouseHandlerNames","touchHandlerNames","pointerEventNames","pointerdown","pointerup","pointermove","pointerout","pointerHandlerNames","nm","eventNameFix","processGesture","gestureMgr","_gestureMgr","setTouchTimer","instance","_touching","_touchTimer","domHandlers","touchstart","touchmove","touchend","click","isPointerFromTouch","pointerType","initDomHandler","makeMouseHandler","HandlerDomProxy","mountHandlers","handlerDomProxyProto","processedMapType","mapSymbolOffsets","subMapSeries"],"mappings":"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","file":"0.7c2416b4.js","sourcesContent":["var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _number = require(\"./number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar formatUtil = require(\"./format\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Layout helpers for each component positioning\nvar each = zrUtil.each;\n/**\n * @public\n */\n\nvar LOCATION_PARAMS = ['left', 'right', 'top', 'bottom', 'width', 'height'];\n/**\n * @public\n */\n\nvar HV_NAMES = [['width', 'left', 'right'], ['height', 'top', 'bottom']];\n\nfunction boxLayout(orient, group, gap, maxWidth, maxHeight) {\n  var x = 0;\n  var y = 0;\n\n  if (maxWidth == null) {\n    maxWidth = Infinity;\n  }\n\n  if (maxHeight == null) {\n    maxHeight = Infinity;\n  }\n\n  var currentLineMaxSize = 0;\n  group.eachChild(function (child, idx) {\n    var position = child.position;\n    var rect = child.getBoundingRect();\n    var nextChild = group.childAt(idx + 1);\n    var nextChildRect = nextChild && nextChild.getBoundingRect();\n    var nextX;\n    var nextY;\n\n    if (orient === 'horizontal') {\n      var moveX = rect.width + (nextChildRect ? -nextChildRect.x + rect.x : 0);\n      nextX = x + moveX; // Wrap when width exceeds maxWidth or meet a `newline` group\n      // FIXME compare before adding gap?\n\n      if (nextX > maxWidth || child.newline) {\n        x = 0;\n        nextX = moveX;\n        y += currentLineMaxSize + gap;\n        currentLineMaxSize = rect.height;\n      } else {\n        // FIXME: consider rect.y is not `0`?\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n      }\n    } else {\n      var moveY = rect.height + (nextChildRect ? -nextChildRect.y + rect.y : 0);\n      nextY = y + moveY; // Wrap when width exceeds maxHeight or meet a `newline` group\n\n      if (nextY > maxHeight || child.newline) {\n        x += currentLineMaxSize + gap;\n        y = 0;\n        nextY = moveY;\n        currentLineMaxSize = rect.width;\n      } else {\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n      }\n    }\n\n    if (child.newline) {\n      return;\n    }\n\n    position[0] = x;\n    position[1] = y;\n    orient === 'horizontal' ? x = nextX + gap : y = nextY + gap;\n  });\n}\n/**\n * VBox or HBox layouting\n * @param {string} orient\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\n\nvar box = boxLayout;\n/**\n * VBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar vbox = zrUtil.curry(boxLayout, 'vertical');\n/**\n * HBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar hbox = zrUtil.curry(boxLayout, 'horizontal');\n/**\n * If x or x2 is not specified or 'center' 'left' 'right',\n * the width would be as long as possible.\n * If y or y2 is not specified or 'middle' 'top' 'bottom',\n * the height would be as long as possible.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.x]\n * @param {number|string} [positionInfo.y]\n * @param {number|string} [positionInfo.x2]\n * @param {number|string} [positionInfo.y2]\n * @param {Object} containerRect {width, height}\n * @param {string|number} margin\n * @return {Object} {width, height}\n */\n\nfunction getAvailableSize(positionInfo, containerRect, margin) {\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var x = parsePercent(positionInfo.x, containerWidth);\n  var y = parsePercent(positionInfo.y, containerHeight);\n  var x2 = parsePercent(positionInfo.x2, containerWidth);\n  var y2 = parsePercent(positionInfo.y2, containerHeight);\n  (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n  (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n  (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n  (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  return {\n    width: Math.max(x2 - x - margin[1] - margin[3], 0),\n    height: Math.max(y2 - y - margin[0] - margin[2], 0)\n  };\n}\n/**\n * Parse position info.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width]\n * @param {number|string} [positionInfo.height]\n * @param {number|string} [positionInfo.aspect] Aspect is width / height\n * @param {Object} containerRect\n * @param {string|number} [margin]\n *\n * @return {module:zrender/core/BoundingRect}\n */\n\n\nfunction getLayoutRect(positionInfo, containerRect, margin) {\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var left = parsePercent(positionInfo.left, containerWidth);\n  var top = parsePercent(positionInfo.top, containerHeight);\n  var right = parsePercent(positionInfo.right, containerWidth);\n  var bottom = parsePercent(positionInfo.bottom, containerHeight);\n  var width = parsePercent(positionInfo.width, containerWidth);\n  var height = parsePercent(positionInfo.height, containerHeight);\n  var verticalMargin = margin[2] + margin[0];\n  var horizontalMargin = margin[1] + margin[3];\n  var aspect = positionInfo.aspect; // If width is not specified, calculate width from left and right\n\n  if (isNaN(width)) {\n    width = containerWidth - right - horizontalMargin - left;\n  }\n\n  if (isNaN(height)) {\n    height = containerHeight - bottom - verticalMargin - top;\n  }\n\n  if (aspect != null) {\n    // If width and height are not given\n    // 1. Graph should not exceeds the container\n    // 2. Aspect must be keeped\n    // 3. Graph should take the space as more as possible\n    // FIXME\n    // Margin is not considered, because there is no case that both\n    // using margin and aspect so far.\n    if (isNaN(width) && isNaN(height)) {\n      if (aspect > containerWidth / containerHeight) {\n        width = containerWidth * 0.8;\n      } else {\n        height = containerHeight * 0.8;\n      }\n    } // Calculate width or height with given aspect\n\n\n    if (isNaN(width)) {\n      width = aspect * height;\n    }\n\n    if (isNaN(height)) {\n      height = width / aspect;\n    }\n  } // If left is not specified, calculate left from right and width\n\n\n  if (isNaN(left)) {\n    left = containerWidth - right - width - horizontalMargin;\n  }\n\n  if (isNaN(top)) {\n    top = containerHeight - bottom - height - verticalMargin;\n  } // Align left and top\n\n\n  switch (positionInfo.left || positionInfo.right) {\n    case 'center':\n      left = containerWidth / 2 - width / 2 - margin[3];\n      break;\n\n    case 'right':\n      left = containerWidth - width - horizontalMargin;\n      break;\n  }\n\n  switch (positionInfo.top || positionInfo.bottom) {\n    case 'middle':\n    case 'center':\n      top = containerHeight / 2 - height / 2 - margin[0];\n      break;\n\n    case 'bottom':\n      top = containerHeight - height - verticalMargin;\n      break;\n  } // If something is wrong and left, top, width, height are calculated as NaN\n\n\n  left = left || 0;\n  top = top || 0;\n\n  if (isNaN(width)) {\n    // Width may be NaN if only one value is given except width\n    width = containerWidth - horizontalMargin - left - (right || 0);\n  }\n\n  if (isNaN(height)) {\n    // Height may be NaN if only one value is given except height\n    height = containerHeight - verticalMargin - top - (bottom || 0);\n  }\n\n  var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n  rect.margin = margin;\n  return rect;\n}\n/**\n * Position a zr element in viewport\n *  Group position is specified by either\n *  {left, top}, {right, bottom}\n *  If all properties exists, right and bottom will be igonred.\n *\n * Logic:\n *     1. Scale (against origin point in parent coord)\n *     2. Rotate (against origin point in parent coord)\n *     3. Traslate (with el.position by this method)\n * So this method only fixes the last step 'Traslate', which does not affect\n * scaling and rotating.\n *\n * If be called repeatly with the same input el, the same result will be gotten.\n *\n * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width] Only for opt.boundingModel: 'raw'\n * @param {number|string} [positionInfo.height] Only for opt.boundingModel: 'raw'\n * @param {Object} containerRect\n * @param {string|number} margin\n * @param {Object} [opt]\n * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n * @param {Array.<number>} [opt.boundingMode='all']\n *        Specify how to calculate boundingRect when locating.\n *        'all': Position the boundingRect that is transformed and uioned\n *               both itself and its descendants.\n *               This mode simplies confine the elements in the bounding\n *               of their container (e.g., using 'right: 0').\n *        'raw': Position the boundingRect that is not transformed and only itself.\n *               This mode is useful when you want a element can overflow its\n *               container. (Consider a rotated circle needs to be located in a corner.)\n *               In this mode positionInfo.width/height can only be number.\n */\n\n\nfunction positionElement(el, positionInfo, containerRect, margin, opt) {\n  var h = !opt || !opt.hv || opt.hv[0];\n  var v = !opt || !opt.hv || opt.hv[1];\n  var boundingMode = opt && opt.boundingMode || 'all';\n\n  if (!h && !v) {\n    return;\n  }\n\n  var rect;\n\n  if (boundingMode === 'raw') {\n    rect = el.type === 'group' ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0) : el.getBoundingRect();\n  } else {\n    rect = el.getBoundingRect();\n\n    if (el.needLocalTransform()) {\n      var transform = el.getLocalTransform(); // Notice: raw rect may be inner object of el,\n      // which should not be modified.\n\n      rect = rect.clone();\n      rect.applyTransform(transform);\n    }\n  } // The real width and height can not be specified but calculated by the given el.\n\n\n  positionInfo = getLayoutRect(zrUtil.defaults({\n    width: rect.width,\n    height: rect.height\n  }, positionInfo), containerRect, margin); // Because 'tranlate' is the last step in transform\n  // (see zrender/core/Transformable#getLocalTransform),\n  // we can just only modify el.position to get final result.\n\n  var elPos = el.position;\n  var dx = h ? positionInfo.x - rect.x : 0;\n  var dy = v ? positionInfo.y - rect.y : 0;\n  el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n}\n/**\n * @param {Object} option Contains some of the properties in HV_NAMES.\n * @param {number} hvIdx 0: horizontal; 1: vertical.\n */\n\n\nfunction sizeCalculable(option, hvIdx) {\n  return option[HV_NAMES[hvIdx][0]] != null || option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null;\n}\n/**\n * Consider Case:\n * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n * through setOption or media query, using normal zrUtil.merge will cause\n * {right: 0} does not take effect.\n *\n * @example\n * ComponentModel.extend({\n *     init: function () {\n *         ...\n *         var inputPositionParams = layout.getLayoutParams(option);\n *         this.mergeOption(inputPositionParams);\n *     },\n *     mergeOption: function (newOption) {\n *         newOption && zrUtil.merge(thisOption, newOption, true);\n *         layout.mergeLayoutParam(thisOption, newOption);\n *     }\n * });\n *\n * @param {Object} targetOption\n * @param {Object} newOption\n * @param {Object|string} [opt]\n * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Used for the components\n *  that width (or height) should not be calculated by left and right (or top and bottom).\n */\n\n\nfunction mergeLayoutParam(targetOption, newOption, opt) {\n  !zrUtil.isObject(opt) && (opt = {});\n  var ignoreSize = opt.ignoreSize;\n  !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n  var hResult = merge(HV_NAMES[0], 0);\n  var vResult = merge(HV_NAMES[1], 1);\n  copy(HV_NAMES[0], targetOption, hResult);\n  copy(HV_NAMES[1], targetOption, vResult);\n\n  function merge(names, hvIdx) {\n    var newParams = {};\n    var newValueCount = 0;\n    var merged = {};\n    var mergedValueCount = 0;\n    var enoughParamNumber = 2;\n    each(names, function (name) {\n      merged[name] = targetOption[name];\n    });\n    each(names, function (name) {\n      // Consider case: newOption.width is null, which is\n      // set by user for removing width setting.\n      hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n      hasValue(newParams, name) && newValueCount++;\n      hasValue(merged, name) && mergedValueCount++;\n    });\n\n    if (ignoreSize[hvIdx]) {\n      // Only one of left/right is premitted to exist.\n      if (hasValue(newOption, names[1])) {\n        merged[names[2]] = null;\n      } else if (hasValue(newOption, names[2])) {\n        merged[names[1]] = null;\n      }\n\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // or targetOption: {right: ...} and newOption: {width: ...},\n    // There is no conflict when merged only has params count\n    // little than enoughParamNumber.\n\n\n    if (mergedValueCount === enoughParamNumber || !newValueCount) {\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // Than we can make sure user only want those two, and ignore\n    // all origin params in targetOption.\n    else if (newValueCount >= enoughParamNumber) {\n        return newParams;\n      } else {\n        // Chose another param from targetOption by priority.\n        for (var i = 0; i < names.length; i++) {\n          var name = names[i];\n\n          if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n            newParams[name] = targetOption[name];\n            break;\n          }\n        }\n\n        return newParams;\n      }\n  }\n\n  function hasProp(obj, name) {\n    return obj.hasOwnProperty(name);\n  }\n\n  function hasValue(obj, name) {\n    return obj[name] != null && obj[name] !== 'auto';\n  }\n\n  function copy(names, target, source) {\n    each(names, function (name) {\n      target[name] = source[name];\n    });\n  }\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction getLayoutParams(source) {\n  return copyLayoutParams({}, source);\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction copyLayoutParams(target, source) {\n  source && target && each(LOCATION_PARAMS, function (name) {\n    source.hasOwnProperty(name) && (target[name] = source[name]);\n  });\n  return target;\n}\n\nexports.LOCATION_PARAMS = LOCATION_PARAMS;\nexports.HV_NAMES = HV_NAMES;\nexports.box = box;\nexports.vbox = vbox;\nexports.hbox = hbox;\nexports.getAvailableSize = getAvailableSize;\nexports.getLayoutRect = getLayoutRect;\nexports.positionElement = positionElement;\nexports.sizeCalculable = sizeCalculable;\nexports.mergeLayoutParam = mergeLayoutParam;\nexports.getLayoutParams = getLayoutParams;\nexports.copyLayoutParams = copyLayoutParams;","var echarts = require(\"../echarts\");\n\nrequire(\"./boxplot/BoxplotSeries\");\n\nrequire(\"./boxplot/BoxplotView\");\n\nvar boxplotVisual = require(\"./boxplot/boxplotVisual\");\n\nvar boxplotLayout = require(\"./boxplot/boxplotLayout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerVisual(boxplotVisual);\necharts.registerLayout(boxplotLayout);","var _util = require(\"zrender/lib/core/util\");\n\nvar retrieve = _util.retrieve;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar each = _util.each;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _number = require(\"../../util/number\");\n\nvar isRadianAroundZero = _number.isRadianAroundZero;\nvar remRadian = _number.remRadian;\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar matrixUtil = require(\"zrender/lib/core/matrix\");\n\nvar _vector = require(\"zrender/lib/core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PI = Math.PI;\n\nfunction makeAxisEventDataBase(axisModel) {\n  var eventData = {\n    componentType: axisModel.mainType\n  };\n  eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n  return eventData;\n}\n/**\n * A final axis is translated and rotated from a \"standard axis\".\n * So opt.position and opt.rotation is required.\n *\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n * for example: (0, 0) ------------> (0, 50)\n *\n * nameDirection or tickDirection or labelDirection is 1 means tick\n * or label is below the standard axis, whereas is -1 means above\n * the standard axis. labelOffset means offset between label and axis,\n * which is useful when 'onZero', where axisLabel is in the grid and\n * label in outside grid.\n *\n * Tips: like always,\n * positive rotation represents anticlockwise, and negative rotation\n * represents clockwise.\n * The direction of position coordinate is the same as the direction\n * of screen coordinate.\n *\n * Do not need to consider axis 'inverse', which is auto processed by\n * axis extent.\n *\n * @param {module:zrender/container/Group} group\n * @param {Object} axisModel\n * @param {Object} opt Standard axis parameters.\n * @param {Array.<number>} opt.position [x, y]\n * @param {number} opt.rotation by radian\n * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\n * @param {number} [opt.tickDirection=1] 1 or -1\n * @param {number} [opt.labelDirection=1] 1 or -1\n * @param {number} [opt.labelOffset=0] Usefull when onZero.\n * @param {string} [opt.axisLabelShow] default get from axisModel.\n * @param {string} [opt.axisName] default get from axisModel.\n * @param {number} [opt.axisNameAvailableWidth]\n * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n * @param {number} [opt.strokeContainThreshold] Default label interval when label\n * @param {number} [opt.nameTruncateMaxWidth]\n */\n\n\nvar AxisBuilder = function (axisModel, opt) {\n  /**\n   * @readOnly\n   */\n  this.opt = opt;\n  /**\n   * @readOnly\n   */\n\n  this.axisModel = axisModel; // Default value\n\n  defaults(opt, {\n    labelOffset: 0,\n    nameDirection: 1,\n    tickDirection: 1,\n    labelDirection: 1,\n    silent: true\n  });\n  /**\n   * @readOnly\n   */\n\n  this.group = new graphic.Group(); // FIXME Not use a seperate text group?\n\n  var dumbGroup = new graphic.Group({\n    position: opt.position.slice(),\n    rotation: opt.rotation\n  }); // this.group.add(dumbGroup);\n  // this._dumbGroup = dumbGroup;\n\n  dumbGroup.updateTransform();\n  this._transform = dumbGroup.transform;\n  this._dumbGroup = dumbGroup;\n};\n\nAxisBuilder.prototype = {\n  constructor: AxisBuilder,\n  hasBuilder: function (name) {\n    return !!builders[name];\n  },\n  add: function (name) {\n    builders[name].call(this);\n  },\n  getGroup: function () {\n    return this.group;\n  }\n};\nvar builders = {\n  /**\n   * @private\n   */\n  axisLine: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n\n    if (!axisModel.get('axisLine.show')) {\n      return;\n    }\n\n    var extent = this.axisModel.axis.getExtent();\n    var matrix = this._transform;\n    var pt1 = [extent[0], 0];\n    var pt2 = [extent[1], 0];\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    }\n\n    var lineStyle = extend({\n      lineCap: 'round'\n    }, axisModel.getModel('axisLine.lineStyle').getLineStyle());\n    this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'line',\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: lineStyle,\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\n      silent: true,\n      z2: 1\n    })));\n    var arrows = axisModel.get('axisLine.symbol');\n    var arrowSize = axisModel.get('axisLine.symbolSize');\n    var arrowOffset = axisModel.get('axisLine.symbolOffset') || 0;\n\n    if (typeof arrowOffset === 'number') {\n      arrowOffset = [arrowOffset, arrowOffset];\n    }\n\n    if (arrows != null) {\n      if (typeof arrows === 'string') {\n        // Use the same arrow for start and end point\n        arrows = [arrows, arrows];\n      }\n\n      if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {\n        // Use the same size for width and height\n        arrowSize = [arrowSize, arrowSize];\n      }\n\n      var symbolWidth = arrowSize[0];\n      var symbolHeight = arrowSize[1];\n      each([{\n        rotate: opt.rotation + Math.PI / 2,\n        offset: arrowOffset[0],\n        r: 0\n      }, {\n        rotate: opt.rotation - Math.PI / 2,\n        offset: arrowOffset[1],\n        r: Math.sqrt((pt1[0] - pt2[0]) * (pt1[0] - pt2[0]) + (pt1[1] - pt2[1]) * (pt1[1] - pt2[1]))\n      }], function (point, index) {\n        if (arrows[index] !== 'none' && arrows[index] != null) {\n          var symbol = createSymbol(arrows[index], -symbolWidth / 2, -symbolHeight / 2, symbolWidth, symbolHeight, lineStyle.stroke, true); // Calculate arrow position with offset\n\n          var r = point.r + point.offset;\n          var pos = [pt1[0] + r * Math.cos(opt.rotation), pt1[1] - r * Math.sin(opt.rotation)];\n          symbol.attr({\n            rotation: point.rotate,\n            position: pos,\n            silent: true\n          });\n          this.group.add(symbol);\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  axisTickLabel: function () {\n    var axisModel = this.axisModel;\n    var opt = this.opt;\n    var tickEls = buildAxisTick(this, axisModel, opt);\n    var labelEls = buildAxisLabel(this, axisModel, opt);\n    fixMinMaxLabelShow(axisModel, labelEls, tickEls);\n  },\n\n  /**\n   * @private\n   */\n  axisName: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n    var name = retrieve(opt.axisName, axisModel.get('name'));\n\n    if (!name) {\n      return;\n    }\n\n    var nameLocation = axisModel.get('nameLocation');\n    var nameDirection = opt.nameDirection;\n    var textStyleModel = axisModel.getModel('nameTextStyle');\n    var gap = axisModel.get('nameGap') || 0;\n    var extent = this.axisModel.axis.getExtent();\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // 'middle'\n    // Reuse labelOffset.\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\n    var labelLayout;\n    var nameRotation = axisModel.get('nameRotate');\n\n    if (nameRotation != null) {\n      nameRotation = nameRotation * PI / 180; // To radian.\n    }\n\n    var axisNameAvailableWidth;\n\n    if (isNameLocationCenter(nameLocation)) {\n      labelLayout = innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n      nameDirection);\n    } else {\n      labelLayout = endTextLayout(opt, nameLocation, nameRotation || 0, extent);\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\n\n      if (axisNameAvailableWidth != null) {\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n      }\n    }\n\n    var textFont = textStyleModel.getFont();\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\n    var ellipsis = truncateOpt.ellipsis;\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth); // FIXME\n    // truncate rich text? (consider performance)\n\n    var truncatedText = ellipsis != null && maxWidth != null ? formatUtil.truncateText(name, maxWidth, textFont, ellipsis, {\n      minChar: 2,\n      placeholder: truncateOpt.placeholder\n    }) : name;\n    var tooltipOpt = axisModel.get('tooltip', true);\n    var mainType = axisModel.mainType;\n    var formatterParams = {\n      componentType: mainType,\n      name: name,\n      $vars: ['name']\n    };\n    formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'name',\n      __fullText: name,\n      __truncatedText: truncatedText,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: isSilent(axisModel),\n      z2: 1,\n      tooltip: tooltipOpt && tooltipOpt.show ? extend({\n        content: name,\n        formatter: function () {\n          return name;\n        },\n        formatterParams: formatterParams\n      }, tooltipOpt) : null\n    });\n    graphic.setTextStyle(textEl.style, textStyleModel, {\n      text: truncatedText,\n      textFont: textFont,\n      textFill: textStyleModel.getTextColor() || axisModel.get('axisLine.lineStyle.color'),\n      textAlign: labelLayout.textAlign,\n      textVerticalAlign: labelLayout.textVerticalAlign\n    });\n\n    if (axisModel.get('triggerEvent')) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisName';\n      textEl.eventData.name = name;\n    } // FIXME\n\n\n    this._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    this.group.add(textEl);\n    textEl.decomposeTransform();\n  }\n};\n/**\n * @public\n * @static\n * @param {Object} opt\n * @param {number} axisRotation in radian\n * @param {number} textRotation in radian\n * @param {number} direction\n * @return {Object} {\n *  rotation, // according to axis\n *  textAlign,\n *  textVerticalAlign\n * }\n */\n\nvar innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n  var rotationDiff = remRadian(textRotation - axisRotation);\n  var textAlign;\n  var textVerticalAlign;\n\n  if (isRadianAroundZero(rotationDiff)) {\n    // Label is parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI)) {\n    // Label is inverse parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff > 0 && rotationDiff < PI) {\n      textAlign = direction > 0 ? 'right' : 'left';\n    } else {\n      textAlign = direction > 0 ? 'left' : 'right';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n};\n\nfunction endTextLayout(opt, textPosition, textRotate, extent) {\n  var rotationDiff = remRadian(textRotate - opt.rotation);\n  var textAlign;\n  var textVerticalAlign;\n  var inverse = extent[0] > extent[1];\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\n\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n      textAlign = onLeft ? 'left' : 'right';\n    } else {\n      textAlign = onLeft ? 'right' : 'left';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction isSilent(axisModel) {\n  var tooltipOpt = axisModel.get('tooltip');\n  return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\n  || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\n}\n\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n  // If min or max are user set, we need to check\n  // If the tick on min(max) are overlap on their neighbour tick\n  // If they are overlapped, we need to hide the min(max) tick label\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel'); // FIXME\n  // Have not consider onBand yet, where tick els is more than label els.\n\n  labelEls = labelEls || [];\n  tickEls = tickEls || [];\n  var firstLabel = labelEls[0];\n  var nextLabel = labelEls[1];\n  var lastLabel = labelEls[labelEls.length - 1];\n  var prevLabel = labelEls[labelEls.length - 2];\n  var firstTick = tickEls[0];\n  var nextTick = tickEls[1];\n  var lastTick = tickEls[tickEls.length - 1];\n  var prevTick = tickEls[tickEls.length - 2];\n\n  if (showMinLabel === false) {\n    ignoreEl(firstLabel);\n    ignoreEl(firstTick);\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n    if (showMinLabel) {\n      ignoreEl(nextLabel);\n      ignoreEl(nextTick);\n    } else {\n      ignoreEl(firstLabel);\n      ignoreEl(firstTick);\n    }\n  }\n\n  if (showMaxLabel === false) {\n    ignoreEl(lastLabel);\n    ignoreEl(lastTick);\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n    if (showMaxLabel) {\n      ignoreEl(prevLabel);\n      ignoreEl(prevTick);\n    } else {\n      ignoreEl(lastLabel);\n      ignoreEl(lastTick);\n    }\n  }\n}\n\nfunction ignoreEl(el) {\n  el && (el.ignore = true);\n}\n\nfunction isTwoLabelOverlapped(current, next, labelLayout) {\n  // current and next has the same rotation.\n  var firstRect = current && current.getBoundingRect().clone();\n  var nextRect = next && next.getBoundingRect().clone();\n\n  if (!firstRect || !nextRect) {\n    return;\n  } // When checking intersect of two rotated labels, we use mRotationBack\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n\n\n  var mRotationBack = matrixUtil.identity([]);\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\n  return firstRect.intersect(nextRect);\n}\n\nfunction isNameLocationCenter(nameLocation) {\n  return nameLocation === 'middle' || nameLocation === 'center';\n}\n\nfunction buildAxisTick(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n\n  if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var tickModel = axisModel.getModel('axisTick');\n  var lineStyleModel = tickModel.getModel('lineStyle');\n  var tickLen = tickModel.get('length');\n  var ticksCoords = axis.getTicksCoords();\n  var pt1 = [];\n  var pt2 = [];\n  var matrix = axisBuilder._transform;\n  var tickEls = [];\n\n  for (var i = 0; i < ticksCoords.length; i++) {\n    var tickCoord = ticksCoords[i].coord;\n    pt1[0] = tickCoord;\n    pt1[1] = 0;\n    pt2[0] = tickCoord;\n    pt2[1] = opt.tickDirection * tickLen;\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    } // Tick line, Not use group transform to have better line draw\n\n\n    var tickEl = new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'tick_' + ticksCoords[i].tickValue,\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: defaults(lineStyleModel.getLineStyle(), {\n        stroke: axisModel.get('axisLine.lineStyle.color')\n      }),\n      z2: 2,\n      silent: true\n    }));\n    axisBuilder.group.add(tickEl);\n    tickEls.push(tickEl);\n  }\n\n  return tickEls;\n}\n\nfunction buildAxisLabel(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n  if (!show || axis.scale.isBlank()) {\n    return;\n  }\n\n  var labelModel = axisModel.getModel('axisLabel');\n  var labelMargin = labelModel.get('margin');\n  var labels = axis.getViewLabels(); // Special label rotate.\n\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\n  var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n  var rawCategoryData = axisModel.getCategories(true);\n  var labelEls = [];\n  var silent = isSilent(axisModel);\n  var triggerEvent = axisModel.get('triggerEvent');\n  each(labels, function (labelItem, index) {\n    var tickValue = labelItem.tickValue;\n    var formattedLabel = labelItem.formattedLabel;\n    var rawLabel = labelItem.rawLabel;\n    var itemLabelModel = labelModel;\n\n    if (rawCategoryData && rawCategoryData[tickValue] && rawCategoryData[tickValue].textStyle) {\n      itemLabelModel = new Model(rawCategoryData[tickValue].textStyle, labelModel, axisModel.ecModel);\n    }\n\n    var textColor = itemLabelModel.getTextColor() || axisModel.get('axisLine.lineStyle.color');\n    var tickCoord = axis.dataToCoord(tickValue);\n    var pos = [tickCoord, opt.labelOffset + opt.labelDirection * labelMargin];\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'label_' + tickValue,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: silent,\n      z2: 10\n    });\n    graphic.setTextStyle(textEl.style, itemLabelModel, {\n      text: formattedLabel,\n      textAlign: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\n      textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\n      textFill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original\n      // index of axis.data. So tick should not be exposed to user\n      // in category axis.\n      // (2) Compatible with previous version, which always use formatted label as\n      // input. But in interval scale the formatted label is like '223,445', which\n      // maked user repalce ','. So we modify it to return original val but remain\n      // it as 'string' to avoid error in replacing.\n      axis.type === 'category' ? rawLabel : axis.type === 'value' ? tickValue + '' : tickValue, index) : textColor\n    }); // Pack data for mouse event\n\n    if (triggerEvent) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisLabel';\n      textEl.eventData.value = rawLabel;\n    } // FIXME\n\n\n    axisBuilder._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    labelEls.push(textEl);\n    axisBuilder.group.add(textEl);\n    textEl.decomposeTransform();\n  });\n  return labelEls;\n}\n\nvar _default = AxisBuilder;\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar isArray = _util.isArray;\nvar isObject = _util.isObject;\n\nvar compatStyle = require(\"./helper/compatStyle\");\n\nvar _model = require(\"../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Compatitable with 2.0\nfunction get(opt, path) {\n  path = path.split(',');\n  var obj = opt;\n\n  for (var i = 0; i < path.length; i++) {\n    obj = obj && obj[path[i]];\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  return obj;\n}\n\nfunction set(opt, path, val, overwrite) {\n  path = path.split(',');\n  var obj = opt;\n  var key;\n\n  for (var i = 0; i < path.length - 1; i++) {\n    key = path[i];\n\n    if (obj[key] == null) {\n      obj[key] = {};\n    }\n\n    obj = obj[key];\n  }\n\n  if (overwrite || obj[path[i]] == null) {\n    obj[path[i]] = val;\n  }\n}\n\nfunction compatLayoutProperties(option) {\n  each(LAYOUT_PROPERTIES, function (prop) {\n    if (prop[0] in option && !(prop[1] in option)) {\n      option[prop[1]] = option[prop[0]];\n    }\n  });\n}\n\nvar LAYOUT_PROPERTIES = [['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']];\nvar COMPATITABLE_COMPONENTS = ['grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'];\n\nfunction _default(option, isTheme) {\n  compatStyle(option, isTheme); // Make sure series array for model initialization.\n\n  option.series = normalizeToArray(option.series);\n  each(option.series, function (seriesOpt) {\n    if (!isObject(seriesOpt)) {\n      return;\n    }\n\n    var seriesType = seriesOpt.type;\n\n    if (seriesType === 'pie' || seriesType === 'gauge') {\n      if (seriesOpt.clockWise != null) {\n        seriesOpt.clockwise = seriesOpt.clockWise;\n      }\n    }\n\n    if (seriesType === 'gauge') {\n      var pointerColor = get(seriesOpt, 'pointer.color');\n      pointerColor != null && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n    }\n\n    compatLayoutProperties(seriesOpt);\n  }); // dataRange has changed to visualMap\n\n  if (option.dataRange) {\n    option.visualMap = option.dataRange;\n  }\n\n  each(COMPATITABLE_COMPONENTS, function (componentName) {\n    var options = option[componentName];\n\n    if (options) {\n      if (!isArray(options)) {\n        options = [options];\n      }\n\n      each(options, function (option) {\n        compatLayoutProperties(option);\n      });\n    }\n  });\n}\n\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar interactionMutex = require(\"./interactionMutex\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar map = zrUtil.map;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathPow = Math.pow;\nvar COVER_Z = 10000;\nvar UNSELECT_THRESHOLD = 6;\nvar MIN_RESIZE_LINE_WIDTH = 6;\nvar MUTEX_RESOURCE_KEY = 'globalPan';\nvar DIRECTION_MAP = {\n  w: [0, 0],\n  e: [0, 1],\n  n: [1, 0],\n  s: [1, 1]\n};\nvar CURSOR_MAP = {\n  w: 'ew',\n  e: 'ew',\n  n: 'ns',\n  s: 'ns',\n  ne: 'nesw',\n  sw: 'nesw',\n  nw: 'nwse',\n  se: 'nwse'\n};\nvar DEFAULT_BRUSH_OPT = {\n  brushStyle: {\n    lineWidth: 2,\n    stroke: 'rgba(0,0,0,0.3)',\n    fill: 'rgba(0,0,0,0.1)'\n  },\n  transformable: true,\n  brushMode: 'single',\n  removeOnClick: false\n};\nvar baseUID = 0;\n/**\n * @alias module:echarts/component/helper/BrushController\n * @constructor\n * @mixin {module:zrender/mixin/Eventful}\n * @event module:echarts/component/helper/BrushController#brush\n *        params:\n *            areas: Array.<Array>, coord relates to container group,\n *                                    If no container specified, to global.\n *            opt {\n *                isEnd: boolean,\n *                removeOnClick: boolean\n *            }\n *\n * @param {module:zrender/zrender~ZRender} zr\n */\n\nfunction BrushController(zr) {\n  Eventful.call(this);\n  /**\n   * @type {module:zrender/zrender~ZRender}\n   * @private\n   */\n\n  this._zr = zr;\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n\n  this.group = new graphic.Group();\n  /**\n   * Only for drawing (after enabledBrush).\n   *     'line', 'rect', 'polygon' or false\n   *     If passing false/null/undefined, disable brush.\n   *     If passing 'auto', determined by panel.defaultBrushType\n   * @private\n   * @type {string}\n   */\n\n  this._brushType;\n  /**\n   * Only for drawing (after enabledBrush).\n   *\n   * @private\n   * @type {Object}\n   */\n\n  this._brushOption;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._panels;\n  /**\n   * @private\n   * @type {Array.<nubmer>}\n   */\n\n  this._track = [];\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._dragging;\n  /**\n   * @private\n   * @type {Array}\n   */\n\n  this._covers = [];\n  /**\n   * @private\n   * @type {moudule:zrender/container/Group}\n   */\n\n  this._creatingCover;\n  /**\n   * `true` means global panel\n   * @private\n   * @type {module:zrender/container/Group|boolean}\n   */\n\n  this._creatingPanel;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._enableGlobalPan;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this._uid = 'brushController_' + baseUID++;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._handlers = {};\n  each(mouseHandlers, function (handler, eventName) {\n    this._handlers[eventName] = zrUtil.bind(handler, this);\n  }, this);\n}\n\nBrushController.prototype = {\n  constructor: BrushController,\n\n  /**\n   * If set to null/undefined/false, select disabled.\n   * @param {Object} brushOption\n   * @param {string|boolean} brushOption.brushType 'line', 'rect', 'polygon' or false\n   *                          If passing false/null/undefined, disable brush.\n   *                          If passing 'auto', determined by panel.defaultBrushType.\n   *                              ('auto' can not be used in global panel)\n   * @param {number} [brushOption.brushMode='single'] 'single' or 'multiple'\n   * @param {boolean} [brushOption.transformable=true]\n   * @param {boolean} [brushOption.removeOnClick=false]\n   * @param {Object} [brushOption.brushStyle]\n   * @param {number} [brushOption.brushStyle.width]\n   * @param {number} [brushOption.brushStyle.lineWidth]\n   * @param {string} [brushOption.brushStyle.stroke]\n   * @param {string} [brushOption.brushStyle.fill]\n   * @param {number} [brushOption.z]\n   */\n  enableBrush: function (brushOption) {\n    this._brushType && doDisableBrush(this);\n    brushOption.brushType && doEnableBrush(this, brushOption);\n    return this;\n  },\n\n  /**\n   * @param {Array.<Object>} panelOpts If not pass, it is global brush.\n   *        Each items: {\n   *            panelId, // mandatory.\n   *            clipPath, // mandatory. function.\n   *            isTargetByCursor, // mandatory. function.\n   *            defaultBrushType, // optional, only used when brushType is 'auto'.\n   *            getLinearBrushOtherExtent, // optional. function.\n   *        }\n   */\n  setPanels: function (panelOpts) {\n    if (panelOpts && panelOpts.length) {\n      var panels = this._panels = {};\n      zrUtil.each(panelOpts, function (panelOpts) {\n        panels[panelOpts.panelId] = zrUtil.clone(panelOpts);\n      });\n    } else {\n      this._panels = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param {Object} [opt]\n   * @return {boolean} [opt.enableGlobalPan=false]\n   */\n  mount: function (opt) {\n    opt = opt || {};\n    this._enableGlobalPan = opt.enableGlobalPan;\n    var thisGroup = this.group;\n\n    this._zr.add(thisGroup);\n\n    thisGroup.attr({\n      position: opt.position || [0, 0],\n      rotation: opt.rotation || 0,\n      scale: opt.scale || [1, 1]\n    });\n    this._transform = thisGroup.getLocalTransform();\n    return this;\n  },\n  eachCover: function (cb, context) {\n    each(this._covers, cb, context);\n  },\n\n  /**\n   * Update covers.\n   * @param {Array.<Object>} brushOptionList Like:\n   *        [\n   *            {id: 'xx', brushType: 'line', range: [23, 44], brushStyle, transformable},\n   *            {id: 'yy', brushType: 'rect', range: [[23, 44], [23, 54]]},\n   *            ...\n   *        ]\n   *        `brushType` is required in each cover info. (can not be 'auto')\n   *        `id` is not mandatory.\n   *        `brushStyle`, `transformable` is not mandatory, use DEFAULT_BRUSH_OPT by default.\n   *        If brushOptionList is null/undefined, all covers removed.\n   */\n  updateCovers: function (brushOptionList) {\n    brushOptionList = zrUtil.map(brushOptionList, function (brushOption) {\n      return zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n    });\n    var tmpIdPrefix = '\\0-brush-index-';\n    var oldCovers = this._covers;\n    var newCovers = this._covers = [];\n    var controller = this;\n    var creatingCover = this._creatingCover;\n    new DataDiffer(oldCovers, brushOptionList, oldGetKey, getKey).add(addOrUpdate).update(addOrUpdate).remove(remove).execute();\n    return this;\n\n    function getKey(brushOption, index) {\n      return (brushOption.id != null ? brushOption.id : tmpIdPrefix + index) + '-' + brushOption.brushType;\n    }\n\n    function oldGetKey(cover, index) {\n      return getKey(cover.__brushOption, index);\n    }\n\n    function addOrUpdate(newIndex, oldIndex) {\n      var newBrushOption = brushOptionList[newIndex]; // Consider setOption in event listener of brushSelect,\n      // where updating cover when creating should be forbiden.\n\n      if (oldIndex != null && oldCovers[oldIndex] === creatingCover) {\n        newCovers[newIndex] = oldCovers[oldIndex];\n      } else {\n        var cover = newCovers[newIndex] = oldIndex != null ? (oldCovers[oldIndex].__brushOption = newBrushOption, oldCovers[oldIndex]) : endCreating(controller, createCover(controller, newBrushOption));\n        updateCoverAfterCreation(controller, cover);\n      }\n    }\n\n    function remove(oldIndex) {\n      if (oldCovers[oldIndex] !== creatingCover) {\n        controller.group.remove(oldCovers[oldIndex]);\n      }\n    }\n  },\n  unmount: function () {\n    this.enableBrush(false); // container may 'removeAll' outside.\n\n    clearCovers(this);\n\n    this._zr.remove(this.group);\n\n    return this;\n  },\n  dispose: function () {\n    this.unmount();\n    this.off();\n  }\n};\nzrUtil.mixin(BrushController, Eventful);\n\nfunction doEnableBrush(controller, brushOption) {\n  var zr = controller._zr; // Consider roam, which takes globalPan too.\n\n  if (!controller._enableGlobalPan) {\n    interactionMutex.take(zr, MUTEX_RESOURCE_KEY, controller._uid);\n  }\n\n  each(controller._handlers, function (handler, eventName) {\n    zr.on(eventName, handler);\n  });\n  controller._brushType = brushOption.brushType;\n  controller._brushOption = zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n}\n\nfunction doDisableBrush(controller) {\n  var zr = controller._zr;\n  interactionMutex.release(zr, MUTEX_RESOURCE_KEY, controller._uid);\n  each(controller._handlers, function (handler, eventName) {\n    zr.off(eventName, handler);\n  });\n  controller._brushType = controller._brushOption = null;\n}\n\nfunction createCover(controller, brushOption) {\n  var cover = coverRenderers[brushOption.brushType].createCover(controller, brushOption);\n  cover.__brushOption = brushOption;\n  updateZ(cover, brushOption);\n  controller.group.add(cover);\n  return cover;\n}\n\nfunction endCreating(controller, creatingCover) {\n  var coverRenderer = getCoverRenderer(creatingCover);\n\n  if (coverRenderer.endCreating) {\n    coverRenderer.endCreating(controller, creatingCover);\n    updateZ(creatingCover, creatingCover.__brushOption);\n  }\n\n  return creatingCover;\n}\n\nfunction updateCoverShape(controller, cover) {\n  var brushOption = cover.__brushOption;\n  getCoverRenderer(cover).updateCoverShape(controller, cover, brushOption.range, brushOption);\n}\n\nfunction updateZ(cover, brushOption) {\n  var z = brushOption.z;\n  z == null && (z = COVER_Z);\n  cover.traverse(function (el) {\n    el.z = z;\n    el.z2 = z; // Consider in given container.\n  });\n}\n\nfunction updateCoverAfterCreation(controller, cover) {\n  getCoverRenderer(cover).updateCommon(controller, cover);\n  updateCoverShape(controller, cover);\n}\n\nfunction getCoverRenderer(cover) {\n  return coverRenderers[cover.__brushOption.brushType];\n} // return target panel or `true` (means global panel)\n\n\nfunction getPanelByPoint(controller, e, localCursorPoint) {\n  var panels = controller._panels;\n\n  if (!panels) {\n    return true; // Global panel\n  }\n\n  var panel;\n  var transform = controller._transform;\n  each(panels, function (pn) {\n    pn.isTargetByCursor(e, localCursorPoint, transform) && (panel = pn);\n  });\n  return panel;\n} // Return a panel or true\n\n\nfunction getPanelByCover(controller, cover) {\n  var panels = controller._panels;\n\n  if (!panels) {\n    return true; // Global panel\n  }\n\n  var panelId = cover.__brushOption.panelId; // User may give cover without coord sys info,\n  // which is then treated as global panel.\n\n  return panelId != null ? panels[panelId] : true;\n}\n\nfunction clearCovers(controller) {\n  var covers = controller._covers;\n  var originalLength = covers.length;\n  each(covers, function (cover) {\n    controller.group.remove(cover);\n  }, controller);\n  covers.length = 0;\n  return !!originalLength;\n}\n\nfunction trigger(controller, opt) {\n  var areas = map(controller._covers, function (cover) {\n    var brushOption = cover.__brushOption;\n    var range = zrUtil.clone(brushOption.range);\n    return {\n      brushType: brushOption.brushType,\n      panelId: brushOption.panelId,\n      range: range\n    };\n  });\n  controller.trigger('brush', areas, {\n    isEnd: !!opt.isEnd,\n    removeOnClick: !!opt.removeOnClick\n  });\n}\n\nfunction shouldShowCover(controller) {\n  var track = controller._track;\n\n  if (!track.length) {\n    return false;\n  }\n\n  var p2 = track[track.length - 1];\n  var p1 = track[0];\n  var dx = p2[0] - p1[0];\n  var dy = p2[1] - p1[1];\n  var dist = mathPow(dx * dx + dy * dy, 0.5);\n  return dist > UNSELECT_THRESHOLD;\n}\n\nfunction getTrackEnds(track) {\n  var tail = track.length - 1;\n  tail < 0 && (tail = 0);\n  return [track[0], track[tail]];\n}\n\nfunction createBaseRectCover(doDrift, controller, brushOption, edgeNames) {\n  var cover = new graphic.Group();\n  cover.add(new graphic.Rect({\n    name: 'main',\n    style: makeStyle(brushOption),\n    silent: true,\n    draggable: true,\n    cursor: 'move',\n    drift: curry(doDrift, controller, cover, 'nswe'),\n    ondragend: curry(trigger, controller, {\n      isEnd: true\n    })\n  }));\n  each(edgeNames, function (name) {\n    cover.add(new graphic.Rect({\n      name: name,\n      style: {\n        opacity: 0\n      },\n      draggable: true,\n      silent: true,\n      invisible: true,\n      drift: curry(doDrift, controller, cover, name),\n      ondragend: curry(trigger, controller, {\n        isEnd: true\n      })\n    }));\n  });\n  return cover;\n}\n\nfunction updateBaseRect(controller, cover, localRange, brushOption) {\n  var lineWidth = brushOption.brushStyle.lineWidth || 0;\n  var handleSize = mathMax(lineWidth, MIN_RESIZE_LINE_WIDTH);\n  var x = localRange[0][0];\n  var y = localRange[1][0];\n  var xa = x - lineWidth / 2;\n  var ya = y - lineWidth / 2;\n  var x2 = localRange[0][1];\n  var y2 = localRange[1][1];\n  var x2a = x2 - handleSize + lineWidth / 2;\n  var y2a = y2 - handleSize + lineWidth / 2;\n  var width = x2 - x;\n  var height = y2 - y;\n  var widtha = width + lineWidth;\n  var heighta = height + lineWidth;\n  updateRectShape(controller, cover, 'main', x, y, width, height);\n\n  if (brushOption.transformable) {\n    updateRectShape(controller, cover, 'w', xa, ya, handleSize, heighta);\n    updateRectShape(controller, cover, 'e', x2a, ya, handleSize, heighta);\n    updateRectShape(controller, cover, 'n', xa, ya, widtha, handleSize);\n    updateRectShape(controller, cover, 's', xa, y2a, widtha, handleSize);\n    updateRectShape(controller, cover, 'nw', xa, ya, handleSize, handleSize);\n    updateRectShape(controller, cover, 'ne', x2a, ya, handleSize, handleSize);\n    updateRectShape(controller, cover, 'sw', xa, y2a, handleSize, handleSize);\n    updateRectShape(controller, cover, 'se', x2a, y2a, handleSize, handleSize);\n  }\n}\n\nfunction updateCommon(controller, cover) {\n  var brushOption = cover.__brushOption;\n  var transformable = brushOption.transformable;\n  var mainEl = cover.childAt(0);\n  mainEl.useStyle(makeStyle(brushOption));\n  mainEl.attr({\n    silent: !transformable,\n    cursor: transformable ? 'move' : 'default'\n  });\n  each(['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw'], function (name) {\n    var el = cover.childOfName(name);\n    var globalDir = getGlobalDirection(controller, name);\n    el && el.attr({\n      silent: !transformable,\n      invisible: !transformable,\n      cursor: transformable ? CURSOR_MAP[globalDir] + '-resize' : null\n    });\n  });\n}\n\nfunction updateRectShape(controller, cover, name, x, y, w, h) {\n  var el = cover.childOfName(name);\n  el && el.setShape(pointsToRect(clipByPanel(controller, cover, [[x, y], [x + w, y + h]])));\n}\n\nfunction makeStyle(brushOption) {\n  return zrUtil.defaults({\n    strokeNoScale: true\n  }, brushOption.brushStyle);\n}\n\nfunction formatRectRange(x, y, x2, y2) {\n  var min = [mathMin(x, x2), mathMin(y, y2)];\n  var max = [mathMax(x, x2), mathMax(y, y2)];\n  return [[min[0], max[0]], // x range\n  [min[1], max[1]] // y range\n  ];\n}\n\nfunction getTransform(controller) {\n  return graphic.getTransform(controller.group);\n}\n\nfunction getGlobalDirection(controller, localDirection) {\n  if (localDirection.length > 1) {\n    localDirection = localDirection.split('');\n    var globalDir = [getGlobalDirection(controller, localDirection[0]), getGlobalDirection(controller, localDirection[1])];\n    (globalDir[0] === 'e' || globalDir[0] === 'w') && globalDir.reverse();\n    return globalDir.join('');\n  } else {\n    var map = {\n      w: 'left',\n      e: 'right',\n      n: 'top',\n      s: 'bottom'\n    };\n    var inverseMap = {\n      left: 'w',\n      right: 'e',\n      top: 'n',\n      bottom: 's'\n    };\n    var globalDir = graphic.transformDirection(map[localDirection], getTransform(controller));\n    return inverseMap[globalDir];\n  }\n}\n\nfunction driftRect(toRectRange, fromRectRange, controller, cover, name, dx, dy, e) {\n  var brushOption = cover.__brushOption;\n  var rectRange = toRectRange(brushOption.range);\n  var localDelta = toLocalDelta(controller, dx, dy);\n  each(name.split(''), function (namePart) {\n    var ind = DIRECTION_MAP[namePart];\n    rectRange[ind[0]][ind[1]] += localDelta[ind[0]];\n  });\n  brushOption.range = fromRectRange(formatRectRange(rectRange[0][0], rectRange[1][0], rectRange[0][1], rectRange[1][1]));\n  updateCoverAfterCreation(controller, cover);\n  trigger(controller, {\n    isEnd: false\n  });\n}\n\nfunction driftPolygon(controller, cover, dx, dy, e) {\n  var range = cover.__brushOption.range;\n  var localDelta = toLocalDelta(controller, dx, dy);\n  each(range, function (point) {\n    point[0] += localDelta[0];\n    point[1] += localDelta[1];\n  });\n  updateCoverAfterCreation(controller, cover);\n  trigger(controller, {\n    isEnd: false\n  });\n}\n\nfunction toLocalDelta(controller, dx, dy) {\n  var thisGroup = controller.group;\n  var localD = thisGroup.transformCoordToLocal(dx, dy);\n  var localZero = thisGroup.transformCoordToLocal(0, 0);\n  return [localD[0] - localZero[0], localD[1] - localZero[1]];\n}\n\nfunction clipByPanel(controller, cover, data) {\n  var panel = getPanelByCover(controller, cover);\n  return panel && panel !== true ? panel.clipPath(data, controller._transform) : zrUtil.clone(data);\n}\n\nfunction pointsToRect(points) {\n  var xmin = mathMin(points[0][0], points[1][0]);\n  var ymin = mathMin(points[0][1], points[1][1]);\n  var xmax = mathMax(points[0][0], points[1][0]);\n  var ymax = mathMax(points[0][1], points[1][1]);\n  return {\n    x: xmin,\n    y: ymin,\n    width: xmax - xmin,\n    height: ymax - ymin\n  };\n}\n\nfunction resetCursor(controller, e, localCursorPoint) {\n  // Check active\n  if (!controller._brushType) {\n    return;\n  }\n\n  var zr = controller._zr;\n  var covers = controller._covers;\n  var currPanel = getPanelByPoint(controller, e, localCursorPoint); // Check whether in covers.\n\n  if (!controller._dragging) {\n    for (var i = 0; i < covers.length; i++) {\n      var brushOption = covers[i].__brushOption;\n\n      if (currPanel && (currPanel === true || brushOption.panelId === currPanel.panelId) && coverRenderers[brushOption.brushType].contain(covers[i], localCursorPoint[0], localCursorPoint[1])) {\n        // Use cursor style set on cover.\n        return;\n      }\n    }\n  }\n\n  currPanel && zr.setCursorStyle('crosshair');\n}\n\nfunction preventDefault(e) {\n  var rawE = e.event;\n  rawE.preventDefault && rawE.preventDefault();\n}\n\nfunction mainShapeContain(cover, x, y) {\n  return cover.childOfName('main').contain(x, y);\n}\n\nfunction updateCoverByMouse(controller, e, localCursorPoint, isEnd) {\n  var creatingCover = controller._creatingCover;\n  var panel = controller._creatingPanel;\n  var thisBrushOption = controller._brushOption;\n  var eventParams;\n\n  controller._track.push(localCursorPoint.slice());\n\n  if (shouldShowCover(controller) || creatingCover) {\n    if (panel && !creatingCover) {\n      thisBrushOption.brushMode === 'single' && clearCovers(controller);\n      var brushOption = zrUtil.clone(thisBrushOption);\n      brushOption.brushType = determineBrushType(brushOption.brushType, panel);\n      brushOption.panelId = panel === true ? null : panel.panelId;\n      creatingCover = controller._creatingCover = createCover(controller, brushOption);\n\n      controller._covers.push(creatingCover);\n    }\n\n    if (creatingCover) {\n      var coverRenderer = coverRenderers[determineBrushType(controller._brushType, panel)];\n      var coverBrushOption = creatingCover.__brushOption;\n      coverBrushOption.range = coverRenderer.getCreatingRange(clipByPanel(controller, creatingCover, controller._track));\n\n      if (isEnd) {\n        endCreating(controller, creatingCover);\n        coverRenderer.updateCommon(controller, creatingCover);\n      }\n\n      updateCoverShape(controller, creatingCover);\n      eventParams = {\n        isEnd: isEnd\n      };\n    }\n  } else if (isEnd && thisBrushOption.brushMode === 'single' && thisBrushOption.removeOnClick) {\n    // Help user to remove covers easily, only by a tiny drag, in 'single' mode.\n    // But a single click do not clear covers, because user may have casual\n    // clicks (for example, click on other component and do not expect covers\n    // disappear).\n    // Only some cover removed, trigger action, but not every click trigger action.\n    if (getPanelByPoint(controller, e, localCursorPoint) && clearCovers(controller)) {\n      eventParams = {\n        isEnd: isEnd,\n        removeOnClick: true\n      };\n    }\n  }\n\n  return eventParams;\n}\n\nfunction determineBrushType(brushType, panel) {\n  if (brushType === 'auto') {\n    return panel.defaultBrushType;\n  }\n\n  return brushType;\n}\n\nvar mouseHandlers = {\n  mousedown: function (e) {\n    if (this._dragging) {\n      // In case some browser do not support globalOut,\n      // and release mose out side the browser.\n      handleDragEnd.call(this, e);\n    } else if (!e.target || !e.target.draggable) {\n      preventDefault(e);\n      var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n      this._creatingCover = null;\n      var panel = this._creatingPanel = getPanelByPoint(this, e, localCursorPoint);\n\n      if (panel) {\n        this._dragging = true;\n        this._track = [localCursorPoint.slice()];\n      }\n    }\n  },\n  mousemove: function (e) {\n    var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n    resetCursor(this, e, localCursorPoint);\n\n    if (this._dragging) {\n      preventDefault(e);\n      var eventParams = updateCoverByMouse(this, e, localCursorPoint, false);\n      eventParams && trigger(this, eventParams);\n    }\n  },\n  mouseup: handleDragEnd //,\n  // FIXME\n  // in tooltip, globalout should not be triggered.\n  // globalout: handleDragEnd\n\n};\n\nfunction handleDragEnd(e) {\n  if (this._dragging) {\n    preventDefault(e);\n    var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n    var eventParams = updateCoverByMouse(this, e, localCursorPoint, true);\n    this._dragging = false;\n    this._track = [];\n    this._creatingCover = null; // trigger event shoule be at final, after procedure will be nested.\n\n    eventParams && trigger(this, eventParams);\n  }\n}\n/**\n * key: brushType\n * @type {Object}\n */\n\n\nvar coverRenderers = {\n  lineX: getLineRenderer(0),\n  lineY: getLineRenderer(1),\n  rect: {\n    createCover: function (controller, brushOption) {\n      return createBaseRectCover(curry(driftRect, function (range) {\n        return range;\n      }, function (range) {\n        return range;\n      }), controller, brushOption, ['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw']);\n    },\n    getCreatingRange: function (localTrack) {\n      var ends = getTrackEnds(localTrack);\n      return formatRectRange(ends[1][0], ends[1][1], ends[0][0], ends[0][1]);\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      updateBaseRect(controller, cover, localRange, brushOption);\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  },\n  polygon: {\n    createCover: function (controller, brushOption) {\n      var cover = new graphic.Group(); // Do not use graphic.Polygon because graphic.Polyline do not close the\n      // border of the shape when drawing, which is a better experience for user.\n\n      cover.add(new graphic.Polyline({\n        name: 'main',\n        style: makeStyle(brushOption),\n        silent: true\n      }));\n      return cover;\n    },\n    getCreatingRange: function (localTrack) {\n      return localTrack;\n    },\n    endCreating: function (controller, cover) {\n      cover.remove(cover.childAt(0)); // Use graphic.Polygon close the shape.\n\n      cover.add(new graphic.Polygon({\n        name: 'main',\n        draggable: true,\n        drift: curry(driftPolygon, controller, cover),\n        ondragend: curry(trigger, controller, {\n          isEnd: true\n        })\n      }));\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      cover.childAt(0).setShape({\n        points: clipByPanel(controller, cover, localRange)\n      });\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  }\n};\n\nfunction getLineRenderer(xyIndex) {\n  return {\n    createCover: function (controller, brushOption) {\n      return createBaseRectCover(curry(driftRect, function (range) {\n        var rectRange = [range, [0, 100]];\n        xyIndex && rectRange.reverse();\n        return rectRange;\n      }, function (rectRange) {\n        return rectRange[xyIndex];\n      }), controller, brushOption, [['w', 'e'], ['n', 's']][xyIndex]);\n    },\n    getCreatingRange: function (localTrack) {\n      var ends = getTrackEnds(localTrack);\n      var min = mathMin(ends[0][xyIndex], ends[1][xyIndex]);\n      var max = mathMax(ends[0][xyIndex], ends[1][xyIndex]);\n      return [min, max];\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      var otherExtent; // If brushWidth not specified, fit the panel.\n\n      var panel = getPanelByCover(controller, cover);\n\n      if (panel !== true && panel.getLinearBrushOtherExtent) {\n        otherExtent = panel.getLinearBrushOtherExtent(xyIndex, controller._transform);\n      } else {\n        var zr = controller._zr;\n        otherExtent = [0, [zr.getWidth(), zr.getHeight()][1 - xyIndex]];\n      }\n\n      var rectRange = [localRange, otherExtent];\n      xyIndex && rectRange.reverse();\n      updateBaseRect(controller, cover, rectRange, brushOption);\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  };\n}\n\nvar _default = BrushController;\nmodule.exports = _default;","var RadiusAxis = require(\"./RadiusAxis\");\n\nvar AngleAxis = require(\"./AngleAxis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/coord/polar/Polar\n */\n\n/**\n * @alias {module:echarts/coord/polar/Polar}\n * @constructor\n * @param {string} name\n */\nvar Polar = function (name) {\n  /**\n   * @type {string}\n   */\n  this.name = name || '';\n  /**\n   * x of polar center\n   * @type {number}\n   */\n\n  this.cx = 0;\n  /**\n   * y of polar center\n   * @type {number}\n   */\n\n  this.cy = 0;\n  /**\n   * @type {module:echarts/coord/polar/RadiusAxis}\n   * @private\n   */\n\n  this._radiusAxis = new RadiusAxis();\n  /**\n   * @type {module:echarts/coord/polar/AngleAxis}\n   * @private\n   */\n\n  this._angleAxis = new AngleAxis();\n  this._radiusAxis.polar = this._angleAxis.polar = this;\n};\n\nPolar.prototype = {\n  type: 'polar',\n  axisPointerEnabled: true,\n  constructor: Polar,\n\n  /**\n   * @param {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['radius', 'angle'],\n\n  /**\n   * @type {module:echarts/coord/PolarModel}\n   */\n  model: null,\n\n  /**\n   * If contain coord\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var coord = this.pointToCoord(point);\n    return this._radiusAxis.contain(coord[0]) && this._angleAxis.contain(coord[1]);\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this._radiusAxis.containData(data[0]) && this._angleAxis.containData(data[1]);\n  },\n\n  /**\n   * @param {string} dim\n   * @return {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n   */\n  getAxis: function (dim) {\n    return this['_' + dim + 'Axis'];\n  },\n\n  /**\n   * @return {Array.<module:echarts/coord/Axis>}\n   */\n  getAxes: function () {\n    return [this._radiusAxis, this._angleAxis];\n  },\n\n  /**\n   * Get axes by type of scale\n   * @param {string} scaleType\n   * @return {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n   */\n  getAxesByScale: function (scaleType) {\n    var axes = [];\n    var angleAxis = this._angleAxis;\n    var radiusAxis = this._radiusAxis;\n    angleAxis.scale.type === scaleType && axes.push(angleAxis);\n    radiusAxis.scale.type === scaleType && axes.push(radiusAxis);\n    return axes;\n  },\n\n  /**\n   * @return {module:echarts/coord/polar/AngleAxis}\n   */\n  getAngleAxis: function () {\n    return this._angleAxis;\n  },\n\n  /**\n   * @return {module:echarts/coord/polar/RadiusAxis}\n   */\n  getRadiusAxis: function () {\n    return this._radiusAxis;\n  },\n\n  /**\n   * @param {module:echarts/coord/polar/Axis}\n   * @return {module:echarts/coord/polar/Axis}\n   */\n  getOtherAxis: function (axis) {\n    var angleAxis = this._angleAxis;\n    return axis === angleAxis ? this._radiusAxis : angleAxis;\n  },\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/polar/Axis}\n   */\n  getBaseAxis: function () {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAngleAxis();\n  },\n\n  /**\n   * @param {string} [dim] 'radius' or 'angle' or 'auto' or null/undefined\n   * @return {Object} {baseAxes: [], otherAxes: []}\n   */\n  getTooltipAxes: function (dim) {\n    var baseAxis = dim != null && dim !== 'auto' ? this.getAxis(dim) : this.getBaseAxis();\n    return {\n      baseAxes: [baseAxis],\n      otherAxes: [this.getOtherAxis(baseAxis)]\n    };\n  },\n\n  /**\n   * Convert a single data item to (x, y) point.\n   * Parameter data is an array which the first element is radius and the second is angle\n   * @param {Array.<number>} data\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, clamp) {\n    return this.coordToPoint([this._radiusAxis.dataToRadius(data[0], clamp), this._angleAxis.dataToAngle(data[1], clamp)]);\n  },\n\n  /**\n   * Convert a (x, y) point to data\n   * @param {Array.<number>} point\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  pointToData: function (point, clamp) {\n    var coord = this.pointToCoord(point);\n    return [this._radiusAxis.radiusToData(coord[0], clamp), this._angleAxis.angleToData(coord[1], clamp)];\n  },\n\n  /**\n   * Convert a (x, y) point to (radius, angle) coord\n   * @param {Array.<number>} point\n   * @return {Array.<number>}\n   */\n  pointToCoord: function (point) {\n    var dx = point[0] - this.cx;\n    var dy = point[1] - this.cy;\n    var angleAxis = this.getAngleAxis();\n    var extent = angleAxis.getExtent();\n    var minAngle = Math.min(extent[0], extent[1]);\n    var maxAngle = Math.max(extent[0], extent[1]); // Fix fixed extent in polarCreator\n    // FIXME\n\n    angleAxis.inverse ? minAngle = maxAngle - 360 : maxAngle = minAngle + 360;\n    var radius = Math.sqrt(dx * dx + dy * dy);\n    dx /= radius;\n    dy /= radius;\n    var radian = Math.atan2(-dy, dx) / Math.PI * 180; // move to angleExtent\n\n    var dir = radian < minAngle ? 1 : -1;\n\n    while (radian < minAngle || radian > maxAngle) {\n      radian += dir * 360;\n    }\n\n    return [radius, radian];\n  },\n\n  /**\n   * Convert a (radius, angle) coord to (x, y) point\n   * @param {Array.<number>} coord\n   * @return {Array.<number>}\n   */\n  coordToPoint: function (coord) {\n    var radius = coord[0];\n    var radian = coord[1] / 180 * Math.PI;\n    var x = Math.cos(radian) * radius + this.cx; // Inverse the y\n\n    var y = -Math.sin(radian) * radius + this.cy;\n    return [x, y];\n  }\n};\nvar _default = Polar;\nmodule.exports = _default;","var Gradient = require(\"zrender/lib/graphic/Gradient\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = {\n  createOnAllSeries: true,\n  performRawSeries: true,\n  reset: function (seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.color').split('.');\n    var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n    || seriesModel.getColorFromPalette( // TODO series count changed.\n    seriesModel.name, null, ecModel.getSeriesCount()); // Default color\n    // FIXME Set color function or use the platte color\n\n    data.setVisual('color', color); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      if (typeof color === 'function' && !(color instanceof Gradient)) {\n        data.each(function (idx) {\n          data.setItemVisual(idx, 'color', color(seriesModel.getDataParams(idx)));\n        });\n      } // itemStyle in each data item\n\n\n      var dataEach = function (data, idx) {\n        var itemModel = data.getItemModel(idx);\n        var color = itemModel.get(colorAccessPath, true);\n\n        if (color != null) {\n          data.setItemVisual(idx, 'color', color);\n        }\n      };\n\n      return {\n        dataEach: data.hasItemOption ? dataEach : null\n      };\n    }\n  }\n};\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar samplers = {\n  average: function (frame) {\n    var sum = 0;\n    var count = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      if (!isNaN(frame[i])) {\n        sum += frame[i];\n        count++;\n      }\n    } // Return NaN if count is 0\n\n\n    return count === 0 ? NaN : sum / count;\n  },\n  sum: function (frame) {\n    var sum = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      // Ignore NaN\n      sum += frame[i] || 0;\n    }\n\n    return sum;\n  },\n  max: function (frame) {\n    var max = -Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] > max && (max = frame[i]);\n    } // NaN will cause illegal axis extent.\n\n\n    return isFinite(max) ? max : NaN;\n  },\n  min: function (frame) {\n    var min = Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] < min && (min = frame[i]);\n    } // NaN will cause illegal axis extent.\n\n\n    return isFinite(min) ? min : NaN;\n  },\n  // TODO\n  // Median\n  nearest: function (frame) {\n    return frame[0];\n  }\n};\n\nvar indexSampler = function (frame, value) {\n  return Math.round(frame.length / 2);\n};\n\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    modifyOutputEnd: true,\n    reset: function (seriesModel, ecModel, api) {\n      var data = seriesModel.getData();\n      var sampling = seriesModel.get('sampling');\n      var coordSys = seriesModel.coordinateSystem; // Only cartesian2d support down sampling\n\n      if (coordSys.type === 'cartesian2d' && sampling) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var extent = baseAxis.getExtent(); // Coordinste system has been resized\n\n        var size = extent[1] - extent[0];\n        var rate = Math.round(data.count() / size);\n\n        if (rate > 1) {\n          var sampler;\n\n          if (typeof sampling === 'string') {\n            sampler = samplers[sampling];\n          } else if (typeof sampling === 'function') {\n            sampler = sampling;\n          }\n\n          if (sampler) {\n            // Only support sample the first dim mapped from value axis.\n            seriesModel.setData(data.downSample(data.mapDimension(valueAxis.dim), 1 / rate, sampler, indexSampler));\n          }\n        }\n      }\n    }\n  };\n}\n\nmodule.exports = _default;","var textContain = require(\"zrender/lib/contain/text\");\n\nvar graphicUtil = require(\"../../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PATH_COLOR = ['textStyle', 'color'];\nvar _default = {\n  /**\n   * Get color property or get color from option.textStyle.color\n   * @param {boolean} [isEmphasis]\n   * @return {string}\n   */\n  getTextColor: function (isEmphasis) {\n    var ecModel = this.ecModel;\n    return this.getShallow('color') || (!isEmphasis && ecModel ? ecModel.get(PATH_COLOR) : null);\n  },\n\n  /**\n   * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n   * @return {string}\n   */\n  getFont: function () {\n    return graphicUtil.getFont({\n      fontStyle: this.getShallow('fontStyle'),\n      fontWeight: this.getShallow('fontWeight'),\n      fontSize: this.getShallow('fontSize'),\n      fontFamily: this.getShallow('fontFamily')\n    }, this.ecModel);\n  },\n  getTextRect: function (text) {\n    return textContain.getBoundingRect(text, this.getFont(), this.getShallow('align'), this.getShallow('verticalAlign') || this.getShallow('baseline'), this.getShallow('padding'), this.getShallow('rich'), this.getShallow('truncateText'));\n  }\n};\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _whiskerBoxCommon = require(\"../helper/whiskerBoxCommon\");\n\nvar seriesModelMixin = _whiskerBoxCommon.seriesModelMixin;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar BoxplotSeries = SeriesModel.extend({\n  type: 'series.boxplot',\n  dependencies: ['xAxis', 'yAxis', 'grid'],\n  // TODO\n  // box width represents group size, so dimension should have 'size'.\n\n  /**\n   * @see <https://en.wikipedia.org/wiki/Box_plot>\n   * The meanings of 'min' and 'max' depend on user,\n   * and echarts do not need to know it.\n   * @readOnly\n   */\n  defaultValueDimensions: [{\n    name: 'min',\n    defaultTooltip: true\n  }, {\n    name: 'Q1',\n    defaultTooltip: true\n  }, {\n    name: 'median',\n    defaultTooltip: true\n  }, {\n    name: 'Q3',\n    defaultTooltip: true\n  }, {\n    name: 'max',\n    defaultTooltip: true\n  }],\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: null,\n\n  /**\n   * @override\n   */\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    layout: null,\n    // 'horizontal' or 'vertical'\n    boxWidth: [7, 50],\n    // [min, max] can be percent of band width.\n    itemStyle: {\n      color: '#fff',\n      borderWidth: 1\n    },\n    emphasis: {\n      itemStyle: {\n        borderWidth: 2,\n        shadowBlur: 5,\n        shadowOffsetX: 2,\n        shadowOffsetY: 2,\n        shadowColor: 'rgba(0,0,0,0.4)'\n      }\n    },\n    animationEasing: 'elasticOut',\n    animationDuration: 800\n  }\n});\nzrUtil.mixin(BoxplotSeries, seriesModelMixin, true);\nvar _default = BoxplotSeries;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar featureManager = require(\"../featureManager\");\n\nvar lang = require(\"../../../lang\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar brushLang = lang.toolbox.brush;\n\nfunction Brush(model, ecModel, api) {\n  this.model = model;\n  this.ecModel = ecModel;\n  this.api = api;\n  /**\n   * @private\n   * @type {string}\n   */\n\n  this._brushType;\n  /**\n   * @private\n   * @type {string}\n   */\n\n  this._brushMode;\n}\n\nBrush.defaultOption = {\n  show: true,\n  type: ['rect', 'polygon', 'lineX', 'lineY', 'keep', 'clear'],\n  icon: {\n    rect: 'M7.3,34.7 M0.4,10V-0.2h9.8 M89.6,10V-0.2h-9.8 M0.4,60v10.2h9.8 M89.6,60v10.2h-9.8 M12.3,22.4V10.5h13.1 M33.6,10.5h7.8 M49.1,10.5h7.8 M77.5,22.4V10.5h-13 M12.3,31.1v8.2 M77.7,31.1v8.2 M12.3,47.6v11.9h13.1 M33.6,59.5h7.6 M49.1,59.5 h7.7 M77.5,47.6v11.9h-13',\n    // jshint ignore:line\n    polygon: 'M55.2,34.9c1.7,0,3.1,1.4,3.1,3.1s-1.4,3.1-3.1,3.1 s-3.1-1.4-3.1-3.1S53.5,34.9,55.2,34.9z M50.4,51c1.7,0,3.1,1.4,3.1,3.1c0,1.7-1.4,3.1-3.1,3.1c-1.7,0-3.1-1.4-3.1-3.1 C47.3,52.4,48.7,51,50.4,51z M55.6,37.1l1.5-7.8 M60.1,13.5l1.6-8.7l-7.8,4 M59,19l-1,5.3 M24,16.1l6.4,4.9l6.4-3.3 M48.5,11.6 l-5.9,3.1 M19.1,12.8L9.7,5.1l1.1,7.7 M13.4,29.8l1,7.3l6.6,1.6 M11.6,18.4l1,6.1 M32.8,41.9 M26.6,40.4 M27.3,40.2l6.1,1.6 M49.9,52.1l-5.6-7.6l-4.9-1.2',\n    // jshint ignore:line\n    lineX: 'M15.2,30 M19.7,15.6V1.9H29 M34.8,1.9H40.4 M55.3,15.6V1.9H45.9 M19.7,44.4V58.1H29 M34.8,58.1H40.4 M55.3,44.4 V58.1H45.9 M12.5,20.3l-9.4,9.6l9.6,9.8 M3.1,29.9h16.5 M62.5,20.3l9.4,9.6L62.3,39.7 M71.9,29.9H55.4',\n    // jshint ignore:line\n    lineY: 'M38.8,7.7 M52.7,12h13.2v9 M65.9,26.6V32 M52.7,46.3h13.2v-9 M24.9,12H11.8v9 M11.8,26.6V32 M24.9,46.3H11.8v-9 M48.2,5.1l-9.3-9l-9.4,9.2 M38.9-3.9V12 M48.2,53.3l-9.3,9l-9.4-9.2 M38.9,62.3V46.4',\n    // jshint ignore:line\n    keep: 'M4,10.5V1h10.3 M20.7,1h6.1 M33,1h6.1 M55.4,10.5V1H45.2 M4,17.3v6.6 M55.6,17.3v6.6 M4,30.5V40h10.3 M20.7,40 h6.1 M33,40h6.1 M55.4,30.5V40H45.2 M21,18.9h62.9v48.6H21V18.9z',\n    // jshint ignore:line\n    clear: 'M22,14.7l30.9,31 M52.9,14.7L22,45.7 M4.7,16.8V4.2h13.1 M26,4.2h7.8 M41.6,4.2h7.8 M70.3,16.8V4.2H57.2 M4.7,25.9v8.6 M70.3,25.9v8.6 M4.7,43.2v12.6h13.1 M26,55.8h7.8 M41.6,55.8h7.8 M70.3,43.2v12.6H57.2' // jshint ignore:line\n\n  },\n  // `rect`, `polygon`, `lineX`, `lineY`, `keep`, `clear`\n  title: zrUtil.clone(brushLang.title)\n};\nvar proto = Brush.prototype; // proto.updateLayout = function (featureModel, ecModel, api) {\n\nproto.render = proto.updateView = function (featureModel, ecModel, api) {\n  var brushType;\n  var brushMode;\n  var isBrushed;\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel) {\n    brushType = brushModel.brushType;\n    brushMode = brushModel.brushOption.brushMode || 'single';\n    isBrushed |= brushModel.areas.length;\n  });\n  this._brushType = brushType;\n  this._brushMode = brushMode;\n  zrUtil.each(featureModel.get('type', true), function (type) {\n    featureModel.setIconStatus(type, (type === 'keep' ? brushMode === 'multiple' : type === 'clear' ? isBrushed : type === brushType) ? 'emphasis' : 'normal');\n  });\n};\n\nproto.getIcons = function () {\n  var model = this.model;\n  var availableIcons = model.get('icon', true);\n  var icons = {};\n  zrUtil.each(model.get('type', true), function (type) {\n    if (availableIcons[type]) {\n      icons[type] = availableIcons[type];\n    }\n  });\n  return icons;\n};\n\nproto.onclick = function (ecModel, api, type) {\n  var brushType = this._brushType;\n  var brushMode = this._brushMode;\n\n  if (type === 'clear') {\n    // Trigger parallel action firstly\n    api.dispatchAction({\n      type: 'axisAreaSelect',\n      intervals: []\n    });\n    api.dispatchAction({\n      type: 'brush',\n      command: 'clear',\n      // Clear all areas of all brush components.\n      areas: []\n    });\n  } else {\n    api.dispatchAction({\n      type: 'takeGlobalCursor',\n      key: 'brush',\n      brushOption: {\n        brushType: type === 'keep' ? brushType : brushType === type ? false : type,\n        brushMode: type === 'keep' ? brushMode === 'multiple' ? 'single' : 'multiple' : brushMode\n      }\n    });\n  }\n};\n\nfeatureManager.register('brush', Brush);\nvar _default = Brush;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/model/Model} axisPointerModel\n */\nfunction buildElStyle(axisPointerModel) {\n  var axisPointerType = axisPointerModel.get('type');\n  var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n  var style;\n\n  if (axisPointerType === 'line') {\n    style = styleModel.getLineStyle();\n    style.fill = null;\n  } else if (axisPointerType === 'shadow') {\n    style = styleModel.getAreaStyle();\n    style.stroke = null;\n  }\n\n  return style;\n}\n/**\n * @param {Function} labelPos {align, verticalAlign, position}\n */\n\n\nfunction buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos) {\n  var value = axisPointerModel.get('value');\n  var text = getValueLabel(value, axisModel.axis, axisModel.ecModel, axisPointerModel.get('seriesDataIndices'), {\n    precision: axisPointerModel.get('label.precision'),\n    formatter: axisPointerModel.get('label.formatter')\n  });\n  var labelModel = axisPointerModel.getModel('label');\n  var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n  var font = labelModel.getFont();\n  var textRect = textContain.getBoundingRect(text, font);\n  var position = labelPos.position;\n  var width = textRect.width + paddings[1] + paddings[3];\n  var height = textRect.height + paddings[0] + paddings[2]; // Adjust by align.\n\n  var align = labelPos.align;\n  align === 'right' && (position[0] -= width);\n  align === 'center' && (position[0] -= width / 2);\n  var verticalAlign = labelPos.verticalAlign;\n  verticalAlign === 'bottom' && (position[1] -= height);\n  verticalAlign === 'middle' && (position[1] -= height / 2); // Not overflow ec container\n\n  confineInContainer(position, width, height, api);\n  var bgColor = labelModel.get('backgroundColor');\n\n  if (!bgColor || bgColor === 'auto') {\n    bgColor = axisModel.get('axisLine.lineStyle.color');\n  }\n\n  elOption.label = {\n    shape: {\n      x: 0,\n      y: 0,\n      width: width,\n      height: height,\n      r: labelModel.get('borderRadius')\n    },\n    position: position.slice(),\n    // TODO: rich\n    style: {\n      text: text,\n      textFont: font,\n      textFill: labelModel.getTextColor(),\n      textPosition: 'inside',\n      fill: bgColor,\n      stroke: labelModel.get('borderColor') || 'transparent',\n      lineWidth: labelModel.get('borderWidth') || 0,\n      shadowBlur: labelModel.get('shadowBlur'),\n      shadowColor: labelModel.get('shadowColor'),\n      shadowOffsetX: labelModel.get('shadowOffsetX'),\n      shadowOffsetY: labelModel.get('shadowOffsetY')\n    },\n    // Lable should be over axisPointer.\n    z2: 10\n  };\n} // Do not overflow ec container\n\n\nfunction confineInContainer(position, width, height, api) {\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  position[0] = Math.min(position[0] + width, viewWidth) - width;\n  position[1] = Math.min(position[1] + height, viewHeight) - height;\n  position[0] = Math.max(position[0], 0);\n  position[1] = Math.max(position[1], 0);\n}\n/**\n * @param {number} value\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} opt\n * @param {Array.<Object>} seriesDataIndices\n * @param {number|string} opt.precision 'auto' or a number\n * @param {string|Function} opt.formatter label formatter\n */\n\n\nfunction getValueLabel(value, axis, ecModel, seriesDataIndices, opt) {\n  value = axis.scale.parse(value);\n  var text = axis.scale.getLabel( // If `precision` is set, width can be fixed (like '12.00500'), which\n  // helps to debounce when when moving label.\n  value, {\n    precision: opt.precision\n  });\n  var formatter = opt.formatter;\n\n  if (formatter) {\n    var params = {\n      value: axisHelper.getAxisRawValue(axis, value),\n      seriesData: []\n    };\n    zrUtil.each(seriesDataIndices, function (idxItem) {\n      var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n      var dataIndex = idxItem.dataIndexInside;\n      var dataParams = series && series.getDataParams(dataIndex);\n      dataParams && params.seriesData.push(dataParams);\n    });\n\n    if (zrUtil.isString(formatter)) {\n      text = formatter.replace('{value}', text);\n    } else if (zrUtil.isFunction(formatter)) {\n      text = formatter(params);\n    }\n  }\n\n  return text;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @param {number} value\n * @param {Object} layoutInfo {\n *  rotation, position, labelOffset, labelDirection, labelMargin\n * }\n */\n\n\nfunction getTransformedPosition(axis, value, layoutInfo) {\n  var transform = matrix.create();\n  matrix.rotate(transform, transform, layoutInfo.rotation);\n  matrix.translate(transform, transform, layoutInfo.position);\n  return graphic.applyTransform([axis.dataToCoord(value), (layoutInfo.labelOffset || 0) + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)], transform);\n}\n\nfunction buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api) {\n  var textLayout = AxisBuilder.innerTextLayout(layoutInfo.rotation, 0, layoutInfo.labelDirection);\n  layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n  buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n    position: getTransformedPosition(axisModel.axis, value, layoutInfo),\n    align: textLayout.textAlign,\n    verticalAlign: textLayout.textVerticalAlign\n  });\n}\n/**\n * @param {Array.<number>} p1\n * @param {Array.<number>} p2\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeLineShape(p1, p2, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x1: p1[xDimIndex],\n    y1: p1[1 - xDimIndex],\n    x2: p2[xDimIndex],\n    y2: p2[1 - xDimIndex]\n  };\n}\n/**\n * @param {Array.<number>} xy\n * @param {Array.<number>} wh\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeRectShape(xy, wh, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x: xy[xDimIndex],\n    y: xy[1 - xDimIndex],\n    width: wh[xDimIndex],\n    height: wh[1 - xDimIndex]\n  };\n}\n\nfunction makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n  return {\n    cx: cx,\n    cy: cy,\n    r0: r0,\n    r: r,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    clockwise: true\n  };\n}\n\nexports.buildElStyle = buildElStyle;\nexports.buildLabelElOption = buildLabelElOption;\nexports.getValueLabel = getValueLabel;\nexports.getTransformedPosition = getTransformedPosition;\nexports.buildCartesianSingleLabelElOption = buildCartesianSingleLabelElOption;\nexports.makeLineShape = makeLineShape;\nexports.makeRectShape = makeRectShape;\nexports.makeSectorShape = makeSectorShape;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    reset: function (seriesModel, ecModel) {\n      var legendModels = ecModel.findComponents({\n        mainType: 'legend'\n      });\n\n      if (!legendModels || !legendModels.length) {\n        return;\n      }\n\n      var data = seriesModel.getData();\n      data.filterSelf(function (idx) {\n        var name = data.getName(idx); // If in any legend component the status is not selected.\n\n        for (var i = 0; i < legendModels.length; i++) {\n          if (!legendModels[i].isSelected(name)) {\n            return false;\n          }\n        }\n\n        return true;\n      });\n    }\n  };\n}\n\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\n\nvar _simpleLayoutHelper = require(\"./simpleLayoutHelper\");\n\nvar simpleLayout = _simpleLayoutHelper.simpleLayout;\nvar simpleLayoutEdge = _simpleLayoutHelper.simpleLayoutEdge;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var layout = seriesModel.get('layout');\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.type !== 'view') {\n      var data = seriesModel.getData();\n      var dimensions = [];\n      each(coordSys.dimensions, function (coordDim) {\n        dimensions = dimensions.concat(data.mapDimension(coordDim, true));\n      });\n\n      for (var dataIndex = 0; dataIndex < data.count(); dataIndex++) {\n        var value = [];\n        var hasValue = false;\n\n        for (var i = 0; i < dimensions.length; i++) {\n          var val = data.get(dimensions[i], dataIndex);\n\n          if (!isNaN(val)) {\n            hasValue = true;\n          }\n\n          value.push(val);\n        }\n\n        if (hasValue) {\n          data.setItemLayout(dataIndex, coordSys.dataToPoint(value));\n        } else {\n          // Also {Array.<number>}, not undefined to avoid if...else... statement\n          data.setItemLayout(dataIndex, [NaN, NaN]);\n        }\n      }\n\n      simpleLayoutEdge(data.graph);\n    } else if (!layout || layout === 'none') {\n      simpleLayout(seriesModel);\n    }\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar magicTypeLang = lang.toolbox.magicType;\n\nfunction MagicType(model) {\n  this.model = model;\n}\n\nMagicType.defaultOption = {\n  show: true,\n  type: [],\n  // Icon group\n  icon: {\n    line: 'M4.1,28.9h7.1l9.3-22l7.4,38l9.7-19.7l3,12.8h14.9M4.1,58h51.4',\n    bar: 'M6.7,22.9h10V48h-10V22.9zM24.9,13h10v35h-10V13zM43.2,2h10v46h-10V2zM3.1,58h53.7',\n    stack: 'M8.2,38.4l-8.4,4.1l30.6,15.3L60,42.5l-8.1-4.1l-21.5,11L8.2,38.4z M51.9,30l-8.1,4.2l-13.4,6.9l-13.9-6.9L8.2,30l-8.4,4.2l8.4,4.2l22.2,11l21.5-11l8.1-4.2L51.9,30z M51.9,21.7l-8.1,4.2L35.7,30l-5.3,2.8L24.9,30l-8.4-4.1l-8.3-4.2l-8.4,4.2L8.2,30l8.3,4.2l13.9,6.9l13.4-6.9l8.1-4.2l8.1-4.1L51.9,21.7zM30.4,2.2L-0.2,17.5l8.4,4.1l8.3,4.2l8.4,4.2l5.5,2.7l5.3-2.7l8.1-4.2l8.1-4.2l8.1-4.1L30.4,2.2z',\n    // jshint ignore:line\n    tiled: 'M2.3,2.2h22.8V25H2.3V2.2z M35,2.2h22.8V25H35V2.2zM2.3,35h22.8v22.8H2.3V35z M35,35h22.8v22.8H35V35z'\n  },\n  // `line`, `bar`, `stack`, `tiled`\n  title: zrUtil.clone(magicTypeLang.title),\n  option: {},\n  seriesIndex: {}\n};\nvar proto = MagicType.prototype;\n\nproto.getIcons = function () {\n  var model = this.model;\n  var availableIcons = model.get('icon');\n  var icons = {};\n  zrUtil.each(model.get('type'), function (type) {\n    if (availableIcons[type]) {\n      icons[type] = availableIcons[type];\n    }\n  });\n  return icons;\n};\n\nvar seriesOptGenreator = {\n  'line': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        type: 'line',\n        // Preserve data related option\n        data: seriesModel.get('data'),\n        stack: seriesModel.get('stack'),\n        markPoint: seriesModel.get('markPoint'),\n        markLine: seriesModel.get('markLine')\n      }, model.get('option.line') || {}, true);\n    }\n  },\n  'bar': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line') {\n      return zrUtil.merge({\n        id: seriesId,\n        type: 'bar',\n        // Preserve data related option\n        data: seriesModel.get('data'),\n        stack: seriesModel.get('stack'),\n        markPoint: seriesModel.get('markPoint'),\n        markLine: seriesModel.get('markLine')\n      }, model.get('option.bar') || {}, true);\n    }\n  },\n  'stack': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line' || seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        stack: '__ec_magicType_stack__'\n      }, model.get('option.stack') || {}, true);\n    }\n  },\n  'tiled': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line' || seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        stack: ''\n      }, model.get('option.tiled') || {}, true);\n    }\n  }\n};\nvar radioTypes = [['line', 'bar'], ['stack', 'tiled']];\n\nproto.onclick = function (ecModel, api, type) {\n  var model = this.model;\n  var seriesIndex = model.get('seriesIndex.' + type); // Not supported magicType\n\n  if (!seriesOptGenreator[type]) {\n    return;\n  }\n\n  var newOption = {\n    series: []\n  };\n\n  var generateNewSeriesTypes = function (seriesModel) {\n    var seriesType = seriesModel.subType;\n    var seriesId = seriesModel.id;\n    var newSeriesOpt = seriesOptGenreator[type](seriesType, seriesId, seriesModel, model);\n\n    if (newSeriesOpt) {\n      // PENDING If merge original option?\n      zrUtil.defaults(newSeriesOpt, seriesModel.option);\n      newOption.series.push(newSeriesOpt);\n    } // Modify boundaryGap\n\n\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.type === 'cartesian2d' && (type === 'line' || type === 'bar')) {\n      var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n\n      if (categoryAxis) {\n        var axisDim = categoryAxis.dim;\n        var axisType = axisDim + 'Axis';\n        var axisModel = ecModel.queryComponents({\n          mainType: axisType,\n          index: seriesModel.get(name + 'Index'),\n          id: seriesModel.get(name + 'Id')\n        })[0];\n        var axisIndex = axisModel.componentIndex;\n        newOption[axisType] = newOption[axisType] || [];\n\n        for (var i = 0; i <= axisIndex; i++) {\n          newOption[axisType][axisIndex] = newOption[axisType][axisIndex] || {};\n        }\n\n        newOption[axisType][axisIndex].boundaryGap = type === 'bar' ? true : false;\n      }\n    }\n  };\n\n  zrUtil.each(radioTypes, function (radio) {\n    if (zrUtil.indexOf(radio, type) >= 0) {\n      zrUtil.each(radio, function (item) {\n        model.setIconStatus(item, 'normal');\n      });\n    }\n  });\n  model.setIconStatus(type, 'emphasis');\n  ecModel.eachComponent({\n    mainType: 'series',\n    query: seriesIndex == null ? null : {\n      seriesIndex: seriesIndex\n    }\n  }, generateNewSeriesTypes);\n  api.dispatchAction({\n    type: 'changeMagicType',\n    currentType: type,\n    newOption: newOption\n  });\n};\n\necharts.registerAction({\n  type: 'changeMagicType',\n  event: 'magicTypeChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  ecModel.mergeOption(payload.newOption);\n});\nfeatureManager.register('magicType', MagicType);\nvar _default = MagicType;\nmodule.exports = _default;","var env = require(\"../core/env\");\n\nvar urn = 'urn:schemas-microsoft-com:vml';\nvar win = typeof window === 'undefined' ? null : window;\nvar vmlInited = false;\nvar doc = win && win.document;\n\nfunction createNode(tagName) {\n  return doCreateNode(tagName);\n} // Avoid assign to an exported variable, for transforming to cjs.\n\n\nvar doCreateNode;\n\nif (doc && !env.canvasSupported) {\n  try {\n    !doc.namespaces.zrvml && doc.namespaces.add('zrvml', urn);\n\n    doCreateNode = function (tagName) {\n      return doc.createElement('<zrvml:' + tagName + ' class=\"zrvml\">');\n    };\n  } catch (e) {\n    doCreateNode = function (tagName) {\n      return doc.createElement('<' + tagName + ' xmlns=\"' + urn + '\" class=\"zrvml\">');\n    };\n  }\n} // From raphael\n\n\nfunction initVML() {\n  if (vmlInited || !doc) {\n    return;\n  }\n\n  vmlInited = true;\n  var styleSheets = doc.styleSheets;\n\n  if (styleSheets.length < 31) {\n    doc.createStyleSheet().addRule('.zrvml', 'behavior:url(#default#VML)');\n  } else {\n    // http://msdn.microsoft.com/en-us/library/ms531194%28VS.85%29.aspx\n    styleSheets[0].addRule('.zrvml', 'behavior:url(#default#VML)');\n  }\n}\n\nexports.doc = doc;\nexports.createNode = createNode;\nexports.initVML = initVML;","var SeriesModel = require(\"../../model/Series\");\n\nvar createGraphFromNodeEdge = require(\"../helper/createGraphFromNodeEdge\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Get initial data and define sankey view's series model\n * @author Deqing Li(annong035@gmail.com)\n */\nvar SankeySeries = SeriesModel.extend({\n  type: 'series.sankey',\n  layoutInfo: null,\n\n  /**\n   * Init a graph data structure from data in option series\n   *\n   * @param  {Object} option  the object used to config echarts view\n   * @return {module:echarts/data/List} storage initial data\n   */\n  getInitialData: function (option) {\n    var links = option.edges || option.links;\n    var nodes = option.data || option.nodes;\n\n    if (nodes && links) {\n      var graph = createGraphFromNodeEdge(nodes, links, this, true);\n      return graph.data;\n    }\n  },\n  setNodePosition: function (dataIndex, localPosition) {\n    var dataItem = this.option.data[dataIndex];\n    dataItem.localX = localPosition[0];\n    dataItem.localY = localPosition[1];\n  },\n\n  /**\n   * Return the graphic data structure\n   *\n   * @return {module:echarts/data/Graph} graphic data structure\n   */\n  getGraph: function () {\n    return this.getData().graph;\n  },\n\n  /**\n   * Get edge data of graphic data structure\n   *\n   * @return {module:echarts/data/List} data structure of list\n   */\n  getEdgeData: function () {\n    return this.getGraph().edgeData;\n  },\n\n  /**\n   * @override\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    // dataType === 'node' or empty do not show tooltip by default\n    if (dataType === 'edge') {\n      var params = this.getDataParams(dataIndex, dataType);\n      var rawDataOpt = params.data;\n      var html = rawDataOpt.source + ' -- ' + rawDataOpt.target;\n\n      if (params.value) {\n        html += ' : ' + params.value;\n      }\n\n      return encodeHTML(html);\n    }\n\n    return SankeySeries.superCall(this, 'formatTooltip', dataIndex, multipleSeries);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'view',\n    layout: null,\n    // the position of the whole view\n    left: '5%',\n    top: '5%',\n    right: '20%',\n    bottom: '5%',\n    // the dx of the node\n    nodeWidth: 20,\n    // the vertical distance between two nodes\n    nodeGap: 8,\n    // control if the node can move or not\n    draggable: true,\n    // the number of iterations to change the position of the node\n    layoutIterations: 32,\n    label: {\n      show: true,\n      position: 'right',\n      color: '#000',\n      fontSize: 12\n    },\n    itemStyle: {\n      borderWidth: 1,\n      borderColor: '#333'\n    },\n    lineStyle: {\n      color: '#314656',\n      opacity: 0.2,\n      curveness: 0.5\n    },\n    emphasis: {\n      label: {\n        show: true\n      },\n      lineStyle: {\n        opacity: 0.6\n      }\n    },\n    animationEasing: 'linear',\n    animationDuration: 1000\n  }\n});\nvar _default = SankeySeries;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"../coord/geo/GeoModel\");\n\nrequire(\"../coord/geo/geoCreator\");\n\nrequire(\"./geo/GeoView\");\n\nrequire(\"../action/geoRoam\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction makeAction(method, actionInfo) {\n  actionInfo.update = 'updateView';\n  echarts.registerAction(actionInfo, function (payload, ecModel) {\n    var selected = {};\n    ecModel.eachComponent({\n      mainType: 'geo',\n      query: payload\n    }, function (geoModel) {\n      geoModel[method](payload.name);\n      var geo = geoModel.coordinateSystem;\n      zrUtil.each(geo.regions, function (region) {\n        selected[region.name] = geoModel.isSelected(region.name) || false;\n      });\n    });\n    return {\n      selected: selected,\n      name: payload.name\n    };\n  });\n}\n\nmakeAction('toggleSelected', {\n  type: 'geoToggleSelect',\n  event: 'geoselectchanged'\n});\nmakeAction('select', {\n  type: 'geoSelect',\n  event: 'geoselected'\n});\nmakeAction('unSelect', {\n  type: 'geoUnSelect',\n  event: 'geounselected'\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar layout = require(\"../../util/layout\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// (24*60*60*1000)\nvar PROXIMATE_ONE_DAY = 86400000;\n/**\n * Calendar\n *\n * @constructor\n *\n * @param {Object} calendarModel calendarModel\n * @param {Object} ecModel       ecModel\n * @param {Object} api           api\n */\n\nfunction Calendar(calendarModel, ecModel, api) {\n  this._model = calendarModel;\n}\n\nCalendar.prototype = {\n  constructor: Calendar,\n  type: 'calendar',\n  dimensions: ['time', 'value'],\n  // Required in createListFromData\n  getDimensionsInfo: function () {\n    return [{\n      name: 'time',\n      type: 'time'\n    }, 'value'];\n  },\n  getRangeInfo: function () {\n    return this._rangeInfo;\n  },\n  getModel: function () {\n    return this._model;\n  },\n  getRect: function () {\n    return this._rect;\n  },\n  getCellWidth: function () {\n    return this._sw;\n  },\n  getCellHeight: function () {\n    return this._sh;\n  },\n  getOrient: function () {\n    return this._orient;\n  },\n\n  /**\n   * getFirstDayOfWeek\n   *\n   * @example\n   *     0 : start at Sunday\n   *     1 : start at Monday\n   *\n   * @return {number}\n   */\n  getFirstDayOfWeek: function () {\n    return this._firstDayOfWeek;\n  },\n\n  /**\n   * get date info\n   *\n   * @param  {string|number} date date\n   * @return {Object}\n   * {\n   *      y: string, local full year, eg., '1940',\n   *      m: string, local month, from '01' ot '12',\n   *      d: string, local date, from '01' to '31' (if exists),\n   *      day: It is not date.getDay(). It is the location of the cell in a week, from 0 to 6,\n   *      time: timestamp,\n   *      formatedDate: string, yyyy-MM-dd,\n   *      date: original date object.\n   * }\n   */\n  getDateInfo: function (date) {\n    date = numberUtil.parseDate(date);\n    var y = date.getFullYear();\n    var m = date.getMonth() + 1;\n    m = m < 10 ? '0' + m : m;\n    var d = date.getDate();\n    d = d < 10 ? '0' + d : d;\n    var day = date.getDay();\n    day = Math.abs((day + 7 - this.getFirstDayOfWeek()) % 7);\n    return {\n      y: y,\n      m: m,\n      d: d,\n      day: day,\n      time: date.getTime(),\n      formatedDate: y + '-' + m + '-' + d,\n      date: date\n    };\n  },\n  getNextNDay: function (date, n) {\n    n = n || 0;\n\n    if (n === 0) {\n      return this.getDateInfo(date);\n    }\n\n    date = new Date(this.getDateInfo(date).time);\n    date.setDate(date.getDate() + n);\n    return this.getDateInfo(date);\n  },\n  update: function (ecModel, api) {\n    this._firstDayOfWeek = +this._model.getModel('dayLabel').get('firstDay');\n    this._orient = this._model.get('orient');\n    this._lineWidth = this._model.getModel('itemStyle').getItemStyle().lineWidth || 0;\n    this._rangeInfo = this._getRangeInfo(this._initRangeOption());\n    var weeks = this._rangeInfo.weeks || 1;\n    var whNames = ['width', 'height'];\n\n    var cellSize = this._model.get('cellSize').slice();\n\n    var layoutParams = this._model.getBoxLayoutParams();\n\n    var cellNumbers = this._orient === 'horizontal' ? [weeks, 7] : [7, weeks];\n    zrUtil.each([0, 1], function (idx) {\n      if (cellSizeSpecified(cellSize, idx)) {\n        layoutParams[whNames[idx]] = cellSize[idx] * cellNumbers[idx];\n      }\n    });\n    var whGlobal = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var calendarRect = this._rect = layout.getLayoutRect(layoutParams, whGlobal);\n    zrUtil.each([0, 1], function (idx) {\n      if (!cellSizeSpecified(cellSize, idx)) {\n        cellSize[idx] = calendarRect[whNames[idx]] / cellNumbers[idx];\n      }\n    });\n\n    function cellSizeSpecified(cellSize, idx) {\n      return cellSize[idx] != null && cellSize[idx] !== 'auto';\n    }\n\n    this._sw = cellSize[0];\n    this._sh = cellSize[1];\n  },\n\n  /**\n   * Convert a time data(time, value) item to (x, y) point.\n   *\n   * @override\n   * @param  {Array|number} data data\n   * @param  {boolean} [clamp=true] out of range\n   * @return {Array} point\n   */\n  dataToPoint: function (data, clamp) {\n    zrUtil.isArray(data) && (data = data[0]);\n    clamp == null && (clamp = true);\n    var dayInfo = this.getDateInfo(data);\n    var range = this._rangeInfo;\n    var date = dayInfo.formatedDate; // if not in range return [NaN, NaN]\n\n    if (clamp && !(dayInfo.time >= range.start.time && dayInfo.time < range.end.time + PROXIMATE_ONE_DAY)) {\n      return [NaN, NaN];\n    }\n\n    var week = dayInfo.day;\n\n    var nthWeek = this._getRangeInfo([range.start.time, date]).nthWeek;\n\n    if (this._orient === 'vertical') {\n      return [this._rect.x + week * this._sw + this._sw / 2, this._rect.y + nthWeek * this._sh + this._sh / 2];\n    }\n\n    return [this._rect.x + nthWeek * this._sw + this._sw / 2, this._rect.y + week * this._sh + this._sh / 2];\n  },\n\n  /**\n   * Convert a (x, y) point to time data\n   *\n   * @override\n   * @param  {string} point point\n   * @return {string}       data\n   */\n  pointToData: function (point) {\n    var date = this.pointToDate(point);\n    return date && date.time;\n  },\n\n  /**\n   * Convert a time date item to (x, y) four point.\n   *\n   * @param  {Array} data  date[0] is date\n   * @param  {boolean} [clamp=true]  out of range\n   * @return {Object}       point\n   */\n  dataToRect: function (data, clamp) {\n    var point = this.dataToPoint(data, clamp);\n    return {\n      contentShape: {\n        x: point[0] - (this._sw - this._lineWidth) / 2,\n        y: point[1] - (this._sh - this._lineWidth) / 2,\n        width: this._sw - this._lineWidth,\n        height: this._sh - this._lineWidth\n      },\n      center: point,\n      tl: [point[0] - this._sw / 2, point[1] - this._sh / 2],\n      tr: [point[0] + this._sw / 2, point[1] - this._sh / 2],\n      br: [point[0] + this._sw / 2, point[1] + this._sh / 2],\n      bl: [point[0] - this._sw / 2, point[1] + this._sh / 2]\n    };\n  },\n\n  /**\n   * Convert a (x, y) point to time date\n   *\n   * @param  {Array} point point\n   * @return {Object}       date\n   */\n  pointToDate: function (point) {\n    var nthX = Math.floor((point[0] - this._rect.x) / this._sw) + 1;\n    var nthY = Math.floor((point[1] - this._rect.y) / this._sh) + 1;\n    var range = this._rangeInfo.range;\n\n    if (this._orient === 'vertical') {\n      return this._getDateByWeeksAndDay(nthY, nthX - 1, range);\n    }\n\n    return this._getDateByWeeksAndDay(nthX, nthY - 1, range);\n  },\n\n  /**\n   * @inheritDoc\n   */\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\n\n  /**\n   * @inheritDoc\n   */\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData'),\n\n  /**\n   * initRange\n   *\n   * @private\n   * @return {Array} [start, end]\n   */\n  _initRangeOption: function () {\n    var range = this._model.get('range');\n\n    var rg = range;\n\n    if (zrUtil.isArray(rg) && rg.length === 1) {\n      rg = rg[0];\n    }\n\n    if (/^\\d{4}$/.test(rg)) {\n      range = [rg + '-01-01', rg + '-12-31'];\n    }\n\n    if (/^\\d{4}[\\/|-]\\d{1,2}$/.test(rg)) {\n      var start = this.getDateInfo(rg);\n      var firstDay = start.date;\n      firstDay.setMonth(firstDay.getMonth() + 1);\n      var end = this.getNextNDay(firstDay, -1);\n      range = [start.formatedDate, end.formatedDate];\n    }\n\n    if (/^\\d{4}[\\/|-]\\d{1,2}[\\/|-]\\d{1,2}$/.test(rg)) {\n      range = [rg, rg];\n    }\n\n    var tmp = this._getRangeInfo(range);\n\n    if (tmp.start.time > tmp.end.time) {\n      range.reverse();\n    }\n\n    return range;\n  },\n\n  /**\n   * range info\n   *\n   * @private\n   * @param  {Array} range range ['2017-01-01', '2017-07-08']\n   *  If range[0] > range[1], they will not be reversed.\n   * @return {Object}       obj\n   */\n  _getRangeInfo: function (range) {\n    range = [this.getDateInfo(range[0]), this.getDateInfo(range[1])];\n    var reversed;\n\n    if (range[0].time > range[1].time) {\n      reversed = true;\n      range.reverse();\n    }\n\n    var allDay = Math.floor(range[1].time / PROXIMATE_ONE_DAY) - Math.floor(range[0].time / PROXIMATE_ONE_DAY) + 1; // Consider case:\n    // Firstly set system timezone as \"Time Zone: America/Toronto\",\n    // ```\n    // var first = new Date(1478412000000 - 3600 * 1000 * 2.5);\n    // var second = new Date(1478412000000);\n    // var allDays = Math.floor(second / ONE_DAY) - Math.floor(first / ONE_DAY) + 1;\n    // ```\n    // will get wrong result because of DST. So we should fix it.\n\n    var date = new Date(range[0].time);\n    var startDateNum = date.getDate();\n    var endDateNum = range[1].date.getDate();\n    date.setDate(startDateNum + allDay - 1); // The bias can not over a month, so just compare date.\n\n    if (date.getDate() !== endDateNum) {\n      var sign = date.getTime() - range[1].time > 0 ? 1 : -1;\n\n      while (date.getDate() !== endDateNum && (date.getTime() - range[1].time) * sign > 0) {\n        allDay -= sign;\n        date.setDate(startDateNum + allDay - 1);\n      }\n    }\n\n    var weeks = Math.floor((allDay + range[0].day + 6) / 7);\n    var nthWeek = reversed ? -weeks + 1 : weeks - 1;\n    reversed && range.reverse();\n    return {\n      range: [range[0].formatedDate, range[1].formatedDate],\n      start: range[0],\n      end: range[1],\n      allDay: allDay,\n      weeks: weeks,\n      // From 0.\n      nthWeek: nthWeek,\n      fweek: range[0].day,\n      lweek: range[1].day\n    };\n  },\n\n  /**\n   * get date by nthWeeks and week day in range\n   *\n   * @private\n   * @param  {number} nthWeek the week\n   * @param  {number} day   the week day\n   * @param  {Array} range [d1, d2]\n   * @return {Object}\n   */\n  _getDateByWeeksAndDay: function (nthWeek, day, range) {\n    var rangeInfo = this._getRangeInfo(range);\n\n    if (nthWeek > rangeInfo.weeks || nthWeek === 0 && day < rangeInfo.fweek || nthWeek === rangeInfo.weeks && day > rangeInfo.lweek) {\n      return false;\n    }\n\n    var nthDay = (nthWeek - 1) * 7 - rangeInfo.fweek + day;\n    var date = new Date(rangeInfo.start.time);\n    date.setDate(rangeInfo.start.d + nthDay);\n    return this.getDateInfo(date);\n  }\n};\nCalendar.dimensions = Calendar.prototype.dimensions;\nCalendar.getDimensionsInfo = Calendar.prototype.getDimensionsInfo;\n\nCalendar.create = function (ecModel, api) {\n  var calendarList = [];\n  ecModel.eachComponent('calendar', function (calendarModel) {\n    var calendar = new Calendar(calendarModel, ecModel, api);\n    calendarList.push(calendar);\n    calendarModel.coordinateSystem = calendar;\n  });\n  ecModel.eachSeries(function (calendarSeries) {\n    if (calendarSeries.get('coordinateSystem') === 'calendar') {\n      // Inject coordinate system\n      calendarSeries.coordinateSystem = calendarList[calendarSeries.get('calendarIndex') || 0];\n    }\n  });\n  return calendarList;\n};\n\nfunction doConvert(methodName, ecModel, finder, value) {\n  var calendarModel = finder.calendarModel;\n  var seriesModel = finder.seriesModel;\n  var coordSys = calendarModel ? calendarModel.coordinateSystem : seriesModel ? seriesModel.coordinateSystem : null;\n  return coordSys === this ? coordSys[methodName](value) : null;\n}\n\nCoordinateSystem.register('calendar', Calendar);\nvar _default = Calendar;\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// (1) [Caution]: the logic is correct based on the premises:\n//     data processing stage is blocked in stream.\n//     See <module:echarts/stream/Scheduler#performDataProcessorTasks>\n// (2) Only register once when import repeatly.\n//     Should be executed before after series filtered and before stack calculation.\nfunction _default(ecModel) {\n  var stackInfoMap = createHashMap();\n  ecModel.eachSeries(function (seriesModel) {\n    var stack = seriesModel.get('stack'); // Compatibal: when `stack` is set as '', do not stack.\n\n    if (stack) {\n      var stackInfoList = stackInfoMap.get(stack) || stackInfoMap.set(stack, []);\n      var data = seriesModel.getData();\n      var stackInfo = {\n        // Used for calculate axis extent automatically.\n        stackResultDimension: data.getCalculationInfo('stackResultDimension'),\n        stackedOverDimension: data.getCalculationInfo('stackedOverDimension'),\n        stackedDimension: data.getCalculationInfo('stackedDimension'),\n        stackedByDimension: data.getCalculationInfo('stackedByDimension'),\n        isStackedByIndex: data.getCalculationInfo('isStackedByIndex'),\n        data: data,\n        seriesModel: seriesModel\n      }; // If stacked on axis that do not support data stack.\n\n      if (!stackInfo.stackedDimension || !(stackInfo.isStackedByIndex || stackInfo.stackedByDimension)) {\n        return;\n      }\n\n      stackInfoList.length && data.setCalculationInfo('stackedOnSeries', stackInfoList[stackInfoList.length - 1].seriesModel);\n      stackInfoList.push(stackInfo);\n    }\n  });\n  stackInfoMap.each(calculateStack);\n}\n\nfunction calculateStack(stackInfoList) {\n  each(stackInfoList, function (targetStackInfo, idxInStack) {\n    var resultVal = [];\n    var resultNaN = [NaN, NaN];\n    var dims = [targetStackInfo.stackResultDimension, targetStackInfo.stackedOverDimension];\n    var targetData = targetStackInfo.data;\n    var isStackedByIndex = targetStackInfo.isStackedByIndex; // Should not write on raw data, because stack series model list changes\n    // depending on legend selection.\n\n    var newData = targetData.map(dims, function (v0, v1, dataIndex) {\n      var sum = targetData.get(targetStackInfo.stackedDimension, dataIndex); // Consider `connectNulls` of line area, if value is NaN, stackedOver\n      // should also be NaN, to draw a appropriate belt area.\n\n      if (isNaN(sum)) {\n        return resultNaN;\n      }\n\n      var byValue;\n      var stackedDataRawIndex;\n\n      if (isStackedByIndex) {\n        stackedDataRawIndex = targetData.getRawIndex(dataIndex);\n      } else {\n        byValue = targetData.get(targetStackInfo.stackedByDimension, dataIndex);\n      } // If stackOver is NaN, chart view will render point on value start.\n\n\n      var stackedOver = NaN;\n\n      for (var j = idxInStack - 1; j >= 0; j--) {\n        var stackInfo = stackInfoList[j]; // Has been optimized by inverted indices on `stackedByDimension`.\n\n        if (!isStackedByIndex) {\n          stackedDataRawIndex = stackInfo.data.rawIndexOf(stackInfo.stackedByDimension, byValue);\n        }\n\n        if (stackedDataRawIndex >= 0) {\n          var val = stackInfo.data.getByRawIndex(stackInfo.stackResultDimension, stackedDataRawIndex); // Considering positive stack, negative stack and empty data\n\n          if (sum >= 0 && val > 0 || // Positive stack\n          sum <= 0 && val < 0 // Negative stack\n          ) {\n              sum += val;\n              stackedOver = val;\n              break;\n            }\n        }\n      }\n\n      resultVal[0] = sum;\n      resultVal[1] = stackedOver;\n      return resultVal;\n    });\n    targetData.hostModel.setData(newData); // Update for consequent calculation\n\n    targetStackInfo.data = newData;\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./legend/LegendModel\");\n\nrequire(\"./legend/legendAction\");\n\nrequire(\"./legend/LegendView\");\n\nvar legendFilter = require(\"./legend/legendFilter\");\n\nvar Component = require(\"../model/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Do not contain scrollable legend, for sake of file size.\n// Series Filter\necharts.registerProcessor(legendFilter);\nComponent.registerSubTypeDefaulter('legend', function () {\n  // Default 'plain' when no type specified.\n  return 'plain';\n});","var util = require(\"./core/util\");\n\nvar vec2 = require(\"./core/vector\");\n\nvar Draggable = require(\"./mixin/Draggable\");\n\nvar Eventful = require(\"./mixin/Eventful\");\n\nvar SILENT = 'silent';\n\nfunction makeEventPacket(eveType, targetInfo, event) {\n  return {\n    type: eveType,\n    event: event,\n    // target can only be an element that is not silent.\n    target: targetInfo.target,\n    // topTarget can be a silent element.\n    topTarget: targetInfo.topTarget,\n    cancelBubble: false,\n    offsetX: event.zrX,\n    offsetY: event.zrY,\n    gestureEvent: event.gestureEvent,\n    pinchX: event.pinchX,\n    pinchY: event.pinchY,\n    pinchScale: event.pinchScale,\n    wheelDelta: event.zrDelta,\n    zrByTouch: event.zrByTouch,\n    which: event.which\n  };\n}\n\nfunction EmptyProxy() {}\n\nEmptyProxy.prototype.dispose = function () {};\n\nvar handlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\n/**\n * @alias module:zrender/Handler\n * @constructor\n * @extends module:zrender/mixin/Eventful\n * @param {module:zrender/Storage} storage Storage instance.\n * @param {module:zrender/Painter} painter Painter instance.\n * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n */\n\nvar Handler = function (storage, painter, proxy, painterRoot) {\n  Eventful.call(this);\n  this.storage = storage;\n  this.painter = painter;\n  this.painterRoot = painterRoot;\n  proxy = proxy || new EmptyProxy();\n  /**\n   * Proxy of event. can be Dom, WebGLSurface, etc.\n   */\n\n  this.proxy = null;\n  /**\n   * {target, topTarget, x, y}\n   * @private\n   * @type {Object}\n   */\n\n  this._hovered = {};\n  /**\n   * @private\n   * @type {Date}\n   */\n\n  this._lastTouchMoment;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastX;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastY;\n  Draggable.call(this);\n  this.setHandlerProxy(proxy);\n};\n\nHandler.prototype = {\n  constructor: Handler,\n  setHandlerProxy: function (proxy) {\n    if (this.proxy) {\n      this.proxy.dispose();\n    }\n\n    if (proxy) {\n      util.each(handlerNames, function (name) {\n        proxy.on && proxy.on(name, this[name], this);\n      }, this); // Attach handler\n\n      proxy.handler = this;\n    }\n\n    this.proxy = proxy;\n  },\n  mousemove: function (event) {\n    var x = event.zrX;\n    var y = event.zrY;\n    var lastHovered = this._hovered;\n    var lastHoveredTarget = lastHovered.target; // If lastHoveredTarget is removed from zr (detected by '__zr') by some API call\n    // (like 'setOption' or 'dispatchAction') in event handlers, we should find\n    // lastHovered again here. Otherwise 'mouseout' can not be triggered normally.\n    // See #6198.\n\n    if (lastHoveredTarget && !lastHoveredTarget.__zr) {\n      lastHovered = this.findHover(lastHovered.x, lastHovered.y);\n      lastHoveredTarget = lastHovered.target;\n    }\n\n    var hovered = this._hovered = this.findHover(x, y);\n    var hoveredTarget = hovered.target;\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default'); // Mouse out on previous hovered element\n\n    if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(lastHovered, 'mouseout', event);\n    } // Mouse moving on one element\n\n\n    this.dispatchToElement(hovered, 'mousemove', event); // Mouse over on a new element\n\n    if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(hovered, 'mouseover', event);\n    }\n  },\n  mouseout: function (event) {\n    this.dispatchToElement(this._hovered, 'mouseout', event); // There might be some doms created by upper layer application\n    // at the same level of painter.getViewportRoot() (e.g., tooltip\n    // dom created by echarts), where 'globalout' event should not\n    // be triggered when mouse enters these doms. (But 'mouseout'\n    // should be triggered at the original hovered element as usual).\n\n    var element = event.toElement || event.relatedTarget;\n    var innerDom;\n\n    do {\n      element = element && element.parentNode;\n    } while (element && element.nodeType != 9 && !(innerDom = element === this.painterRoot));\n\n    !innerDom && this.trigger('globalout', {\n      event: event\n    });\n  },\n\n  /**\n   * Resize\n   */\n  resize: function (event) {\n    this._hovered = {};\n  },\n\n  /**\n   * Dispatch event\n   * @param {string} eventName\n   * @param {event=} eventArgs\n   */\n  dispatch: function (eventName, eventArgs) {\n    var handler = this[eventName];\n    handler && handler.call(this, eventArgs);\n  },\n\n  /**\n   * Dispose\n   */\n  dispose: function () {\n    this.proxy.dispose();\n    this.storage = this.proxy = this.painter = null;\n  },\n\n  /**\n   * 设置默认的cursor style\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(cursorStyle);\n  },\n\n  /**\n   * 事件分发代理\n   *\n   * @private\n   * @param {Object} targetInfo {target, topTarget} 目标图形元素\n   * @param {string} eventName 事件名称\n   * @param {Object} event 事件对象\n   */\n  dispatchToElement: function (targetInfo, eventName, event) {\n    targetInfo = targetInfo || {};\n    var el = targetInfo.target;\n\n    if (el && el.silent) {\n      return;\n    }\n\n    var eventHandler = 'on' + eventName;\n    var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n    while (el) {\n      el[eventHandler] && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n      el.trigger(eventName, eventPacket);\n      el = el.parent;\n\n      if (eventPacket.cancelBubble) {\n        break;\n      }\n    }\n\n    if (!eventPacket.cancelBubble) {\n      // 冒泡到顶级 zrender 对象\n      this.trigger(eventName, eventPacket); // 分发事件到用户自定义层\n      // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n\n      this.painter && this.painter.eachOtherLayer(function (layer) {\n        if (typeof layer[eventHandler] == 'function') {\n          layer[eventHandler].call(layer, eventPacket);\n        }\n\n        if (layer.trigger) {\n          layer.trigger(eventName, eventPacket);\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {number} x\n   * @param {number} y\n   * @param {module:zrender/graphic/Displayable} exclude\n   * @return {model:zrender/Element}\n   * @method\n   */\n  findHover: function (x, y, exclude) {\n    var list = this.storage.getDisplayList();\n    var out = {\n      x: x,\n      y: y\n    };\n\n    for (var i = list.length - 1; i >= 0; i--) {\n      var hoverCheckResult;\n\n      if (list[i] !== exclude // getDisplayList may include ignored item in VML mode\n      && !list[i].ignore && (hoverCheckResult = isHover(list[i], x, y))) {\n        !out.topTarget && (out.topTarget = list[i]);\n\n        if (hoverCheckResult !== SILENT) {\n          out.target = list[i];\n          break;\n        }\n      }\n    }\n\n    return out;\n  }\n}; // Common handlers\n\nutil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  Handler.prototype[name] = function (event) {\n    // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n    var hovered = this.findHover(event.zrX, event.zrY);\n    var hoveredTarget = hovered.target;\n\n    if (name === 'mousedown') {\n      this._downEl = hoveredTarget;\n      this._downPoint = [event.zrX, event.zrY]; // In case click triggered before mouseup\n\n      this._upEl = hoveredTarget;\n    } else if (name === 'mouseup') {\n      this._upEl = hoveredTarget;\n    } else if (name === 'click') {\n      if (this._downEl !== this._upEl // Original click event is triggered on the whole canvas element,\n      // including the case that `mousedown` - `mousemove` - `mouseup`,\n      // which should be filtered, otherwise it will bring trouble to\n      // pan and zoom.\n      || !this._downPoint // Arbitrary value\n      || vec2.dist(this._downPoint, [event.zrX, event.zrY]) > 4) {\n        return;\n      }\n\n      this._downPoint = null;\n    }\n\n    this.dispatchToElement(hovered, name, event);\n  };\n});\n\nfunction isHover(displayable, x, y) {\n  if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n    var el = displayable;\n    var isSilent;\n\n    while (el) {\n      // If clipped by ancestor.\n      // FIXME: If clipPath has neither stroke nor fill,\n      // el.clipPath.contain(x, y) will always return false.\n      if (el.clipPath && !el.clipPath.contain(x, y)) {\n        return false;\n      }\n\n      if (el.silent) {\n        isSilent = true;\n      }\n\n      el = el.parent;\n    }\n\n    return isSilent ? SILENT : true;\n  }\n\n  return false;\n}\n\nutil.mixin(Handler, Eventful);\nutil.mixin(Handler, Draggable);\nvar _default = Handler;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar _roamHelper = require(\"../../action/roamHelper\");\n\nvar updateCenterAndZoom = _roamHelper.updateCenterAndZoom;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar actionInfo = {\n  type: 'graphRoam',\n  event: 'graphRoam',\n  update: 'none'\n};\n/**\n * @payload\n * @property {string} name Series name\n * @property {number} [dx]\n * @property {number} [dy]\n * @property {number} [zoom]\n * @property {number} [originX]\n * @property {number} [originY]\n */\n\necharts.registerAction(actionInfo, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    query: payload\n  }, function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var res = updateCenterAndZoom(coordSys, payload);\n    seriesModel.setCenter && seriesModel.setCenter(res.center);\n    seriesModel.setZoom && seriesModel.setZoom(res.zoom);\n  });\n});\n/**\n * @payload\n * @property {number} [seriesIndex]\n * @property {string} [seriesId]\n * @property {string} [seriesName]\n * @property {number} [dataIndex]\n */\n\necharts.registerAction({\n  type: 'focusNodeAdjacency',\n  event: 'focusNodeAdjacency',\n  update: 'series.graph:focusNodeAdjacency'\n}, function () {});\n/**\n * @payload\n * @property {number} [seriesIndex]\n * @property {string} [seriesId]\n * @property {string} [seriesName]\n */\n\necharts.registerAction({\n  type: 'unfocusNodeAdjacency',\n  event: 'unfocusNodeAdjacency',\n  update: 'series.graph:unfocusNodeAdjacency'\n}, function () {});","var Path = require(\"../Path\");\n\nvar polyHelper = require(\"../helper/poly\");\n\n/**\n * @module zrender/graphic/shape/Polyline\n */\nvar _default = Path.extend({\n  type: 'polyline',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, false);\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar globalListener = require(\"./globalListener\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisPointerView = echarts.extendComponentView({\n  type: 'axisPointer',\n  render: function (globalAxisPointerModel, ecModel, api) {\n    var globalTooltipModel = ecModel.getComponent('tooltip');\n    var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click'; // Register global listener in AxisPointerView to enable\n    // AxisPointerView to be independent to Tooltip.\n\n    globalListener.register('axisPointer', api, function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {\n        dispatchAction({\n          type: 'updateAxisPointer',\n          currTrigger: currTrigger,\n          x: e && e.offsetX,\n          y: e && e.offsetY\n        });\n      }\n    });\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    globalListener.unregister(api.getZr(), 'axisPointer');\n    AxisPointerView.superApply(this._model, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    globalListener.unregister('axisPointer', api);\n    AxisPointerView.superApply(this._model, 'dispose', arguments);\n  }\n});\nvar _default = AxisPointerView;\nmodule.exports = _default;","var Path = require(\"./Path\");\n\n// CompoundPath to improve performance\nvar _default = Path.extend({\n  type: 'compound',\n  shape: {\n    paths: null\n  },\n  _updatePathDirty: function () {\n    var dirtyPath = this.__dirtyPath;\n    var paths = this.shape.paths;\n\n    for (var i = 0; i < paths.length; i++) {\n      // Mark as dirty if any subpath is dirty\n      dirtyPath = dirtyPath || paths[i].__dirtyPath;\n    }\n\n    this.__dirtyPath = dirtyPath;\n    this.__dirty = this.__dirty || dirtyPath;\n  },\n  beforeBrush: function () {\n    this._updatePathDirty();\n\n    var paths = this.shape.paths || [];\n    var scale = this.getGlobalScale(); // Update path scale\n\n    for (var i = 0; i < paths.length; i++) {\n      if (!paths[i].path) {\n        paths[i].createPathProxy();\n      }\n\n      paths[i].path.setScale(scale[0], scale[1]);\n    }\n  },\n  buildPath: function (ctx, shape) {\n    var paths = shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].buildPath(ctx, paths[i].shape, true);\n    }\n  },\n  afterBrush: function () {\n    var paths = this.shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].__dirtyPath = false;\n    }\n  },\n  getBoundingRect: function () {\n    this._updatePathDirty();\n\n    return Path.prototype.getBoundingRect.call(this);\n  }\n});\n\nmodule.exports = _default;","var Path = require(\"zrender/lib/graphic/Path\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar fixClipWithShadow = require(\"zrender/lib/graphic/helper/fixClipWithShadow\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Poly path support NaN point\nvar vec2Min = vec2.min;\nvar vec2Max = vec2.max;\nvar scaleAndAdd = vec2.scaleAndAdd;\nvar v2Copy = vec2.copy; // Temporary variable\n\nvar v = [];\nvar cp0 = [];\nvar cp1 = [];\n\nfunction isPointNull(p) {\n  return isNaN(p[0]) || isNaN(p[1]);\n}\n\nfunction drawSegment(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  // if (smoothMonotone == null) {\n  //     if (isMono(points, 'x')) {\n  //         return drawMono(ctx, points, start, segLen, allLen,\n  //             dir, smoothMin, smoothMax, smooth, 'x', connectNulls);\n  //     }\n  //     else if (isMono(points, 'y')) {\n  //         return drawMono(ctx, points, start, segLen, allLen,\n  //             dir, smoothMin, smoothMax, smooth, 'y', connectNulls);\n  //     }\n  //     else {\n  //         return drawNonMono.apply(this, arguments);\n  //     }\n  // }\n  // else if (smoothMonotone !== 'none' && isMono(points, smoothMonotone)) {\n  //     return drawMono.apply(this, arguments);\n  // }\n  // else {\n  //     return drawNonMono.apply(this, arguments);\n  // }\n  if (smoothMonotone === 'none' || !smoothMonotone) {\n    return drawNonMono.apply(this, arguments);\n  } else {\n    return drawMono.apply(this, arguments);\n  }\n}\n/**\n * Check if points is in monotone.\n *\n * @param {number[][]} points         Array of points which is in [x, y] form\n * @param {string}     smoothMonotone 'x', 'y', or 'none', stating for which\n *                                    dimension that is checking.\n *                                    If is 'none', `drawNonMono` should be\n *                                    called.\n *                                    If is undefined, either being monotone\n *                                    in 'x' or 'y' will call `drawMono`.\n */\n// function isMono(points, smoothMonotone) {\n//     if (points.length <= 1) {\n//         return true;\n//     }\n//     var dim = smoothMonotone === 'x' ? 0 : 1;\n//     var last = points[0][dim];\n//     var lastDiff = 0;\n//     for (var i = 1; i < points.length; ++i) {\n//         var diff = points[i][dim] - last;\n//         if (!isNaN(diff) && !isNaN(lastDiff)\n//             && diff !== 0 && lastDiff !== 0\n//             && ((diff >= 0) !== (lastDiff >= 0))\n//         ) {\n//             return false;\n//         }\n//         if (!isNaN(diff) && diff !== 0) {\n//             lastDiff = diff;\n//             last = points[i][dim];\n//         }\n//     }\n//     return true;\n// }\n\n/**\n * Draw smoothed line in monotone, in which only vertical or horizontal bezier\n * control points will be used. This should be used when points are monotone\n * either in x or y dimension.\n */\n\n\nfunction drawMono(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  var prevIdx = 0;\n  var idx = start;\n\n  for (var k = 0; k < segLen; k++) {\n    var p = points[idx];\n\n    if (idx >= allLen || idx < 0) {\n      break;\n    }\n\n    if (isPointNull(p)) {\n      if (connectNulls) {\n        idx += dir;\n        continue;\n      }\n\n      break;\n    }\n\n    if (idx === start) {\n      ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n    } else {\n      if (smooth > 0) {\n        var prevP = points[prevIdx];\n        var dim = smoothMonotone === 'y' ? 1 : 0; // Length of control point to p, either in x or y, but not both\n\n        var ctrlLen = (p[dim] - prevP[dim]) * smooth;\n        v2Copy(cp0, prevP);\n        cp0[dim] = prevP[dim] + ctrlLen;\n        v2Copy(cp1, p);\n        cp1[dim] = p[dim] - ctrlLen;\n        ctx.bezierCurveTo(cp0[0], cp0[1], cp1[0], cp1[1], p[0], p[1]);\n      } else {\n        ctx.lineTo(p[0], p[1]);\n      }\n    }\n\n    prevIdx = idx;\n    idx += dir;\n  }\n\n  return k;\n}\n/**\n * Draw smoothed line in non-monotone, in may cause undesired curve in extreme\n * situations. This should be used when points are non-monotone neither in x or\n * y dimension.\n */\n\n\nfunction drawNonMono(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  var prevIdx = 0;\n  var idx = start;\n\n  for (var k = 0; k < segLen; k++) {\n    var p = points[idx];\n\n    if (idx >= allLen || idx < 0) {\n      break;\n    }\n\n    if (isPointNull(p)) {\n      if (connectNulls) {\n        idx += dir;\n        continue;\n      }\n\n      break;\n    }\n\n    if (idx === start) {\n      ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n      v2Copy(cp0, p);\n    } else {\n      if (smooth > 0) {\n        var nextIdx = idx + dir;\n        var nextP = points[nextIdx];\n\n        if (connectNulls) {\n          // Find next point not null\n          while (nextP && isPointNull(points[nextIdx])) {\n            nextIdx += dir;\n            nextP = points[nextIdx];\n          }\n        }\n\n        var ratioNextSeg = 0.5;\n        var prevP = points[prevIdx];\n        var nextP = points[nextIdx]; // Last point\n\n        if (!nextP || isPointNull(nextP)) {\n          v2Copy(cp1, p);\n        } else {\n          // If next data is null in not connect case\n          if (isPointNull(nextP) && !connectNulls) {\n            nextP = p;\n          }\n\n          vec2.sub(v, nextP, prevP);\n          var lenPrevSeg;\n          var lenNextSeg;\n\n          if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n            var dim = smoothMonotone === 'x' ? 0 : 1;\n            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n          } else {\n            lenPrevSeg = vec2.dist(p, prevP);\n            lenNextSeg = vec2.dist(p, nextP);\n          } // Use ratio of seg length\n\n\n          ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n          scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n        } // Smooth constraint\n\n\n        vec2Min(cp0, cp0, smoothMax);\n        vec2Max(cp0, cp0, smoothMin);\n        vec2Min(cp1, cp1, smoothMax);\n        vec2Max(cp1, cp1, smoothMin);\n        ctx.bezierCurveTo(cp0[0], cp0[1], cp1[0], cp1[1], p[0], p[1]); // cp0 of next segment\n\n        scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n      } else {\n        ctx.lineTo(p[0], p[1]);\n      }\n    }\n\n    prevIdx = idx;\n    idx += dir;\n  }\n\n  return k;\n}\n\nfunction getBoundingBox(points, smoothConstraint) {\n  var ptMin = [Infinity, Infinity];\n  var ptMax = [-Infinity, -Infinity];\n\n  if (smoothConstraint) {\n    for (var i = 0; i < points.length; i++) {\n      var pt = points[i];\n\n      if (pt[0] < ptMin[0]) {\n        ptMin[0] = pt[0];\n      }\n\n      if (pt[1] < ptMin[1]) {\n        ptMin[1] = pt[1];\n      }\n\n      if (pt[0] > ptMax[0]) {\n        ptMax[0] = pt[0];\n      }\n\n      if (pt[1] > ptMax[1]) {\n        ptMax[1] = pt[1];\n      }\n    }\n  }\n\n  return {\n    min: smoothConstraint ? ptMin : ptMax,\n    max: smoothConstraint ? ptMax : ptMin\n  };\n}\n\nvar Polyline = Path.extend({\n  type: 'ec-polyline',\n  shape: {\n    points: [],\n    smooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  style: {\n    fill: null,\n    stroke: '#000'\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var i = 0;\n    var len = points.length;\n    var result = getBoundingBox(points, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      i += drawSegment(ctx, points, i, len, len, 1, result.min, result.max, shape.smooth, shape.smoothMonotone, shape.connectNulls) + 1;\n    }\n  }\n});\nvar Polygon = Path.extend({\n  type: 'ec-polygon',\n  shape: {\n    points: [],\n    // Offset between stacked base points and points\n    stackedOnPoints: [],\n    smooth: 0,\n    stackedOnSmooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var stackedOnPoints = shape.stackedOnPoints;\n    var i = 0;\n    var len = points.length;\n    var smoothMonotone = shape.smoothMonotone;\n    var bbox = getBoundingBox(points, shape.smoothConstraint);\n    var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      var k = drawSegment(ctx, points, i, len, len, 1, bbox.min, bbox.max, shape.smooth, smoothMonotone, shape.connectNulls);\n      drawSegment(ctx, stackedOnPoints, i + k - 1, k, len, -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth, smoothMonotone, shape.connectNulls);\n      i += k + 1;\n      ctx.closePath();\n    }\n  }\n});\nexports.Polyline = Polyline;\nexports.Polygon = Polygon;","// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n/**\n * Simple double linked list. Compared with array, it has O(1) remove operation.\n * @constructor\n */\nvar LinkedList = function () {\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n  this.head = null;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.tail = null;\n  this._len = 0;\n};\n\nvar linkedListProto = LinkedList.prototype;\n/**\n * Insert a new value at the tail\n * @param  {} val\n * @return {module:zrender/core/LRU~Entry}\n */\n\nlinkedListProto.insert = function (val) {\n  var entry = new Entry(val);\n  this.insertEntry(entry);\n  return entry;\n};\n/**\n * Insert an entry at the tail\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.insertEntry = function (entry) {\n  if (!this.head) {\n    this.head = this.tail = entry;\n  } else {\n    this.tail.next = entry;\n    entry.prev = this.tail;\n    entry.next = null;\n    this.tail = entry;\n  }\n\n  this._len++;\n};\n/**\n * Remove entry.\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.remove = function (entry) {\n  var prev = entry.prev;\n  var next = entry.next;\n\n  if (prev) {\n    prev.next = next;\n  } else {\n    // Is head\n    this.head = next;\n  }\n\n  if (next) {\n    next.prev = prev;\n  } else {\n    // Is tail\n    this.tail = prev;\n  }\n\n  entry.next = entry.prev = null;\n  this._len--;\n};\n/**\n * @return {number}\n */\n\n\nlinkedListProto.len = function () {\n  return this._len;\n};\n/**\n * Clear list\n */\n\n\nlinkedListProto.clear = function () {\n  this.head = this.tail = null;\n  this._len = 0;\n};\n/**\n * @constructor\n * @param {} val\n */\n\n\nvar Entry = function (val) {\n  /**\n   * @type {}\n   */\n  this.value = val;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.next;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.prev;\n};\n/**\n * LRU Cache\n * @constructor\n * @alias module:zrender/core/LRU\n */\n\n\nvar LRU = function (maxSize) {\n  this._list = new LinkedList();\n  this._map = {};\n  this._maxSize = maxSize || 10;\n  this._lastRemovedEntry = null;\n};\n\nvar LRUProto = LRU.prototype;\n/**\n * @param  {string} key\n * @param  {} value\n * @return {} Removed value\n */\n\nLRUProto.put = function (key, value) {\n  var list = this._list;\n  var map = this._map;\n  var removed = null;\n\n  if (map[key] == null) {\n    var len = list.len(); // Reuse last removed entry\n\n    var entry = this._lastRemovedEntry;\n\n    if (len >= this._maxSize && len > 0) {\n      // Remove the least recently used\n      var leastUsedEntry = list.head;\n      list.remove(leastUsedEntry);\n      delete map[leastUsedEntry.key];\n      removed = leastUsedEntry.value;\n      this._lastRemovedEntry = leastUsedEntry;\n    }\n\n    if (entry) {\n      entry.value = value;\n    } else {\n      entry = new Entry(value);\n    }\n\n    entry.key = key;\n    list.insertEntry(entry);\n    map[key] = entry;\n  }\n\n  return removed;\n};\n/**\n * @param  {string} key\n * @return {}\n */\n\n\nLRUProto.get = function (key) {\n  var entry = this._map[key];\n  var list = this._list;\n\n  if (entry != null) {\n    // Put the latest used entry in the tail\n    if (entry !== list.tail) {\n      list.remove(entry);\n      list.insertEntry(entry);\n    }\n\n    return entry.value;\n  }\n};\n/**\n * Clear the cache\n */\n\n\nLRUProto.clear = function () {\n  this._list.clear();\n\n  this._map = {};\n};\n\nvar _default = LRU;\nmodule.exports = _default;","var guid = require(\"./core/guid\");\n\nvar Eventful = require(\"./mixin/Eventful\");\n\nvar Transformable = require(\"./mixin/Transformable\");\n\nvar Animatable = require(\"./mixin/Animatable\");\n\nvar zrUtil = require(\"./core/util\");\n\n/**\n * @alias module:zrender/Element\n * @constructor\n * @extends {module:zrender/mixin/Animatable}\n * @extends {module:zrender/mixin/Transformable}\n * @extends {module:zrender/mixin/Eventful}\n */\nvar Element = function (opts) {\n  // jshint ignore:line\n  Transformable.call(this, opts);\n  Eventful.call(this, opts);\n  Animatable.call(this, opts);\n  /**\n   * 画布元素ID\n   * @type {string}\n   */\n\n  this.id = opts.id || guid();\n};\n\nElement.prototype = {\n  /**\n   * 元素类型\n   * Element type\n   * @type {string}\n   */\n  type: 'element',\n\n  /**\n   * 元素名字\n   * Element name\n   * @type {string}\n   */\n  name: '',\n\n  /**\n   * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n   * ZRender instance will be assigned when element is associated with zrender\n   * @name module:/zrender/Element#__zr\n   * @type {module:zrender/ZRender}\n   */\n  __zr: null,\n\n  /**\n   * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n   * If ignore drawing and events of the element object\n   * @name module:/zrender/Element#ignore\n   * @type {boolean}\n   * @default false\n   */\n  ignore: false,\n\n  /**\n   * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n   * 该路径会继承被裁减对象的变换\n   * @type {module:zrender/graphic/Path}\n   * @see http://www.w3.org/TR/2dcontext/#clipping-region\n   * @readOnly\n   */\n  clipPath: null,\n\n  /**\n   * 是否是 Group\n   * @type {boolean}\n   */\n  isGroup: false,\n\n  /**\n   * Drift element\n   * @param  {number} dx dx on the global space\n   * @param  {number} dy dy on the global space\n   */\n  drift: function (dx, dy) {\n    switch (this.draggable) {\n      case 'horizontal':\n        dy = 0;\n        break;\n\n      case 'vertical':\n        dx = 0;\n        break;\n    }\n\n    var m = this.transform;\n\n    if (!m) {\n      m = this.transform = [1, 0, 0, 1, 0, 0];\n    }\n\n    m[4] += dx;\n    m[5] += dy;\n    this.decomposeTransform();\n    this.dirty(false);\n  },\n\n  /**\n   * Hook before update\n   */\n  beforeUpdate: function () {},\n\n  /**\n   * Hook after update\n   */\n  afterUpdate: function () {},\n\n  /**\n   * Update each frame\n   */\n  update: function () {\n    this.updateTransform();\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {},\n\n  /**\n   * @protected\n   */\n  attrKV: function (key, value) {\n    if (key === 'position' || key === 'scale' || key === 'origin') {\n      // Copy the array\n      if (value) {\n        var target = this[key];\n\n        if (!target) {\n          target = this[key] = [];\n        }\n\n        target[0] = value[0];\n        target[1] = value[1];\n      }\n    } else {\n      this[key] = value;\n    }\n  },\n\n  /**\n   * Hide the element\n   */\n  hide: function () {\n    this.ignore = true;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * Show the element\n   */\n  show: function () {\n    this.ignore = false;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * @param {string|Object} key\n   * @param {*} value\n   */\n  attr: function (key, value) {\n    if (typeof key === 'string') {\n      this.attrKV(key, value);\n    } else if (zrUtil.isObject(key)) {\n      for (var name in key) {\n        if (key.hasOwnProperty(name)) {\n          this.attrKV(name, key[name]);\n        }\n      }\n    }\n\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * @param {module:zrender/graphic/Path} clipPath\n   */\n  setClipPath: function (clipPath) {\n    var zr = this.__zr;\n\n    if (zr) {\n      clipPath.addSelfToZr(zr);\n    } // Remove previous clip path\n\n\n    if (this.clipPath && this.clipPath !== clipPath) {\n      this.removeClipPath();\n    }\n\n    this.clipPath = clipPath;\n    clipPath.__zr = zr;\n    clipPath.__clipTarget = this;\n    this.dirty(false);\n  },\n\n  /**\n   */\n  removeClipPath: function () {\n    var clipPath = this.clipPath;\n\n    if (clipPath) {\n      if (clipPath.__zr) {\n        clipPath.removeSelfFromZr(clipPath.__zr);\n      }\n\n      clipPath.__zr = null;\n      clipPath.__clipTarget = null;\n      this.clipPath = null;\n      this.dirty(false);\n    }\n  },\n\n  /**\n   * Add self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  addSelfToZr: function (zr) {\n    this.__zr = zr; // 添加动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.addAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.addSelfToZr(zr);\n    }\n  },\n\n  /**\n   * Remove self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  removeSelfFromZr: function (zr) {\n    this.__zr = null; // 移除动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.removeAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.removeSelfFromZr(zr);\n    }\n  }\n};\nzrUtil.mixin(Element, Animatable);\nzrUtil.mixin(Element, Transformable);\nzrUtil.mixin(Element, Eventful);\nvar _default = Element;\nmodule.exports = _default;","var BaseBarSeries = require(\"./BaseBarSeries\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PictorialBarSeries = BaseBarSeries.extend({\n  type: 'series.pictorialBar',\n  dependencies: ['grid'],\n  defaultOption: {\n    symbol: 'circle',\n    // Customized bar shape\n    symbolSize: null,\n    // Can be ['100%', '100%'], null means auto.\n    symbolRotate: null,\n    symbolPosition: null,\n    // 'start' or 'end' or 'center', null means auto.\n    symbolOffset: null,\n    symbolMargin: null,\n    // start margin and end margin. Can be a number or a percent string.\n    // Auto margin by defualt.\n    symbolRepeat: false,\n    // false/null/undefined, means no repeat.\n    // Can be true, means auto calculate repeat times and cut by data.\n    // Can be a number, specifies repeat times, and do not cut by data.\n    // Can be 'fixed', means auto calculate repeat times but do not cut by data.\n    symbolRepeatDirection: 'end',\n    // 'end' means from 'start' to 'end'.\n    symbolClip: false,\n    symbolBoundingData: null,\n    // Can be 60 or -40 or [-40, 60]\n    symbolPatternSize: 400,\n    // 400 * 400 px\n    barGap: '-100%',\n    // In most case, overlap is needed.\n    // z can be set in data item, which is z2 actually.\n    // Disable progressive\n    progressive: 0,\n    hoverAnimation: false // Open only when needed.\n\n  },\n  getInitialData: function (option) {\n    // Disable stack.\n    option.stack = null;\n    return PictorialBarSeries.superApply(this, 'getInitialData', arguments);\n  }\n});\nvar _default = PictorialBarSeries;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar actionInfo = {\n  type: 'selectDataRange',\n  event: 'dataRangeSelected',\n  // FIXME use updateView appears wrong\n  update: 'update'\n};\necharts.registerAction(actionInfo, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'visualMap',\n    query: payload\n  }, function (model) {\n    model.setSelected(payload.selected);\n  });\n});","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"./sunburst/SunburstSeries\");\n\nrequire(\"./sunburst/SunburstView\");\n\nrequire(\"./sunburst/sunburstAction\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar sunburstLayout = require(\"./sunburst/sunburstLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerVisual(zrUtil.curry(dataColor, 'sunburst'));\necharts.registerLayout(zrUtil.curry(sunburstLayout, 'sunburst'));\necharts.registerProcessor(zrUtil.curry(dataFilter, 'sunburst'));","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar featureManager = require(\"./featureManager\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\nvar listComponentHelper = require(\"../helper/listComponent\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendComponentView({\n  type: 'toolbox',\n  render: function (toolboxModel, ecModel, api, payload) {\n    var group = this.group;\n    group.removeAll();\n\n    if (!toolboxModel.get('show')) {\n      return;\n    }\n\n    var itemSize = +toolboxModel.get('itemSize');\n    var featureOpts = toolboxModel.get('feature') || {};\n    var features = this._features || (this._features = {});\n    var featureNames = [];\n    zrUtil.each(featureOpts, function (opt, name) {\n      featureNames.push(name);\n    });\n    new DataDiffer(this._featureNames || [], featureNames).add(processFeature).update(processFeature).remove(zrUtil.curry(processFeature, null)).execute(); // Keep for diff.\n\n    this._featureNames = featureNames;\n\n    function processFeature(newIndex, oldIndex) {\n      var featureName = featureNames[newIndex];\n      var oldName = featureNames[oldIndex];\n      var featureOpt = featureOpts[featureName];\n      var featureModel = new Model(featureOpt, toolboxModel, toolboxModel.ecModel);\n      var feature;\n\n      if (featureName && !oldName) {\n        // Create\n        if (isUserFeatureName(featureName)) {\n          feature = {\n            model: featureModel,\n            onclick: featureModel.option.onclick,\n            featureName: featureName\n          };\n        } else {\n          var Feature = featureManager.get(featureName);\n\n          if (!Feature) {\n            return;\n          }\n\n          feature = new Feature(featureModel, ecModel, api);\n        }\n\n        features[featureName] = feature;\n      } else {\n        feature = features[oldName]; // If feature does not exsit.\n\n        if (!feature) {\n          return;\n        }\n\n        feature.model = featureModel;\n        feature.ecModel = ecModel;\n        feature.api = api;\n      }\n\n      if (!featureName && oldName) {\n        feature.dispose && feature.dispose(ecModel, api);\n        return;\n      }\n\n      if (!featureModel.get('show') || feature.unusable) {\n        feature.remove && feature.remove(ecModel, api);\n        return;\n      }\n\n      createIconPaths(featureModel, feature, featureName);\n\n      featureModel.setIconStatus = function (iconName, status) {\n        var option = this.option;\n        var iconPaths = this.iconPaths;\n        option.iconStatus = option.iconStatus || {};\n        option.iconStatus[iconName] = status; // FIXME\n\n        iconPaths[iconName] && iconPaths[iconName].trigger(status);\n      };\n\n      if (feature.render) {\n        feature.render(featureModel, ecModel, api, payload);\n      }\n    }\n\n    function createIconPaths(featureModel, feature, featureName) {\n      var iconStyleModel = featureModel.getModel('iconStyle');\n      var iconStyleEmphasisModel = featureModel.getModel('emphasis.iconStyle'); // If one feature has mutiple icon. they are orginaized as\n      // {\n      //     icon: {\n      //         foo: '',\n      //         bar: ''\n      //     },\n      //     title: {\n      //         foo: '',\n      //         bar: ''\n      //     }\n      // }\n\n      var icons = feature.getIcons ? feature.getIcons() : featureModel.get('icon');\n      var titles = featureModel.get('title') || {};\n\n      if (typeof icons === 'string') {\n        var icon = icons;\n        var title = titles;\n        icons = {};\n        titles = {};\n        icons[featureName] = icon;\n        titles[featureName] = title;\n      }\n\n      var iconPaths = featureModel.iconPaths = {};\n      zrUtil.each(icons, function (iconStr, iconName) {\n        var path = graphic.createIcon(iconStr, {}, {\n          x: -itemSize / 2,\n          y: -itemSize / 2,\n          width: itemSize,\n          height: itemSize\n        });\n        path.setStyle(iconStyleModel.getItemStyle());\n        path.hoverStyle = iconStyleEmphasisModel.getItemStyle();\n        graphic.setHoverStyle(path);\n\n        if (toolboxModel.get('showTitle')) {\n          path.__title = titles[iconName];\n          path.on('mouseover', function () {\n            // Should not reuse above hoverStyle, which might be modified.\n            var hoverStyle = iconStyleEmphasisModel.getItemStyle();\n            path.setStyle({\n              text: titles[iconName],\n              textPosition: hoverStyle.textPosition || 'bottom',\n              textFill: hoverStyle.fill || hoverStyle.stroke || '#000',\n              textAlign: hoverStyle.textAlign || 'center'\n            });\n          }).on('mouseout', function () {\n            path.setStyle({\n              textFill: null\n            });\n          });\n        }\n\n        path.trigger(featureModel.get('iconStatus.' + iconName) || 'normal');\n        group.add(path);\n        path.on('click', zrUtil.bind(feature.onclick, feature, ecModel, api, iconName));\n        iconPaths[iconName] = path;\n      });\n    }\n\n    listComponentHelper.layout(group, toolboxModel, api); // Render background after group is layout\n    // FIXME\n\n    group.add(listComponentHelper.makeBackground(group.getBoundingRect(), toolboxModel)); // Adjust icon title positions to avoid them out of screen\n\n    group.eachChild(function (icon) {\n      var titleText = icon.__title;\n      var hoverStyle = icon.hoverStyle; // May be background element\n\n      if (hoverStyle && titleText) {\n        var rect = textContain.getBoundingRect(titleText, textContain.makeFont(hoverStyle));\n        var offsetX = icon.position[0] + group.position[0];\n        var offsetY = icon.position[1] + group.position[1] + itemSize;\n        var needPutOnTop = false;\n\n        if (offsetY + rect.height > api.getHeight()) {\n          hoverStyle.textPosition = 'top';\n          needPutOnTop = true;\n        }\n\n        var topOffset = needPutOnTop ? -5 - rect.height : itemSize + 8;\n\n        if (offsetX + rect.width / 2 > api.getWidth()) {\n          hoverStyle.textPosition = ['100%', topOffset];\n          hoverStyle.textAlign = 'right';\n        } else if (offsetX - rect.width / 2 < 0) {\n          hoverStyle.textPosition = [0, topOffset];\n          hoverStyle.textAlign = 'left';\n        }\n      }\n    });\n  },\n  updateView: function (toolboxModel, ecModel, api, payload) {\n    zrUtil.each(this._features, function (feature) {\n      feature.updateView && feature.updateView(feature.model, ecModel, api, payload);\n    });\n  },\n  // updateLayout: function (toolboxModel, ecModel, api, payload) {\n  //     zrUtil.each(this._features, function (feature) {\n  //         feature.updateLayout && feature.updateLayout(feature.model, ecModel, api, payload);\n  //     });\n  // },\n  remove: function (ecModel, api) {\n    zrUtil.each(this._features, function (feature) {\n      feature.remove && feature.remove(ecModel, api);\n    });\n    this.group.removeAll();\n  },\n  dispose: function (ecModel, api) {\n    zrUtil.each(this._features, function (feature) {\n      feature.dispose && feature.dispose(ecModel, api);\n    });\n  }\n});\n\nfunction isUserFeatureName(featureName) {\n  return featureName.indexOf('my') === 0;\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/coord/View} view\n * @param {Object} payload\n * @param {Object} [zoomLimit]\n */\nfunction updateCenterAndZoom(view, payload, zoomLimit) {\n  var previousZoom = view.getZoom();\n  var center = view.getCenter();\n  var zoom = payload.zoom;\n  var point = view.dataToPoint(center);\n\n  if (payload.dx != null && payload.dy != null) {\n    point[0] -= payload.dx;\n    point[1] -= payload.dy;\n    var center = view.pointToData(point);\n    view.setCenter(center);\n  }\n\n  if (zoom != null) {\n    if (zoomLimit) {\n      var zoomMin = zoomLimit.min || 0;\n      var zoomMax = zoomLimit.max || Infinity;\n      zoom = Math.max(Math.min(previousZoom * zoom, zoomMax), zoomMin) / previousZoom;\n    } // Zoom on given point(originX, originY)\n\n\n    view.scale[0] *= zoom;\n    view.scale[1] *= zoom;\n    var position = view.position;\n    var fixX = (payload.originX - position[0]) * (zoom - 1);\n    var fixY = (payload.originY - position[1]) * (zoom - 1);\n    position[0] -= fixX;\n    position[1] -= fixY;\n    view.updateTransform(); // Get the new center\n\n    var center = view.pointToData(point);\n    view.setCenter(center);\n    view.setZoom(zoom * previousZoom);\n  }\n\n  return {\n    center: view.getCenter(),\n    zoom: view.getZoom()\n  };\n}\n\nexports.updateCenterAndZoom = updateCenterAndZoom;","var PathProxy = require(\"../core/PathProxy\");\n\nvar line = require(\"./line\");\n\nvar cubic = require(\"./cubic\");\n\nvar quadratic = require(\"./quadratic\");\n\nvar arc = require(\"./arc\");\n\nvar _util = require(\"./util\");\n\nvar normalizeRadian = _util.normalizeRadian;\n\nvar curve = require(\"../core/curve\");\n\nvar windingLine = require(\"./windingLine\");\n\nvar CMD = PathProxy.CMD;\nvar PI2 = Math.PI * 2;\nvar EPSILON = 1e-4;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n} // 临时数组\n\n\nvar roots = [-1, -1, -1];\nvar extrema = [-1, -1];\n\nfunction swapExtrema() {\n  var tmp = extrema[0];\n  extrema[0] = extrema[1];\n  extrema[1] = tmp;\n}\n\nfunction windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 && y > y3 || y < y0 && y < y1 && y < y2 && y < y3) {\n    return 0;\n  }\n\n  var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var w = 0;\n    var nExtrema = -1;\n    var y0_, y1_;\n\n    for (var i = 0; i < nRoots; i++) {\n      var t = roots[i]; // Avoid winding error when intersection point is the connect point of two line of polygon\n\n      var unit = t === 0 || t === 1 ? 0.5 : 1;\n      var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n\n      if (x_ < x) {\n        // Quick reject\n        continue;\n      }\n\n      if (nExtrema < 0) {\n        nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n\n        if (extrema[1] < extrema[0] && nExtrema > 1) {\n          swapExtrema();\n        }\n\n        y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n\n        if (nExtrema > 1) {\n          y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n        }\n      }\n\n      if (nExtrema == 2) {\n        // 分成三段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else if (t < extrema[1]) {\n          w += y1_ < y0_ ? unit : -unit;\n        } else {\n          w += y3 < y1_ ? unit : -unit;\n        }\n      } else {\n        // 分成两段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else {\n          w += y3 < y0_ ? unit : -unit;\n        }\n      }\n    }\n\n    return w;\n  }\n}\n\nfunction windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 || y < y0 && y < y1 && y < y2) {\n    return 0;\n  }\n\n  var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var t = curve.quadraticExtremum(y0, y1, y2);\n\n    if (t >= 0 && t <= 1) {\n      var w = 0;\n      var y_ = curve.quadraticAt(y0, y1, y2, t);\n\n      for (var i = 0; i < nRoots; i++) {\n        // Remove one endpoint.\n        var unit = roots[i] === 0 || roots[i] === 1 ? 0.5 : 1;\n        var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n\n        if (x_ < x) {\n          // Quick reject\n          continue;\n        }\n\n        if (roots[i] < t) {\n          w += y_ < y0 ? unit : -unit;\n        } else {\n          w += y2 < y_ ? unit : -unit;\n        }\n      }\n\n      return w;\n    } else {\n      // Remove one endpoint.\n      var unit = roots[0] === 0 || roots[0] === 1 ? 0.5 : 1;\n      var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n\n      if (x_ < x) {\n        // Quick reject\n        return 0;\n      }\n\n      return y2 < y0 ? unit : -unit;\n    }\n  }\n} // TODO\n// Arc 旋转\n\n\nfunction windingArc(cx, cy, r, startAngle, endAngle, anticlockwise, x, y) {\n  y -= cy;\n\n  if (y > r || y < -r) {\n    return 0;\n  }\n\n  var tmp = Math.sqrt(r * r - y * y);\n  roots[0] = -tmp;\n  roots[1] = tmp;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff < 1e-4) {\n    return 0;\n  }\n\n  if (diff % PI2 < 1e-4) {\n    // Is a circle\n    startAngle = 0;\n    endAngle = PI2;\n    var dir = anticlockwise ? 1 : -1;\n\n    if (x >= roots[0] + cx && x <= roots[1] + cx) {\n      return dir;\n    } else {\n      return 0;\n    }\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var w = 0;\n\n  for (var i = 0; i < 2; i++) {\n    var x_ = roots[i];\n\n    if (x_ + cx > x) {\n      var angle = Math.atan2(y, x_);\n      var dir = anticlockwise ? 1 : -1;\n\n      if (angle < 0) {\n        angle = PI2 + angle;\n      }\n\n      if (angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle) {\n        if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n          dir = -dir;\n        }\n\n        w += dir;\n      }\n    }\n  }\n\n  return w;\n}\n\nfunction containPath(data, lineWidth, isStroke, x, y) {\n  var w = 0;\n  var xi = 0;\n  var yi = 0;\n  var x0 = 0;\n  var y0 = 0;\n\n  for (var i = 0; i < data.length;) {\n    var cmd = data[i++]; // Begin a new subpath\n\n    if (cmd === CMD.M && i > 1) {\n      // Close previous subpath\n      if (!isStroke) {\n        w += windingLine(xi, yi, x0, y0, x, y);\n      } // 如果被任何一个 subpath 包含\n      // if (w !== 0) {\n      //     return true;\n      // }\n\n    }\n\n    if (i == 1) {\n      // 如果第一个命令是 L, C, Q\n      // 则 previous point 同绘制命令的第一个 point\n      //\n      // 第一个命令为 Arc 的情况下会在后面特殊处理\n      xi = data[i];\n      yi = data[i + 1];\n      x0 = xi;\n      y0 = yi;\n    }\n\n    switch (cmd) {\n      case CMD.M:\n        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n        // 在 closePath 的时候使用\n        x0 = data[i++];\n        y0 = data[i++];\n        xi = x0;\n        yi = y0;\n        break;\n\n      case CMD.L:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n          w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.C:\n        if (isStroke) {\n          if (cubic.containStroke(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.Q:\n        if (isStroke) {\n          if (quadratic.containStroke(xi, yi, data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.A:\n        // TODO Arc 判断的开销比较大\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++]; // TODO Arc 旋转\n\n        var psi = data[i++];\n        var anticlockwise = 1 - data[i++];\n        var x1 = Math.cos(theta) * rx + cx;\n        var y1 = Math.sin(theta) * ry + cy; // 不是直接使用 arc 命令\n\n        if (i > 1) {\n          w += windingLine(xi, yi, x1, y1, x, y);\n        } else {\n          // 第一个命令起点还未定义\n          x0 = x1;\n          y0 = y1;\n        } // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n\n\n        var _x = (x - cx) * ry / rx + cx;\n\n        if (isStroke) {\n          if (arc.containStroke(cx, cy, ry, theta, theta + dTheta, anticlockwise, lineWidth, _x, y)) {\n            return true;\n          }\n        } else {\n          w += windingArc(cx, cy, ry, theta, theta + dTheta, anticlockwise, _x, y);\n        }\n\n        xi = Math.cos(theta + dTheta) * rx + cx;\n        yi = Math.sin(theta + dTheta) * ry + cy;\n        break;\n\n      case CMD.R:\n        x0 = xi = data[i++];\n        y0 = yi = data[i++];\n        var width = data[i++];\n        var height = data[i++];\n        var x1 = x0 + width;\n        var y1 = y0 + height;\n\n        if (isStroke) {\n          if (line.containStroke(x0, y0, x1, y0, lineWidth, x, y) || line.containStroke(x1, y0, x1, y1, lineWidth, x, y) || line.containStroke(x1, y1, x0, y1, lineWidth, x, y) || line.containStroke(x0, y1, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // FIXME Clockwise ?\n          w += windingLine(x1, y0, x1, y1, x, y);\n          w += windingLine(x0, y1, x0, y0, x, y);\n        }\n\n        break;\n\n      case CMD.Z:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // Close a subpath\n          w += windingLine(xi, yi, x0, y0, x, y); // 如果被任何一个 subpath 包含\n          // FIXME subpaths may overlap\n          // if (w !== 0) {\n          //     return true;\n          // }\n        }\n\n        xi = x0;\n        yi = y0;\n        break;\n    }\n  }\n\n  if (!isStroke && !isAroundEqual(yi, y0)) {\n    w += windingLine(xi, yi, x0, y0, x, y) || 0;\n  }\n\n  return w !== 0;\n}\n\nfunction contain(pathData, x, y) {\n  return containPath(pathData, 0, false, x, y);\n}\n\nfunction containStroke(pathData, lineWidth, x, y) {\n  return containPath(pathData, lineWidth, true, x, y);\n}\n\nexports.contain = contain;\nexports.containStroke = containStroke;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar ParallelAxis = require(\"./ParallelAxis\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar sliderMove = require(\"../../component/helper/sliderMove\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Parallel Coordinates\n * <https://en.wikipedia.org/wiki/Parallel_coordinates>\n */\nvar each = zrUtil.each;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar round = numberUtil.round;\nvar PI = Math.PI;\n\nfunction Parallel(parallelModel, ecModel, api) {\n  /**\n   * key: dimension\n   * @type {Object.<string, module:echarts/coord/parallel/Axis>}\n   * @private\n   */\n  this._axesMap = zrUtil.createHashMap();\n  /**\n   * key: dimension\n   * value: {position: [], rotation, }\n   * @type {Object.<string, Object>}\n   * @private\n   */\n\n  this._axesLayout = {};\n  /**\n   * Always follow axis order.\n   * @type {Array.<string>}\n   * @readOnly\n   */\n\n  this.dimensions = parallelModel.dimensions;\n  /**\n   * @type {module:zrender/core/BoundingRect}\n   */\n\n  this._rect;\n  /**\n   * @type {module:echarts/coord/parallel/ParallelModel}\n   */\n\n  this._model = parallelModel;\n\n  this._init(parallelModel, ecModel, api);\n}\n\nParallel.prototype = {\n  type: 'parallel',\n  constructor: Parallel,\n\n  /**\n   * Initialize cartesian coordinate systems\n   * @private\n   */\n  _init: function (parallelModel, ecModel, api) {\n    var dimensions = parallelModel.dimensions;\n    var parallelAxisIndex = parallelModel.parallelAxisIndex;\n    each(dimensions, function (dim, idx) {\n      var axisIndex = parallelAxisIndex[idx];\n      var axisModel = ecModel.getComponent('parallelAxis', axisIndex);\n\n      var axis = this._axesMap.set(dim, new ParallelAxis(dim, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisIndex));\n\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse'); // Injection\n\n      axisModel.axis = axis;\n      axis.model = axisModel;\n      axis.coordinateSystem = axisModel.coordinateSystem = this;\n    }, this);\n  },\n\n  /**\n   * Update axis scale after data processed\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  update: function (ecModel, api) {\n    this._updateAxesFromSeries(this._model, ecModel);\n  },\n\n  /**\n   * @override\n   */\n  containPoint: function (point) {\n    var layoutInfo = this._makeLayoutInfo();\n\n    var axisBase = layoutInfo.axisBase;\n    var layoutBase = layoutInfo.layoutBase;\n    var pixelDimIndex = layoutInfo.pixelDimIndex;\n    var pAxis = point[1 - pixelDimIndex];\n    var pLayout = point[pixelDimIndex];\n    return pAxis >= axisBase && pAxis <= axisBase + layoutInfo.axisLength && pLayout >= layoutBase && pLayout <= layoutBase + layoutInfo.layoutLength;\n  },\n  getModel: function () {\n    return this._model;\n  },\n\n  /**\n   * Update properties from series\n   * @private\n   */\n  _updateAxesFromSeries: function (parallelModel, ecModel) {\n    ecModel.eachSeries(function (seriesModel) {\n      if (!parallelModel.contains(seriesModel, ecModel)) {\n        return;\n      }\n\n      var data = seriesModel.getData();\n      each(this.dimensions, function (dim) {\n        var axis = this._axesMap.get(dim);\n\n        axis.scale.unionExtentFromData(data, data.mapDimension(dim));\n        axisHelper.niceScaleExtent(axis.scale, axis.model);\n      }, this);\n    }, this);\n  },\n\n  /**\n   * Resize the parallel coordinate system.\n   * @param {module:echarts/coord/parallel/ParallelModel} parallelModel\n   * @param {module:echarts/ExtensionAPI} api\n   */\n  resize: function (parallelModel, api) {\n    this._rect = layoutUtil.getLayoutRect(parallelModel.getBoxLayoutParams(), {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n\n    this._layoutAxes();\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getRect: function () {\n    return this._rect;\n  },\n\n  /**\n   * @private\n   */\n  _makeLayoutInfo: function () {\n    var parallelModel = this._model;\n    var rect = this._rect;\n    var xy = ['x', 'y'];\n    var wh = ['width', 'height'];\n    var layout = parallelModel.get('layout');\n    var pixelDimIndex = layout === 'horizontal' ? 0 : 1;\n    var layoutLength = rect[wh[pixelDimIndex]];\n    var layoutExtent = [0, layoutLength];\n    var axisCount = this.dimensions.length;\n    var axisExpandWidth = restrict(parallelModel.get('axisExpandWidth'), layoutExtent);\n    var axisExpandCount = restrict(parallelModel.get('axisExpandCount') || 0, [0, axisCount]);\n    var axisExpandable = parallelModel.get('axisExpandable') && axisCount > 3 && axisCount > axisExpandCount && axisExpandCount > 1 && axisExpandWidth > 0 && layoutLength > 0; // `axisExpandWindow` is According to the coordinates of [0, axisExpandLength],\n    // for sake of consider the case that axisCollapseWidth is 0 (when screen is narrow),\n    // where collapsed axes should be overlapped.\n\n    var axisExpandWindow = parallelModel.get('axisExpandWindow');\n    var winSize;\n\n    if (!axisExpandWindow) {\n      winSize = restrict(axisExpandWidth * (axisExpandCount - 1), layoutExtent);\n      var axisExpandCenter = parallelModel.get('axisExpandCenter') || mathFloor(axisCount / 2);\n      axisExpandWindow = [axisExpandWidth * axisExpandCenter - winSize / 2];\n      axisExpandWindow[1] = axisExpandWindow[0] + winSize;\n    } else {\n      winSize = restrict(axisExpandWindow[1] - axisExpandWindow[0], layoutExtent);\n      axisExpandWindow[1] = axisExpandWindow[0] + winSize;\n    }\n\n    var axisCollapseWidth = (layoutLength - winSize) / (axisCount - axisExpandCount); // Avoid axisCollapseWidth is too small.\n\n    axisCollapseWidth < 3 && (axisCollapseWidth = 0); // Find the first and last indices > ewin[0] and < ewin[1].\n\n    var winInnerIndices = [mathFloor(round(axisExpandWindow[0] / axisExpandWidth, 1)) + 1, mathCeil(round(axisExpandWindow[1] / axisExpandWidth, 1)) - 1]; // Pos in ec coordinates.\n\n    var axisExpandWindow0Pos = axisCollapseWidth / axisExpandWidth * axisExpandWindow[0];\n    return {\n      layout: layout,\n      pixelDimIndex: pixelDimIndex,\n      layoutBase: rect[xy[pixelDimIndex]],\n      layoutLength: layoutLength,\n      axisBase: rect[xy[1 - pixelDimIndex]],\n      axisLength: rect[wh[1 - pixelDimIndex]],\n      axisExpandable: axisExpandable,\n      axisExpandWidth: axisExpandWidth,\n      axisCollapseWidth: axisCollapseWidth,\n      axisExpandWindow: axisExpandWindow,\n      axisCount: axisCount,\n      winInnerIndices: winInnerIndices,\n      axisExpandWindow0Pos: axisExpandWindow0Pos\n    };\n  },\n\n  /**\n   * @private\n   */\n  _layoutAxes: function () {\n    var rect = this._rect;\n    var axes = this._axesMap;\n    var dimensions = this.dimensions;\n\n    var layoutInfo = this._makeLayoutInfo();\n\n    var layout = layoutInfo.layout;\n    axes.each(function (axis) {\n      var axisExtent = [0, layoutInfo.axisLength];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(axisExtent[idx], axisExtent[1 - idx]);\n    });\n    each(dimensions, function (dim, idx) {\n      var posInfo = (layoutInfo.axisExpandable ? layoutAxisWithExpand : layoutAxisWithoutExpand)(idx, layoutInfo);\n      var positionTable = {\n        horizontal: {\n          x: posInfo.position,\n          y: layoutInfo.axisLength\n        },\n        vertical: {\n          x: 0,\n          y: posInfo.position\n        }\n      };\n      var rotationTable = {\n        horizontal: PI / 2,\n        vertical: 0\n      };\n      var position = [positionTable[layout].x + rect.x, positionTable[layout].y + rect.y];\n      var rotation = rotationTable[layout];\n      var transform = matrix.create();\n      matrix.rotate(transform, transform, rotation);\n      matrix.translate(transform, transform, position); // TODO\n      // tick等排布信息。\n      // TODO\n      // 根据axis order 更新 dimensions顺序。\n\n      this._axesLayout[dim] = {\n        position: position,\n        rotation: rotation,\n        transform: transform,\n        axisNameAvailableWidth: posInfo.axisNameAvailableWidth,\n        axisLabelShow: posInfo.axisLabelShow,\n        nameTruncateMaxWidth: posInfo.nameTruncateMaxWidth,\n        tickDirection: 1,\n        labelDirection: 1\n      };\n    }, this);\n  },\n\n  /**\n   * Get axis by dim.\n   * @param {string} dim\n   * @return {module:echarts/coord/parallel/ParallelAxis} [description]\n   */\n  getAxis: function (dim) {\n    return this._axesMap.get(dim);\n  },\n\n  /**\n   * Convert a dim value of a single item of series data to Point.\n   * @param {*} value\n   * @param {string} dim\n   * @return {Array}\n   */\n  dataToPoint: function (value, dim) {\n    return this.axisCoordToPoint(this._axesMap.get(dim).dataToCoord(value), dim);\n  },\n\n  /**\n   * Travel data for one time, get activeState of each data item.\n   * @param {module:echarts/data/List} data\n   * @param {Functio} cb param: {string} activeState 'active' or 'inactive' or 'normal'\n   *                            {number} dataIndex\n   * @param {number} [start=0] the start dataIndex that travel from.\n   * @param {number} [end=data.count()] the next dataIndex of the last dataIndex will be travel.\n   */\n  eachActiveState: function (data, callback, start, end) {\n    start == null && (start = 0);\n    end == null && (end = data.count());\n    var axesMap = this._axesMap;\n    var dimensions = this.dimensions;\n    var dataDimensions = [];\n    var axisModels = [];\n    zrUtil.each(dimensions, function (axisDim) {\n      dataDimensions.push(data.mapDimension(axisDim));\n      axisModels.push(axesMap.get(axisDim).model);\n    });\n    var hasActiveSet = this.hasAxisBrushed();\n\n    for (var dataIndex = start; dataIndex < end; dataIndex++) {\n      var activeState;\n\n      if (!hasActiveSet) {\n        activeState = 'normal';\n      } else {\n        activeState = 'active';\n        var values = data.getValues(dataDimensions, dataIndex);\n\n        for (var j = 0, lenj = dimensions.length; j < lenj; j++) {\n          var state = axisModels[j].getActiveState(values[j]);\n\n          if (state === 'inactive') {\n            activeState = 'inactive';\n            break;\n          }\n        }\n      }\n\n      callback(activeState, dataIndex);\n    }\n  },\n\n  /**\n   * Whether has any activeSet.\n   * @return {boolean}\n   */\n  hasAxisBrushed: function () {\n    var dimensions = this.dimensions;\n    var axesMap = this._axesMap;\n    var hasActiveSet = false;\n\n    for (var j = 0, lenj = dimensions.length; j < lenj; j++) {\n      if (axesMap.get(dimensions[j]).model.getActiveState() !== 'normal') {\n        hasActiveSet = true;\n      }\n    }\n\n    return hasActiveSet;\n  },\n\n  /**\n   * Convert coords of each axis to Point.\n   *  Return point. For example: [10, 20]\n   * @param {Array.<number>} coords\n   * @param {string} dim\n   * @return {Array.<number>}\n   */\n  axisCoordToPoint: function (coord, dim) {\n    var axisLayout = this._axesLayout[dim];\n    return graphic.applyTransform([coord, 0], axisLayout.transform);\n  },\n\n  /**\n   * Get axis layout.\n   */\n  getAxisLayout: function (dim) {\n    return zrUtil.clone(this._axesLayout[dim]);\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @return {Object} {axisExpandWindow, delta, behavior: 'jump' | 'slide' | 'none'}.\n   */\n  getSlidedAxisExpandWindow: function (point) {\n    var layoutInfo = this._makeLayoutInfo();\n\n    var pixelDimIndex = layoutInfo.pixelDimIndex;\n    var axisExpandWindow = layoutInfo.axisExpandWindow.slice();\n    var winSize = axisExpandWindow[1] - axisExpandWindow[0];\n    var extent = [0, layoutInfo.axisExpandWidth * (layoutInfo.axisCount - 1)]; // Out of the area of coordinate system.\n\n    if (!this.containPoint(point)) {\n      return {\n        behavior: 'none',\n        axisExpandWindow: axisExpandWindow\n      };\n    } // Conver the point from global to expand coordinates.\n\n\n    var pointCoord = point[pixelDimIndex] - layoutInfo.layoutBase - layoutInfo.axisExpandWindow0Pos; // For dragging operation convenience, the window should not be\n    // slided when mouse is the center area of the window.\n\n    var delta;\n    var behavior = 'slide';\n    var axisCollapseWidth = layoutInfo.axisCollapseWidth;\n\n    var triggerArea = this._model.get('axisExpandSlideTriggerArea'); // But consider touch device, jump is necessary.\n\n\n    var useJump = triggerArea[0] != null;\n\n    if (axisCollapseWidth) {\n      if (useJump && axisCollapseWidth && pointCoord < winSize * triggerArea[0]) {\n        behavior = 'jump';\n        delta = pointCoord - winSize * triggerArea[2];\n      } else if (useJump && axisCollapseWidth && pointCoord > winSize * (1 - triggerArea[0])) {\n        behavior = 'jump';\n        delta = pointCoord - winSize * (1 - triggerArea[2]);\n      } else {\n        (delta = pointCoord - winSize * triggerArea[1]) >= 0 && (delta = pointCoord - winSize * (1 - triggerArea[1])) <= 0 && (delta = 0);\n      }\n\n      delta *= layoutInfo.axisExpandWidth / axisCollapseWidth;\n      delta ? sliderMove(delta, axisExpandWindow, extent, 'all') // Avoid nonsense triger on mousemove.\n      : behavior = 'none';\n    } // When screen is too narrow, make it visible and slidable, although it is hard to interact.\n    else {\n        var winSize = axisExpandWindow[1] - axisExpandWindow[0];\n        var pos = extent[1] * pointCoord / winSize;\n        axisExpandWindow = [mathMax(0, pos - winSize / 2)];\n        axisExpandWindow[1] = mathMin(extent[1], axisExpandWindow[0] + winSize);\n        axisExpandWindow[0] = axisExpandWindow[1] - winSize;\n      }\n\n    return {\n      axisExpandWindow: axisExpandWindow,\n      behavior: behavior\n    };\n  }\n};\n\nfunction restrict(len, extent) {\n  return mathMin(mathMax(len, extent[0]), extent[1]);\n}\n\nfunction layoutAxisWithoutExpand(axisIndex, layoutInfo) {\n  var step = layoutInfo.layoutLength / (layoutInfo.axisCount - 1);\n  return {\n    position: step * axisIndex,\n    axisNameAvailableWidth: step,\n    axisLabelShow: true\n  };\n}\n\nfunction layoutAxisWithExpand(axisIndex, layoutInfo) {\n  var layoutLength = layoutInfo.layoutLength;\n  var axisExpandWidth = layoutInfo.axisExpandWidth;\n  var axisCount = layoutInfo.axisCount;\n  var axisCollapseWidth = layoutInfo.axisCollapseWidth;\n  var winInnerIndices = layoutInfo.winInnerIndices;\n  var position;\n  var axisNameAvailableWidth = axisCollapseWidth;\n  var axisLabelShow = false;\n  var nameTruncateMaxWidth;\n\n  if (axisIndex < winInnerIndices[0]) {\n    position = axisIndex * axisCollapseWidth;\n    nameTruncateMaxWidth = axisCollapseWidth;\n  } else if (axisIndex <= winInnerIndices[1]) {\n    position = layoutInfo.axisExpandWindow0Pos + axisIndex * axisExpandWidth - layoutInfo.axisExpandWindow[0];\n    axisNameAvailableWidth = axisExpandWidth;\n    axisLabelShow = true;\n  } else {\n    position = layoutLength - (axisCount - 1 - axisIndex) * axisCollapseWidth;\n    nameTruncateMaxWidth = axisCollapseWidth;\n  }\n\n  return {\n    position: position,\n    axisNameAvailableWidth: axisNameAvailableWidth,\n    axisLabelShow: axisLabelShow,\n    nameTruncateMaxWidth: nameTruncateMaxWidth\n  };\n}\n\nvar _default = Parallel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PolarAxisModel = ComponentModel.extend({\n  type: 'polarAxis',\n\n  /**\n   * @type {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  getCoordSysModel: function () {\n    return this.ecModel.queryComponents({\n      mainType: 'polar',\n      index: this.option.polarIndex,\n      id: this.option.polarId\n    })[0];\n  }\n});\nzrUtil.merge(PolarAxisModel.prototype, axisModelCommonMixin);\nvar polarAxisDefaultExtendedOption = {\n  angle: {\n    // polarIndex: 0,\n    // polarId: '',\n    startAngle: 90,\n    clockwise: true,\n    splitNumber: 12,\n    axisLabel: {\n      rotate: false\n    }\n  },\n  radius: {\n    // polarIndex: 0,\n    // polarId: '',\n    splitNumber: 5\n  }\n};\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\naxisModelCreator('angle', PolarAxisModel, getAxisType, polarAxisDefaultExtendedOption.angle);\naxisModelCreator('radius', PolarAxisModel, getAxisType, polarAxisDefaultExtendedOption.radius);","var Path = require(\"../Path\");\n\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\nvar _default = Path.extend({\n  type: 'circle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    // Better stroking in ShapeBundle\n    // Always do it may have performence issue ( fill may be 2x more cost)\n    if (inBundle) {\n      ctx.moveTo(shape.cx + shape.r, shape.cy);\n    } // else {\n    //     if (ctx.allocate && !ctx.data.length) {\n    //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n    //     }\n    // }\n    // Better stroking in ShapeBundle\n    // ctx.moveTo(shape.cx + shape.r, shape.cy);\n\n\n    ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./treemap/TreemapSeries\");\n\nrequire(\"./treemap/TreemapView\");\n\nrequire(\"./treemap/treemapAction\");\n\nvar treemapVisual = require(\"./treemap/treemapVisual\");\n\nvar treemapLayout = require(\"./treemap/treemapLayout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerVisual(treemapVisual);\necharts.registerLayout(treemapLayout);","var echarts = require(\"../echarts\");\n\nrequire(\"./marker/MarkPointModel\");\n\nrequire(\"./marker/MarkPointView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// HINT Markpoint can't be used too much\necharts.registerPreprocessor(function (opt) {\n  // Make sure markPoint component is enabled\n  opt.markPoint = opt.markPoint || {};\n});","var echarts = require(\"../../../echarts\");\n\nvar history = require(\"../../dataZoom/history\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar restoreLang = lang.toolbox.restore;\n\nfunction Restore(model) {\n  this.model = model;\n}\n\nRestore.defaultOption = {\n  show: true,\n  icon: 'M3.8,33.4 M47,18.9h9.8V8.7 M56.3,20.1 C52.1,9,40.5,0.6,26.8,2.1C12.6,3.7,1.6,16.2,2.1,30.6 M13,41.1H3.1v10.2 M3.7,39.9c4.2,11.1,15.8,19.5,29.5,18 c14.2-1.6,25.2-14.1,24.7-28.5',\n  title: restoreLang.title\n};\nvar proto = Restore.prototype;\n\nproto.onclick = function (ecModel, api, type) {\n  history.clear(ecModel);\n  api.dispatchAction({\n    type: 'restore',\n    from: this.uid\n  });\n};\n\nfeatureManager.register('restore', Restore);\necharts.registerAction({\n  type: 'restore',\n  event: 'restore',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  ecModel.resetOption('recreate');\n});\nvar _default = Restore;\nmodule.exports = _default;","var Pattern = function (image, repeat) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {image: ...}`, where this constructor will not be called.\n  this.image = image;\n  this.repeat = repeat; // Can be cloned\n\n  this.type = 'pattern';\n};\n\nPattern.prototype.getCanvasPattern = function (ctx) {\n  return ctx.createPattern(this.image, this.repeat || 'repeat');\n};\n\nvar _default = Pattern;\nmodule.exports = _default;","var _core = require(\"./core\");\n\nvar createElement = _core.createElement;\n\nvar util = require(\"../core/util\");\n\nvar each = util.each;\n\nvar zrLog = require(\"../core/log\");\n\nvar Path = require(\"../graphic/Path\");\n\nvar ZImage = require(\"../graphic/Image\");\n\nvar ZText = require(\"../graphic/Text\");\n\nvar arrayDiff = require(\"../core/arrayDiff2\");\n\nvar GradientManager = require(\"./helper/GradientManager\");\n\nvar ClippathManager = require(\"./helper/ClippathManager\");\n\nvar ShadowManager = require(\"./helper/ShadowManager\");\n\nvar _graphic = require(\"./graphic\");\n\nvar svgPath = _graphic.path;\nvar svgImage = _graphic.image;\nvar svgText = _graphic.text;\n\n/**\n * SVG Painter\n * @module zrender/svg/Painter\n */\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction getSvgProxy(el) {\n  if (el instanceof Path) {\n    return svgPath;\n  } else if (el instanceof ZImage) {\n    return svgImage;\n  } else if (el instanceof ZText) {\n    return svgText;\n  } else {\n    return svgPath;\n  }\n}\n\nfunction checkParentAvailable(parent, child) {\n  return child && parent && child.parentNode !== parent;\n}\n\nfunction insertAfter(parent, child, prevSibling) {\n  if (checkParentAvailable(parent, child) && prevSibling) {\n    var nextSibling = prevSibling.nextSibling;\n    nextSibling ? parent.insertBefore(child, nextSibling) : parent.appendChild(child);\n  }\n}\n\nfunction prepend(parent, child) {\n  if (checkParentAvailable(parent, child)) {\n    var firstChild = parent.firstChild;\n    firstChild ? parent.insertBefore(child, firstChild) : parent.appendChild(child);\n  }\n}\n\nfunction append(parent, child) {\n  if (checkParentAvailable(parent, child)) {\n    parent.appendChild(child);\n  }\n}\n\nfunction remove(parent, child) {\n  if (child && parent && child.parentNode === parent) {\n    parent.removeChild(child);\n  }\n}\n\nfunction getTextSvgElement(displayable) {\n  return displayable.__textSvgEl;\n}\n\nfunction getSvgElement(displayable) {\n  return displayable.__svgEl;\n}\n/**\n * @alias module:zrender/svg/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar SVGPainter = function (root, storage, opts, zrId) {\n  this.root = root;\n  this.storage = storage;\n  this._opts = opts = util.extend({}, opts || {});\n  var svgRoot = createElement('svg');\n  svgRoot.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n  svgRoot.setAttribute('version', '1.1');\n  svgRoot.setAttribute('baseProfile', 'full');\n  svgRoot.style.cssText = 'user-select:none;position:absolute;left:0;top:0;';\n  this.gradientManager = new GradientManager(zrId, svgRoot);\n  this.clipPathManager = new ClippathManager(zrId, svgRoot);\n  this.shadowManager = new ShadowManager(zrId, svgRoot);\n  var viewport = document.createElement('div');\n  viewport.style.cssText = 'overflow:hidden;position:relative';\n  this._svgRoot = svgRoot;\n  this._viewport = viewport;\n  root.appendChild(viewport);\n  viewport.appendChild(svgRoot);\n  this.resize(opts.width, opts.height);\n  this._visibleList = [];\n};\n\nSVGPainter.prototype = {\n  constructor: SVGPainter,\n  getType: function () {\n    return 'svg';\n  },\n  getViewportRoot: function () {\n    return this._viewport;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n  refresh: function () {\n    var list = this.storage.getDisplayList(true);\n\n    this._paintList(list);\n  },\n  setBackgroundColor: function (backgroundColor) {\n    // TODO gradient\n    this._viewport.style.background = backgroundColor;\n  },\n  _paintList: function (list) {\n    this.gradientManager.markAllUnused();\n    this.clipPathManager.markAllUnused();\n    this.shadowManager.markAllUnused();\n    var svgRoot = this._svgRoot;\n    var visibleList = this._visibleList;\n    var listLen = list.length;\n    var newVisibleList = [];\n    var i;\n\n    for (i = 0; i < listLen; i++) {\n      var displayable = list[i];\n      var svgProxy = getSvgProxy(displayable);\n      var svgElement = getSvgElement(displayable) || getTextSvgElement(displayable);\n\n      if (!displayable.invisible) {\n        if (displayable.__dirty) {\n          svgProxy && svgProxy.brush(displayable); // Update clipPath\n\n          this.clipPathManager.update(displayable); // Update gradient and shadow\n\n          if (displayable.style) {\n            this.gradientManager.update(displayable.style.fill);\n            this.gradientManager.update(displayable.style.stroke);\n            this.shadowManager.update(svgElement, displayable);\n          }\n\n          displayable.__dirty = false;\n        }\n\n        newVisibleList.push(displayable);\n      }\n    }\n\n    var diff = arrayDiff(visibleList, newVisibleList);\n    var prevSvgElement; // First do remove, in case element moved to the head and do remove\n    // after add\n\n    for (i = 0; i < diff.length; i++) {\n      var item = diff[i];\n\n      if (item.removed) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = visibleList[item.indices[k]];\n          var svgElement = getSvgElement(displayable);\n          var textSvgElement = getTextSvgElement(displayable);\n          remove(svgRoot, svgElement);\n          remove(svgRoot, textSvgElement);\n        }\n      }\n    }\n\n    for (i = 0; i < diff.length; i++) {\n      var item = diff[i];\n\n      if (item.added) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = newVisibleList[item.indices[k]];\n          var svgElement = getSvgElement(displayable);\n          var textSvgElement = getTextSvgElement(displayable);\n          prevSvgElement ? insertAfter(svgRoot, svgElement, prevSvgElement) : prepend(svgRoot, svgElement);\n\n          if (svgElement) {\n            insertAfter(svgRoot, textSvgElement, svgElement);\n          } else if (prevSvgElement) {\n            insertAfter(svgRoot, textSvgElement, prevSvgElement);\n          } else {\n            prepend(svgRoot, textSvgElement);\n          } // Insert text\n\n\n          insertAfter(svgRoot, textSvgElement, svgElement);\n          prevSvgElement = textSvgElement || svgElement || prevSvgElement;\n          this.gradientManager.addWithoutUpdate(svgElement, displayable);\n          this.shadowManager.addWithoutUpdate(prevSvgElement, displayable);\n          this.clipPathManager.markUsed(displayable);\n        }\n      } else if (!item.removed) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = newVisibleList[item.indices[k]];\n          prevSvgElement = svgElement = getTextSvgElement(displayable) || getSvgElement(displayable) || prevSvgElement;\n          this.gradientManager.markUsed(displayable);\n          this.gradientManager.addWithoutUpdate(svgElement, displayable);\n          this.shadowManager.markUsed(displayable);\n          this.shadowManager.addWithoutUpdate(svgElement, displayable);\n          this.clipPathManager.markUsed(displayable);\n        }\n      }\n    }\n\n    this.gradientManager.removeUnused();\n    this.clipPathManager.removeUnused();\n    this.shadowManager.removeUnused();\n    this._visibleList = newVisibleList;\n  },\n  _getDefs: function (isForceCreating) {\n    var svgRoot = this._svgRoot;\n\n    var defs = this._svgRoot.getElementsByTagName('defs');\n\n    if (defs.length === 0) {\n      // Not exist\n      if (isForceCreating) {\n        var defs = svgRoot.insertBefore(createElement('defs'), // Create new tag\n        svgRoot.firstChild // Insert in the front of svg\n        );\n\n        if (!defs.contains) {\n          // IE doesn't support contains method\n          defs.contains = function (el) {\n            var children = defs.children;\n\n            if (!children) {\n              return false;\n            }\n\n            for (var i = children.length - 1; i >= 0; --i) {\n              if (children[i] === el) {\n                return true;\n              }\n            }\n\n            return false;\n          };\n        }\n\n        return defs;\n      } else {\n        return null;\n      }\n    } else {\n      return defs[0];\n    }\n  },\n  resize: function (width, height) {\n    var viewport = this._viewport; // FIXME Why ?\n\n    viewport.style.display = 'none'; // Save input w/h\n\n    var opts = this._opts;\n    width != null && (opts.width = width);\n    height != null && (opts.height = height);\n    width = this._getSize(0);\n    height = this._getSize(1);\n    viewport.style.display = '';\n\n    if (this._width !== width || this._height !== height) {\n      this._width = width;\n      this._height = height;\n      var viewportStyle = viewport.style;\n      viewportStyle.width = width + 'px';\n      viewportStyle.height = height + 'px';\n      var svgRoot = this._svgRoot; // Set width by 'svgRoot.width = width' is invalid\n\n      svgRoot.setAttribute('width', width);\n      svgRoot.setAttribute('height', height);\n    }\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  dispose: function () {\n    this.root.innerHTML = '';\n    this._svgRoot = this._viewport = this.storage = null;\n  },\n  clear: function () {\n    if (this._viewport) {\n      this.root.removeChild(this._viewport);\n    }\n  },\n  pathToDataUrl: function () {\n    this.refresh();\n    var html = this._svgRoot.outerHTML;\n    return 'data:image/svg+xml;charset=UTF-8,' + html;\n  }\n}; // Not supported methods\n\nfunction createMethodNotSupport(method) {\n  return function () {\n    zrLog('In SVG mode painter not support method \"' + method + '\"');\n  };\n} // Unsuppoted methods\n\n\neach(['getLayer', 'insertLayer', 'eachLayer', 'eachBuiltinLayer', 'eachOtherLayer', 'getLayers', 'modLayer', 'delLayer', 'clearLayer', 'toDataURL', 'pathToImage'], function (name) {\n  SVGPainter.prototype[name] = createMethodNotSupport(name);\n});\nvar _default = SVGPainter;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar clazzUtil = require(\"../../util/clazz\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar axisPointerModelHelper = require(\"./modelHelper\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\nvar clone = zrUtil.clone;\nvar bind = zrUtil.bind;\n/**\n * Base axis pointer class in 2D.\n * Implemenents {module:echarts/component/axis/IAxisPointer}.\n */\n\nfunction BaseAxisPointer() {}\n\nBaseAxisPointer.prototype = {\n  /**\n   * @private\n   */\n  _group: null,\n\n  /**\n   * @private\n   */\n  _lastGraphicKey: null,\n\n  /**\n   * @private\n   */\n  _handle: null,\n\n  /**\n   * @private\n   */\n  _dragging: false,\n\n  /**\n   * @private\n   */\n  _lastValue: null,\n\n  /**\n   * @private\n   */\n  _lastStatus: null,\n\n  /**\n   * @private\n   */\n  _payloadInfo: null,\n\n  /**\n   * In px, arbitrary value. Do not set too small,\n   * no animation is ok for most cases.\n   * @protected\n   */\n  animationThreshold: 15,\n\n  /**\n   * @implement\n   */\n  render: function (axisModel, axisPointerModel, api, forceRender) {\n    var value = axisPointerModel.get('value');\n    var status = axisPointerModel.get('status'); // Bind them to `this`, not in closure, otherwise they will not\n    // be replaced when user calling setOption in not merge mode.\n\n    this._axisModel = axisModel;\n    this._axisPointerModel = axisPointerModel;\n    this._api = api; // Optimize: `render` will be called repeatly during mouse move.\n    // So it is power consuming if performing `render` each time,\n    // especially on mobile device.\n\n    if (!forceRender && this._lastValue === value && this._lastStatus === status) {\n      return;\n    }\n\n    this._lastValue = value;\n    this._lastStatus = status;\n    var group = this._group;\n    var handle = this._handle;\n\n    if (!status || status === 'hide') {\n      // Do not clear here, for animation better.\n      group && group.hide();\n      handle && handle.hide();\n      return;\n    }\n\n    group && group.show();\n    handle && handle.show(); // Otherwise status is 'show'\n\n    var elOption = {};\n    this.makeElOption(elOption, value, axisModel, axisPointerModel, api); // Enable change axis pointer type.\n\n    var graphicKey = elOption.graphicKey;\n\n    if (graphicKey !== this._lastGraphicKey) {\n      this.clear(api);\n    }\n\n    this._lastGraphicKey = graphicKey;\n    var moveAnimation = this._moveAnimation = this.determineAnimation(axisModel, axisPointerModel);\n\n    if (!group) {\n      group = this._group = new graphic.Group();\n      this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n      this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n      api.getZr().add(group);\n    } else {\n      var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n      this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n      this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n    }\n\n    updateMandatoryProps(group, axisPointerModel, true);\n\n    this._renderHandle(value);\n  },\n\n  /**\n   * @implement\n   */\n  remove: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @implement\n   */\n  dispose: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @protected\n   */\n  determineAnimation: function (axisModel, axisPointerModel) {\n    var animation = axisPointerModel.get('animation');\n    var axis = axisModel.axis;\n    var isCategoryAxis = axis.type === 'category';\n    var useSnap = axisPointerModel.get('snap'); // Value axis without snap always do not snap.\n\n    if (!useSnap && !isCategoryAxis) {\n      return false;\n    }\n\n    if (animation === 'auto' || animation == null) {\n      var animationThreshold = this.animationThreshold;\n\n      if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n        return true;\n      } // It is important to auto animation when snap used. Consider if there is\n      // a dataZoom, animation will be disabled when too many points exist, while\n      // it will be enabled for better visual effect when little points exist.\n\n\n      if (useSnap) {\n        var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n        var axisExtent = axis.getExtent(); // Approximate band width\n\n        return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n      }\n\n      return false;\n    }\n\n    return animation === true;\n  },\n\n  /**\n   * add {pointer, label, graphicKey} to elOption\n   * @protected\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {// Shoule be implemenented by sub-class.\n  },\n\n  /**\n   * @protected\n   */\n  createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n    var pointerOption = elOption.pointer;\n\n    if (pointerOption) {\n      var pointerEl = inner(group).pointerEl = new graphic[pointerOption.type](clone(elOption.pointer));\n      group.add(pointerEl);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n    if (elOption.label) {\n      var labelEl = inner(group).labelEl = new graphic.Rect(clone(elOption.label));\n      group.add(labelEl);\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updatePointerEl: function (group, elOption, updateProps) {\n    var pointerEl = inner(group).pointerEl;\n\n    if (pointerEl) {\n      pointerEl.setStyle(elOption.pointer.style);\n      updateProps(pointerEl, {\n        shape: elOption.pointer.shape\n      });\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n    var labelEl = inner(group).labelEl;\n\n    if (labelEl) {\n      labelEl.setStyle(elOption.label.style);\n      updateProps(labelEl, {\n        // Consider text length change in vertical axis, animation should\n        // be used on shape, otherwise the effect will be weird.\n        shape: elOption.label.shape,\n        position: elOption.label.position\n      });\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderHandle: function (value) {\n    if (this._dragging || !this.updateHandleTransform) {\n      return;\n    }\n\n    var axisPointerModel = this._axisPointerModel;\n\n    var zr = this._api.getZr();\n\n    var handle = this._handle;\n    var handleModel = axisPointerModel.getModel('handle');\n    var status = axisPointerModel.get('status');\n\n    if (!handleModel.get('show') || !status || status === 'hide') {\n      handle && zr.remove(handle);\n      this._handle = null;\n      return;\n    }\n\n    var isInit;\n\n    if (!this._handle) {\n      isInit = true;\n      handle = this._handle = graphic.createIcon(handleModel.get('icon'), {\n        cursor: 'move',\n        draggable: true,\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n        drift: bind(this._onHandleDragMove, this),\n        ondragend: bind(this._onHandleDragEnd, this)\n      });\n      zr.add(handle);\n    }\n\n    updateMandatoryProps(handle, axisPointerModel, false); // update style\n\n    var includeStyles = ['color', 'borderColor', 'borderWidth', 'opacity', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\n    handle.setStyle(handleModel.getItemStyle(null, includeStyles)); // update position\n\n    var handleSize = handleModel.get('size');\n\n    if (!zrUtil.isArray(handleSize)) {\n      handleSize = [handleSize, handleSize];\n    }\n\n    handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n    throttleUtil.createOrUpdate(this, '_doDispatchAxisPointer', handleModel.get('throttle') || 0, 'fixRate');\n\n    this._moveHandleToValue(value, isInit);\n  },\n\n  /**\n   * @private\n   */\n  _moveHandleToValue: function (value, isInit) {\n    updateProps(this._axisPointerModel, !isInit && this._moveAnimation, this._handle, getHandleTransProps(this.getHandleTransform(value, this._axisModel, this._axisPointerModel)));\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragMove: function (dx, dy) {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    this._dragging = true; // Persistent for throttle.\n\n    var trans = this.updateHandleTransform(getHandleTransProps(handle), [dx, dy], this._axisModel, this._axisPointerModel);\n    this._payloadInfo = trans;\n    handle.stopAnimation();\n    handle.attr(getHandleTransProps(trans));\n    inner(handle).lastProp = null;\n\n    this._doDispatchAxisPointer();\n  },\n\n  /**\n   * Throttled method.\n   * @private\n   */\n  _doDispatchAxisPointer: function () {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var payloadInfo = this._payloadInfo;\n    var axisModel = this._axisModel;\n\n    this._api.dispatchAction({\n      type: 'updateAxisPointer',\n      x: payloadInfo.cursorPoint[0],\n      y: payloadInfo.cursorPoint[1],\n      tooltipOption: payloadInfo.tooltipOption,\n      axesInfo: [{\n        axisDim: axisModel.axis.dim,\n        axisIndex: axisModel.componentIndex\n      }]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragEnd: function (moveAnimation) {\n    this._dragging = false;\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var value = this._axisPointerModel.get('value'); // Consider snap or categroy axis, handle may be not consistent with\n    // axisPointer. So move handle to align the exact value position when\n    // drag ended.\n\n\n    this._moveHandleToValue(value); // For the effect: tooltip will be shown when finger holding on handle\n    // button, and will be hidden after finger left handle button.\n\n\n    this._api.dispatchAction({\n      type: 'hideTip'\n    });\n  },\n\n  /**\n   * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {number} value\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0}\n   */\n  getHandleTransform: null,\n\n  /**\n   * * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {Object} transform {position, rotation}\n   * @param {Array.<number>} delta [dx, dy]\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n   */\n  updateHandleTransform: null,\n\n  /**\n   * @private\n   */\n  clear: function (api) {\n    this._lastValue = null;\n    this._lastStatus = null;\n    var zr = api.getZr();\n    var group = this._group;\n    var handle = this._handle;\n\n    if (zr && group) {\n      this._lastGraphicKey = null;\n      group && zr.remove(group);\n      handle && zr.remove(handle);\n      this._group = null;\n      this._handle = null;\n      this._payloadInfo = null;\n    }\n  },\n\n  /**\n   * @protected\n   */\n  doClear: function () {// Implemented by sub-class if necessary.\n  },\n\n  /**\n   * @protected\n   * @param {Array.<number>} xy\n   * @param {Array.<number>} wh\n   * @param {number} [xDimIndex=0] or 1\n   */\n  buildLabel: function (xy, wh, xDimIndex) {\n    xDimIndex = xDimIndex || 0;\n    return {\n      x: xy[xDimIndex],\n      y: xy[1 - xDimIndex],\n      width: wh[xDimIndex],\n      height: wh[1 - xDimIndex]\n    };\n  }\n};\nBaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\nfunction updateProps(animationModel, moveAnimation, el, props) {\n  // Animation optimize.\n  if (!propsEqual(inner(el).lastProp, props)) {\n    inner(el).lastProp = props;\n    moveAnimation ? graphic.updateProps(el, props, animationModel) : (el.stopAnimation(), el.attr(props));\n  }\n}\n\nfunction propsEqual(lastProps, newProps) {\n  if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n    var equals = true;\n    zrUtil.each(newProps, function (item, key) {\n      equals = equals && propsEqual(lastProps[key], item);\n    });\n    return !!equals;\n  } else {\n    return lastProps === newProps;\n  }\n}\n\nfunction updateLabelShowHide(labelEl, axisPointerModel) {\n  labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n}\n\nfunction getHandleTransProps(trans) {\n  return {\n    position: trans.position.slice(),\n    rotation: trans.rotation || 0\n  };\n}\n\nfunction updateMandatoryProps(group, axisPointerModel, silent) {\n  var z = axisPointerModel.get('z');\n  var zlevel = axisPointerModel.get('zlevel');\n  group && group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n      el.silent = silent;\n    }\n  });\n}\n\nclazzUtil.enableClassExtend(BaseAxisPointer);\nvar _default = BaseAxisPointer;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Update common properties\nvar NORMAL_ITEM_STYLE_PATH = ['itemStyle'];\nvar EMPHASIS_ITEM_STYLE_PATH = ['emphasis', 'itemStyle'];\nvar BoxplotView = ChartView.extend({\n  type: 'boxplot',\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var group = this.group;\n    var oldData = this._data; // There is no old data only when first rendering or switching from\n    // stream mode to normal mode, where previous elements should be removed.\n\n    if (!this._data) {\n      group.removeAll();\n    }\n\n    var constDim = seriesModel.get('layout') === 'horizontal' ? 1 : 0;\n    data.diff(oldData).add(function (newIdx) {\n      if (data.hasValue(newIdx)) {\n        var itemLayout = data.getItemLayout(newIdx);\n        var symbolEl = createNormalBox(itemLayout, data, newIdx, constDim, true);\n        data.setItemGraphicEl(newIdx, symbolEl);\n        group.add(symbolEl);\n      }\n    }).update(function (newIdx, oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx); // Empty data\n\n      if (!data.hasValue(newIdx)) {\n        group.remove(symbolEl);\n        return;\n      }\n\n      var itemLayout = data.getItemLayout(newIdx);\n\n      if (!symbolEl) {\n        symbolEl = createNormalBox(itemLayout, data, newIdx, constDim);\n      } else {\n        updateNormalBoxData(itemLayout, symbolEl, data, newIdx);\n      }\n\n      group.add(symbolEl);\n      data.setItemGraphicEl(newIdx, symbolEl);\n    }).remove(function (oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      el && group.remove(el);\n    }).execute();\n    this._data = data;\n  },\n  remove: function (ecModel) {\n    var group = this.group;\n    var data = this._data;\n    this._data = null;\n    data && data.eachItemGraphicEl(function (el) {\n      el && group.remove(el);\n    });\n  },\n  dispose: zrUtil.noop\n});\nvar BoxPath = Path.extend({\n  type: 'boxplotBoxPath',\n  shape: {},\n  buildPath: function (ctx, shape) {\n    var ends = shape.points;\n    var i = 0;\n    ctx.moveTo(ends[i][0], ends[i][1]);\n    i++;\n\n    for (; i < 4; i++) {\n      ctx.lineTo(ends[i][0], ends[i][1]);\n    }\n\n    ctx.closePath();\n\n    for (; i < ends.length; i++) {\n      ctx.moveTo(ends[i][0], ends[i][1]);\n      i++;\n      ctx.lineTo(ends[i][0], ends[i][1]);\n    }\n  }\n});\n\nfunction createNormalBox(itemLayout, data, dataIndex, constDim, isInit) {\n  var ends = itemLayout.ends;\n  var el = new BoxPath({\n    shape: {\n      points: isInit ? transInit(ends, constDim, itemLayout) : ends\n    }\n  });\n  updateNormalBoxData(itemLayout, el, data, dataIndex, isInit);\n  return el;\n}\n\nfunction updateNormalBoxData(itemLayout, el, data, dataIndex, isInit) {\n  var seriesModel = data.hostModel;\n  var updateMethod = graphic[isInit ? 'initProps' : 'updateProps'];\n  updateMethod(el, {\n    shape: {\n      points: itemLayout.ends\n    }\n  }, seriesModel, dataIndex);\n  var itemModel = data.getItemModel(dataIndex);\n  var normalItemStyleModel = itemModel.getModel(NORMAL_ITEM_STYLE_PATH);\n  var borderColor = data.getItemVisual(dataIndex, 'color'); // Exclude borderColor.\n\n  var itemStyle = normalItemStyleModel.getItemStyle(['borderColor']);\n  itemStyle.stroke = borderColor;\n  itemStyle.strokeNoScale = true;\n  el.useStyle(itemStyle);\n  el.z2 = 100;\n  var hoverStyle = itemModel.getModel(EMPHASIS_ITEM_STYLE_PATH).getItemStyle();\n  graphic.setHoverStyle(el, hoverStyle);\n}\n\nfunction transInit(points, dim, itemLayout) {\n  return zrUtil.map(points, function (point) {\n    point = point.slice();\n    point[dim] = itemLayout.initBaseline;\n    return point;\n  });\n}\n\nvar _default = BoxplotView;\nmodule.exports = _default;","require(\"./dataZoom/typeDefaulter\");\n\nrequire(\"./dataZoom/DataZoomModel\");\n\nrequire(\"./dataZoom/DataZoomView\");\n\nrequire(\"./dataZoom/SelectZoomModel\");\n\nrequire(\"./dataZoom/SelectZoomView\");\n\nrequire(\"./dataZoom/dataZoomProcessor\");\n\nrequire(\"./dataZoom/dataZoomAction\");","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar TimelineModel = require(\"./TimelineModel\");\n\nvar dataFormatMixin = require(\"../../model/mixin/dataFormat\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar SliderTimelineModel = TimelineModel.extend({\n  type: 'timeline.slider',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 时间轴背景颜色\n    borderColor: '#ccc',\n    // 时间轴边框颜色\n    borderWidth: 0,\n    // 时间轴边框线宽，单位px，默认为0（无边框）\n    orient: 'horizontal',\n    // 'vertical'\n    inverse: false,\n    tooltip: {\n      // boolean or Object\n      trigger: 'item' // data item may also have tootip attr.\n\n    },\n    symbol: 'emptyCircle',\n    symbolSize: 10,\n    lineStyle: {\n      show: true,\n      width: 2,\n      color: '#304654'\n    },\n    label: {\n      // 文本标签\n      position: 'auto',\n      // auto left right top bottom\n      // When using number, label position is not\n      // restricted by viewRect.\n      // positive: right/bottom, negative: left/top\n      show: true,\n      interval: 'auto',\n      rotate: 0,\n      // formatter: null,\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n      color: '#304654'\n    },\n    itemStyle: {\n      color: '#304654',\n      borderWidth: 1\n    },\n    checkpointStyle: {\n      symbol: 'circle',\n      symbolSize: 13,\n      color: '#c23531',\n      borderWidth: 5,\n      borderColor: 'rgba(194,53,49, 0.5)',\n      animation: true,\n      animationDuration: 300,\n      animationEasing: 'quinticInOut'\n    },\n    controlStyle: {\n      show: true,\n      showPlayBtn: true,\n      showPrevBtn: true,\n      showNextBtn: true,\n      itemSize: 22,\n      itemGap: 12,\n      position: 'left',\n      // 'left' 'right' 'top' 'bottom'\n      playIcon: 'path://M31.6,53C17.5,53,6,41.5,6,27.4S17.5,1.8,31.6,1.8C45.7,1.8,57.2,13.3,57.2,27.4S45.7,53,31.6,53z M31.6,3.3 C18.4,3.3,7.5,14.1,7.5,27.4c0,13.3,10.8,24.1,24.1,24.1C44.9,51.5,55.7,40.7,55.7,27.4C55.7,14.1,44.9,3.3,31.6,3.3z M24.9,21.3 c0-2.2,1.6-3.1,3.5-2l10.5,6.1c1.899,1.1,1.899,2.9,0,4l-10.5,6.1c-1.9,1.1-3.5,0.2-3.5-2V21.3z',\n      // jshint ignore:line\n      stopIcon: 'path://M30.9,53.2C16.8,53.2,5.3,41.7,5.3,27.6S16.8,2,30.9,2C45,2,56.4,13.5,56.4,27.6S45,53.2,30.9,53.2z M30.9,3.5C17.6,3.5,6.8,14.4,6.8,27.6c0,13.3,10.8,24.1,24.101,24.1C44.2,51.7,55,40.9,55,27.6C54.9,14.4,44.1,3.5,30.9,3.5z M36.9,35.8c0,0.601-0.4,1-0.9,1h-1.3c-0.5,0-0.9-0.399-0.9-1V19.5c0-0.6,0.4-1,0.9-1H36c0.5,0,0.9,0.4,0.9,1V35.8z M27.8,35.8 c0,0.601-0.4,1-0.9,1h-1.3c-0.5,0-0.9-0.399-0.9-1V19.5c0-0.6,0.4-1,0.9-1H27c0.5,0,0.9,0.4,0.9,1L27.8,35.8L27.8,35.8z',\n      // jshint ignore:line\n      nextIcon: 'path://M18.6,50.8l22.5-22.5c0.2-0.2,0.3-0.4,0.3-0.7c0-0.3-0.1-0.5-0.3-0.7L18.7,4.4c-0.1-0.1-0.2-0.3-0.2-0.5 c0-0.4,0.3-0.8,0.8-0.8c0.2,0,0.5,0.1,0.6,0.3l23.5,23.5l0,0c0.2,0.2,0.3,0.4,0.3,0.7c0,0.3-0.1,0.5-0.3,0.7l-0.1,0.1L19.7,52 c-0.1,0.1-0.3,0.2-0.5,0.2c-0.4,0-0.8-0.3-0.8-0.8C18.4,51.2,18.5,51,18.6,50.8z',\n      // jshint ignore:line\n      prevIcon: 'path://M43,52.8L20.4,30.3c-0.2-0.2-0.3-0.4-0.3-0.7c0-0.3,0.1-0.5,0.3-0.7L42.9,6.4c0.1-0.1,0.2-0.3,0.2-0.5 c0-0.4-0.3-0.8-0.8-0.8c-0.2,0-0.5,0.1-0.6,0.3L18.3,28.8l0,0c-0.2,0.2-0.3,0.4-0.3,0.7c0,0.3,0.1,0.5,0.3,0.7l0.1,0.1L41.9,54 c0.1,0.1,0.3,0.2,0.5,0.2c0.4,0,0.8-0.3,0.8-0.8C43.2,53.2,43.1,53,43,52.8z',\n      // jshint ignore:line\n      color: '#304654',\n      borderColor: '#304654',\n      borderWidth: 1\n    },\n    emphasis: {\n      label: {\n        show: true,\n        // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n        color: '#c23531'\n      },\n      itemStyle: {\n        color: '#c23531'\n      },\n      controlStyle: {\n        color: '#c23531',\n        borderColor: '#c23531',\n        borderWidth: 2\n      }\n    },\n    data: []\n  }\n});\nzrUtil.mixin(SliderTimelineModel, dataFormatMixin);\nvar _default = SliderTimelineModel;\nmodule.exports = _default;","var zrUtil = require(\"../core/util\");\n\nvar Gradient = require(\"./Gradient\");\n\n/**\n * x, y, r are all percent from 0 to 1\n * @param {number} [x=0.5]\n * @param {number} [y=0.5]\n * @param {number} [r=0.5]\n * @param {Array.<Object>} [colorStops]\n * @param {boolean} [globalCoord=false]\n */\nvar RadialGradient = function (x, y, r, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'radial', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0.5 : x;\n  this.y = y == null ? 0.5 : y;\n  this.r = r == null ? 0.5 : r; // Can be cloned\n\n  this.type = 'radial'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nRadialGradient.prototype = {\n  constructor: RadialGradient\n};\nzrUtil.inherits(RadialGradient, Gradient);\nvar _default = RadialGradient;\nmodule.exports = _default;","/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\nvar idStart = 0x0907;\n\nfunction _default() {\n  return idStart++;\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = {\n  getBoxLayoutParams: function () {\n    return {\n      left: this.get('left'),\n      top: this.get('top'),\n      right: this.get('right'),\n      bottom: this.get('bottom'),\n      width: this.get('width'),\n      height: this.get('height')\n    };\n  }\n};\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction normalize(a) {\n  if (!(a instanceof Array)) {\n    a = [a, a];\n  }\n\n  return a;\n}\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var graph = seriesModel.getGraph();\n    var edgeData = seriesModel.getEdgeData();\n    var symbolType = normalize(seriesModel.get('edgeSymbol'));\n    var symbolSize = normalize(seriesModel.get('edgeSymbolSize'));\n    var colorQuery = 'lineStyle.color'.split('.');\n    var opacityQuery = 'lineStyle.opacity'.split('.');\n    edgeData.setVisual('fromSymbol', symbolType && symbolType[0]);\n    edgeData.setVisual('toSymbol', symbolType && symbolType[1]);\n    edgeData.setVisual('fromSymbolSize', symbolSize && symbolSize[0]);\n    edgeData.setVisual('toSymbolSize', symbolSize && symbolSize[1]);\n    edgeData.setVisual('color', seriesModel.get(colorQuery));\n    edgeData.setVisual('opacity', seriesModel.get(opacityQuery));\n    edgeData.each(function (idx) {\n      var itemModel = edgeData.getItemModel(idx);\n      var edge = graph.getEdgeByIndex(idx);\n      var symbolType = normalize(itemModel.getShallow('symbol', true));\n      var symbolSize = normalize(itemModel.getShallow('symbolSize', true)); // Edge visual must after node visual\n\n      var color = itemModel.get(colorQuery);\n      var opacity = itemModel.get(opacityQuery);\n\n      switch (color) {\n        case 'source':\n          color = edge.node1.getVisual('color');\n          break;\n\n        case 'target':\n          color = edge.node2.getVisual('color');\n          break;\n      }\n\n      symbolType[0] && edge.setVisual('fromSymbol', symbolType[0]);\n      symbolType[1] && edge.setVisual('toSymbol', symbolType[1]);\n      symbolSize[0] && edge.setVisual('fromSymbolSize', symbolSize[0]);\n      symbolSize[1] && edge.setVisual('toSymbolSize', symbolSize[1]);\n      edge.setVisual('color', color);\n      edge.setVisual('opacity', opacity);\n    });\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisModel = ComponentModel.extend({\n  type: 'baseParallelAxis',\n\n  /**\n   * @type {module:echarts/coord/parallel/Axis}\n   */\n  axis: null,\n\n  /**\n   * @type {Array.<Array.<number>}\n   * @readOnly\n   */\n  activeIntervals: [],\n\n  /**\n   * @return {Object}\n   */\n  getAreaSelectStyle: function () {\n    return makeStyleMapper([['fill', 'color'], ['lineWidth', 'borderWidth'], ['stroke', 'borderColor'], ['width', 'width'], ['opacity', 'opacity']])(this.getModel('areaSelectStyle'));\n  },\n\n  /**\n   * The code of this feature is put on AxisModel but not ParallelAxis,\n   * because axisModel can be alive after echarts updating but instance of\n   * ParallelAxis having been disposed. this._activeInterval should be kept\n   * when action dispatched (i.e. legend click).\n   *\n   * @param {Array.<Array<number>>} intervals interval.length === 0\n   *                                          means set all active.\n   * @public\n   */\n  setActiveIntervals: function (intervals) {\n    var activeIntervals = this.activeIntervals = zrUtil.clone(intervals); // Normalize\n\n    if (activeIntervals) {\n      for (var i = activeIntervals.length - 1; i >= 0; i--) {\n        numberUtil.asc(activeIntervals[i]);\n      }\n    }\n  },\n\n  /**\n   * @param {number|string} [value] When attempting to detect 'no activeIntervals set',\n   *                         value can not be input.\n   * @return {string} 'normal': no activeIntervals set,\n   *                  'active',\n   *                  'inactive'.\n   * @public\n   */\n  getActiveState: function (value) {\n    var activeIntervals = this.activeIntervals;\n\n    if (!activeIntervals.length) {\n      return 'normal';\n    }\n\n    if (value == null || isNaN(value)) {\n      return 'inactive';\n    } // Simple optimization\n\n\n    if (activeIntervals.length === 1) {\n      var interval = activeIntervals[0];\n\n      if (interval[0] <= value && value <= interval[1]) {\n        return 'active';\n      }\n    } else {\n      for (var i = 0, len = activeIntervals.length; i < len; i++) {\n        if (activeIntervals[i][0] <= value && value <= activeIntervals[i][1]) {\n          return 'active';\n        }\n      }\n    }\n\n    return 'inactive';\n  }\n});\nvar defaultOption = {\n  type: 'value',\n\n  /**\n   * @type {Array.<number>}\n   */\n  dim: null,\n  // 0, 1, 2, ...\n  // parallelIndex: null,\n  areaSelectStyle: {\n    width: 20,\n    borderWidth: 1,\n    borderColor: 'rgba(160,197,232)',\n    color: 'rgba(160,197,232)',\n    opacity: 0.3\n  },\n  realtime: true,\n  // Whether realtime update view when select.\n  z: 10\n};\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\n\nfunction getAxisType(axisName, option) {\n  return option.type || (option.data ? 'category' : 'value');\n}\n\naxisModelCreator('parallel', AxisModel, getAxisType, defaultOption);\nvar _default = AxisModel;\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphicUtil = require(\"../util/graphic\");\n\nvar _labelHelper = require(\"./helper/labelHelper\");\n\nvar getDefaultLabel = _labelHelper.getDefaultLabel;\n\nvar createListFromArray = require(\"./helper/createListFromArray\");\n\nvar _barGrid = require(\"../layout/barGrid\");\n\nvar getLayoutOnAxis = _barGrid.getLayoutOnAxis;\n\nvar DataDiffer = require(\"../data/DataDiffer\");\n\nvar prepareCartesian2d = require(\"../coord/cartesian/prepareCustom\");\n\nvar prepareGeo = require(\"../coord/geo/prepareCustom\");\n\nvar prepareSingleAxis = require(\"../coord/single/prepareCustom\");\n\nvar preparePolar = require(\"../coord/polar/prepareCustom\");\n\nvar prepareCalendar = require(\"../coord/calendar/prepareCustom\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar ITEM_STYLE_NORMAL_PATH = ['itemStyle'];\nvar ITEM_STYLE_EMPHASIS_PATH = ['emphasis', 'itemStyle'];\nvar LABEL_NORMAL = ['label'];\nvar LABEL_EMPHASIS = ['emphasis', 'label']; // Use prefix to avoid index to be the same as el.name,\n// which will cause weird udpate animation.\n\nvar GROUP_DIFF_PREFIX = 'e\\0\\0';\n/**\n * To reduce total package size of each coordinate systems, the modules `prepareCustom`\n * of each coordinate systems are not required by each coordinate systems directly, but\n * required by the module `custom`.\n *\n * prepareInfoForCustomSeries {Function}: optional\n *     @return {Object} {coordSys: {...}, api: {\n *         coord: function (data, clamp) {}, // return point in global.\n *         size: function (dataSize, dataItem) {} // return size of each axis in coordSys.\n *     }}\n */\n\nvar prepareCustoms = {\n  cartesian2d: prepareCartesian2d,\n  geo: prepareGeo,\n  singleAxis: prepareSingleAxis,\n  polar: preparePolar,\n  calendar: prepareCalendar\n}; // ------\n// Model\n// ------\n\necharts.extendSeriesModel({\n  type: 'series.custom',\n  dependencies: ['grid', 'polar', 'geo', 'singleAxis', 'calendar'],\n  defaultOption: {\n    coordinateSystem: 'cartesian2d',\n    // Can be set as 'none'\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Polar coordinate system\n    // polarIndex: 0,\n    // Geo coordinate system\n    // geoIndex: 0,\n    // label: {}\n    // itemStyle: {}\n\n  },\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  }\n}); // -----\n// View\n// -----\n\necharts.extendChartView({\n  type: 'custom',\n\n  /**\n   * @private\n   * @type {module:echarts/data/List}\n   */\n  _data: null,\n\n  /**\n   * @override\n   */\n  render: function (customSeries, ecModel, api) {\n    var oldData = this._data;\n    var data = customSeries.getData();\n    var group = this.group;\n    var renderItem = makeRenderItem(customSeries, data, ecModel, api);\n    this.group.removeAll();\n    data.diff(oldData).add(function (newIdx) {\n      createOrUpdate(null, newIdx, renderItem(newIdx), customSeries, group, data);\n    }).update(function (newIdx, oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      createOrUpdate(el, newIdx, renderItem(newIdx), customSeries, group, data);\n    }).remove(function (oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      el && group.remove(el);\n    }).execute();\n    this._data = data;\n  },\n  incrementalPrepareRender: function (customSeries, ecModel, api) {\n    this.group.removeAll();\n    this._data = null;\n  },\n  incrementalRender: function (params, customSeries, ecModel, api) {\n    var data = customSeries.getData();\n    var renderItem = makeRenderItem(customSeries, data, ecModel, api);\n\n    function setIncrementalAndHoverLayer(el) {\n      if (!el.isGroup) {\n        el.incremental = true;\n        el.useHoverLayer = true;\n      }\n    }\n\n    for (var idx = params.start; idx < params.end; idx++) {\n      var el = createOrUpdate(null, idx, renderItem(idx), customSeries, this.group, data);\n      el.traverse(setIncrementalAndHoverLayer);\n    }\n  },\n\n  /**\n   * @override\n   */\n  dispose: zrUtil.noop\n});\n\nfunction createEl(elOption) {\n  var graphicType = elOption.type;\n  var el;\n\n  if (graphicType === 'path') {\n    var shape = elOption.shape;\n    el = graphicUtil.makePath(shape.pathData, null, {\n      x: shape.x || 0,\n      y: shape.y || 0,\n      width: shape.width || 0,\n      height: shape.height || 0\n    }, 'center');\n    el.__customPathData = elOption.pathData;\n  } else if (graphicType === 'image') {\n    el = new graphicUtil.Image({});\n    el.__customImagePath = elOption.style.image;\n  } else if (graphicType === 'text') {\n    el = new graphicUtil.Text({});\n    el.__customText = elOption.style.text;\n  } else {\n    var Clz = graphicUtil[graphicType.charAt(0).toUpperCase() + graphicType.slice(1)];\n    el = new Clz();\n  }\n\n  el.__customGraphicType = graphicType;\n  el.name = elOption.name;\n  return el;\n}\n\nfunction updateEl(el, dataIndex, elOption, animatableModel, data, isInit) {\n  var targetProps = {};\n  var elOptionStyle = elOption.style || {};\n  elOption.shape && (targetProps.shape = zrUtil.clone(elOption.shape));\n  elOption.position && (targetProps.position = elOption.position.slice());\n  elOption.scale && (targetProps.scale = elOption.scale.slice());\n  elOption.origin && (targetProps.origin = elOption.origin.slice());\n  elOption.rotation && (targetProps.rotation = elOption.rotation);\n\n  if (el.type === 'image' && elOption.style) {\n    var targetStyle = targetProps.style = {};\n    zrUtil.each(['x', 'y', 'width', 'height'], function (prop) {\n      prepareStyleTransition(prop, targetStyle, elOptionStyle, el.style, isInit);\n    });\n  }\n\n  if (el.type === 'text' && elOption.style) {\n    var targetStyle = targetProps.style = {};\n    zrUtil.each(['x', 'y'], function (prop) {\n      prepareStyleTransition(prop, targetStyle, elOptionStyle, el.style, isInit);\n    }); // Compatible with previous: both support\n    // textFill and fill, textStroke and stroke in 'text' element.\n\n    !elOptionStyle.hasOwnProperty('textFill') && elOptionStyle.fill && (elOptionStyle.textFill = elOptionStyle.fill);\n    !elOptionStyle.hasOwnProperty('textStroke') && elOptionStyle.stroke && (elOptionStyle.textStroke = elOptionStyle.stroke);\n  }\n\n  if (el.type !== 'group') {\n    el.useStyle(elOptionStyle); // Init animation.\n\n    if (isInit) {\n      el.style.opacity = 0;\n      var targetOpacity = elOptionStyle.opacity;\n      targetOpacity == null && (targetOpacity = 1);\n      graphicUtil.initProps(el, {\n        style: {\n          opacity: targetOpacity\n        }\n      }, animatableModel, dataIndex);\n    }\n  }\n\n  if (isInit) {\n    el.attr(targetProps);\n  } else {\n    graphicUtil.updateProps(el, targetProps, animatableModel, dataIndex);\n  } // z2 must not be null/undefined, otherwise sort error may occur.\n\n\n  el.attr({\n    z2: elOption.z2 || 0,\n    silent: elOption.silent\n  });\n  elOption.styleEmphasis !== false && graphicUtil.setHoverStyle(el, elOption.styleEmphasis);\n}\n\nfunction prepareStyleTransition(prop, targetStyle, elOptionStyle, oldElStyle, isInit) {\n  if (elOptionStyle[prop] != null && !isInit) {\n    targetStyle[prop] = elOptionStyle[prop];\n    elOptionStyle[prop] = oldElStyle[prop];\n  }\n}\n\nfunction makeRenderItem(customSeries, data, ecModel, api) {\n  var renderItem = customSeries.get('renderItem');\n  var coordSys = customSeries.coordinateSystem;\n  var prepareResult = {};\n\n  if (coordSys) {\n    prepareResult = coordSys.prepareCustoms ? coordSys.prepareCustoms() : prepareCustoms[coordSys.type](coordSys);\n  }\n\n  var userAPI = zrUtil.defaults({\n    getWidth: api.getWidth,\n    getHeight: api.getHeight,\n    getZr: api.getZr,\n    getDevicePixelRatio: api.getDevicePixelRatio,\n    value: value,\n    style: style,\n    styleEmphasis: styleEmphasis,\n    visual: visual,\n    barLayout: barLayout,\n    currentSeriesIndices: currentSeriesIndices,\n    font: font\n  }, prepareResult.api || {});\n  var userParams = {\n    context: {},\n    seriesId: customSeries.id,\n    seriesName: customSeries.name,\n    seriesIndex: customSeries.seriesIndex,\n    coordSys: prepareResult.coordSys,\n    dataInsideLength: data.count(),\n    encode: wrapEncodeDef(customSeries.getData())\n  }; // Do not support call `api` asynchronously without dataIndexInside input.\n\n  var currDataIndexInside;\n  var currDirty = true;\n  var currItemModel;\n  var currLabelNormalModel;\n  var currLabelEmphasisModel;\n  var currVisualColor;\n  return function (dataIndexInside) {\n    currDataIndexInside = dataIndexInside;\n    currDirty = true;\n    return renderItem && renderItem(zrUtil.defaults({\n      dataIndexInside: dataIndexInside,\n      dataIndex: data.getRawIndex(dataIndexInside)\n    }, userParams), userAPI) || {};\n  }; // Do not update cache until api called.\n\n  function updateCache(dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n\n    if (currDirty) {\n      currItemModel = data.getItemModel(dataIndexInside);\n      currLabelNormalModel = currItemModel.getModel(LABEL_NORMAL);\n      currLabelEmphasisModel = currItemModel.getModel(LABEL_EMPHASIS);\n      currVisualColor = data.getItemVisual(dataIndexInside, 'color');\n      currDirty = false;\n    }\n  }\n  /**\n   * @public\n   * @param {number|string} dim\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   * @return {number|string} value\n   */\n\n\n  function value(dim, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    return data.get(data.getDimension(dim || 0), dataIndexInside);\n  }\n  /**\n   * By default, `visual` is applied to style (to support visualMap).\n   * `visual.color` is applied at `fill`. If user want apply visual.color on `stroke`,\n   * it can be implemented as:\n   * `api.style({stroke: api.visual('color'), fill: null})`;\n   * @public\n   * @param {Object} [extra]\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   */\n\n\n  function style(extra, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    updateCache(dataIndexInside);\n    var itemStyle = currItemModel.getModel(ITEM_STYLE_NORMAL_PATH).getItemStyle();\n    currVisualColor != null && (itemStyle.fill = currVisualColor);\n    var opacity = data.getItemVisual(dataIndexInside, 'opacity');\n    opacity != null && (itemStyle.opacity = opacity);\n    graphicUtil.setTextStyle(itemStyle, currLabelNormalModel, null, {\n      autoColor: currVisualColor,\n      isRectText: true\n    });\n    itemStyle.text = currLabelNormalModel.getShallow('show') ? zrUtil.retrieve2(customSeries.getFormattedLabel(dataIndexInside, 'normal'), getDefaultLabel(data, dataIndexInside)) : null;\n    extra && zrUtil.extend(itemStyle, extra);\n    return itemStyle;\n  }\n  /**\n   * @public\n   * @param {Object} [extra]\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   */\n\n\n  function styleEmphasis(extra, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    updateCache(dataIndexInside);\n    var itemStyle = currItemModel.getModel(ITEM_STYLE_EMPHASIS_PATH).getItemStyle();\n    graphicUtil.setTextStyle(itemStyle, currLabelEmphasisModel, null, {\n      isRectText: true\n    }, true);\n    itemStyle.text = currLabelEmphasisModel.getShallow('show') ? zrUtil.retrieve3(customSeries.getFormattedLabel(dataIndexInside, 'emphasis'), customSeries.getFormattedLabel(dataIndexInside, 'normal'), getDefaultLabel(data, dataIndexInside)) : null;\n    extra && zrUtil.extend(itemStyle, extra);\n    return itemStyle;\n  }\n  /**\n   * @public\n   * @param {string} visualType\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   */\n\n\n  function visual(visualType, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    return data.getItemVisual(dataIndexInside, visualType);\n  }\n  /**\n   * @public\n   * @param {number} opt.count Positive interger.\n   * @param {number} [opt.barWidth]\n   * @param {number} [opt.barMaxWidth]\n   * @param {number} [opt.barGap]\n   * @param {number} [opt.barCategoryGap]\n   * @return {Object} {width, offset, offsetCenter} is not support, return undefined.\n   */\n\n\n  function barLayout(opt) {\n    if (coordSys.getBaseAxis) {\n      var baseAxis = coordSys.getBaseAxis();\n      return getLayoutOnAxis(zrUtil.defaults({\n        axis: baseAxis\n      }, opt), api);\n    }\n  }\n  /**\n   * @public\n   * @return {Array.<number>}\n   */\n\n\n  function currentSeriesIndices() {\n    return ecModel.getCurrentSeriesIndices();\n  }\n  /**\n   * @public\n   * @param {Object} opt\n   * @param {string} [opt.fontStyle]\n   * @param {number} [opt.fontWeight]\n   * @param {number} [opt.fontSize]\n   * @param {string} [opt.fontFamily]\n   * @return {string} font string\n   */\n\n\n  function font(opt) {\n    return graphicUtil.getFont(opt, ecModel);\n  }\n}\n\nfunction wrapEncodeDef(data) {\n  var encodeDef = {};\n  zrUtil.each(data.dimensions, function (dimName, dataDimIndex) {\n    var dimInfo = data.getDimensionInfo(dimName);\n\n    if (!dimInfo.isExtraCoord) {\n      var coordDim = dimInfo.coordDim;\n      var dataDims = encodeDef[coordDim] = encodeDef[coordDim] || [];\n      dataDims[dimInfo.coordDimIndex] = dataDimIndex;\n    }\n  });\n  return encodeDef;\n}\n\nfunction createOrUpdate(el, dataIndex, elOption, animatableModel, group, data) {\n  el = doCreateOrUpdate(el, dataIndex, elOption, animatableModel, group, data);\n  el && data.setItemGraphicEl(dataIndex, el);\n  return el;\n}\n\nfunction doCreateOrUpdate(el, dataIndex, elOption, animatableModel, group, data) {\n  var elOptionType = elOption.type;\n\n  if (el && elOptionType !== el.__customGraphicType && (elOptionType !== 'path' || elOption.pathData !== el.__customPathData) && (elOptionType !== 'image' || elOption.style.image !== el.__customImagePath) && (elOptionType !== 'text' || elOption.style.text !== el.__customText)) {\n    group.remove(el);\n    el = null;\n  } // `elOption.type` is undefined when `renderItem` returns nothing.\n\n\n  if (elOptionType == null) {\n    return;\n  }\n\n  var isInit = !el;\n  !el && (el = createEl(elOption));\n  updateEl(el, dataIndex, elOption, animatableModel, data, isInit);\n\n  if (elOptionType === 'group') {\n    var oldChildren = el.children() || [];\n    var newChildren = elOption.children || [];\n\n    if (elOption.diffChildrenByName) {\n      // lower performance.\n      diffGroupChildren({\n        oldChildren: oldChildren,\n        newChildren: newChildren,\n        dataIndex: dataIndex,\n        animatableModel: animatableModel,\n        group: el,\n        data: data\n      });\n    } else {\n      // better performance.\n      var index = 0;\n\n      for (; index < newChildren.length; index++) {\n        doCreateOrUpdate(el.childAt(index), dataIndex, newChildren[index], animatableModel, el, data);\n      }\n\n      for (; index < oldChildren.length; index++) {\n        oldChildren[index] && el.remove(oldChildren[index]);\n      }\n    }\n  }\n\n  group.add(el);\n  return el;\n}\n\nfunction diffGroupChildren(context) {\n  new DataDiffer(context.oldChildren, context.newChildren, getKey, getKey, context).add(processAddUpdate).update(processAddUpdate).remove(processRemove).execute();\n}\n\nfunction getKey(item, idx) {\n  var name = item && item.name;\n  return name != null ? name : GROUP_DIFF_PREFIX + idx;\n}\n\nfunction processAddUpdate(newIndex, oldIndex) {\n  var context = this.context;\n  var childOption = newIndex != null ? context.newChildren[newIndex] : null;\n  var child = oldIndex != null ? context.oldChildren[oldIndex] : null;\n  doCreateOrUpdate(child, context.dataIndex, childOption, context.animatableModel, context.group, context.data);\n}\n\nfunction processRemove(oldIndex) {\n  var context = this.context;\n  var child = context.oldChildren[oldIndex];\n  child && context.group.remove(child);\n}","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar _model = require(\"../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar _axisHelper = require(\"./axisHelper\");\n\nvar makeLabelFormatter = _axisHelper.makeLabelFormatter;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\n/**\n * @param {module:echats/coord/Axis} axis\n * @return {Object} {\n *     labels: [{\n *         formattedLabel: string,\n *         rawLabel: string,\n *         tickValue: number\n *     }, ...],\n *     labelCategoryInterval: number\n * }\n */\n\nfunction createAxisLabels(axis) {\n  // Only ordinal scale support tick interval\n  return axis.type === 'category' ? makeCategoryLabels(axis) : makeRealNumberLabels(axis);\n}\n/**\n * @param {module:echats/coord/Axis} axis\n * @param {module:echarts/model/Model} tickModel For example, can be axisTick, splitLine, splitArea.\n * @return {Object} {\n *     ticks: Array.<number>\n *     tickCategoryInterval: number\n * }\n */\n\n\nfunction createAxisTicks(axis, tickModel) {\n  // Only ordinal scale support tick interval\n  return axis.type === 'category' ? makeCategoryTicks(axis, tickModel) : {\n    ticks: axis.scale.getTicks()\n  };\n}\n\nfunction makeCategoryLabels(axis) {\n  var labelModel = axis.getLabelModel();\n  var result = makeCategoryLabelsActually(axis, labelModel);\n  return !labelModel.get('show') || axis.scale.isBlank() ? {\n    labels: [],\n    labelCategoryInterval: result.labelCategoryInterval\n  } : result;\n}\n\nfunction makeCategoryLabelsActually(axis, labelModel) {\n  var labelsCache = getListCache(axis, 'labels');\n  var optionLabelInterval = getOptionCategoryInterval(labelModel);\n  var result = listCacheGet(labelsCache, optionLabelInterval);\n\n  if (result) {\n    return result;\n  }\n\n  var labels;\n  var numericLabelInterval;\n\n  if (zrUtil.isFunction(optionLabelInterval)) {\n    labels = makeLabelsByCustomizedCategoryInterval(axis, optionLabelInterval);\n  } else {\n    numericLabelInterval = optionLabelInterval === 'auto' ? makeAutoCategoryInterval(axis) : optionLabelInterval;\n    labels = makeLabelsByNumericCategoryInterval(axis, numericLabelInterval);\n  } // Cache to avoid calling interval function repeatly.\n\n\n  return listCacheSet(labelsCache, optionLabelInterval, {\n    labels: labels,\n    labelCategoryInterval: numericLabelInterval\n  });\n}\n\nfunction makeCategoryTicks(axis, tickModel) {\n  var ticksCache = getListCache(axis, 'ticks');\n  var optionTickInterval = getOptionCategoryInterval(tickModel);\n  var result = listCacheGet(ticksCache, optionTickInterval);\n\n  if (result) {\n    return result;\n  }\n\n  var ticks;\n  var tickCategoryInterval; // Optimize for the case that large category data and no label displayed,\n  // we should not return all ticks.\n\n  if (!tickModel.get('show') || axis.scale.isBlank()) {\n    ticks = [];\n  }\n\n  if (zrUtil.isFunction(optionTickInterval)) {\n    ticks = makeLabelsByCustomizedCategoryInterval(axis, optionTickInterval, true);\n  } // Always use label interval by default despite label show. Consider this\n  // scenario, Use multiple grid with the xAxis sync, and only one xAxis shows\n  // labels. `splitLine` and `axisTick` should be consistent in this case.\n  else if (optionTickInterval === 'auto') {\n      var labelsResult = makeCategoryLabelsActually(axis, axis.getLabelModel());\n      tickCategoryInterval = labelsResult.labelCategoryInterval;\n      ticks = zrUtil.map(labelsResult.labels, function (labelItem) {\n        return labelItem.tickValue;\n      });\n    } else {\n      tickCategoryInterval = optionTickInterval;\n      ticks = makeLabelsByNumericCategoryInterval(axis, tickCategoryInterval, true);\n    } // Cache to avoid calling interval function repeatly.\n\n\n  return listCacheSet(ticksCache, optionTickInterval, {\n    ticks: ticks,\n    tickCategoryInterval: tickCategoryInterval\n  });\n}\n\nfunction makeRealNumberLabels(axis) {\n  var ticks = axis.scale.getTicks();\n  var labelFormatter = makeLabelFormatter(axis);\n  return {\n    labels: zrUtil.map(ticks, function (tickValue, idx) {\n      return {\n        formattedLabel: labelFormatter(tickValue, idx),\n        rawLabel: axis.scale.getLabel(tickValue),\n        tickValue: tickValue\n      };\n    })\n  };\n} // Large category data calculation is performence sensitive, and ticks and label\n// probably be fetched by multiple times. So we cache the result.\n// axis is created each time during a ec process, so we do not need to clear cache.\n\n\nfunction getListCache(axis, prop) {\n  // Because key can be funciton, and cache size always be small, we use array cache.\n  return inner(axis)[prop] || (inner(axis)[prop] = []);\n}\n\nfunction listCacheGet(cache, key) {\n  for (var i = 0; i < cache.length; i++) {\n    if (cache[i].key === key) {\n      return cache[i].value;\n    }\n  }\n}\n\nfunction listCacheSet(cache, key, value) {\n  cache.push({\n    key: key,\n    value: value\n  });\n  return value;\n}\n\nfunction makeAutoCategoryInterval(axis) {\n  var result = inner(axis).autoInterval;\n  return result != null ? result : inner(axis).autoInterval = axis.calculateCategoryInterval();\n}\n/**\n * Calculate interval for category axis ticks and labels.\n * To get precise result, at least one of `getRotate` and `isHorizontal`\n * should be implemented in axis.\n */\n\n\nfunction calculateCategoryInterval(axis) {\n  var params = fetchAutoCategoryIntervalCalculationParams(axis);\n  var labelFormatter = makeLabelFormatter(axis);\n  var rotation = (params.axisRotate - params.labelRotate) / 180 * Math.PI;\n  var ordinalScale = axis.scale;\n  var ordinalExtent = ordinalScale.getExtent(); // Providing this method is for optimization:\n  // avoid generating a long array by `getTicks`\n  // in large category data case.\n\n  var tickCount = ordinalScale.count();\n\n  if (ordinalExtent[1] - ordinalExtent[0] < 1) {\n    return 0;\n  }\n\n  var step = 1; // Simple optimization. Empirical value: tick count should less than 40.\n\n  if (tickCount > 40) {\n    step = Math.max(1, Math.floor(tickCount / 40));\n  }\n\n  var tickValue = ordinalExtent[0];\n  var unitSpan = axis.dataToCoord(tickValue + 1) - axis.dataToCoord(tickValue);\n  var unitW = Math.abs(unitSpan * Math.cos(rotation));\n  var unitH = Math.abs(unitSpan * Math.sin(rotation));\n  var maxW = 0;\n  var maxH = 0; // Caution: Performance sensitive for large category data.\n  // Consider dataZoom, we should make appropriate step to avoid O(n) loop.\n\n  for (; tickValue <= ordinalExtent[1]; tickValue += step) {\n    var width = 0;\n    var height = 0; // Polar is also calculated in assumptive linear layout here.\n    // Not precise, do not consider align and vertical align\n    // and each distance from axis line yet.\n\n    var rect = textContain.getBoundingRect(labelFormatter(tickValue), params.font, 'center', 'top'); // Magic number\n\n    width = rect.width * 1.3;\n    height = rect.height * 1.3; // Min size, void long loop.\n\n    maxW = Math.max(maxW, width, 7);\n    maxH = Math.max(maxH, height, 7);\n  }\n\n  var dw = maxW / unitW;\n  var dh = maxH / unitH; // 0/0 is NaN, 1/0 is Infinity.\n\n  isNaN(dw) && (dw = Infinity);\n  isNaN(dh) && (dh = Infinity);\n  var interval = Math.max(0, Math.floor(Math.min(dw, dh)));\n  var cache = inner(axis.model);\n  var lastAutoInterval = cache.lastAutoInterval;\n  var lastTickCount = cache.lastTickCount; // Use cache to keep interval stable while moving zoom window,\n  // otherwise the calculated interval might jitter when the zoom\n  // window size is close to the interval-changing size.\n\n  if (lastAutoInterval != null && lastTickCount != null && Math.abs(lastAutoInterval - interval) <= 1 && Math.abs(lastTickCount - tickCount) <= 1 // Always choose the bigger one, otherwise the critical\n  // point is not the same when zooming in or zooming out.\n  && lastAutoInterval > interval) {\n    interval = lastAutoInterval;\n  } // Only update cache if cache not used, otherwise the\n  // changing of interval is too insensitive.\n  else {\n      cache.lastTickCount = tickCount;\n      cache.lastAutoInterval = interval;\n    }\n\n  return interval;\n}\n\nfunction fetchAutoCategoryIntervalCalculationParams(axis) {\n  var labelModel = axis.getLabelModel();\n  return {\n    axisRotate: axis.getRotate ? axis.getRotate() : axis.isHorizontal && !axis.isHorizontal() ? 90 : 0,\n    labelRotate: labelModel.get('rotate') || 0,\n    font: labelModel.getFont()\n  };\n}\n\nfunction makeLabelsByNumericCategoryInterval(axis, categoryInterval, onlyTick) {\n  var labelFormatter = makeLabelFormatter(axis);\n  var ordinalScale = axis.scale;\n  var ordinalExtent = ordinalScale.getExtent();\n  var labelModel = axis.getLabelModel();\n  var result = []; // TODO: axisType: ordinalTime, pick the tick from each month/day/year/...\n\n  var step = Math.max((categoryInterval || 0) + 1, 1);\n  var startTick = ordinalExtent[0];\n  var tickCount = ordinalScale.count(); // Calculate start tick based on zero if possible to keep label consistent\n  // while zooming and moving while interval > 0. Otherwise the selection\n  // of displayable ticks and symbols probably keep changing.\n  // 3 is empirical value.\n\n  if (startTick !== 0 && step > 1 && tickCount / step > 2) {\n    startTick = Math.round(Math.ceil(startTick / step) * step);\n  } // (1) Only add min max label here but leave overlap checking\n  // to render stage, which also ensure the returned list\n  // suitable for splitLine and splitArea rendering.\n  // (2) Scales except category always contain min max label so\n  // do not need to perform this process.\n\n\n  var showMinMax = {\n    min: labelModel.get('showMinLabel'),\n    max: labelModel.get('showMaxLabel')\n  };\n\n  if (showMinMax.min && startTick !== ordinalExtent[0]) {\n    addItem(ordinalExtent[0]);\n  } // Optimize: avoid generating large array by `ordinalScale.getTicks()`.\n\n\n  var tickValue = startTick;\n\n  for (; tickValue <= ordinalExtent[1]; tickValue += step) {\n    addItem(tickValue);\n  }\n\n  if (showMinMax.max && tickValue !== ordinalExtent[1]) {\n    addItem(ordinalExtent[1]);\n  }\n\n  function addItem(tVal) {\n    result.push(onlyTick ? tVal : {\n      formattedLabel: labelFormatter(tVal),\n      rawLabel: ordinalScale.getLabel(tVal),\n      tickValue: tVal\n    });\n  }\n\n  return result;\n} // When interval is function, the result `false` means ignore the tick.\n// It is time consuming for large category data.\n\n\nfunction makeLabelsByCustomizedCategoryInterval(axis, categoryInterval, onlyTick) {\n  var ordinalScale = axis.scale;\n  var labelFormatter = makeLabelFormatter(axis);\n  var result = [];\n  zrUtil.each(ordinalScale.getTicks(), function (tickValue) {\n    var rawLabel = ordinalScale.getLabel(tickValue);\n\n    if (categoryInterval(tickValue, rawLabel)) {\n      result.push(onlyTick ? tickValue : {\n        formattedLabel: labelFormatter(tickValue),\n        rawLabel: rawLabel,\n        tickValue: tickValue\n      });\n    }\n  });\n  return result;\n} // Can be null|'auto'|number|function\n\n\nfunction getOptionCategoryInterval(model) {\n  var interval = model.get('interval');\n  return interval == null ? 'auto' : interval;\n}\n\nexports.createAxisLabels = createAxisLabels;\nexports.createAxisTicks = createAxisTicks;\nexports.calculateCategoryInterval = calculateCategoryInterval;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar isArray = zrUtil.isArray;\n/**\n * Make the name displayable. But we should\n * make sure it is not duplicated with user\n * specified name, so use '\\0';\n */\n\nvar DUMMY_COMPONENT_NAME_PREFIX = 'series\\0';\n/**\n * If value is not array, then translate it to array.\n * @param  {*} value\n * @return {Array} [value] or value\n */\n\nfunction normalizeToArray(value) {\n  return value instanceof Array ? value : value == null ? [] : [value];\n}\n/**\n * Sync default option between normal and emphasis like `position` and `show`\n * In case some one will write code like\n *     label: {\n *          show: false,\n *          position: 'outside',\n *          fontSize: 18\n *     },\n *     emphasis: {\n *          label: { show: true }\n *     }\n * @param {Object} opt\n * @param {string} key\n * @param {Array.<string>} subOpts\n */\n\n\nfunction defaultEmphasis(opt, key, subOpts) {\n  // Caution: performance sensitive.\n  if (opt) {\n    opt[key] = opt[key] || {};\n    opt.emphasis = opt.emphasis || {};\n    opt.emphasis[key] = opt.emphasis[key] || {}; // Default emphasis option from normal\n\n    for (var i = 0, len = subOpts.length; i < len; i++) {\n      var subOptName = subOpts[i];\n\n      if (!opt.emphasis[key].hasOwnProperty(subOptName) && opt[key].hasOwnProperty(subOptName)) {\n        opt.emphasis[key][subOptName] = opt[key][subOptName];\n      }\n    }\n  }\n}\n\nvar TEXT_STYLE_OPTIONS = ['fontStyle', 'fontWeight', 'fontSize', 'fontFamily', 'rich', 'tag', 'color', 'textBorderColor', 'textBorderWidth', 'width', 'height', 'lineHeight', 'align', 'verticalAlign', 'baseline', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY', 'textShadowColor', 'textShadowBlur', 'textShadowOffsetX', 'textShadowOffsetY', 'backgroundColor', 'borderColor', 'borderWidth', 'borderRadius', 'padding']; // modelUtil.LABEL_OPTIONS = modelUtil.TEXT_STYLE_OPTIONS.concat([\n//     'position', 'offset', 'rotate', 'origin', 'show', 'distance', 'formatter',\n//     'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n//     // FIXME: deprecated, check and remove it.\n//     'textStyle'\n// ]);\n\n/**\n * The method do not ensure performance.\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method retieves value from data.\n * @param {string|number|Date|Array|Object} dataItem\n * @return {number|string|Date|Array.<number|string|Date>}\n */\n\nfunction getDataItemValue(dataItem) {\n  return isObject(dataItem) && !isArray(dataItem) && !(dataItem instanceof Date) ? dataItem.value : dataItem;\n}\n/**\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method determine if dataItem has extra option besides value\n * @param {string|number|Date|Array|Object} dataItem\n */\n\n\nfunction isDataItemOption(dataItem) {\n  return isObject(dataItem) && !(dataItem instanceof Array); // // markLine data can be array\n  // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n}\n/**\n * Mapping to exists for merge.\n *\n * @public\n * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n * @param {Object|Array.<Object>} newCptOptions\n * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          index of which is the same as exists.\n */\n\n\nfunction mappingToExists(exists, newCptOptions) {\n  // Mapping by the order by original option (but not order of\n  // new option) in merge mode. Because we should ensure\n  // some specified index (like xAxisIndex) is consistent with\n  // original option, which is easy to understand, espatially in\n  // media query. And in most case, merge option is used to\n  // update partial option but not be expected to change order.\n  newCptOptions = (newCptOptions || []).slice();\n  var result = zrUtil.map(exists || [], function (obj, index) {\n    return {\n      exist: obj\n    };\n  }); // Mapping by id or name if specified.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    } // id has highest priority.\n\n\n    for (var i = 0; i < result.length; i++) {\n      if (!result[i].option // Consider name: two map to one.\n      && cptOption.id != null && result[i].exist.id === cptOption.id + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n\n    for (var i = 0; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Consider name: two map to one.\n      // Can not match when both ids exist but different.\n      && (exist.id == null || cptOption.id == null) && cptOption.name != null && !isIdInner(cptOption) && !isIdInner(exist) && exist.name === cptOption.name + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n  }); // Otherwise mapping by index.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    }\n\n    var i = 0;\n\n    for (; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Existing model that already has id should be able to\n      // mapped to (because after mapping performed model may\n      // be assigned with a id, whish should not affect next\n      // mapping), except those has inner id.\n      && !isIdInner(exist) // Caution:\n      // Do not overwrite id. But name can be overwritten,\n      // because axis use name as 'show label text'.\n      // 'exist' always has id and name and we dont\n      // need to check it.\n      && cptOption.id == null) {\n        result[i].option = cptOption;\n        break;\n      }\n    }\n\n    if (i >= result.length) {\n      result.push({\n        option: cptOption\n      });\n    }\n  });\n  return result;\n}\n/**\n * Make id and name for mapping result (result of mappingToExists)\n * into `keyInfo` field.\n *\n * @public\n * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          which order is the same as exists.\n * @return {Array.<Object>} The input.\n */\n\n\nfunction makeIdAndName(mapResult) {\n  // We use this id to hash component models and view instances\n  // in echarts. id can be specified by user, or auto generated.\n  // The id generation rule ensures new view instance are able\n  // to mapped to old instance when setOption are called in\n  // no-merge mode. So we generate model id by name and plus\n  // type in view id.\n  // name can be duplicated among components, which is convenient\n  // to specify multi components (like series) by one name.\n  // Ensure that each id is distinct.\n  var idMap = zrUtil.createHashMap();\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    existCpt && idMap.set(existCpt.id, item);\n  });\n  each(mapResult, function (item, index) {\n    var opt = item.option;\n    zrUtil.assert(!opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item, 'id duplicates: ' + (opt && opt.id));\n    opt && opt.id != null && idMap.set(opt.id, item);\n    !item.keyInfo && (item.keyInfo = {});\n  }); // Make name and id.\n\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    var opt = item.option;\n    var keyInfo = item.keyInfo;\n\n    if (!isObject(opt)) {\n      return;\n    } // name can be overwitten. Consider case: axis.name = '20km'.\n    // But id generated by name will not be changed, which affect\n    // only in that case: setOption with 'not merge mode' and view\n    // instance will be recreated, which can be accepted.\n\n\n    keyInfo.name = opt.name != null ? opt.name + '' : existCpt ? existCpt.name // Avoid diffferent series has the same name,\n    // because name may be used like in color pallet.\n    : DUMMY_COMPONENT_NAME_PREFIX + index;\n\n    if (existCpt) {\n      keyInfo.id = existCpt.id;\n    } else if (opt.id != null) {\n      keyInfo.id = opt.id + '';\n    } else {\n      // Consider this situatoin:\n      //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n      //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n      // Series with the same name between optionA and optionB\n      // should be mapped.\n      var idNum = 0;\n\n      do {\n        keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n      } while (idMap.get(keyInfo.id));\n    }\n\n    idMap.set(keyInfo.id, item);\n  });\n}\n\nfunction isNameSpecified(componentModel) {\n  var name = componentModel.name; // Is specified when `indexOf` get -1 or > 0.\n\n  return !!(name && name.indexOf(DUMMY_COMPONENT_NAME_PREFIX));\n}\n/**\n * @public\n * @param {Object} cptOption\n * @return {boolean}\n */\n\n\nfunction isIdInner(cptOption) {\n  return isObject(cptOption) && cptOption.id && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n}\n/**\n * A helper for removing duplicate items between batchA and batchB,\n * and in themselves, and categorize by series.\n *\n * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n */\n\n\nfunction compressBatches(batchA, batchB) {\n  var mapA = {};\n  var mapB = {};\n  makeMap(batchA || [], mapA);\n  makeMap(batchB || [], mapB, mapA);\n  return [mapToArray(mapA), mapToArray(mapB)];\n\n  function makeMap(sourceBatch, map, otherMap) {\n    for (var i = 0, len = sourceBatch.length; i < len; i++) {\n      var seriesId = sourceBatch[i].seriesId;\n      var dataIndices = normalizeToArray(sourceBatch[i].dataIndex);\n      var otherDataIndices = otherMap && otherMap[seriesId];\n\n      for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n        var dataIndex = dataIndices[j];\n\n        if (otherDataIndices && otherDataIndices[dataIndex]) {\n          otherDataIndices[dataIndex] = null;\n        } else {\n          (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n        }\n      }\n    }\n  }\n\n  function mapToArray(map, isData) {\n    var result = [];\n\n    for (var i in map) {\n      if (map.hasOwnProperty(i) && map[i] != null) {\n        if (isData) {\n          result.push(+i);\n        } else {\n          var dataIndices = mapToArray(map[i], true);\n          dataIndices.length && result.push({\n            seriesId: i,\n            dataIndex: dataIndices\n          });\n        }\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n *                         each of which can be Array or primary type.\n * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n */\n\n\nfunction queryDataIndex(data, payload) {\n  if (payload.dataIndexInside != null) {\n    return payload.dataIndexInside;\n  } else if (payload.dataIndex != null) {\n    return zrUtil.isArray(payload.dataIndex) ? zrUtil.map(payload.dataIndex, function (value) {\n      return data.indexOfRawIndex(value);\n    }) : data.indexOfRawIndex(payload.dataIndex);\n  } else if (payload.name != null) {\n    return zrUtil.isArray(payload.name) ? zrUtil.map(payload.name, function (value) {\n      return data.indexOfName(value);\n    }) : data.indexOfName(payload.name);\n  }\n}\n/**\n * Enable property storage to any host object.\n * Notice: Serialization is not supported.\n *\n * For example:\n * var inner = zrUitl.makeInner();\n *\n * function some1(hostObj) {\n *      inner(hostObj).someProperty = 1212;\n *      ...\n * }\n * function some2() {\n *      var fields = inner(this);\n *      fields.someProperty1 = 1212;\n *      fields.someProperty2 = 'xx';\n *      ...\n * }\n *\n * @return {Function}\n */\n\n\nfunction makeInner() {\n  // Consider different scope by es module import.\n  var key = '__\\0ec_inner_' + innerUniqueIndex++ + '_' + Math.random().toFixed(5);\n  return function (hostObj) {\n    return hostObj[key] || (hostObj[key] = {});\n  };\n}\n\nvar innerUniqueIndex = 0;\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex, seriesId, seriesName,\n *            geoIndex, geoId, geoName,\n *            bmapIndex, bmapId, bmapName,\n *            xAxisIndex, xAxisId, xAxisName,\n *            yAxisIndex, yAxisId, yAxisName,\n *            gridIndex, gridId, gridName,\n *            ... (can be extended)\n *        }\n *        Each properties can be number|string|Array.<number>|Array.<string>\n *        For example, a finder could be\n *        {\n *            seriesIndex: 3,\n *            geoId: ['aa', 'cc'],\n *            gridName: ['xx', 'rr']\n *        }\n *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n *        If nothing or null/undefined specified, return nothing.\n * @param {Object} [opt]\n * @param {string} [opt.defaultMainType]\n * @param {Array.<string>} [opt.includeMainTypes]\n * @return {Object} result like:\n *        {\n *            seriesModels: [seriesModel1, seriesModel2],\n *            seriesModel: seriesModel1, // The first model\n *            geoModels: [geoModel1, geoModel2],\n *            geoModel: geoModel1, // The first model\n *            ...\n *        }\n */\n\nfunction parseFinder(ecModel, finder, opt) {\n  if (zrUtil.isString(finder)) {\n    var obj = {};\n    obj[finder + 'Index'] = 0;\n    finder = obj;\n  }\n\n  var defaultMainType = opt && opt.defaultMainType;\n\n  if (defaultMainType && !has(finder, defaultMainType + 'Index') && !has(finder, defaultMainType + 'Id') && !has(finder, defaultMainType + 'Name')) {\n    finder[defaultMainType + 'Index'] = 0;\n  }\n\n  var result = {};\n  each(finder, function (value, key) {\n    var value = finder[key]; // Exclude 'dataIndex' and other illgal keys.\n\n    if (key === 'dataIndex' || key === 'dataIndexInside') {\n      result[key] = value;\n      return;\n    }\n\n    var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n    var mainType = parsedKey[1];\n    var queryType = (parsedKey[2] || '').toLowerCase();\n\n    if (!mainType || !queryType || value == null || queryType === 'index' && value === 'none' || opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0) {\n      return;\n    }\n\n    var queryParam = {\n      mainType: mainType\n    };\n\n    if (queryType !== 'index' || value !== 'all') {\n      queryParam[queryType] = value;\n    }\n\n    var models = ecModel.queryComponents(queryParam);\n    result[mainType + 'Models'] = models;\n    result[mainType + 'Model'] = models[0];\n  });\n  return result;\n}\n\nfunction has(obj, prop) {\n  return obj && obj.hasOwnProperty(prop);\n}\n\nfunction setAttribute(dom, key, value) {\n  dom.setAttribute ? dom.setAttribute(key, value) : dom[key] = value;\n}\n\nfunction getAttribute(dom, key) {\n  return dom.getAttribute ? dom.getAttribute(key) : dom[key];\n}\n\nexports.normalizeToArray = normalizeToArray;\nexports.defaultEmphasis = defaultEmphasis;\nexports.TEXT_STYLE_OPTIONS = TEXT_STYLE_OPTIONS;\nexports.getDataItemValue = getDataItemValue;\nexports.isDataItemOption = isDataItemOption;\nexports.mappingToExists = mappingToExists;\nexports.makeIdAndName = makeIdAndName;\nexports.isNameSpecified = isNameSpecified;\nexports.isIdInner = isIdInner;\nexports.compressBatches = compressBatches;\nexports.queryDataIndex = queryDataIndex;\nexports.makeInner = makeInner;\nexports.parseFinder = parseFinder;\nexports.setAttribute = setAttribute;\nexports.getAttribute = getAttribute;","var clazzUtil = require(\"../util/clazz\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n/**\n * @param {Object} [setting]\n */\nfunction Scale(setting) {\n  this._setting = setting || {};\n  /**\n   * Extent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._extent = [Infinity, -Infinity];\n  /**\n   * Step is calculated in adjustExtent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._interval = 0;\n  this.init && this.init.apply(this, arguments);\n}\n/**\n * Parse input val to valid inner number.\n * @param {*} val\n * @return {number}\n */\n\n\nScale.prototype.parse = function (val) {\n  // Notice: This would be a trap here, If the implementation\n  // of this method depends on extent, and this method is used\n  // before extent set (like in dataZoom), it would be wrong.\n  // Nevertheless, parse does not depend on extent generally.\n  return val;\n};\n\nScale.prototype.getSetting = function (name) {\n  return this._setting[name];\n};\n\nScale.prototype.contain = function (val) {\n  var extent = this._extent;\n  return val >= extent[0] && val <= extent[1];\n};\n/**\n * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.normalize = function (val) {\n  var extent = this._extent;\n\n  if (extent[1] === extent[0]) {\n    return 0.5;\n  }\n\n  return (val - extent[0]) / (extent[1] - extent[0]);\n};\n/**\n * Scale normalized value\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.scale = function (val) {\n  var extent = this._extent;\n  return val * (extent[1] - extent[0]) + extent[0];\n};\n/**\n * Set extent from data\n * @param {Array.<number>} other\n */\n\n\nScale.prototype.unionExtent = function (other) {\n  var extent = this._extent;\n  other[0] < extent[0] && (extent[0] = other[0]);\n  other[1] > extent[1] && (extent[1] = other[1]); // not setExtent because in log axis it may transformed to power\n  // this.setExtent(extent[0], extent[1]);\n};\n/**\n * Set extent from data\n * @param {module:echarts/data/List} data\n * @param {string} dim\n */\n\n\nScale.prototype.unionExtentFromData = function (data, dim) {\n  this.unionExtent(data.getApproximateExtent(dim));\n};\n/**\n * Get extent\n * @return {Array.<number>}\n */\n\n\nScale.prototype.getExtent = function () {\n  return this._extent.slice();\n};\n/**\n * Set extent\n * @param {number} start\n * @param {number} end\n */\n\n\nScale.prototype.setExtent = function (start, end) {\n  var thisExtent = this._extent;\n\n  if (!isNaN(start)) {\n    thisExtent[0] = start;\n  }\n\n  if (!isNaN(end)) {\n    thisExtent[1] = end;\n  }\n};\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\n\n\nScale.prototype.isBlank = function () {\n  return this._isBlank;\n},\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\nScale.prototype.setBlank = function (isBlank) {\n  this._isBlank = isBlank;\n};\n/**\n * @abstract\n * @param {*} tick\n * @return {string} label of the tick.\n */\n\nScale.prototype.getLabel = null;\nclazzUtil.enableClassExtend(Scale);\nclazzUtil.enableClassManagement(Scale, {\n  registerWhenExtend: true\n});\nvar _default = Scale;\nmodule.exports = _default;","var zrUtil = require(\"../core/util\");\n\nvar Element = require(\"../Element\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/container/Group');\n *     var Circle = require('zrender/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n/**\n * @alias module:zrender/graphic/Group\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @extends module:zrender/mixin/Eventful\n */\nvar Group = function (opts) {\n  opts = opts || {};\n  Element.call(this, opts);\n\n  for (var key in opts) {\n    if (opts.hasOwnProperty(key)) {\n      this[key] = opts[key];\n    }\n  }\n\n  this._children = [];\n  this.__storage = null;\n  this.__dirty = true;\n};\n\nGroup.prototype = {\n  constructor: Group,\n  isGroup: true,\n\n  /**\n   * @type {string}\n   */\n  type: 'group',\n\n  /**\n   * 所有子孙元素是否响应鼠标事件\n   * @name module:/zrender/container/Group#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * @return {Array.<module:zrender/Element>}\n   */\n  children: function () {\n    return this._children.slice();\n  },\n\n  /**\n   * 获取指定 index 的儿子节点\n   * @param  {number} idx\n   * @return {module:zrender/Element}\n   */\n  childAt: function (idx) {\n    return this._children[idx];\n  },\n\n  /**\n   * 获取指定名字的儿子节点\n   * @param  {string} name\n   * @return {module:zrender/Element}\n   */\n  childOfName: function (name) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      if (children[i].name === name) {\n        return children[i];\n      }\n    }\n  },\n\n  /**\n   * @return {number}\n   */\n  childCount: function () {\n    return this._children.length;\n  },\n\n  /**\n   * 添加子节点到最后\n   * @param {module:zrender/Element} child\n   */\n  add: function (child) {\n    if (child && child !== this && child.parent !== this) {\n      this._children.push(child);\n\n      this._doAdd(child);\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加子节点在 nextSibling 之前\n   * @param {module:zrender/Element} child\n   * @param {module:zrender/Element} nextSibling\n   */\n  addBefore: function (child, nextSibling) {\n    if (child && child !== this && child.parent !== this && nextSibling && nextSibling.parent === this) {\n      var children = this._children;\n      var idx = children.indexOf(nextSibling);\n\n      if (idx >= 0) {\n        children.splice(idx, 0, child);\n\n        this._doAdd(child);\n      }\n    }\n\n    return this;\n  },\n  _doAdd: function (child) {\n    if (child.parent) {\n      child.parent.remove(child);\n    }\n\n    child.parent = this;\n    var storage = this.__storage;\n    var zr = this.__zr;\n\n    if (storage && storage !== child.__storage) {\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n  },\n\n  /**\n   * 移除子节点\n   * @param {module:zrender/Element} child\n   */\n  remove: function (child) {\n    var zr = this.__zr;\n    var storage = this.__storage;\n    var children = this._children;\n    var idx = zrUtil.indexOf(children, child);\n\n    if (idx < 0) {\n      return this;\n    }\n\n    children.splice(idx, 1);\n    child.parent = null;\n\n    if (storage) {\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n    return this;\n  },\n\n  /**\n   * 移除所有子节点\n   */\n  removeAll: function () {\n    var children = this._children;\n    var storage = this.__storage;\n    var child;\n    var i;\n\n    for (i = 0; i < children.length; i++) {\n      child = children[i];\n\n      if (storage) {\n        storage.delFromStorage(child);\n\n        if (child instanceof Group) {\n          child.delChildrenFromStorage(storage);\n        }\n      }\n\n      child.parent = null;\n    }\n\n    children.length = 0;\n    return this;\n  },\n\n  /**\n   * 遍历所有子节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  eachChild: function (cb, context) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n      cb.call(context, child, i);\n    }\n\n    return this;\n  },\n\n  /**\n   * 深度优先遍历所有子孙节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      cb.call(context, child);\n\n      if (child.type === 'group') {\n        child.traverse(cb, context);\n      }\n    }\n\n    return this;\n  },\n  addChildrenToStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n  },\n  delChildrenFromStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n  },\n  dirty: function () {\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh();\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function (includeChildren) {\n    // TODO Caching\n    var rect = null;\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var children = includeChildren || this._children;\n    var tmpMat = [];\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n\n      if (child.ignore || child.invisible) {\n        continue;\n      }\n\n      var childRect = child.getBoundingRect();\n      var transform = child.getLocalTransform(tmpMat); // TODO\n      // The boundingRect cacluated by transforming original\n      // rect may be bigger than the actual bundingRect when rotation\n      // is used. (Consider a circle rotated aginst its center, where\n      // the actual boundingRect should be the same as that not be\n      // rotated.) But we can not find better approach to calculate\n      // actual boundingRect yet, considering performance.\n\n      if (transform) {\n        tmpRect.copy(childRect);\n        tmpRect.applyTransform(transform);\n        rect = rect || tmpRect.clone();\n        rect.union(tmpRect);\n      } else {\n        rect = rect || childRect.clone();\n        rect.union(childRect);\n      }\n    }\n\n    return rect || tmpRect;\n  }\n};\nzrUtil.inherits(Group, Element);\nvar _default = Group;\nmodule.exports = _default;","var vec2 = require(\"./vector\");\n\nvar curve = require(\"./curve\");\n\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI2 = Math.PI * 2;\nvar start = vec2.create();\nvar end = vec2.create();\nvar extremity = vec2.create();\n/**\n * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n * @module zrender/core/bbox\n * @param {Array<Object>} points 顶点数组\n * @param {number} min\n * @param {number} max\n */\n\nfunction fromPoints(points, min, max) {\n  if (points.length === 0) {\n    return;\n  }\n\n  var p = points[0];\n  var left = p[0];\n  var right = p[0];\n  var top = p[1];\n  var bottom = p[1];\n  var i;\n\n  for (i = 1; i < points.length; i++) {\n    p = points[i];\n    left = mathMin(left, p[0]);\n    right = mathMax(right, p[0]);\n    top = mathMin(top, p[1]);\n    bottom = mathMax(bottom, p[1]);\n  }\n\n  min[0] = left;\n  min[1] = top;\n  max[0] = right;\n  max[1] = bottom;\n}\n/**\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromLine(x0, y0, x1, y1, min, max) {\n  min[0] = mathMin(x0, x1);\n  min[1] = mathMin(y0, y1);\n  max[0] = mathMax(x0, x1);\n  max[1] = mathMax(y0, y1);\n}\n\nvar xDim = [];\nvar yDim = [];\n/**\n * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\nfunction fromCubic(x0, y0, x1, y1, x2, y2, x3, y3, min, max) {\n  var cubicExtrema = curve.cubicExtrema;\n  var cubicAt = curve.cubicAt;\n  var i;\n  var n = cubicExtrema(x0, x1, x2, x3, xDim);\n  min[0] = Infinity;\n  min[1] = Infinity;\n  max[0] = -Infinity;\n  max[1] = -Infinity;\n\n  for (i = 0; i < n; i++) {\n    var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n    min[0] = mathMin(x, min[0]);\n    max[0] = mathMax(x, max[0]);\n  }\n\n  n = cubicExtrema(y0, y1, y2, y3, yDim);\n\n  for (i = 0; i < n; i++) {\n    var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n    min[1] = mathMin(y, min[1]);\n    max[1] = mathMax(y, max[1]);\n  }\n\n  min[0] = mathMin(x0, min[0]);\n  max[0] = mathMax(x0, max[0]);\n  min[0] = mathMin(x3, min[0]);\n  max[0] = mathMax(x3, max[0]);\n  min[1] = mathMin(y0, min[1]);\n  max[1] = mathMax(y0, max[1]);\n  min[1] = mathMin(y3, min[1]);\n  max[1] = mathMax(y3, max[1]);\n}\n/**\n * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromQuadratic(x0, y0, x1, y1, x2, y2, min, max) {\n  var quadraticExtremum = curve.quadraticExtremum;\n  var quadraticAt = curve.quadraticAt; // Find extremities, where derivative in x dim or y dim is zero\n\n  var tx = mathMax(mathMin(quadraticExtremum(x0, x1, x2), 1), 0);\n  var ty = mathMax(mathMin(quadraticExtremum(y0, y1, y2), 1), 0);\n  var x = quadraticAt(x0, x1, x2, tx);\n  var y = quadraticAt(y0, y1, y2, ty);\n  min[0] = mathMin(x0, x2, x);\n  min[1] = mathMin(y0, y2, y);\n  max[0] = mathMax(x0, x2, x);\n  max[1] = mathMax(y0, y2, y);\n}\n/**\n * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n * @method\n * @memberOf module:zrender/core/bbox\n * @param {number} x\n * @param {number} y\n * @param {number} rx\n * @param {number} ry\n * @param {number} startAngle\n * @param {number} endAngle\n * @param {number} anticlockwise\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromArc(x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max) {\n  var vec2Min = vec2.min;\n  var vec2Max = vec2.max;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff % PI2 < 1e-4 && diff > 1e-4) {\n    // Is a circle\n    min[0] = x - rx;\n    min[1] = y - ry;\n    max[0] = x + rx;\n    max[1] = y + ry;\n    return;\n  }\n\n  start[0] = mathCos(startAngle) * rx + x;\n  start[1] = mathSin(startAngle) * ry + y;\n  end[0] = mathCos(endAngle) * rx + x;\n  end[1] = mathSin(endAngle) * ry + y;\n  vec2Min(min, start, end);\n  vec2Max(max, start, end); // Thresh to [0, Math.PI * 2]\n\n  startAngle = startAngle % PI2;\n\n  if (startAngle < 0) {\n    startAngle = startAngle + PI2;\n  }\n\n  endAngle = endAngle % PI2;\n\n  if (endAngle < 0) {\n    endAngle = endAngle + PI2;\n  }\n\n  if (startAngle > endAngle && !anticlockwise) {\n    endAngle += PI2;\n  } else if (startAngle < endAngle && anticlockwise) {\n    startAngle += PI2;\n  }\n\n  if (anticlockwise) {\n    var tmp = endAngle;\n    endAngle = startAngle;\n    startAngle = tmp;\n  } // var number = 0;\n  // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n\n\n  for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n    if (angle > startAngle) {\n      extremity[0] = mathCos(angle) * rx + x;\n      extremity[1] = mathSin(angle) * ry + y;\n      vec2Min(min, extremity, min);\n      vec2Max(max, extremity, max);\n    }\n  }\n}\n\nexports.fromPoints = fromPoints;\nexports.fromLine = fromLine;\nexports.fromCubic = fromCubic;\nexports.fromQuadratic = fromQuadratic;\nexports.fromArc = fromArc;","var graphic = require(\"../../util/graphic\");\n\nvar _labelHelper = require(\"../helper/labelHelper\");\n\nvar getDefaultLabel = _labelHelper.getDefaultLabel;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction setLabel(normalStyle, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside) {\n  var labelModel = itemModel.getModel('label');\n  var hoverLabelModel = itemModel.getModel('emphasis.label');\n  graphic.setLabelStyle(normalStyle, hoverStyle, labelModel, hoverLabelModel, {\n    labelFetcher: seriesModel,\n    labelDataIndex: dataIndex,\n    defaultText: getDefaultLabel(seriesModel.getData(), dataIndex),\n    isRectText: true,\n    autoColor: color\n  });\n  fixPosition(normalStyle);\n  fixPosition(hoverStyle);\n}\n\nfunction fixPosition(style, labelPositionOutside) {\n  if (style.textPosition === 'outside') {\n    style.textPosition = labelPositionOutside;\n  }\n}\n\nexports.setLabel = setLabel;","var curve = require(\"../core/curve\");\n\n/**\n * 三次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  x3\n * @param  {number}  y3\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l) {\n    return false;\n  }\n\n  var d = curve.cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;","var createListSimply = require(\"../helper/createListSimply\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _dimensionHelper = require(\"../../data/helper/dimensionHelper\");\n\nvar getDimensionTypeByAxis = _dimensionHelper.getDimensionTypeByAxis;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar seriesModelMixin = {\n  /**\n   * @private\n   * @type {string}\n   */\n  _baseAxisDim: null,\n\n  /**\n   * @override\n   */\n  getInitialData: function (option, ecModel) {\n    // When both types of xAxis and yAxis are 'value', layout is\n    // needed to be specified by user. Otherwise, layout can be\n    // judged by which axis is category.\n    var ordinalMeta;\n    var xAxisModel = ecModel.getComponent('xAxis', this.get('xAxisIndex'));\n    var yAxisModel = ecModel.getComponent('yAxis', this.get('yAxisIndex'));\n    var xAxisType = xAxisModel.get('type');\n    var yAxisType = yAxisModel.get('type');\n    var addOrdinal; // FIXME\n    // 考虑时间轴\n\n    if (xAxisType === 'category') {\n      option.layout = 'horizontal';\n      ordinalMeta = xAxisModel.getOrdinalMeta();\n      addOrdinal = true;\n    } else if (yAxisType === 'category') {\n      option.layout = 'vertical';\n      ordinalMeta = yAxisModel.getOrdinalMeta();\n      addOrdinal = true;\n    } else {\n      option.layout = option.layout || 'horizontal';\n    }\n\n    var coordDims = ['x', 'y'];\n    var baseAxisDimIndex = option.layout === 'horizontal' ? 0 : 1;\n    var baseAxisDim = this._baseAxisDim = coordDims[baseAxisDimIndex];\n    var otherAxisDim = coordDims[1 - baseAxisDimIndex];\n    var axisModels = [xAxisModel, yAxisModel];\n    var baseAxisType = axisModels[baseAxisDimIndex].get('type');\n    var otherAxisType = axisModels[1 - baseAxisDimIndex].get('type');\n    var data = option.data; // ??? FIXME make a stage to perform data transfrom.\n    // MUST create a new data, consider setOption({}) again.\n\n    if (data && addOrdinal) {\n      var newOptionData = [];\n      zrUtil.each(data, function (item, index) {\n        var newItem;\n\n        if (item.value && zrUtil.isArray(item.value)) {\n          newItem = item.value.slice();\n          item.value.unshift(index);\n        } else if (zrUtil.isArray(item)) {\n          newItem = item.slice();\n          item.unshift(index);\n        } else {\n          newItem = item;\n        }\n\n        newOptionData.push(newItem);\n      });\n      option.data = newOptionData;\n    }\n\n    var defaultValueDimensions = this.defaultValueDimensions;\n    return createListSimply(this, {\n      coordDimensions: [{\n        name: baseAxisDim,\n        type: getDimensionTypeByAxis(baseAxisType),\n        ordinalMeta: ordinalMeta,\n        otherDims: {\n          tooltip: false,\n          itemName: 0\n        },\n        dimsDef: ['base']\n      }, {\n        name: otherAxisDim,\n        type: getDimensionTypeByAxis(otherAxisType),\n        dimsDef: defaultValueDimensions.slice()\n      }],\n      dimensionsCount: defaultValueDimensions.length + 1\n    });\n  },\n\n  /**\n   * If horizontal, base axis is x, otherwise y.\n   * @override\n   */\n  getBaseAxis: function () {\n    var dim = this._baseAxisDim;\n    return this.ecModel.getComponent(dim + 'Axis', this.get(dim + 'AxisIndex')).axis;\n  }\n};\nexports.seriesModelMixin = seriesModelMixin;","var createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar List = require(\"../../data/List\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar extend = _util.extend;\nvar isArray = _util.isArray;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * [Usage]:\n * (1)\n * createListSimply(seriesModel, ['value']);\n * (2)\n * createListSimply(seriesModel, {\n *     coordDimensions: ['value'],\n *     dimensionsCount: 5\n * });\n *\n * @param {module:echarts/model/Series} seriesModel\n * @param {Object|Array.<string|Object>} opt opt or coordDimensions\n *        The options in opt, see `echarts/data/helper/createDimensions`\n * @param {Array.<string>} [nameList]\n * @return {module:echarts/data/List}\n */\nfunction _default(seriesModel, opt, nameList) {\n  opt = isArray(opt) && {\n    coordDimensions: opt\n  } || extend({}, opt);\n  var source = seriesModel.getSource();\n  var dimensionsInfo = createDimensions(source, opt);\n  var list = new List(dimensionsInfo, seriesModel);\n  list.initData(source, nameList);\n  return list;\n}\n\nmodule.exports = _default;","var _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\nvar normalizeToArray = _model.normalizeToArray;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\n\nfunction getNearestColorPalette(colors, requestColorNum) {\n  var paletteNum = colors.length; // TODO colors must be in order\n\n  for (var i = 0; i < paletteNum; i++) {\n    if (colors[i].length > requestColorNum) {\n      return colors[i];\n    }\n  }\n\n  return colors[paletteNum - 1];\n}\n\nvar _default = {\n  clearColorPalette: function () {\n    inner(this).colorIdx = 0;\n    inner(this).colorNameMap = {};\n  },\n\n  /**\n   * @param {string} name MUST NOT be null/undefined. Otherwise call this function\n   *                 twise with the same parameters will get different result.\n   * @param {Object} [scope=this]\n   * @param {Object} [requestColorNum]\n   * @return {string} color string.\n   */\n  getColorFromPalette: function (name, scope, requestColorNum) {\n    scope = scope || this;\n    var scopeFields = inner(scope);\n    var colorIdx = scopeFields.colorIdx || 0;\n    var colorNameMap = scopeFields.colorNameMap = scopeFields.colorNameMap || {}; // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n\n    if (colorNameMap.hasOwnProperty(name)) {\n      return colorNameMap[name];\n    }\n\n    var defaultColorPalette = normalizeToArray(this.get('color', true));\n    var layeredColorPalette = this.get('colorLayer', true);\n    var colorPalette = requestColorNum == null || !layeredColorPalette ? defaultColorPalette : getNearestColorPalette(layeredColorPalette, requestColorNum); // In case can't find in layered color palette.\n\n    colorPalette = colorPalette || defaultColorPalette;\n\n    if (!colorPalette || !colorPalette.length) {\n      return;\n    }\n\n    var color = colorPalette[colorIdx];\n\n    if (name) {\n      colorNameMap[name] = color;\n    }\n\n    scopeFields.colorIdx = (colorIdx + 1) % colorPalette.length;\n    return color;\n  }\n};\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {number} [time=500] Time in ms\n * @param {string} [easing='linear']\n * @param {number} [delay=0]\n * @param {Function} [callback]\n *\n * @example\n *  // Animate position\n *  animation\n *      .createWrap()\n *      .add(el1, {position: [10, 10]})\n *      .add(el2, {shape: {width: 500}, style: {fill: 'red'}}, 400)\n *      .done(function () { // done })\n *      .start('cubicOut');\n */\nfunction createWrap() {\n  var storage = [];\n  var elExistsMap = {};\n  var doneCallback;\n  return {\n    /**\n     * Caution: a el can only be added once, otherwise 'done'\n     * might not be called. This method checks this (by el.id),\n     * suppresses adding and returns false when existing el found.\n     *\n     * @param {modele:zrender/Element} el\n     * @param {Object} target\n     * @param {number} [time=500]\n     * @param {number} [delay=0]\n     * @param {string} [easing='linear']\n     * @return {boolean} Whether adding succeeded.\n     *\n     * @example\n     *     add(el, target, time, delay, easing);\n     *     add(el, target, time, easing);\n     *     add(el, target, time);\n     *     add(el, target);\n     */\n    add: function (el, target, time, delay, easing) {\n      if (zrUtil.isString(delay)) {\n        easing = delay;\n        delay = 0;\n      }\n\n      if (elExistsMap[el.id]) {\n        return false;\n      }\n\n      elExistsMap[el.id] = 1;\n      storage.push({\n        el: el,\n        target: target,\n        time: time,\n        delay: delay,\n        easing: easing\n      });\n      return true;\n    },\n\n    /**\n     * Only execute when animation finished. Will not execute when any\n     * of 'stop' or 'stopAnimation' called.\n     *\n     * @param {Function} callback\n     */\n    done: function (callback) {\n      doneCallback = callback;\n      return this;\n    },\n\n    /**\n     * Will stop exist animation firstly.\n     */\n    start: function () {\n      var count = storage.length;\n\n      for (var i = 0, len = storage.length; i < len; i++) {\n        var item = storage[i];\n        item.el.animateTo(item.target, item.time, item.delay, item.easing, done);\n      }\n\n      return this;\n\n      function done() {\n        count--;\n\n        if (!count) {\n          storage.length = 0;\n          elExistsMap = {};\n          doneCallback && doneCallback();\n        }\n      }\n    }\n  };\n}\n\nexports.createWrap = createWrap;","var echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @event legendScroll\n * @type {Object}\n * @property {string} type 'legendScroll'\n * @property {string} scrollDataIndex\n */\necharts.registerAction('legendScroll', 'legendscroll', function (payload, ecModel) {\n  var scrollDataIndex = payload.scrollDataIndex;\n  scrollDataIndex != null && ecModel.eachComponent({\n    mainType: 'legend',\n    subType: 'scroll',\n    query: payload\n  }, function (legendModel) {\n    legendModel.setScrollDataIndex(scrollDataIndex);\n  });\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar modelHelper = require(\"./modelHelper\");\n\nvar findPointFromSeries = require(\"./findPointFromSeries\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar curry = zrUtil.curry;\nvar inner = makeInner();\n/**\n * Basic logic: check all axis, if they do not demand show/highlight,\n * then hide/downplay them.\n *\n * @param {Object} coordSysAxesInfo\n * @param {Object} payload\n * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n * @param {Object} [payload.dataIndex] finder, restrict target axes.\n * @param {Object} [payload.axesInfo] finder, restrict target axes.\n *        [{\n *          axisDim: 'x'|'y'|'angle'|...,\n *          axisIndex: ...,\n *          value: ...\n *        }, ...]\n * @param {Function} [payload.dispatchAction]\n * @param {Object} [payload.tooltipOption]\n * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n *        which can be specified in dispatchAction\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Object} content of event obj for echarts.connect.\n */\n\nfunction _default(payload, ecModel, api) {\n  var currTrigger = payload.currTrigger;\n  var point = [payload.x, payload.y];\n  var finder = payload;\n  var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n  var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo; // Pending\n  // See #6121. But we are not able to reproduce it yet.\n\n  if (!coordSysAxesInfo) {\n    return;\n  }\n\n  if (illegalPoint(point)) {\n    // Used in the default behavior of `connection`: use the sample seriesIndex\n    // and dataIndex. And also used in the tooltipView trigger.\n    point = findPointFromSeries({\n      seriesIndex: finder.seriesIndex,\n      // Do not use dataIndexInside from other ec instance.\n      // FIXME: auto detect it?\n      dataIndex: finder.dataIndex\n    }, ecModel).point;\n  }\n\n  var isIllegalPoint = illegalPoint(point); // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n  // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n  // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n  // and dataIndex.\n\n  var inputAxesInfo = finder.axesInfo;\n  var axesInfo = coordSysAxesInfo.axesInfo;\n  var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n  var outputFinder = {};\n  var showValueMap = {};\n  var dataByCoordSys = {\n    list: [],\n    map: {}\n  };\n  var updaters = {\n    showPointer: curry(showPointer, showValueMap),\n    showTooltip: curry(showTooltip, dataByCoordSys)\n  }; // Process for triggered axes.\n\n  each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n    // If a point given, it must be contained by the coordinate system.\n    var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n    each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n      var axis = axisInfo.axis;\n      var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo); // If no inputAxesInfo, no axis is restricted.\n\n      if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n        var val = inputAxisInfo && inputAxisInfo.value;\n\n        if (val == null && !isIllegalPoint) {\n          val = axis.pointToData(point);\n        }\n\n        val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n      }\n    });\n  }); // Process for linked axes.\n\n  var linkTriggers = {};\n  each(axesInfo, function (tarAxisInfo, tarKey) {\n    var linkGroup = tarAxisInfo.linkGroup; // If axis has been triggered in the previous stage, it should not be triggered by link.\n\n    if (linkGroup && !showValueMap[tarKey]) {\n      each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n        var srcValItem = showValueMap[srcKey]; // If srcValItem exist, source axis is triggered, so link to target axis.\n\n        if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n          var val = srcValItem.value;\n          linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo))));\n          linkTriggers[tarAxisInfo.key] = val;\n        }\n      });\n    }\n  });\n  each(linkTriggers, function (val, tarKey) {\n    processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n  });\n  updateModelActually(showValueMap, axesInfo, outputFinder);\n  dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n  dispatchHighDownActually(axesInfo, dispatchAction, api);\n  return outputFinder;\n}\n\nfunction processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n  var axis = axisInfo.axis;\n\n  if (axis.scale.isBlank() || !axis.containData(newValue)) {\n    return;\n  }\n\n  if (!axisInfo.involveSeries) {\n    updaters.showPointer(axisInfo, newValue);\n    return;\n  } // Heavy calculation. So put it after axis.containData checking.\n\n\n  var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n  var payloadBatch = payloadInfo.payloadBatch;\n  var snapToValue = payloadInfo.snapToValue; // Fill content of event obj for echarts.connect.\n  // By defualt use the first involved series data as a sample to connect.\n\n  if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n    zrUtil.extend(outputFinder, payloadBatch[0]);\n  } // If no linkSource input, this process is for collecting link\n  // target, where snap should not be accepted.\n\n\n  if (!dontSnap && axisInfo.snap) {\n    if (axis.containData(snapToValue) && snapToValue != null) {\n      newValue = snapToValue;\n    }\n  }\n\n  updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder); // Tooltip should always be snapToValue, otherwise there will be\n  // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n\n  updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n}\n\nfunction buildPayloadsBySeries(value, axisInfo) {\n  var axis = axisInfo.axis;\n  var dim = axis.dim;\n  var snapToValue = value;\n  var payloadBatch = [];\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n  each(axisInfo.seriesModels, function (series, idx) {\n    var dataDim = series.getData().mapDimension(dim, true);\n    var seriesNestestValue;\n    var dataIndices;\n\n    if (series.getAxisTooltipData) {\n      var result = series.getAxisTooltipData(dataDim, value, axis);\n      dataIndices = result.dataIndices;\n      seriesNestestValue = result.nestestValue;\n    } else {\n      dataIndices = series.getData().indicesOfNearest(dataDim[0], value, // Add a threshold to avoid find the wrong dataIndex\n      // when data length is not same.\n      // false,\n      axis.type === 'category' ? 0.5 : null);\n\n      if (!dataIndices.length) {\n        return;\n      }\n\n      seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n    }\n\n    if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n      return;\n    }\n\n    var diff = value - seriesNestestValue;\n    var dist = Math.abs(diff); // Consider category case\n\n    if (dist <= minDist) {\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        snapToValue = seriesNestestValue;\n        payloadBatch.length = 0;\n      }\n\n      each(dataIndices, function (dataIndex) {\n        payloadBatch.push({\n          seriesIndex: series.seriesIndex,\n          dataIndexInside: dataIndex,\n          dataIndex: series.getData().getRawIndex(dataIndex)\n        });\n      });\n    }\n  });\n  return {\n    payloadBatch: payloadBatch,\n    snapToValue: snapToValue\n  };\n}\n\nfunction showPointer(showValueMap, axisInfo, value, payloadBatch) {\n  showValueMap[axisInfo.key] = {\n    value: value,\n    payloadBatch: payloadBatch\n  };\n}\n\nfunction showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n  var payloadBatch = payloadInfo.payloadBatch;\n  var axis = axisInfo.axis;\n  var axisModel = axis.model;\n  var axisPointerModel = axisInfo.axisPointerModel; // If no data, do not create anything in dataByCoordSys,\n  // whose length will be used to judge whether dispatch action.\n\n  if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n    return;\n  }\n\n  var coordSysModel = axisInfo.coordSys.model;\n  var coordSysKey = modelHelper.makeKey(coordSysModel);\n  var coordSysItem = dataByCoordSys.map[coordSysKey];\n\n  if (!coordSysItem) {\n    coordSysItem = dataByCoordSys.map[coordSysKey] = {\n      coordSysId: coordSysModel.id,\n      coordSysIndex: coordSysModel.componentIndex,\n      coordSysType: coordSysModel.type,\n      coordSysMainType: coordSysModel.mainType,\n      dataByAxis: []\n    };\n    dataByCoordSys.list.push(coordSysItem);\n  }\n\n  coordSysItem.dataByAxis.push({\n    axisDim: axis.dim,\n    axisIndex: axisModel.componentIndex,\n    axisType: axisModel.type,\n    axisId: axisModel.id,\n    value: value,\n    // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n    // depends that all models have been updated. So it should not be performed\n    // here. Considering axisPointerModel used here is volatile, which is hard\n    // to be retrieve in TooltipView, we prepare parameters here.\n    valueLabelOpt: {\n      precision: axisPointerModel.get('label.precision'),\n      formatter: axisPointerModel.get('label.formatter')\n    },\n    seriesDataIndices: payloadBatch.slice()\n  });\n}\n\nfunction updateModelActually(showValueMap, axesInfo, outputFinder) {\n  var outputAxesInfo = outputFinder.axesInfo = []; // Basic logic: If no 'show' required, 'hide' this axisPointer.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    var valItem = showValueMap[key];\n\n    if (valItem) {\n      !axisInfo.useHandle && (option.status = 'show');\n      option.value = valItem.value; // For label formatter param and highlight.\n\n      option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n    } // When always show (e.g., handle used), remain\n    // original value and status.\n    else {\n        // If hide, value still need to be set, consider\n        // click legend to toggle axis blank.\n        !axisInfo.useHandle && (option.status = 'hide');\n      } // If status is 'hide', should be no info in payload.\n\n\n    option.status === 'show' && outputAxesInfo.push({\n      axisDim: axisInfo.axis.dim,\n      axisIndex: axisInfo.axis.model.componentIndex,\n      value: option.value\n    });\n  });\n}\n\nfunction dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n  // Basic logic: If no showTip required, hideTip will be dispatched.\n  if (illegalPoint(point) || !dataByCoordSys.list.length) {\n    dispatchAction({\n      type: 'hideTip'\n    });\n    return;\n  } // In most case only one axis (or event one series is used). It is\n  // convinient to fetch payload.seriesIndex and payload.dataIndex\n  // dirtectly. So put the first seriesIndex and dataIndex of the first\n  // axis on the payload.\n\n\n  var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n  dispatchAction({\n    type: 'showTip',\n    escapeConnect: true,\n    x: point[0],\n    y: point[1],\n    tooltipOption: payload.tooltipOption,\n    position: payload.position,\n    dataIndexInside: sampleItem.dataIndexInside,\n    dataIndex: sampleItem.dataIndex,\n    seriesIndex: sampleItem.seriesIndex,\n    dataByCoordSys: dataByCoordSys.list\n  });\n}\n\nfunction dispatchHighDownActually(axesInfo, dispatchAction, api) {\n  // FIXME\n  // highlight status modification shoule be a stage of main process?\n  // (Consider confilct (e.g., legend and axisPointer) and setOption)\n  var zr = api.getZr();\n  var highDownKey = 'axisPointerLastHighlights';\n  var lastHighlights = inner(zr)[highDownKey] || {};\n  var newHighlights = inner(zr)[highDownKey] = {}; // Update highlight/downplay status according to axisPointer model.\n  // Build hash map and remove duplicate incidentally.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n      var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n      newHighlights[key] = batchItem;\n    });\n  }); // Diff.\n\n  var toHighlight = [];\n  var toDownplay = [];\n  zrUtil.each(lastHighlights, function (batchItem, key) {\n    !newHighlights[key] && toDownplay.push(batchItem);\n  });\n  zrUtil.each(newHighlights, function (batchItem, key) {\n    !lastHighlights[key] && toHighlight.push(batchItem);\n  });\n  toDownplay.length && api.dispatchAction({\n    type: 'downplay',\n    escapeConnect: true,\n    batch: toDownplay\n  });\n  toHighlight.length && api.dispatchAction({\n    type: 'highlight',\n    escapeConnect: true,\n    batch: toHighlight\n  });\n}\n\nfunction findInputAxisInfo(inputAxesInfo, axisInfo) {\n  for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n    var inputAxisInfo = inputAxesInfo[i];\n\n    if (axisInfo.axis.dim === inputAxisInfo.axisDim && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex) {\n      return inputAxisInfo;\n    }\n  }\n}\n\nfunction makeMapperParam(axisInfo) {\n  var axisModel = axisInfo.axis.model;\n  var item = {};\n  var dim = item.axisDim = axisInfo.axis.dim;\n  item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n  item.axisName = item[dim + 'AxisName'] = axisModel.name;\n  item.axisId = item[dim + 'AxisId'] = axisModel.id;\n  return item;\n}\n\nfunction illegalPoint(point) {\n  return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n}\n\nmodule.exports = _default;","var BoundingRect = require(\"../core/BoundingRect\");\n\nvar imageHelper = require(\"../graphic/helper/image\");\n\nvar _util = require(\"../core/util\");\n\nvar getContext = _util.getContext;\nvar extend = _util.extend;\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar trim = _util.trim;\nvar textWidthCache = {};\nvar textWidthCacheCounter = 0;\nvar TEXT_CACHE_MAX = 5000;\nvar STYLE_REG = /\\{([a-zA-Z0-9_]+)\\|([^}]*)\\}/g;\nvar DEFAULT_FONT = '12px sans-serif'; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {number} width\n */\n\n\nfunction getWidth(text, font) {\n  font = font || DEFAULT_FONT;\n  var key = text + ':' + font;\n\n  if (textWidthCache[key]) {\n    return textWidthCache[key];\n  }\n\n  var textLines = (text + '').split('\\n');\n  var width = 0;\n\n  for (var i = 0, l = textLines.length; i < l; i++) {\n    // textContain.measureText may be overrided in SVG or VML\n    width = Math.max(measureText(textLines[i], font).width, width);\n  }\n\n  if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n    textWidthCacheCounter = 0;\n    textWidthCache = {};\n  }\n\n  textWidthCacheCounter++;\n  textWidthCache[key] = width;\n  return width;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {string} [textAlign='left']\n * @param {string} [textVerticalAlign='top']\n * @param {Array.<number>} [textPadding]\n * @param {Object} [rich]\n * @param {Object} [truncate]\n * @return {Object} {x, y, width, height, lineHeight}\n */\n\n\nfunction getBoundingRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  return rich ? getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) : getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate);\n}\n\nfunction getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate) {\n  var contentBlock = parsePlainText(text, font, textPadding, truncate);\n  var outerWidth = getWidth(text, font);\n\n  if (textPadding) {\n    outerWidth += textPadding[1] + textPadding[3];\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  var rect = new BoundingRect(x, y, outerWidth, outerHeight);\n  rect.lineHeight = contentBlock.lineHeight;\n  return rect;\n}\n\nfunction getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  var contentBlock = parseRichText(text, {\n    rich: rich,\n    truncate: truncate,\n    font: font,\n    textAlign: textAlign,\n    textPadding: textPadding\n  });\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  return new BoundingRect(x, y, outerWidth, outerHeight);\n}\n/**\n * @public\n * @param {number} x\n * @param {number} width\n * @param {string} [textAlign='left']\n * @return {number} Adjusted x.\n */\n\n\nfunction adjustTextX(x, width, textAlign) {\n  // FIXME Right to left language\n  if (textAlign === 'right') {\n    x -= width;\n  } else if (textAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n/**\n * @public\n * @param {number} y\n * @param {number} height\n * @param {string} [textVerticalAlign='top']\n * @return {number} Adjusted y.\n */\n\n\nfunction adjustTextY(y, height, textVerticalAlign) {\n  if (textVerticalAlign === 'middle') {\n    y -= height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y -= height;\n  }\n\n  return y;\n}\n/**\n * @public\n * @param {stirng} textPosition\n * @param {Object} rect {x, y, width, height}\n * @param {number} distance\n * @return {Object} {x, y, textAlign, textVerticalAlign}\n */\n\n\nfunction adjustTextPositionOnRect(textPosition, rect, distance) {\n  var x = rect.x;\n  var y = rect.y;\n  var height = rect.height;\n  var width = rect.width;\n  var halfHeight = height / 2;\n  var textAlign = 'left';\n  var textVerticalAlign = 'top';\n\n  switch (textPosition) {\n    case 'left':\n      x -= distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'right':\n      x += distance + width;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'top':\n      x += width / 2;\n      y -= distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'bottom':\n      x += width / 2;\n      y += height + distance;\n      textAlign = 'center';\n      break;\n\n    case 'inside':\n      x += width / 2;\n      y += halfHeight;\n      textAlign = 'center';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideLeft':\n      x += distance;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideRight':\n      x += width - distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideTop':\n      x += width / 2;\n      y += distance;\n      textAlign = 'center';\n      break;\n\n    case 'insideBottom':\n      x += width / 2;\n      y += height - distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideTopLeft':\n      x += distance;\n      y += distance;\n      break;\n\n    case 'insideTopRight':\n      x += width - distance;\n      y += distance;\n      textAlign = 'right';\n      break;\n\n    case 'insideBottomLeft':\n      x += distance;\n      y += height - distance;\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideBottomRight':\n      x += width - distance;\n      y += height - distance;\n      textAlign = 'right';\n      textVerticalAlign = 'bottom';\n      break;\n  }\n\n  return {\n    x: x,\n    y: y,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n/**\n * Show ellipsis if overflow.\n *\n * @public\n * @param  {string} text\n * @param  {string} containerWidth\n * @param  {string} font\n * @param  {number} [ellipsis='...']\n * @param  {Object} [options]\n * @param  {number} [options.maxIterations=3]\n * @param  {number} [options.minChar=0] If truncate result are less\n *                  then minChar, ellipsis will not show, which is\n *                  better for user hint in some cases.\n * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n * @return {string}\n */\n\n\nfunction truncateText(text, containerWidth, font, ellipsis, options) {\n  if (!containerWidth) {\n    return '';\n  }\n\n  var textLines = (text + '').split('\\n');\n  options = prepareTruncateOptions(containerWidth, font, ellipsis, options); // FIXME\n  // It is not appropriate that every line has '...' when truncate multiple lines.\n\n  for (var i = 0, len = textLines.length; i < len; i++) {\n    textLines[i] = truncateSingleLine(textLines[i], options);\n  }\n\n  return textLines.join('\\n');\n}\n\nfunction prepareTruncateOptions(containerWidth, font, ellipsis, options) {\n  options = extend({}, options);\n  options.font = font;\n  var ellipsis = retrieve2(ellipsis, '...');\n  options.maxIterations = retrieve2(options.maxIterations, 2);\n  var minChar = options.minChar = retrieve2(options.minChar, 0); // FIXME\n  // Other languages?\n\n  options.cnCharWidth = getWidth('国', font); // FIXME\n  // Consider proportional font?\n\n  var ascCharWidth = options.ascCharWidth = getWidth('a', font);\n  options.placeholder = retrieve2(options.placeholder, ''); // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n  // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n\n  var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n\n  for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n    contentWidth -= ascCharWidth;\n  }\n\n  var ellipsisWidth = getWidth(ellipsis);\n\n  if (ellipsisWidth > contentWidth) {\n    ellipsis = '';\n    ellipsisWidth = 0;\n  }\n\n  contentWidth = containerWidth - ellipsisWidth;\n  options.ellipsis = ellipsis;\n  options.ellipsisWidth = ellipsisWidth;\n  options.contentWidth = contentWidth;\n  options.containerWidth = containerWidth;\n  return options;\n}\n\nfunction truncateSingleLine(textLine, options) {\n  var containerWidth = options.containerWidth;\n  var font = options.font;\n  var contentWidth = options.contentWidth;\n\n  if (!containerWidth) {\n    return '';\n  }\n\n  var lineWidth = getWidth(textLine, font);\n\n  if (lineWidth <= containerWidth) {\n    return textLine;\n  }\n\n  for (var j = 0;; j++) {\n    if (lineWidth <= contentWidth || j >= options.maxIterations) {\n      textLine += options.ellipsis;\n      break;\n    }\n\n    var subLength = j === 0 ? estimateLength(textLine, contentWidth, options.ascCharWidth, options.cnCharWidth) : lineWidth > 0 ? Math.floor(textLine.length * contentWidth / lineWidth) : 0;\n    textLine = textLine.substr(0, subLength);\n    lineWidth = getWidth(textLine, font);\n  }\n\n  if (textLine === '') {\n    textLine = options.placeholder;\n  }\n\n  return textLine;\n}\n\nfunction estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n  var width = 0;\n  var i = 0;\n\n  for (var len = text.length; i < len && width < contentWidth; i++) {\n    var charCode = text.charCodeAt(i);\n    width += 0 <= charCode && charCode <= 127 ? ascCharWidth : cnCharWidth;\n  }\n\n  return i;\n}\n/**\n * @public\n * @param {string} font\n * @return {number} line height\n */\n\n\nfunction getLineHeight(font) {\n  // FIXME A rough approach.\n  return getWidth('国', font);\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {Object} width\n */\n\n\nfunction measureText(text, font) {\n  return methods.measureText(text, font);\n} // Avoid assign to an exported variable, for transforming to cjs.\n\n\nmethods.measureText = function (text, font) {\n  var ctx = getContext();\n  ctx.font = font || DEFAULT_FONT;\n  return ctx.measureText(text);\n};\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {Object} [truncate]\n * @return {Object} block: {lineHeight, lines, height, outerHeight}\n *  Notice: for performance, do not calculate outerWidth util needed.\n */\n\n\nfunction parsePlainText(text, font, padding, truncate) {\n  text != null && (text += '');\n  var lineHeight = getLineHeight(font);\n  var lines = text ? text.split('\\n') : [];\n  var height = lines.length * lineHeight;\n  var outerHeight = height;\n\n  if (padding) {\n    outerHeight += padding[0] + padding[2];\n  }\n\n  if (text && truncate) {\n    var truncOuterHeight = truncate.outerHeight;\n    var truncOuterWidth = truncate.outerWidth;\n\n    if (truncOuterHeight != null && outerHeight > truncOuterHeight) {\n      text = '';\n      lines = [];\n    } else if (truncOuterWidth != null) {\n      var options = prepareTruncateOptions(truncOuterWidth - (padding ? padding[1] + padding[3] : 0), font, truncate.ellipsis, {\n        minChar: truncate.minChar,\n        placeholder: truncate.placeholder\n      }); // FIXME\n      // It is not appropriate that every line has '...' when truncate multiple lines.\n\n      for (var i = 0, len = lines.length; i < len; i++) {\n        lines[i] = truncateSingleLine(lines[i], options);\n      }\n    }\n  }\n\n  return {\n    lines: lines,\n    height: height,\n    outerHeight: outerHeight,\n    lineHeight: lineHeight\n  };\n}\n/**\n * For example: 'some text {a|some text}other text{b|some text}xxx{c|}xxx'\n * Also consider 'bbbb{a|xxx\\nzzz}xxxx\\naaaa'.\n *\n * @public\n * @param {string} text\n * @param {Object} style\n * @return {Object} block\n * {\n *      width,\n *      height,\n *      lines: [{\n *          lineHeight,\n *          width,\n *          tokens: [[{\n *              styleName,\n *              text,\n *              width,      // include textPadding\n *              height,     // include textPadding\n *              textWidth, // pure text width\n *              textHeight, // pure text height\n *              lineHeihgt,\n *              font,\n *              textAlign,\n *              textVerticalAlign\n *          }], [...], ...]\n *      }, ...]\n * }\n * If styleName is undefined, it is plain text.\n */\n\n\nfunction parseRichText(text, style) {\n  var contentBlock = {\n    lines: [],\n    width: 0,\n    height: 0\n  };\n  text != null && (text += '');\n\n  if (!text) {\n    return contentBlock;\n  }\n\n  var lastIndex = STYLE_REG.lastIndex = 0;\n  var result;\n\n  while ((result = STYLE_REG.exec(text)) != null) {\n    var matchedIndex = result.index;\n\n    if (matchedIndex > lastIndex) {\n      pushTokens(contentBlock, text.substring(lastIndex, matchedIndex));\n    }\n\n    pushTokens(contentBlock, result[2], result[1]);\n    lastIndex = STYLE_REG.lastIndex;\n  }\n\n  if (lastIndex < text.length) {\n    pushTokens(contentBlock, text.substring(lastIndex, text.length));\n  }\n\n  var lines = contentBlock.lines;\n  var contentHeight = 0;\n  var contentWidth = 0; // For `textWidth: 100%`\n\n  var pendingList = [];\n  var stlPadding = style.textPadding;\n  var truncate = style.truncate;\n  var truncateWidth = truncate && truncate.outerWidth;\n  var truncateHeight = truncate && truncate.outerHeight;\n\n  if (stlPadding) {\n    truncateWidth != null && (truncateWidth -= stlPadding[1] + stlPadding[3]);\n    truncateHeight != null && (truncateHeight -= stlPadding[0] + stlPadding[2]);\n  } // Calculate layout info of tokens.\n\n\n  for (var i = 0; i < lines.length; i++) {\n    var line = lines[i];\n    var lineHeight = 0;\n    var lineWidth = 0;\n\n    for (var j = 0; j < line.tokens.length; j++) {\n      var token = line.tokens[j];\n      var tokenStyle = token.styleName && style.rich[token.styleName] || {}; // textPadding should not inherit from style.\n\n      var textPadding = token.textPadding = tokenStyle.textPadding; // textFont has been asigned to font by `normalizeStyle`.\n\n      var font = token.font = tokenStyle.font || style.font; // textHeight can be used when textVerticalAlign is specified in token.\n\n      var tokenHeight = token.textHeight = retrieve2( // textHeight should not be inherited, consider it can be specified\n      // as box height of the block.\n      tokenStyle.textHeight, getLineHeight(font));\n      textPadding && (tokenHeight += textPadding[0] + textPadding[2]);\n      token.height = tokenHeight;\n      token.lineHeight = retrieve3(tokenStyle.textLineHeight, style.textLineHeight, tokenHeight);\n      token.textAlign = tokenStyle && tokenStyle.textAlign || style.textAlign;\n      token.textVerticalAlign = tokenStyle && tokenStyle.textVerticalAlign || 'middle';\n\n      if (truncateHeight != null && contentHeight + token.lineHeight > truncateHeight) {\n        return {\n          lines: [],\n          width: 0,\n          height: 0\n        };\n      }\n\n      token.textWidth = getWidth(token.text, font);\n      var tokenWidth = tokenStyle.textWidth;\n      var tokenWidthNotSpecified = tokenWidth == null || tokenWidth === 'auto'; // Percent width, can be `100%`, can be used in drawing separate\n      // line when box width is needed to be auto.\n\n      if (typeof tokenWidth === 'string' && tokenWidth.charAt(tokenWidth.length - 1) === '%') {\n        token.percentWidth = tokenWidth;\n        pendingList.push(token);\n        tokenWidth = 0; // Do not truncate in this case, because there is no user case\n        // and it is too complicated.\n      } else {\n        if (tokenWidthNotSpecified) {\n          tokenWidth = token.textWidth; // FIXME: If image is not loaded and textWidth is not specified, calling\n          // `getBoundingRect()` will not get correct result.\n\n          var textBackgroundColor = tokenStyle.textBackgroundColor;\n          var bgImg = textBackgroundColor && textBackgroundColor.image; // Use cases:\n          // (1) If image is not loaded, it will be loaded at render phase and call\n          // `dirty()` and `textBackgroundColor.image` will be replaced with the loaded\n          // image, and then the right size will be calculated here at the next tick.\n          // See `graphic/helper/text.js`.\n          // (2) If image loaded, and `textBackgroundColor.image` is image src string,\n          // use `imageHelper.findExistImage` to find cached image.\n          // `imageHelper.findExistImage` will always be called here before\n          // `imageHelper.createOrUpdateImage` in `graphic/helper/text.js#renderRichText`\n          // which ensures that image will not be rendered before correct size calcualted.\n\n          if (bgImg) {\n            bgImg = imageHelper.findExistImage(bgImg);\n\n            if (imageHelper.isImageReady(bgImg)) {\n              tokenWidth = Math.max(tokenWidth, bgImg.width * tokenHeight / bgImg.height);\n            }\n          }\n        }\n\n        var paddingW = textPadding ? textPadding[1] + textPadding[3] : 0;\n        tokenWidth += paddingW;\n        var remianTruncWidth = truncateWidth != null ? truncateWidth - lineWidth : null;\n\n        if (remianTruncWidth != null && remianTruncWidth < tokenWidth) {\n          if (!tokenWidthNotSpecified || remianTruncWidth < paddingW) {\n            token.text = '';\n            token.textWidth = tokenWidth = 0;\n          } else {\n            token.text = truncateText(token.text, remianTruncWidth - paddingW, font, truncate.ellipsis, {\n              minChar: truncate.minChar\n            });\n            token.textWidth = getWidth(token.text, font);\n            tokenWidth = token.textWidth + paddingW;\n          }\n        }\n      }\n\n      lineWidth += token.width = tokenWidth;\n      tokenStyle && (lineHeight = Math.max(lineHeight, token.lineHeight));\n    }\n\n    line.width = lineWidth;\n    line.lineHeight = lineHeight;\n    contentHeight += lineHeight;\n    contentWidth = Math.max(contentWidth, lineWidth);\n  }\n\n  contentBlock.outerWidth = contentBlock.width = retrieve2(style.textWidth, contentWidth);\n  contentBlock.outerHeight = contentBlock.height = retrieve2(style.textHeight, contentHeight);\n\n  if (stlPadding) {\n    contentBlock.outerWidth += stlPadding[1] + stlPadding[3];\n    contentBlock.outerHeight += stlPadding[0] + stlPadding[2];\n  }\n\n  for (var i = 0; i < pendingList.length; i++) {\n    var token = pendingList[i];\n    var percentWidth = token.percentWidth; // Should not base on outerWidth, because token can not be placed out of padding.\n\n    token.width = parseInt(percentWidth, 10) / 100 * contentWidth;\n  }\n\n  return contentBlock;\n}\n\nfunction pushTokens(block, str, styleName) {\n  var isEmptyStr = str === '';\n  var strs = str.split('\\n');\n  var lines = block.lines;\n\n  for (var i = 0; i < strs.length; i++) {\n    var text = strs[i];\n    var token = {\n      styleName: styleName,\n      text: text,\n      isLineHolder: !text && !isEmptyStr\n    }; // The first token should be appended to the last line.\n\n    if (!i) {\n      var tokens = (lines[lines.length - 1] || (lines[0] = {\n        tokens: []\n      })).tokens; // Consider cases:\n      // (1) ''.split('\\n') => ['', '\\n', ''], the '' at the first item\n      // (which is a placeholder) should be replaced by new token.\n      // (2) A image backage, where token likes {a|}.\n      // (3) A redundant '' will affect textAlign in line.\n      // (4) tokens with the same tplName should not be merged, because\n      // they should be displayed in different box (with border and padding).\n\n      var tokensLen = tokens.length;\n      tokensLen === 1 && tokens[0].isLineHolder ? tokens[0] = token : // Consider text is '', only insert when it is the \"lineHolder\" or\n      // \"emptyStr\". Otherwise a redundant '' will affect textAlign in line.\n      (text || !tokensLen || isEmptyStr) && tokens.push(token);\n    } // Other tokens always start a new line.\n    else {\n        // If there is '', insert it as a placeholder.\n        lines.push({\n          tokens: [token]\n        });\n      }\n  }\n}\n\nfunction makeFont(style) {\n  // FIXME in node-canvas fontWeight is before fontStyle\n  // Use `fontSize` `fontFamily` to check whether font properties are defined.\n  var font = (style.fontSize || style.fontFamily) && [style.fontStyle, style.fontWeight, (style.fontSize || 12) + 'px', // If font properties are defined, `fontFamily` should not be ignored.\n  style.fontFamily || 'sans-serif'].join(' ');\n  return font && trim(font) || style.textFont || style.font;\n}\n\nexports.DEFAULT_FONT = DEFAULT_FONT;\nexports.$override = $override;\nexports.getWidth = getWidth;\nexports.getBoundingRect = getBoundingRect;\nexports.adjustTextX = adjustTextX;\nexports.adjustTextY = adjustTextY;\nexports.adjustTextPositionOnRect = adjustTextPositionOnRect;\nexports.truncateText = truncateText;\nexports.getLineHeight = getLineHeight;\nexports.measureText = measureText;\nexports.parsePlainText = parsePlainText;\nexports.parseRichText = parseRichText;\nexports.makeFont = makeFont;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar _task = require(\"../stream/task\");\n\nvar createTask = _task.createTask;\n\nvar createRenderPlanner = require(\"../chart/helper/createRenderPlanner\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = modelUtil.makeInner();\nvar renderPlanner = createRenderPlanner();\n\nfunction Chart() {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewChart');\n  this.renderTask = createTask({\n    plan: renderTaskPlan,\n    reset: renderTaskReset\n  });\n  this.renderTask.context = {\n    view: this\n  };\n}\n\nChart.prototype = {\n  type: 'chart',\n\n  /**\n   * Init the chart.\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function (ecModel, api) {},\n\n  /**\n   * Render the chart.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  render: function (seriesModel, ecModel, api, payload) {},\n\n  /**\n   * Highlight series or specified data item.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  highlight: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n  },\n\n  /**\n   * Downplay series or specified data item.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  downplay: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'normal');\n  },\n\n  /**\n   * Remove self.\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  remove: function (ecModel, api) {\n    this.group.removeAll();\n  },\n\n  /**\n   * Dispose self.\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  dispose: function () {},\n\n  /**\n   * Rendering preparation in progressive mode.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  incrementalPrepareRender: null,\n\n  /**\n   * Render in progressive mode.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  incrementalRender: null,\n\n  /**\n   * Update transform directly.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   * @return {Object} {update: true}\n   */\n  updateTransform: null\n  /**\n   * The view contains the given point.\n   * @interface\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  // containPoint: function () {}\n\n};\nvar chartProto = Chart.prototype;\n\nchartProto.updateView = chartProto.updateLayout = chartProto.updateVisual = function (seriesModel, ecModel, api, payload) {\n  this.render(seriesModel, ecModel, api, payload);\n};\n/**\n * Set state of single element\n * @param  {module:zrender/Element} el\n * @param  {string} state\n */\n\n\nfunction elSetState(el, state) {\n  if (el) {\n    el.trigger(state);\n\n    if (el.type === 'group') {\n      for (var i = 0; i < el.childCount(); i++) {\n        elSetState(el.childAt(i), state);\n      }\n    }\n  }\n}\n/**\n * @param  {module:echarts/data/List} data\n * @param  {Object} payload\n * @param  {string} state 'normal'|'emphasis'\n */\n\n\nfunction toggleHighlight(data, payload, state) {\n  var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n  if (dataIndex != null) {\n    each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n      elSetState(data.getItemGraphicEl(dataIdx), state);\n    });\n  } else {\n    data.eachItemGraphicEl(function (el) {\n      elSetState(el, state);\n    });\n  }\n} // Enable Chart.extend.\n\n\nclazzUtil.enableClassExtend(Chart, ['dispose']); // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Chart, {\n  registerWhenExtend: true\n});\n\nChart.markUpdateMethod = function (payload, methodName) {\n  inner(payload).updateMethod = methodName;\n};\n\nfunction renderTaskPlan(context) {\n  return renderPlanner(context.model);\n}\n\nfunction renderTaskReset(context) {\n  var seriesModel = context.model;\n  var ecModel = context.ecModel;\n  var api = context.api;\n  var payload = context.payload; // ???! remove updateView updateVisual\n\n  var progressiveRender = seriesModel.pipelineContext.progressiveRender;\n  var view = context.view;\n  var updateMethod = payload && inner(payload).updateMethod;\n  var methodName = progressiveRender ? 'incrementalPrepareRender' : updateMethod && view[updateMethod] ? updateMethod // `appendData` is also supported when data amount\n  // is less than progressive threshold.\n  : 'render';\n\n  if (methodName !== 'render') {\n    view[methodName](seriesModel, ecModel, api, payload);\n  }\n\n  return progressMethodMap[methodName];\n}\n\nvar progressMethodMap = {\n  incrementalPrepareRender: {\n    progress: function (params, context) {\n      context.view.incrementalRender(params, context.model, context.ecModel, context.api, context.payload);\n    }\n  },\n  render: {\n    // Put view.render in `progress` to support appendData. But in this case\n    // view.render should not be called in reset, otherwise it will be called\n    // twise. Use `forceFirstProgress` to make sure that view.render is called\n    // in any cases.\n    forceFirstProgress: true,\n    progress: function (params, context) {\n      context.view.render(context.model, context.ecModel, context.api, context.payload);\n    }\n  }\n};\nvar _default = Chart;\nmodule.exports = _default;","var zrLog = require(\"../core/log\");\n\nvar vmlCore = require(\"./core\");\n\nvar _util = require(\"../core/util\");\n\nvar each = _util.each;\n\n/**\n * VML Painter.\n *\n * @module zrender/vml/Painter\n */\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n/**\n * @alias module:zrender/vml/Painter\n */\n\n\nfunction VMLPainter(root, storage) {\n  vmlCore.initVML();\n  this.root = root;\n  this.storage = storage;\n  var vmlViewport = document.createElement('div');\n  var vmlRoot = document.createElement('div');\n  vmlViewport.style.cssText = 'display:inline-block;overflow:hidden;position:relative;width:300px;height:150px;';\n  vmlRoot.style.cssText = 'position:absolute;left:0;top:0;';\n  root.appendChild(vmlViewport);\n  this._vmlRoot = vmlRoot;\n  this._vmlViewport = vmlViewport;\n  this.resize(); // Modify storage\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n\n    if (el) {\n      el.onRemove && el.onRemove(vmlRoot);\n    }\n  };\n\n  storage.addToStorage = function (el) {\n    // Displayable already has a vml node\n    el.onAdd && el.onAdd(vmlRoot);\n    oldAddToStorage.call(storage, el);\n  };\n\n  this._firstPaint = true;\n}\n\nVMLPainter.prototype = {\n  constructor: VMLPainter,\n  getType: function () {\n    return 'vml';\n  },\n\n  /**\n   * @return {HTMLDivElement}\n   */\n  getViewportRoot: function () {\n    return this._vmlViewport;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n\n  /**\n   * 刷新\n   */\n  refresh: function () {\n    var list = this.storage.getDisplayList(true, true);\n\n    this._paintList(list);\n  },\n  _paintList: function (list) {\n    var vmlRoot = this._vmlRoot;\n\n    for (var i = 0; i < list.length; i++) {\n      var el = list[i];\n\n      if (el.invisible || el.ignore) {\n        if (!el.__alreadyNotVisible) {\n          el.onRemove(vmlRoot);\n        } // Set as already invisible\n\n\n        el.__alreadyNotVisible = true;\n      } else {\n        if (el.__alreadyNotVisible) {\n          el.onAdd(vmlRoot);\n        }\n\n        el.__alreadyNotVisible = false;\n\n        if (el.__dirty) {\n          el.beforeBrush && el.beforeBrush();\n          (el.brushVML || el.brush).call(el, vmlRoot);\n          el.afterBrush && el.afterBrush();\n        }\n      }\n\n      el.__dirty = false;\n    }\n\n    if (this._firstPaint) {\n      // Detached from document at first time\n      // to avoid page refreshing too many times\n      // FIXME 如果每次都先 removeChild 可能会导致一些填充和描边的效果改变\n      this._vmlViewport.appendChild(vmlRoot);\n\n      this._firstPaint = false;\n    }\n  },\n  resize: function (width, height) {\n    var width = width == null ? this._getWidth() : width;\n    var height = height == null ? this._getHeight() : height;\n\n    if (this._width != width || this._height != height) {\n      this._width = width;\n      this._height = height;\n      var vmlViewportStyle = this._vmlViewport.style;\n      vmlViewportStyle.width = width + 'px';\n      vmlViewportStyle.height = height + 'px';\n    }\n  },\n  dispose: function () {\n    this.root.innerHTML = '';\n    this._vmlRoot = this._vmlViewport = this.storage = null;\n  },\n  getWidth: function () {\n    return this._width;\n  },\n  getHeight: function () {\n    return this._height;\n  },\n  clear: function () {\n    if (this._vmlViewport) {\n      this.root.removeChild(this._vmlViewport);\n    }\n  },\n  _getWidth: function () {\n    var root = this.root;\n    var stl = root.currentStyle;\n    return (root.clientWidth || parseInt10(stl.width)) - parseInt10(stl.paddingLeft) - parseInt10(stl.paddingRight) | 0;\n  },\n  _getHeight: function () {\n    var root = this.root;\n    var stl = root.currentStyle;\n    return (root.clientHeight || parseInt10(stl.height)) - parseInt10(stl.paddingTop) - parseInt10(stl.paddingBottom) | 0;\n  }\n}; // Not supported methods\n\nfunction createMethodNotSupport(method) {\n  return function () {\n    zrLog('In IE8.0 VML mode painter not support method \"' + method + '\"');\n  };\n} // Unsupported methods\n\n\neach(['getLayer', 'insertLayer', 'eachLayer', 'eachBuiltinLayer', 'eachOtherLayer', 'getLayers', 'modLayer', 'delLayer', 'clearLayer', 'toDataURL', 'pathToImage'], function (name) {\n  VMLPainter.prototype[name] = createMethodNotSupport(name);\n});\nvar _default = VMLPainter;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(option) {\n  if (!option || !zrUtil.isArray(option.series)) {\n    return;\n  } // Translate 'k' to 'candlestick'.\n\n\n  zrUtil.each(option.series, function (seriesItem) {\n    if (zrUtil.isObject(seriesItem) && seriesItem.type === 'k') {\n      seriesItem.type = 'candlestick';\n    }\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar visualDefault = require(\"../../visual/visualDefault\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar numberUtil = require(\"../../util/number\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar mapVisual = VisualMapping.mapVisual;\nvar eachVisual = VisualMapping.eachVisual;\nvar isArray = zrUtil.isArray;\nvar each = zrUtil.each;\nvar asc = numberUtil.asc;\nvar linearMap = numberUtil.linearMap;\nvar noop = zrUtil.noop;\nvar VisualMapModel = echarts.extendComponentModel({\n  type: 'visualMap',\n  dependencies: ['series'],\n\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n  stateList: ['inRange', 'outOfRange'],\n\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n  replacableOptionKeys: ['inRange', 'outOfRange', 'target', 'controller', 'color'],\n\n  /**\n   * [lowerBound, upperBound]\n   *\n   * @readOnly\n   * @type {Array.<number>}\n   */\n  dataBound: [-Infinity, Infinity],\n\n  /**\n   * @readOnly\n   * @type {string|Object}\n   */\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    show: true,\n    zlevel: 0,\n    z: 4,\n    seriesIndex: 'all',\n    // 'all' or null/undefined: all series.\n    // A number or an array of number: the specified series.\n    // set min: 0, max: 200, only for campatible with ec2.\n    // In fact min max should not have default value.\n    min: 0,\n    // min value, must specified if pieces is not specified.\n    max: 200,\n    // max value, must specified if pieces is not specified.\n    dimension: null,\n    inRange: null,\n    // 'color', 'colorHue', 'colorSaturation', 'colorLightness', 'colorAlpha',\n    // 'symbol', 'symbolSize'\n    outOfRange: null,\n    // 'color', 'colorHue', 'colorSaturation',\n    // 'colorLightness', 'colorAlpha',\n    // 'symbol', 'symbolSize'\n    left: 0,\n    // 'center' ¦ 'left' ¦ 'right' ¦ {number} (px)\n    right: null,\n    // The same as left.\n    top: null,\n    // 'top' ¦ 'bottom' ¦ 'center' ¦ {number} (px)\n    bottom: 0,\n    // The same as top.\n    itemWidth: null,\n    itemHeight: null,\n    inverse: false,\n    orient: 'vertical',\n    // 'horizontal' ¦ 'vertical'\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderColor: '#ccc',\n    // 值域边框颜色\n    contentColor: '#5793f3',\n    inactiveColor: '#aaa',\n    borderWidth: 0,\n    // 值域边框线宽，单位px，默认为0（无边框）\n    padding: 5,\n    // 值域内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    textGap: 10,\n    //\n    precision: 0,\n    // 小数精度，默认为0，无小数点\n    color: null,\n    //颜色（deprecated，兼容ec2，顺序同pieces，不同于inRange/outOfRange）\n    formatter: null,\n    text: null,\n    // 文本，如['高', '低']，兼容ec2，text[0]对应高值，text[1]对应低值\n    textStyle: {\n      color: '#333' // 值域文字颜色\n\n    }\n  },\n\n  /**\n   * @protected\n   */\n  init: function (option, parentModel, ecModel) {\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this._dataExtent;\n    /**\n     * @readOnly\n     */\n\n    this.targetVisuals = {};\n    /**\n     * @readOnly\n     */\n\n    this.controllerVisuals = {};\n    /**\n     * @readOnly\n     */\n\n    this.textStyleModel;\n    /**\n     * [width, height]\n     * @readOnly\n     * @type {Array.<number>}\n     */\n\n    this.itemSize;\n    this.mergeDefaultAndTheme(option, ecModel);\n  },\n\n  /**\n   * @protected\n   */\n  optionUpdated: function (newOption, isInit) {\n    var thisOption = this.option; // FIXME\n    // necessary?\n    // Disable realtime view update if canvas is not supported.\n\n    if (!env.canvasSupported) {\n      thisOption.realtime = false;\n    }\n\n    !isInit && visualSolution.replaceVisualOption(thisOption, newOption, this.replacableOptionKeys);\n    this.textStyleModel = this.getModel('textStyle');\n    this.resetItemSize();\n    this.completeVisualOption();\n  },\n\n  /**\n   * @protected\n   */\n  resetVisual: function (supplementVisualOption) {\n    var stateList = this.stateList;\n    supplementVisualOption = zrUtil.bind(supplementVisualOption, this);\n    this.controllerVisuals = visualSolution.createVisualMappings(this.option.controller, stateList, supplementVisualOption);\n    this.targetVisuals = visualSolution.createVisualMappings(this.option.target, stateList, supplementVisualOption);\n  },\n\n  /**\n   * @protected\n   * @return {Array.<number>} An array of series indices.\n   */\n  getTargetSeriesIndices: function () {\n    var optionSeriesIndex = this.option.seriesIndex;\n    var seriesIndices = [];\n\n    if (optionSeriesIndex == null || optionSeriesIndex === 'all') {\n      this.ecModel.eachSeries(function (seriesModel, index) {\n        seriesIndices.push(index);\n      });\n    } else {\n      seriesIndices = modelUtil.normalizeToArray(optionSeriesIndex);\n    }\n\n    return seriesIndices;\n  },\n\n  /**\n   * @public\n   */\n  eachTargetSeries: function (callback, context) {\n    zrUtil.each(this.getTargetSeriesIndices(), function (seriesIndex) {\n      callback.call(context, this.ecModel.getSeriesByIndex(seriesIndex));\n    }, this);\n  },\n\n  /**\n   * @pubilc\n   */\n  isTargetSeries: function (seriesModel) {\n    var is = false;\n    this.eachTargetSeries(function (model) {\n      model === seriesModel && (is = true);\n    });\n    return is;\n  },\n\n  /**\n   * @example\n   * this.formatValueText(someVal); // format single numeric value to text.\n   * this.formatValueText(someVal, true); // format single category value to text.\n   * this.formatValueText([min, max]); // format numeric min-max to text.\n   * this.formatValueText([this.dataBound[0], max]); // using data lower bound.\n   * this.formatValueText([min, this.dataBound[1]]); // using data upper bound.\n   *\n   * @param {number|Array.<number>} value Real value, or this.dataBound[0 or 1].\n   * @param {boolean} [isCategory=false] Only available when value is number.\n   * @param {Array.<string>} edgeSymbols Open-close symbol when value is interval.\n   * @return {string}\n   * @protected\n   */\n  formatValueText: function (value, isCategory, edgeSymbols) {\n    var option = this.option;\n    var precision = option.precision;\n    var dataBound = this.dataBound;\n    var formatter = option.formatter;\n    var isMinMax;\n    var textValue;\n    edgeSymbols = edgeSymbols || ['<', '>'];\n\n    if (zrUtil.isArray(value)) {\n      value = value.slice();\n      isMinMax = true;\n    }\n\n    textValue = isCategory ? value : isMinMax ? [toFixed(value[0]), toFixed(value[1])] : toFixed(value);\n\n    if (zrUtil.isString(formatter)) {\n      return formatter.replace('{value}', isMinMax ? textValue[0] : textValue).replace('{value2}', isMinMax ? textValue[1] : textValue);\n    } else if (zrUtil.isFunction(formatter)) {\n      return isMinMax ? formatter(value[0], value[1]) : formatter(value);\n    }\n\n    if (isMinMax) {\n      if (value[0] === dataBound[0]) {\n        return edgeSymbols[0] + ' ' + textValue[1];\n      } else if (value[1] === dataBound[1]) {\n        return edgeSymbols[1] + ' ' + textValue[0];\n      } else {\n        return textValue[0] + ' - ' + textValue[1];\n      }\n    } else {\n      // Format single value (includes category case).\n      return textValue;\n    }\n\n    function toFixed(val) {\n      return val === dataBound[0] ? 'min' : val === dataBound[1] ? 'max' : (+val).toFixed(Math.min(precision, 20));\n    }\n  },\n\n  /**\n   * @protected\n   */\n  resetExtent: function () {\n    var thisOption = this.option; // Can not calculate data extent by data here.\n    // Because series and data may be modified in processing stage.\n    // So we do not support the feature \"auto min/max\".\n\n    var extent = asc([thisOption.min, thisOption.max]);\n    this._dataExtent = extent;\n  },\n\n  /**\n   * @public\n   * @param {module:echarts/data/List} list\n   * @return {string} Concrete dimention. If return null/undefined,\n   *                  no dimension used.\n   */\n  getDataDimension: function (list) {\n    var optDim = this.option.dimension;\n    var listDimensions = list.dimensions;\n\n    if (optDim == null && !listDimensions.length) {\n      return;\n    }\n\n    if (optDim != null) {\n      return list.getDimension(optDim);\n    }\n\n    var dimNames = list.dimensions;\n\n    for (var i = dimNames.length - 1; i >= 0; i--) {\n      var dimName = dimNames[i];\n      var dimInfo = list.getDimensionInfo(dimName);\n\n      if (!dimInfo.isCalculationCoord) {\n        return dimName;\n      }\n    }\n  },\n\n  /**\n   * @public\n   * @override\n   */\n  getExtent: function () {\n    return this._dataExtent.slice();\n  },\n\n  /**\n   * @protected\n   */\n  completeVisualOption: function () {\n    var ecModel = this.ecModel;\n    var thisOption = this.option;\n    var base = {\n      inRange: thisOption.inRange,\n      outOfRange: thisOption.outOfRange\n    };\n    var target = thisOption.target || (thisOption.target = {});\n    var controller = thisOption.controller || (thisOption.controller = {});\n    zrUtil.merge(target, base); // Do not override\n\n    zrUtil.merge(controller, base); // Do not override\n\n    var isCategory = this.isCategory();\n    completeSingle.call(this, target);\n    completeSingle.call(this, controller);\n    completeInactive.call(this, target, 'inRange', 'outOfRange'); // completeInactive.call(this, target, 'outOfRange', 'inRange');\n\n    completeController.call(this, controller);\n\n    function completeSingle(base) {\n      // Compatible with ec2 dataRange.color.\n      // The mapping order of dataRange.color is: [high value, ..., low value]\n      // whereas inRange.color and outOfRange.color is [low value, ..., high value]\n      // Notice: ec2 has no inverse.\n      if (isArray(thisOption.color) // If there has been inRange: {symbol: ...}, adding color is a mistake.\n      // So adding color only when no inRange defined.\n      && !base.inRange) {\n        base.inRange = {\n          color: thisOption.color.slice().reverse()\n        };\n      } // Compatible with previous logic, always give a defautl color, otherwise\n      // simple config with no inRange and outOfRange will not work.\n      // Originally we use visualMap.color as the default color, but setOption at\n      // the second time the default color will be erased. So we change to use\n      // constant DEFAULT_COLOR.\n      // If user do not want the defualt color, set inRange: {color: null}.\n\n\n      base.inRange = base.inRange || {\n        color: ecModel.get('gradientColor')\n      }; // If using shortcut like: {inRange: 'symbol'}, complete default value.\n\n      each(this.stateList, function (state) {\n        var visualType = base[state];\n\n        if (zrUtil.isString(visualType)) {\n          var defa = visualDefault.get(visualType, 'active', isCategory);\n\n          if (defa) {\n            base[state] = {};\n            base[state][visualType] = defa;\n          } else {\n            // Mark as not specified.\n            delete base[state];\n          }\n        }\n      }, this);\n    }\n\n    function completeInactive(base, stateExist, stateAbsent) {\n      var optExist = base[stateExist];\n      var optAbsent = base[stateAbsent];\n\n      if (optExist && !optAbsent) {\n        optAbsent = base[stateAbsent] = {};\n        each(optExist, function (visualData, visualType) {\n          if (!VisualMapping.isValidType(visualType)) {\n            return;\n          }\n\n          var defa = visualDefault.get(visualType, 'inactive', isCategory);\n\n          if (defa != null) {\n            optAbsent[visualType] = defa; // Compatibable with ec2:\n            // Only inactive color to rgba(0,0,0,0) can not\n            // make label transparent, so use opacity also.\n\n            if (visualType === 'color' && !optAbsent.hasOwnProperty('opacity') && !optAbsent.hasOwnProperty('colorAlpha')) {\n              optAbsent.opacity = [0, 0];\n            }\n          }\n        });\n      }\n    }\n\n    function completeController(controller) {\n      var symbolExists = (controller.inRange || {}).symbol || (controller.outOfRange || {}).symbol;\n      var symbolSizeExists = (controller.inRange || {}).symbolSize || (controller.outOfRange || {}).symbolSize;\n      var inactiveColor = this.get('inactiveColor');\n      each(this.stateList, function (state) {\n        var itemSize = this.itemSize;\n        var visuals = controller[state]; // Set inactive color for controller if no other color\n        // attr (like colorAlpha) specified.\n\n        if (!visuals) {\n          visuals = controller[state] = {\n            color: isCategory ? inactiveColor : [inactiveColor]\n          };\n        } // Consistent symbol and symbolSize if not specified.\n\n\n        if (visuals.symbol == null) {\n          visuals.symbol = symbolExists && zrUtil.clone(symbolExists) || (isCategory ? 'roundRect' : ['roundRect']);\n        }\n\n        if (visuals.symbolSize == null) {\n          visuals.symbolSize = symbolSizeExists && zrUtil.clone(symbolSizeExists) || (isCategory ? itemSize[0] : [itemSize[0], itemSize[0]]);\n        } // Filter square and none.\n\n\n        visuals.symbol = mapVisual(visuals.symbol, function (symbol) {\n          return symbol === 'none' || symbol === 'square' ? 'roundRect' : symbol;\n        }); // Normalize symbolSize\n\n        var symbolSize = visuals.symbolSize;\n\n        if (symbolSize != null) {\n          var max = -Infinity; // symbolSize can be object when categories defined.\n\n          eachVisual(symbolSize, function (value) {\n            value > max && (max = value);\n          });\n          visuals.symbolSize = mapVisual(symbolSize, function (value) {\n            return linearMap(value, [0, max], [0, itemSize[0]], true);\n          });\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  resetItemSize: function () {\n    this.itemSize = [parseFloat(this.get('itemWidth')), parseFloat(this.get('itemHeight'))];\n  },\n\n  /**\n   * @public\n   */\n  isCategory: function () {\n    return !!this.option.categories;\n  },\n\n  /**\n   * @public\n   * @abstract\n   */\n  setSelected: noop,\n\n  /**\n   * @public\n   * @abstract\n   * @param {*|module:echarts/data/List} valueOrData\n   * @param {number} dataIndex\n   * @return {string} state See this.stateList\n   */\n  getValueState: noop,\n\n  /**\n   * FIXME\n   * Do not publish to thirt-part-dev temporarily\n   * util the interface is stable. (Should it return\n   * a function but not visual meta?)\n   *\n   * @pubilc\n   * @abstract\n   * @param {Function} getColorVisual\n   *        params: value, valueState\n   *        return: color\n   * @return {Object} visualMeta\n   *        should includes {stops, outerColors}\n   *        outerColor means [colorBeyondMinValue, colorBeyondMaxValue]\n   */\n  getVisualMeta: noop\n});\nvar _default = VisualMapModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction dataToCoordSize(dataSize, dataItem) {\n  // dataItem is necessary in log axis.\n  return zrUtil.map(['Radius', 'Angle'], function (dim, dimIdx) {\n    var axis = this['get' + dim + 'Axis']();\n    var val = dataItem[dimIdx];\n    var halfSize = dataSize[dimIdx] / 2;\n    var method = 'dataTo' + dim;\n    var result = axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis[method](val - halfSize) - axis[method](val + halfSize));\n\n    if (dim === 'Angle') {\n      result = result * Math.PI / 180;\n    }\n\n    return result;\n  }, this);\n}\n\nfunction _default(coordSys) {\n  var radiusAxis = coordSys.getRadiusAxis();\n  var angleAxis = coordSys.getAngleAxis();\n  var radius = radiusAxis.getExtent();\n  radius[0] > radius[1] && radius.reverse();\n  return {\n    coordSys: {\n      type: 'polar',\n      cx: coordSys.cx,\n      cy: coordSys.cy,\n      r: radius[1],\n      r0: radius[0]\n    },\n    api: {\n      coord: zrUtil.bind(function (data) {\n        var radius = radiusAxis.dataToRadius(data[0]);\n        var angle = angleAxis.dataToAngle(data[1]);\n        var coord = coordSys.coordToPoint([radius, angle]);\n        coord.push(radius, angle * Math.PI / 180);\n        return coord;\n      }),\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Calculate slider move result.\n * Usage:\n * (1) If both handle0 and handle1 are needed to be moved, set minSpan the same as\n * maxSpan and the same as `Math.abs(handleEnd[1] - handleEnds[0])`.\n * (2) If handle0 is forbidden to cross handle1, set minSpan as `0`.\n *\n * @param {number} delta Move length.\n * @param {Array.<number>} handleEnds handleEnds[0] can be bigger then handleEnds[1].\n *              handleEnds will be modified in this method.\n * @param {Array.<number>} extent handleEnds is restricted by extent.\n *              extent[0] should less or equals than extent[1].\n * @param {number|string} handleIndex Can be 'all', means that both move the two handleEnds,\n *              where the input minSpan and maxSpan will not work.\n * @param {number} [minSpan] The range of dataZoom can not be smaller than that.\n *              If not set, handle0 and cross handle1. If set as a non-negative\n *              number (including `0`), handles will push each other when reaching\n *              the minSpan.\n * @param {number} [maxSpan] The range of dataZoom can not be larger than that.\n * @return {Array.<number>} The input handleEnds.\n */\nfunction _default(delta, handleEnds, extent, handleIndex, minSpan, maxSpan) {\n  // Normalize firstly.\n  handleEnds[0] = restrict(handleEnds[0], extent);\n  handleEnds[1] = restrict(handleEnds[1], extent);\n  delta = delta || 0;\n  var extentSpan = extent[1] - extent[0]; // Notice maxSpan and minSpan can be null/undefined.\n\n  if (minSpan != null) {\n    minSpan = restrict(minSpan, [0, extentSpan]);\n  }\n\n  if (maxSpan != null) {\n    maxSpan = Math.max(maxSpan, minSpan != null ? minSpan : 0);\n  }\n\n  if (handleIndex === 'all') {\n    minSpan = maxSpan = Math.abs(handleEnds[1] - handleEnds[0]);\n    handleIndex = 0;\n  }\n\n  var originalDistSign = getSpanSign(handleEnds, handleIndex);\n  handleEnds[handleIndex] += delta; // Restrict in extent.\n\n  var extentMinSpan = minSpan || 0;\n  var realExtent = extent.slice();\n  originalDistSign.sign < 0 ? realExtent[0] += extentMinSpan : realExtent[1] -= extentMinSpan;\n  handleEnds[handleIndex] = restrict(handleEnds[handleIndex], realExtent); // Expand span.\n\n  var currDistSign = getSpanSign(handleEnds, handleIndex);\n\n  if (minSpan != null && (currDistSign.sign !== originalDistSign.sign || currDistSign.span < minSpan)) {\n    // If minSpan exists, 'cross' is forbinden.\n    handleEnds[1 - handleIndex] = handleEnds[handleIndex] + originalDistSign.sign * minSpan;\n  } // Shrink span.\n\n\n  var currDistSign = getSpanSign(handleEnds, handleIndex);\n\n  if (maxSpan != null && currDistSign.span > maxSpan) {\n    handleEnds[1 - handleIndex] = handleEnds[handleIndex] + currDistSign.sign * maxSpan;\n  }\n\n  return handleEnds;\n}\n\nfunction getSpanSign(handleEnds, handleIndex) {\n  var dist = handleEnds[handleIndex] - handleEnds[1 - handleIndex]; // If `handleEnds[0] === handleEnds[1]`, always believe that handleEnd[0]\n  // is at left of handleEnds[1] for non-cross case.\n\n  return {\n    span: Math.abs(dist),\n    sign: dist > 0 ? -1 : dist < 0 ? 1 : handleIndex ? -1 : 1\n  };\n}\n\nfunction restrict(value, extend) {\n  return Math.min(extend[1], Math.max(extend[0], value));\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./line/LineSeries\");\n\nrequire(\"./line/LineView\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar layoutPoints = require(\"../layout/points\");\n\nvar dataSample = require(\"../processor/dataSample\");\n\nrequire(\"../component/gridSimple\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// In case developer forget to include grid component\necharts.registerVisual(visualSymbol('line', 'circle', 'line'));\necharts.registerLayout(layoutPoints('line')); // Down sample after filter\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, dataSample('line'));","var echarts = require(\"../echarts\");\n\nrequire(\"./tree/TreeSeries\");\n\nrequire(\"./tree/TreeView\");\n\nrequire(\"./tree/treeAction\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar treeLayout = require(\"./tree/treeLayout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerVisual(visualSymbol('tree', 'circle'));\necharts.registerLayout(treeLayout);","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar Axis2D = function (dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   */\n\n  this.position = position || 'bottom';\n};\n\nAxis2D.prototype = {\n  constructor: Axis2D,\n\n  /**\n   * Index of axis, can be used as key\n   */\n  index: 0,\n\n  /**\n   * Implemented in <module:echarts/coord/cartesian/Grid>.\n   * @return {Array.<module:echarts/coord/cartesian/Axis2D>}\n   *         If not on zero of other axis, return null/undefined.\n   *         If no axes, return an empty array.\n   */\n  getAxesOnZeroOf: null,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/cartesian/AxisModel}\n   */\n  model: null,\n  isHorizontal: function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * Each item cooresponds to this.getExtent(), which\n   * means globalExtent[0] may greater than globalExtent[1],\n   * unless `asc` is input.\n   *\n   * @param {boolean} [asc]\n   * @return {Array.<number>}\n   */\n  getGlobalExtent: function (asc) {\n    var ret = this.getExtent();\n    ret[0] = this.toGlobalCoord(ret[0]);\n    ret[1] = this.toGlobalCoord(ret[1]);\n    asc && ret[0] > ret[1] && ret.reverse();\n    return ret;\n  },\n  getOtherAxis: function () {\n    this.grid.getOtherAxis();\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n  },\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var localCoord = axis.toLocalCoord(80);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toLocalCoord: null,\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var globalCoord = axis.toLocalCoord(40);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toGlobalCoord: null\n};\nzrUtil.inherits(Axis2D, Axis);\nvar _default = Axis2D;\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar isTypedArray = _util.isTypedArray;\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassCheck = _clazz.enableClassCheck;\n\nvar _sourceType = require(\"./helper/sourceType\");\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SERIES_LAYOUT_BY_COLUMN = _sourceType.SERIES_LAYOUT_BY_COLUMN;\nvar SOURCE_FORMAT_UNKNOWN = _sourceType.SOURCE_FORMAT_UNKNOWN;\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SOURCE_FORMAT_KEYED_COLUMNS = _sourceType.SOURCE_FORMAT_KEYED_COLUMNS;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * [sourceFormat]\n *\n * + \"original\":\n * This format is only used in series.data, where\n * itemStyle can be specified in data item.\n *\n * + \"arrayRows\":\n * [\n *     ['product', 'score', 'amount'],\n *     ['Matcha Latte', 89.3, 95.8],\n *     ['Milk Tea', 92.1, 89.4],\n *     ['Cheese Cocoa', 94.4, 91.2],\n *     ['Walnut Brownie', 85.4, 76.9]\n * ]\n *\n * + \"objectRows\":\n * [\n *     {product: 'Matcha Latte', score: 89.3, amount: 95.8},\n *     {product: 'Milk Tea', score: 92.1, amount: 89.4},\n *     {product: 'Cheese Cocoa', score: 94.4, amount: 91.2},\n *     {product: 'Walnut Brownie', score: 85.4, amount: 76.9}\n * ]\n *\n * + \"keyedColumns\":\n * {\n *     'product': ['Matcha Latte', 'Milk Tea', 'Cheese Cocoa', 'Walnut Brownie'],\n *     'count': [823, 235, 1042, 988],\n *     'score': [95.8, 81.4, 91.2, 76.9]\n * }\n *\n * + \"typedArray\"\n *\n * + \"unknown\"\n */\n\n/**\n * @constructor\n * @param {Object} fields\n * @param {string} fields.sourceFormat\n * @param {Array|Object} fields.fromDataset\n * @param {Array|Object} [fields.data]\n * @param {string} [seriesLayoutBy='column']\n * @param {Array.<Object|string>} [dimensionsDefine]\n * @param {Objet|HashMap} [encodeDefine]\n * @param {number} [startIndex=0]\n * @param {number} [dimensionsDetectCount]\n */\nfunction Source(fields) {\n  /**\n   * @type {boolean}\n   */\n  this.fromDataset = fields.fromDataset;\n  /**\n   * Not null/undefined.\n   * @type {Array|Object}\n   */\n\n  this.data = fields.data || (fields.sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS ? {} : []);\n  /**\n   * See also \"detectSourceFormat\".\n   * Not null/undefined.\n   * @type {string}\n   */\n\n  this.sourceFormat = fields.sourceFormat || SOURCE_FORMAT_UNKNOWN;\n  /**\n   * 'row' or 'column'\n   * Not null/undefined.\n   * @type {string} seriesLayoutBy\n   */\n\n  this.seriesLayoutBy = fields.seriesLayoutBy || SERIES_LAYOUT_BY_COLUMN;\n  /**\n   * dimensions definition in option.\n   * can be null/undefined.\n   * @type {Array.<Object|string>}\n   */\n\n  this.dimensionsDefine = fields.dimensionsDefine;\n  /**\n   * encode definition in option.\n   * can be null/undefined.\n   * @type {Objet|HashMap}\n   */\n\n  this.encodeDefine = fields.encodeDefine && createHashMap(fields.encodeDefine);\n  /**\n   * Not null/undefined, uint.\n   * @type {number}\n   */\n\n  this.startIndex = fields.startIndex || 0;\n  /**\n   * Can be null/undefined (when unknown), uint.\n   * @type {number}\n   */\n\n  this.dimensionsDetectCount = fields.dimensionsDetectCount;\n}\n/**\n * Wrap original series data for some compatibility cases.\n */\n\n\nSource.seriesDataToSource = function (data) {\n  return new Source({\n    data: data,\n    sourceFormat: isTypedArray(data) ? SOURCE_FORMAT_TYPED_ARRAY : SOURCE_FORMAT_ORIGINAL,\n    fromDataset: false\n  });\n};\n\nenableClassCheck(Source);\nvar _default = Source;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\n\nfunction _default(ecModel) {\n  var groupResult = groupSeriesByAxis(ecModel);\n  each(groupResult, function (groupItem) {\n    var seriesModels = groupItem.seriesModels;\n\n    if (!seriesModels.length) {\n      return;\n    }\n\n    calculateBase(groupItem);\n    each(seriesModels, function (seriesModel, idx) {\n      layoutSingleSeries(seriesModel, groupItem.boxOffsetList[idx], groupItem.boxWidthList[idx]);\n    });\n  });\n}\n/**\n * Group series by axis.\n */\n\n\nfunction groupSeriesByAxis(ecModel) {\n  var result = [];\n  var axisList = [];\n  ecModel.eachSeriesByType('boxplot', function (seriesModel) {\n    var baseAxis = seriesModel.getBaseAxis();\n    var idx = zrUtil.indexOf(axisList, baseAxis);\n\n    if (idx < 0) {\n      idx = axisList.length;\n      axisList[idx] = baseAxis;\n      result[idx] = {\n        axis: baseAxis,\n        seriesModels: []\n      };\n    }\n\n    result[idx].seriesModels.push(seriesModel);\n  });\n  return result;\n}\n/**\n * Calculate offset and box width for each series.\n */\n\n\nfunction calculateBase(groupItem) {\n  var extent;\n  var baseAxis = groupItem.axis;\n  var seriesModels = groupItem.seriesModels;\n  var seriesCount = seriesModels.length;\n  var boxWidthList = groupItem.boxWidthList = [];\n  var boxOffsetList = groupItem.boxOffsetList = [];\n  var boundList = [];\n  var bandWidth;\n\n  if (baseAxis.type === 'category') {\n    bandWidth = baseAxis.getBandWidth();\n  } else {\n    var maxDataCount = 0;\n    each(seriesModels, function (seriesModel) {\n      maxDataCount = Math.max(maxDataCount, seriesModel.getData().count());\n    });\n    extent = baseAxis.getExtent(), Math.abs(extent[1] - extent[0]) / maxDataCount;\n  }\n\n  each(seriesModels, function (seriesModel) {\n    var boxWidthBound = seriesModel.get('boxWidth');\n\n    if (!zrUtil.isArray(boxWidthBound)) {\n      boxWidthBound = [boxWidthBound, boxWidthBound];\n    }\n\n    boundList.push([parsePercent(boxWidthBound[0], bandWidth) || 0, parsePercent(boxWidthBound[1], bandWidth) || 0]);\n  });\n  var availableWidth = bandWidth * 0.8 - 2;\n  var boxGap = availableWidth / seriesCount * 0.3;\n  var boxWidth = (availableWidth - boxGap * (seriesCount - 1)) / seriesCount;\n  var base = boxWidth / 2 - availableWidth / 2;\n  each(seriesModels, function (seriesModel, idx) {\n    boxOffsetList.push(base);\n    base += boxGap + boxWidth;\n    boxWidthList.push(Math.min(Math.max(boxWidth, boundList[idx][0]), boundList[idx][1]));\n  });\n}\n/**\n * Calculate points location for each series.\n */\n\n\nfunction layoutSingleSeries(seriesModel, offset, boxWidth) {\n  var coordSys = seriesModel.coordinateSystem;\n  var data = seriesModel.getData();\n  var halfWidth = boxWidth / 2;\n  var cDimIdx = seriesModel.get('layout') === 'horizontal' ? 0 : 1;\n  var vDimIdx = 1 - cDimIdx;\n  var coordDims = ['x', 'y'];\n  var cDim = data.mapDimension(coordDims[cDimIdx]);\n  var vDims = data.mapDimension(coordDims[vDimIdx], true);\n\n  if (cDim == null || vDims.length < 5) {\n    return;\n  }\n\n  for (var dataIndex = 0; dataIndex < data.count(); dataIndex++) {\n    var axisDimVal = data.get(cDim, dataIndex);\n    var median = getPoint(axisDimVal, vDims[2], dataIndex);\n    var end1 = getPoint(axisDimVal, vDims[0], dataIndex);\n    var end2 = getPoint(axisDimVal, vDims[1], dataIndex);\n    var end4 = getPoint(axisDimVal, vDims[3], dataIndex);\n    var end5 = getPoint(axisDimVal, vDims[4], dataIndex);\n    var ends = [];\n    addBodyEnd(ends, end2, 0);\n    addBodyEnd(ends, end4, 1);\n    ends.push(end1, end2, end5, end4);\n    layEndLine(ends, end1);\n    layEndLine(ends, end5);\n    layEndLine(ends, median);\n    data.setItemLayout(dataIndex, {\n      initBaseline: median[vDimIdx],\n      ends: ends\n    });\n  }\n\n  function getPoint(axisDimVal, dimIdx, dataIndex) {\n    var val = data.get(dimIdx, dataIndex);\n    var p = [];\n    p[cDimIdx] = axisDimVal;\n    p[vDimIdx] = val;\n    var point;\n\n    if (isNaN(axisDimVal) || isNaN(val)) {\n      point = [NaN, NaN];\n    } else {\n      point = coordSys.dataToPoint(p);\n      point[cDimIdx] += offset;\n    }\n\n    return point;\n  }\n\n  function addBodyEnd(ends, point, start) {\n    var point1 = point.slice();\n    var point2 = point.slice();\n    point1[cDimIdx] += halfWidth;\n    point2[cDimIdx] -= halfWidth;\n    start ? ends.push(point1, point2) : ends.push(point2, point1);\n  }\n\n  function layEndLine(ends, endCenter) {\n    var from = endCenter.slice();\n    var to = endCenter.slice();\n    from[cDimIdx] -= halfWidth;\n    to[cDimIdx] += halfWidth;\n    ends.push(from, to);\n  }\n}\n\nmodule.exports = _default;","var _config = require(\"./config\");\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar util = require(\"./core/util\");\n\nvar log = require(\"./core/log\");\n\nvar BoundingRect = require(\"./core/BoundingRect\");\n\nvar timsort = require(\"./core/timsort\");\n\nvar Layer = require(\"./Layer\");\n\nvar requestAnimationFrame = require(\"./animation/requestAnimationFrame\");\n\nvar Image = require(\"./graphic/Image\");\n\nvar env = require(\"./core/env\");\n\nvar HOVER_LAYER_ZLEVEL = 1e5;\nvar CANVAS_ZLEVEL = 314159;\nvar EL_AFTER_INCREMENTAL_INC = 0.01;\nvar INCREMENTAL_INC = 0.001;\n\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction isLayerValid(layer) {\n  if (!layer) {\n    return false;\n  }\n\n  if (layer.__builtin__) {\n    return true;\n  }\n\n  if (typeof layer.resize !== 'function' || typeof layer.refresh !== 'function') {\n    return false;\n  }\n\n  return true;\n}\n\nvar tmpRect = new BoundingRect(0, 0, 0, 0);\nvar viewRect = new BoundingRect(0, 0, 0, 0);\n\nfunction isDisplayableCulled(el, width, height) {\n  tmpRect.copy(el.getBoundingRect());\n\n  if (el.transform) {\n    tmpRect.applyTransform(el.transform);\n  }\n\n  viewRect.width = width;\n  viewRect.height = height;\n  return !tmpRect.intersect(viewRect);\n}\n\nfunction isClipPathChanged(clipPaths, prevClipPaths) {\n  if (clipPaths == prevClipPaths) {\n    // Can both be null or undefined\n    return false;\n  }\n\n  if (!clipPaths || !prevClipPaths || clipPaths.length !== prevClipPaths.length) {\n    return true;\n  }\n\n  for (var i = 0; i < clipPaths.length; i++) {\n    if (clipPaths[i] !== prevClipPaths[i]) {\n      return true;\n    }\n  }\n}\n\nfunction doClip(clipPaths, ctx) {\n  for (var i = 0; i < clipPaths.length; i++) {\n    var clipPath = clipPaths[i];\n    clipPath.setTransform(ctx);\n    ctx.beginPath();\n    clipPath.buildPath(ctx, clipPath.shape);\n    ctx.clip(); // Transform back\n\n    clipPath.restoreTransform(ctx);\n  }\n}\n\nfunction createRoot(width, height) {\n  var domRoot = document.createElement('div'); // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n  domRoot.style.cssText = ['position:relative', 'overflow:hidden', 'width:' + width + 'px', 'height:' + height + 'px', 'padding:0', 'margin:0', 'border-width:0'].join(';') + ';';\n  return domRoot;\n}\n/**\n * @alias module:zrender/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar Painter = function (root, storage, opts) {\n  this.type = 'canvas'; // In node environment using node-canvas\n\n  var singleCanvas = !root.nodeName // In node ?\n  || root.nodeName.toUpperCase() === 'CANVAS';\n  this._opts = opts = util.extend({}, opts || {});\n  /**\n   * @type {number}\n   */\n\n  this.dpr = opts.devicePixelRatio || devicePixelRatio;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._singleCanvas = singleCanvas;\n  /**\n   * 绘图容器\n   * @type {HTMLElement}\n   */\n\n  this.root = root;\n  var rootStyle = root.style;\n\n  if (rootStyle) {\n    rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n    rootStyle['-webkit-user-select'] = rootStyle['user-select'] = rootStyle['-webkit-touch-callout'] = 'none';\n    root.innerHTML = '';\n  }\n  /**\n   * @type {module:zrender/Storage}\n   */\n\n\n  this.storage = storage;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  var zlevelList = this._zlevelList = [];\n  /**\n   * @type {Object.<string, module:zrender/Layer>}\n   * @private\n   */\n\n  var layers = this._layers = {};\n  /**\n   * @type {Object.<string, Object>}\n   * @private\n   */\n\n  this._layerConfig = {};\n  /**\n   * zrender will do compositing when root is a canvas and have multiple zlevels.\n   */\n\n  this._needsManuallyCompositing = false;\n\n  if (!singleCanvas) {\n    this._width = this._getSize(0);\n    this._height = this._getSize(1);\n    var domRoot = this._domRoot = createRoot(this._width, this._height);\n    root.appendChild(domRoot);\n  } else {\n    var width = root.width;\n    var height = root.height;\n\n    if (opts.width != null) {\n      width = opts.width;\n    }\n\n    if (opts.height != null) {\n      height = opts.height;\n    }\n\n    this.dpr = opts.devicePixelRatio || 1; // Use canvas width and height directly\n\n    root.width = width * this.dpr;\n    root.height = height * this.dpr;\n    this._width = width;\n    this._height = height; // Create layer if only one given canvas\n    // Device can be specified to create a high dpi image.\n\n    var mainLayer = new Layer(root, this, this.dpr);\n    mainLayer.__builtin__ = true;\n    mainLayer.initContext(); // FIXME Use canvas width and height\n    // mainLayer.resize(width, height);\n\n    layers[CANVAS_ZLEVEL] = mainLayer;\n    mainLayer.zlevel = CANVAS_ZLEVEL; // Not use common zlevel.\n\n    zlevelList.push(CANVAS_ZLEVEL);\n    this._domRoot = root;\n  }\n  /**\n   * @type {module:zrender/Layer}\n   * @private\n   */\n\n\n  this._hoverlayer = null;\n  this._hoverElements = [];\n};\n\nPainter.prototype = {\n  constructor: Painter,\n  getType: function () {\n    return 'canvas';\n  },\n\n  /**\n   * If painter use a single canvas\n   * @return {boolean}\n   */\n  isSingleCanvas: function () {\n    return this._singleCanvas;\n  },\n\n  /**\n   * @return {HTMLDivElement}\n   */\n  getViewportRoot: function () {\n    return this._domRoot;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n\n  /**\n   * 刷新\n   * @param {boolean} [paintAll=false] 强制绘制所有displayable\n   */\n  refresh: function (paintAll) {\n    var list = this.storage.getDisplayList(true);\n    var zlevelList = this._zlevelList;\n    this._redrawId = Math.random();\n\n    this._paintList(list, paintAll, this._redrawId); // Paint custum layers\n\n\n    for (var i = 0; i < zlevelList.length; i++) {\n      var z = zlevelList[i];\n      var layer = this._layers[z];\n\n      if (!layer.__builtin__ && layer.refresh) {\n        var clearColor = i === 0 ? this._backgroundColor : null;\n        layer.refresh(clearColor);\n      }\n    }\n\n    this.refreshHover();\n    return this;\n  },\n  addHover: function (el, hoverStyle) {\n    if (el.__hoverMir) {\n      return;\n    }\n\n    var elMirror = new el.constructor({\n      style: el.style,\n      shape: el.shape\n    });\n    elMirror.__from = el;\n    el.__hoverMir = elMirror;\n    elMirror.setStyle(hoverStyle);\n\n    this._hoverElements.push(elMirror);\n  },\n  removeHover: function (el) {\n    var elMirror = el.__hoverMir;\n    var hoverElements = this._hoverElements;\n    var idx = util.indexOf(hoverElements, elMirror);\n\n    if (idx >= 0) {\n      hoverElements.splice(idx, 1);\n    }\n\n    el.__hoverMir = null;\n  },\n  clearHover: function (el) {\n    var hoverElements = this._hoverElements;\n\n    for (var i = 0; i < hoverElements.length; i++) {\n      var from = hoverElements[i].__from;\n\n      if (from) {\n        from.__hoverMir = null;\n      }\n    }\n\n    hoverElements.length = 0;\n  },\n  refreshHover: function () {\n    var hoverElements = this._hoverElements;\n    var len = hoverElements.length;\n    var hoverLayer = this._hoverlayer;\n    hoverLayer && hoverLayer.clear();\n\n    if (!len) {\n      return;\n    }\n\n    timsort(hoverElements, this.storage.displayableSortFunc); // Use a extream large zlevel\n    // FIXME?\n\n    if (!hoverLayer) {\n      hoverLayer = this._hoverlayer = this.getLayer(HOVER_LAYER_ZLEVEL);\n    }\n\n    var scope = {};\n    hoverLayer.ctx.save();\n\n    for (var i = 0; i < len;) {\n      var el = hoverElements[i];\n      var originalEl = el.__from; // Original el is removed\n      // PENDING\n\n      if (!(originalEl && originalEl.__zr)) {\n        hoverElements.splice(i, 1);\n        originalEl.__hoverMir = null;\n        len--;\n        continue;\n      }\n\n      i++; // Use transform\n      // FIXME style and shape ?\n\n      if (!originalEl.invisible) {\n        el.transform = originalEl.transform;\n        el.invTransform = originalEl.invTransform;\n        el.__clipPaths = originalEl.__clipPaths; // el.\n\n        this._doPaintEl(el, hoverLayer, true, scope);\n      }\n    }\n\n    hoverLayer.ctx.restore();\n  },\n  getHoverLayer: function () {\n    return this.getLayer(HOVER_LAYER_ZLEVEL);\n  },\n  _paintList: function (list, paintAll, redrawId) {\n    if (this._redrawId !== redrawId) {\n      return;\n    }\n\n    paintAll = paintAll || false;\n\n    this._updateLayerStatus(list);\n\n    var finished = this._doPaintList(list, paintAll);\n\n    if (this._needsManuallyCompositing) {\n      this._compositeManually();\n    }\n\n    if (!finished) {\n      var self = this;\n      requestAnimationFrame(function () {\n        self._paintList(list, paintAll, redrawId);\n      });\n    }\n  },\n  _compositeManually: function () {\n    var ctx = this.getLayer(CANVAS_ZLEVEL).ctx;\n    var width = this._domRoot.width;\n    var height = this._domRoot.height;\n    ctx.clearRect(0, 0, width, height); // PENDING, If only builtin layer?\n\n    this.eachBuiltinLayer(function (layer) {\n      if (layer.virtual) {\n        ctx.drawImage(layer.dom, 0, 0, width, height);\n      }\n    });\n  },\n  _doPaintList: function (list, paintAll) {\n    var layerList = [];\n\n    for (var zi = 0; zi < this._zlevelList.length; zi++) {\n      var zlevel = this._zlevelList[zi];\n      var layer = this._layers[zlevel];\n\n      if (layer.__builtin__ && layer !== this._hoverlayer && (layer.__dirty || paintAll)) {\n        layerList.push(layer);\n      }\n    }\n\n    var finished = true;\n\n    for (var k = 0; k < layerList.length; k++) {\n      var layer = layerList[k];\n      var ctx = layer.ctx;\n      var scope = {};\n      ctx.save();\n      var start = paintAll ? layer.__startIndex : layer.__drawIndex;\n      var useTimer = !paintAll && layer.incremental && Date.now;\n      var startTime = useTimer && Date.now();\n      var clearColor = layer.zlevel === this._zlevelList[0] ? this._backgroundColor : null; // All elements in this layer are cleared.\n\n      if (layer.__startIndex === layer.__endIndex) {\n        layer.clear(false, clearColor);\n      } else if (start === layer.__startIndex) {\n        var firstEl = list[start];\n\n        if (!firstEl.incremental || !firstEl.notClear || paintAll) {\n          layer.clear(false, clearColor);\n        }\n      }\n\n      if (start === -1) {\n        console.error('For some unknown reason. drawIndex is -1');\n        start = layer.__startIndex;\n      }\n\n      for (var i = start; i < layer.__endIndex; i++) {\n        var el = list[i];\n\n        this._doPaintEl(el, layer, paintAll, scope);\n\n        el.__dirty = false;\n\n        if (useTimer) {\n          // Date.now can be executed in 13,025,305 ops/second.\n          var dTime = Date.now() - startTime; // Give 15 millisecond to draw.\n          // The rest elements will be drawn in the next frame.\n\n          if (dTime > 15) {\n            break;\n          }\n        }\n      }\n\n      layer.__drawIndex = i;\n\n      if (layer.__drawIndex < layer.__endIndex) {\n        finished = false;\n      }\n\n      if (scope.prevElClipPaths) {\n        // Needs restore the state. If last drawn element is in the clipping area.\n        ctx.restore();\n      }\n\n      ctx.restore();\n    }\n\n    if (env.wxa) {\n      // Flush for weixin application\n      util.each(this._layers, function (layer) {\n        if (layer && layer.ctx && layer.ctx.draw) {\n          layer.ctx.draw();\n        }\n      });\n    }\n\n    return finished;\n  },\n  _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n    var ctx = currentLayer.ctx;\n    var m = el.transform;\n\n    if ((currentLayer.__dirty || forcePaint) && // Ignore invisible element\n    !el.invisible // Ignore transparent element\n    && el.style.opacity !== 0 // Ignore scale 0 element, in some environment like node-canvas\n    // Draw a scale 0 element can cause all following draw wrong\n    // And setTransform with scale 0 will cause set back transform failed.\n    && !(m && !m[0] && !m[3]) // Ignore culled element\n    && !(el.culling && isDisplayableCulled(el, this._width, this._height))) {\n      var clipPaths = el.__clipPaths; // Optimize when clipping on group with several elements\n\n      if (!scope.prevElClipPaths || isClipPathChanged(clipPaths, scope.prevElClipPaths)) {\n        // If has previous clipping state, restore from it\n        if (scope.prevElClipPaths) {\n          currentLayer.ctx.restore();\n          scope.prevElClipPaths = null; // Reset prevEl since context has been restored\n\n          scope.prevEl = null;\n        } // New clipping state\n\n\n        if (clipPaths) {\n          ctx.save();\n          doClip(clipPaths, ctx);\n          scope.prevElClipPaths = clipPaths;\n        }\n      }\n\n      el.beforeBrush && el.beforeBrush(ctx);\n      el.brush(ctx, scope.prevEl || null);\n      scope.prevEl = el;\n      el.afterBrush && el.afterBrush(ctx);\n    }\n  },\n\n  /**\n   * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n   * @param {number} zlevel\n   * @param {boolean} virtual Virtual layer will not be inserted into dom.\n   * @return {module:zrender/Layer}\n   */\n  getLayer: function (zlevel, virtual) {\n    if (this._singleCanvas && !this._needsManuallyCompositing) {\n      zlevel = CANVAS_ZLEVEL;\n    }\n\n    var layer = this._layers[zlevel];\n\n    if (!layer) {\n      // Create a new layer\n      layer = new Layer('zr_' + zlevel, this, this.dpr);\n      layer.zlevel = zlevel;\n      layer.__builtin__ = true;\n\n      if (this._layerConfig[zlevel]) {\n        util.merge(layer, this._layerConfig[zlevel], true);\n      }\n\n      if (virtual) {\n        layer.virtual = virtual;\n      }\n\n      this.insertLayer(zlevel, layer); // Context is created after dom inserted to document\n      // Or excanvas will get 0px clientWidth and clientHeight\n\n      layer.initContext();\n    }\n\n    return layer;\n  },\n  insertLayer: function (zlevel, layer) {\n    var layersMap = this._layers;\n    var zlevelList = this._zlevelList;\n    var len = zlevelList.length;\n    var prevLayer = null;\n    var i = -1;\n    var domRoot = this._domRoot;\n\n    if (layersMap[zlevel]) {\n      log('ZLevel ' + zlevel + ' has been used already');\n      return;\n    } // Check if is a valid layer\n\n\n    if (!isLayerValid(layer)) {\n      log('Layer of zlevel ' + zlevel + ' is not valid');\n      return;\n    }\n\n    if (len > 0 && zlevel > zlevelList[0]) {\n      for (i = 0; i < len - 1; i++) {\n        if (zlevelList[i] < zlevel && zlevelList[i + 1] > zlevel) {\n          break;\n        }\n      }\n\n      prevLayer = layersMap[zlevelList[i]];\n    }\n\n    zlevelList.splice(i + 1, 0, zlevel);\n    layersMap[zlevel] = layer; // Vitual layer will not directly show on the screen.\n    // (It can be a WebGL layer and assigned to a ZImage element)\n    // But it still under management of zrender.\n\n    if (!layer.virtual) {\n      if (prevLayer) {\n        var prevDom = prevLayer.dom;\n\n        if (prevDom.nextSibling) {\n          domRoot.insertBefore(layer.dom, prevDom.nextSibling);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      } else {\n        if (domRoot.firstChild) {\n          domRoot.insertBefore(layer.dom, domRoot.firstChild);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      }\n    }\n  },\n  // Iterate each layer\n  eachLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      cb.call(context, this._layers[z], z);\n    }\n  },\n  // Iterate each buildin layer\n  eachBuiltinLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n  // Iterate each other layer except buildin layer\n  eachOtherLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (!layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n\n  /**\n   * 获取所有已创建的层\n   * @param {Array.<module:zrender/Layer>} [prevLayer]\n   */\n  getLayers: function () {\n    return this._layers;\n  },\n  _updateLayerStatus: function (list) {\n    this.eachBuiltinLayer(function (layer, z) {\n      layer.__dirty = layer.__used = false;\n    });\n\n    function updatePrevLayer(idx) {\n      if (prevLayer) {\n        if (prevLayer.__endIndex !== idx) {\n          prevLayer.__dirty = true;\n        }\n\n        prevLayer.__endIndex = idx;\n      }\n    }\n\n    if (this._singleCanvas) {\n      for (var i = 1; i < list.length; i++) {\n        var el = list[i];\n\n        if (el.zlevel !== list[i - 1].zlevel || el.incremental) {\n          this._needsManuallyCompositing = true;\n          break;\n        }\n      }\n    }\n\n    var prevLayer = null;\n    var incrementalLayerCount = 0;\n\n    for (var i = 0; i < list.length; i++) {\n      var el = list[i];\n      var zlevel = el.zlevel;\n      var layer; // PENDING If change one incremental element style ?\n      // TODO Where there are non-incremental elements between incremental elements.\n\n      if (el.incremental) {\n        layer = this.getLayer(zlevel + INCREMENTAL_INC, this._needsManuallyCompositing);\n        layer.incremental = true;\n        incrementalLayerCount = 1;\n      } else {\n        layer = this.getLayer(zlevel + (incrementalLayerCount > 0 ? EL_AFTER_INCREMENTAL_INC : 0), this._needsManuallyCompositing);\n      }\n\n      if (!layer.__builtin__) {\n        log('ZLevel ' + zlevel + ' has been used by unkown layer ' + layer.id);\n      }\n\n      if (layer !== prevLayer) {\n        layer.__used = true;\n\n        if (layer.__startIndex !== i) {\n          layer.__dirty = true;\n        }\n\n        layer.__startIndex = i;\n\n        if (!layer.incremental) {\n          layer.__drawIndex = i;\n        } else {\n          // Mark layer draw index needs to update.\n          layer.__drawIndex = -1;\n        }\n\n        updatePrevLayer(i);\n        prevLayer = layer;\n      }\n\n      if (el.__dirty) {\n        layer.__dirty = true;\n\n        if (layer.incremental && layer.__drawIndex < 0) {\n          // Start draw from the first dirty element.\n          layer.__drawIndex = i;\n        }\n      }\n    }\n\n    updatePrevLayer(i);\n    this.eachBuiltinLayer(function (layer, z) {\n      // Used in last frame but not in this frame. Needs clear\n      if (!layer.__used && layer.getElementCount() > 0) {\n        layer.__dirty = true;\n        layer.__startIndex = layer.__endIndex = layer.__drawIndex = 0;\n      } // For incremental layer. In case start index changed and no elements are dirty.\n\n\n      if (layer.__dirty && layer.__drawIndex < 0) {\n        layer.__drawIndex = layer.__startIndex;\n      }\n    });\n  },\n\n  /**\n   * 清除hover层外所有内容\n   */\n  clear: function () {\n    this.eachBuiltinLayer(this._clearLayer);\n    return this;\n  },\n  _clearLayer: function (layer) {\n    layer.clear();\n  },\n  setBackgroundColor: function (backgroundColor) {\n    this._backgroundColor = backgroundColor;\n  },\n\n  /**\n   * 修改指定zlevel的绘制参数\n   *\n   * @param {string} zlevel\n   * @param {Object} config 配置对象\n   * @param {string} [config.clearColor=0] 每次清空画布的颜色\n   * @param {string} [config.motionBlur=false] 是否开启动态模糊\n   * @param {number} [config.lastFrameAlpha=0.7]\n   *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   */\n  configLayer: function (zlevel, config) {\n    if (config) {\n      var layerConfig = this._layerConfig;\n\n      if (!layerConfig[zlevel]) {\n        layerConfig[zlevel] = config;\n      } else {\n        util.merge(layerConfig[zlevel], config, true);\n      }\n\n      for (var i = 0; i < this._zlevelList.length; i++) {\n        var _zlevel = this._zlevelList[i];\n\n        if (_zlevel === zlevel || _zlevel === zlevel + EL_AFTER_INCREMENTAL_INC) {\n          var layer = this._layers[_zlevel];\n          util.merge(layer, layerConfig[zlevel], true);\n        }\n      }\n    }\n  },\n\n  /**\n   * 删除指定层\n   * @param {number} zlevel 层所在的zlevel\n   */\n  delLayer: function (zlevel) {\n    var layers = this._layers;\n    var zlevelList = this._zlevelList;\n    var layer = layers[zlevel];\n\n    if (!layer) {\n      return;\n    }\n\n    layer.dom.parentNode.removeChild(layer.dom);\n    delete layers[zlevel];\n    zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n  },\n\n  /**\n   * 区域大小变化后重绘\n   */\n  resize: function (width, height) {\n    if (!this._domRoot.style) {\n      // Maybe in node or worker\n      if (width == null || height == null) {\n        return;\n      }\n\n      this._width = width;\n      this._height = height;\n      this.getLayer(CANVAS_ZLEVEL).resize(width, height);\n    } else {\n      var domRoot = this._domRoot; // FIXME Why ?\n\n      domRoot.style.display = 'none'; // Save input w/h\n\n      var opts = this._opts;\n      width != null && (opts.width = width);\n      height != null && (opts.height = height);\n      width = this._getSize(0);\n      height = this._getSize(1);\n      domRoot.style.display = ''; // 优化没有实际改变的resize\n\n      if (this._width != width || height != this._height) {\n        domRoot.style.width = width + 'px';\n        domRoot.style.height = height + 'px';\n\n        for (var id in this._layers) {\n          if (this._layers.hasOwnProperty(id)) {\n            this._layers[id].resize(width, height);\n          }\n        }\n\n        util.each(this._progressiveLayers, function (layer) {\n          layer.resize(width, height);\n        });\n        this.refresh(true);\n      }\n\n      this._width = width;\n      this._height = height;\n    }\n\n    return this;\n  },\n\n  /**\n   * 清除单独的一个层\n   * @param {number} zlevel\n   */\n  clearLayer: function (zlevel) {\n    var layer = this._layers[zlevel];\n\n    if (layer) {\n      layer.clear();\n    }\n  },\n\n  /**\n   * 释放\n   */\n  dispose: function () {\n    this.root.innerHTML = '';\n    this.root = this.storage = this._domRoot = this._layers = null;\n  },\n\n  /**\n   * Get canvas which has all thing rendered\n   * @param {Object} opts\n   * @param {string} [opts.backgroundColor]\n   * @param {number} [opts.pixelRatio]\n   */\n  getRenderedCanvas: function (opts) {\n    opts = opts || {};\n\n    if (this._singleCanvas && !this._compositeManually) {\n      return this._layers[CANVAS_ZLEVEL].dom;\n    }\n\n    var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n    imageLayer.initContext();\n    imageLayer.clear(false, opts.backgroundColor || this._backgroundColor);\n\n    if (opts.pixelRatio <= this.dpr) {\n      this.refresh();\n      var width = imageLayer.dom.width;\n      var height = imageLayer.dom.height;\n      var ctx = imageLayer.ctx;\n      this.eachLayer(function (layer) {\n        if (layer.__builtin__) {\n          ctx.drawImage(layer.dom, 0, 0, width, height);\n        } else if (layer.renderToCanvas) {\n          imageLayer.ctx.save();\n          layer.renderToCanvas(imageLayer.ctx);\n          imageLayer.ctx.restore();\n        }\n      });\n    } else {\n      // PENDING, echarts-gl and incremental rendering.\n      var scope = {};\n      var displayList = this.storage.getDisplayList(true);\n\n      for (var i = 0; i < displayList.length; i++) {\n        var el = displayList[i];\n\n        this._doPaintEl(el, imageLayer, true, scope);\n      }\n    }\n\n    return imageLayer.dom;\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  pathToImage: function (path, dpr) {\n    dpr = dpr || this.dpr;\n    var canvas = document.createElement('canvas');\n    var ctx = canvas.getContext('2d');\n    var rect = path.getBoundingRect();\n    var style = path.style;\n    var shadowBlurSize = style.shadowBlur * dpr;\n    var shadowOffsetX = style.shadowOffsetX * dpr;\n    var shadowOffsetY = style.shadowOffsetY * dpr;\n    var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n    var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n    var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n    var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n    var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n    var width = rect.width + leftMargin + rightMargin;\n    var height = rect.height + topMargin + bottomMargin;\n    canvas.width = width * dpr;\n    canvas.height = height * dpr;\n    ctx.scale(dpr, dpr);\n    ctx.clearRect(0, 0, width, height);\n    ctx.dpr = dpr;\n    var pathTransform = {\n      position: path.position,\n      rotation: path.rotation,\n      scale: path.scale\n    };\n    path.position = [leftMargin - rect.x, topMargin - rect.y];\n    path.rotation = 0;\n    path.scale = [1, 1];\n    path.updateTransform();\n\n    if (path) {\n      path.brush(ctx);\n    }\n\n    var ImageShape = Image;\n    var imgShape = new ImageShape({\n      style: {\n        x: 0,\n        y: 0,\n        image: canvas\n      }\n    });\n\n    if (pathTransform.position != null) {\n      imgShape.position = path.position = pathTransform.position;\n    }\n\n    if (pathTransform.rotation != null) {\n      imgShape.rotation = path.rotation = pathTransform.rotation;\n    }\n\n    if (pathTransform.scale != null) {\n      imgShape.scale = path.scale = pathTransform.scale;\n    }\n\n    return imgShape;\n  }\n};\nvar _default = Painter;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar List = require(\"../../data/List\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar TimelineModel = ComponentModel.extend({\n  type: 'timeline',\n  layoutMode: 'box',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 4,\n    // 二级层叠\n    show: true,\n    axisType: 'time',\n    // 模式是时间类型，支持 value, category\n    realtime: true,\n    left: '20%',\n    top: null,\n    right: '20%',\n    bottom: 0,\n    width: null,\n    height: 40,\n    padding: 5,\n    controlPosition: 'left',\n    // 'left' 'right' 'top' 'bottom' 'none'\n    autoPlay: false,\n    rewind: false,\n    // 反向播放\n    loop: true,\n    playInterval: 2000,\n    // 播放时间间隔，单位ms\n    currentIndex: 0,\n    itemStyle: {},\n    label: {\n      color: '#000'\n    },\n    data: []\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel) {\n    /**\n     * @private\n     * @type {module:echarts/data/List}\n     */\n    this._data;\n    /**\n     * @private\n     * @type {Array.<string>}\n     */\n\n    this._names;\n    this.mergeDefaultAndTheme(option, ecModel);\n\n    this._initData();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option) {\n    TimelineModel.superApply(this, 'mergeOption', arguments);\n\n    this._initData();\n  },\n\n  /**\n   * @param {number} [currentIndex]\n   */\n  setCurrentIndex: function (currentIndex) {\n    if (currentIndex == null) {\n      currentIndex = this.option.currentIndex;\n    }\n\n    var count = this._data.count();\n\n    if (this.option.loop) {\n      currentIndex = (currentIndex % count + count) % count;\n    } else {\n      currentIndex >= count && (currentIndex = count - 1);\n      currentIndex < 0 && (currentIndex = 0);\n    }\n\n    this.option.currentIndex = currentIndex;\n  },\n\n  /**\n   * @return {number} currentIndex\n   */\n  getCurrentIndex: function () {\n    return this.option.currentIndex;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isIndexMax: function () {\n    return this.getCurrentIndex() >= this._data.count() - 1;\n  },\n\n  /**\n   * @param {boolean} state true: play, false: stop\n   */\n  setPlayState: function (state) {\n    this.option.autoPlay = !!state;\n  },\n\n  /**\n   * @return {boolean} true: play, false: stop\n   */\n  getPlayState: function () {\n    return !!this.option.autoPlay;\n  },\n\n  /**\n   * @private\n   */\n  _initData: function () {\n    var thisOption = this.option;\n    var dataArr = thisOption.data || [];\n    var axisType = thisOption.axisType;\n    var names = this._names = [];\n\n    if (axisType === 'category') {\n      var idxArr = [];\n      zrUtil.each(dataArr, function (item, index) {\n        var value = modelUtil.getDataItemValue(item);\n        var newItem;\n\n        if (zrUtil.isObject(item)) {\n          newItem = zrUtil.clone(item);\n          newItem.value = index;\n        } else {\n          newItem = index;\n        }\n\n        idxArr.push(newItem);\n\n        if (!zrUtil.isString(value) && (value == null || isNaN(value))) {\n          value = '';\n        }\n\n        names.push(value + '');\n      });\n      dataArr = idxArr;\n    }\n\n    var dimType = {\n      category: 'ordinal',\n      time: 'time'\n    }[axisType] || 'number';\n    var data = this._data = new List([{\n      name: 'value',\n      type: dimType\n    }], this);\n    data.initData(dataArr, names);\n  },\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @public\n   * @return {Array.<string>} categoreis\n   */\n  getCategories: function () {\n    if (this.get('axisType') === 'category') {\n      return this._names.slice();\n    }\n  }\n});\nvar _default = TimelineModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar numberUtil = require(\"./number\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * 每三位默认加,格式化\n * @param {string|number} x\n * @return {string}\n */\nfunction addCommas(x) {\n  if (isNaN(x)) {\n    return '-';\n  }\n\n  x = (x + '').split('.');\n  return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g, '$1,') + (x.length > 1 ? '.' + x[1] : '');\n}\n/**\n * @param {string} str\n * @param {boolean} [upperCaseFirst=false]\n * @return {string} str\n */\n\n\nfunction toCamelCase(str, upperCaseFirst) {\n  str = (str || '').toLowerCase().replace(/-(.)/g, function (match, group1) {\n    return group1.toUpperCase();\n  });\n\n  if (upperCaseFirst && str) {\n    str = str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  return str;\n}\n\nvar normalizeCssArray = zrUtil.normalizeCssArray;\nvar replaceReg = /([&<>\"'])/g;\nvar replaceMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  '\\'': '&#39;'\n};\n\nfunction encodeHTML(source) {\n  return source == null ? '' : (source + '').replace(replaceReg, function (str, c) {\n    return replaceMap[c];\n  });\n}\n\nvar TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\nvar wrapVar = function (varName, seriesIdx) {\n  return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n};\n/**\n * Template formatter\n * @param {string} tpl\n * @param {Array.<Object>|Object} paramsList\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTpl(tpl, paramsList, encode) {\n  if (!zrUtil.isArray(paramsList)) {\n    paramsList = [paramsList];\n  }\n\n  var seriesLen = paramsList.length;\n\n  if (!seriesLen) {\n    return '';\n  }\n\n  var $vars = paramsList[0].$vars || [];\n\n  for (var i = 0; i < $vars.length; i++) {\n    var alias = TPL_VAR_ALIAS[i];\n    tpl = tpl.replace(wrapVar(alias), wrapVar(alias, 0));\n  }\n\n  for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n    for (var k = 0; k < $vars.length; k++) {\n      var val = paramsList[seriesIdx][$vars[k]];\n      tpl = tpl.replace(wrapVar(TPL_VAR_ALIAS[k], seriesIdx), encode ? encodeHTML(val) : val);\n    }\n  }\n\n  return tpl;\n}\n/**\n * simple Template formatter\n *\n * @param {string} tpl\n * @param {Object} param\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTplSimple(tpl, param, encode) {\n  zrUtil.each(param, function (value, key) {\n    tpl = tpl.replace('{' + key + '}', encode ? encodeHTML(value) : value);\n  });\n  return tpl;\n}\n/**\n * @param {Object|string} [opt] If string, means color.\n * @param {string} [opt.color]\n * @param {string} [opt.extraCssText]\n * @param {string} [opt.type='item'] 'item' or 'subItem'\n * @return {string}\n */\n\n\nfunction getTooltipMarker(opt, extraCssText) {\n  opt = zrUtil.isString(opt) ? {\n    color: opt,\n    extraCssText: extraCssText\n  } : opt || {};\n  var color = opt.color;\n  var type = opt.type;\n  var extraCssText = opt.extraCssText;\n\n  if (!color) {\n    return '';\n  }\n\n  return type === 'subItem' ? '<span style=\"display:inline-block;vertical-align:middle;margin-right:8px;margin-left:3px;' + 'border-radius:4px;width:4px;height:4px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>' : '<span style=\"display:inline-block;margin-right:5px;' + 'border-radius:10px;width:10px;height:10px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>';\n}\n\nfunction pad(str, len) {\n  str += '';\n  return '0000'.substr(0, len - str.length) + str;\n}\n/**\n * ISO Date format\n * @param {string} tpl\n * @param {number} value\n * @param {boolean} [isUTC=false] Default in local time.\n *           see `module:echarts/scale/Time`\n *           and `module:echarts/util/number#parseDate`.\n * @inner\n */\n\n\nfunction formatTime(tpl, value, isUTC) {\n  if (tpl === 'week' || tpl === 'month' || tpl === 'quarter' || tpl === 'half-year' || tpl === 'year') {\n    tpl = 'MM-dd\\nyyyy';\n  }\n\n  var date = numberUtil.parseDate(value);\n  var utc = isUTC ? 'UTC' : '';\n  var y = date['get' + utc + 'FullYear']();\n  var M = date['get' + utc + 'Month']() + 1;\n  var d = date['get' + utc + 'Date']();\n  var h = date['get' + utc + 'Hours']();\n  var m = date['get' + utc + 'Minutes']();\n  var s = date['get' + utc + 'Seconds']();\n  var S = date['get' + utc + 'Milliseconds']();\n  tpl = tpl.replace('MM', pad(M, 2)).replace('M', M).replace('yyyy', y).replace('yy', y % 100).replace('dd', pad(d, 2)).replace('d', d).replace('hh', pad(h, 2)).replace('h', h).replace('mm', pad(m, 2)).replace('m', m).replace('ss', pad(s, 2)).replace('s', s).replace('SSS', pad(S, 3));\n  return tpl;\n}\n/**\n * Capital first\n * @param {string} str\n * @return {string}\n */\n\n\nfunction capitalFirst(str) {\n  return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n}\n\nvar truncateText = textContain.truncateText;\nvar getTextRect = textContain.getBoundingRect;\nexports.addCommas = addCommas;\nexports.toCamelCase = toCamelCase;\nexports.normalizeCssArray = normalizeCssArray;\nexports.encodeHTML = encodeHTML;\nexports.formatTpl = formatTpl;\nexports.formatTplSimple = formatTplSimple;\nexports.getTooltipMarker = getTooltipMarker;\nexports.formatTime = formatTime;\nexports.capitalFirst = capitalFirst;\nexports.truncateText = truncateText;\nexports.getTextRect = getTextRect;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, z2\n * }\n */\nfunction layout(axisModel, opt) {\n  opt = opt || {};\n  var single = axisModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var axisPosition = axis.position;\n  var orient = axis.orient;\n  var rect = single.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var positionMap = {\n    horizontal: {\n      top: rectBound[2],\n      bottom: rectBound[3]\n    },\n    vertical: {\n      left: rectBound[0],\n      right: rectBound[1]\n    }\n  };\n  layout.position = [orient === 'vertical' ? positionMap.vertical[axisPosition] : rectBound[0], orient === 'horizontal' ? positionMap.horizontal[axisPosition] : rectBound[3]];\n  var r = {\n    horizontal: 0,\n    vertical: 1\n  };\n  layout.rotation = Math.PI / 2 * r[orient];\n  var directionMap = {\n    top: -1,\n    bottom: 1,\n    right: 1,\n    left: -1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = directionMap[axisPosition];\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  }\n\n  var labelRotation = opt.rotate;\n  labelRotation == null && (labelRotation = axisModel.get('axisLabel.rotate'));\n  layout.labelRotation = axisPosition === 'top' ? -labelRotation : labelRotation;\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar isString = _util.isString;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Note that it is too complicated to support 3d stack by value\n * (have to create two-dimension inverted index), so in 3d case\n * we just support that stacked by index.\n *\n * @param {module:echarts/model/Series} seriesModel\n * @param {Array.<string|Object>} dimensionInfoList The same as the input of <module:echarts/data/List>.\n *        The input dimensionInfoList will be modified.\n * @param {Object} [opt]\n * @param {boolean} [opt.stackedCoordDimension=''] Specify a coord dimension if needed.\n * @param {boolean} [opt.byIndex=false]\n * @return {Object} calculationInfo\n * {\n *     stackedDimension: string\n *     stackedByDimension: string\n *     isStackedByIndex: boolean\n *     stackedOverDimension: string\n *     stackResultDimension: string\n * }\n */\nfunction enableDataStack(seriesModel, dimensionInfoList, opt) {\n  opt = opt || {};\n  var byIndex = opt.byIndex;\n  var stackedCoordDimension = opt.stackedCoordDimension; // Compatibal: when `stack` is set as '', do not stack.\n\n  var mayStack = !!(seriesModel && seriesModel.get('stack'));\n  var stackedByDimInfo;\n  var stackedDimInfo;\n  var stackResultDimension;\n  var stackedOverDimension;\n  each(dimensionInfoList, function (dimensionInfo, index) {\n    if (isString(dimensionInfo)) {\n      dimensionInfoList[index] = dimensionInfo = {\n        name: dimensionInfo\n      };\n    }\n\n    if (mayStack && !dimensionInfo.isExtraCoord) {\n      // Find the first ordinal dimension as the stackedByDimInfo.\n      if (!byIndex && !stackedByDimInfo && dimensionInfo.ordinalMeta) {\n        stackedByDimInfo = dimensionInfo;\n      } // Find the first stackable dimension as the stackedDimInfo.\n\n\n      if (!stackedDimInfo && dimensionInfo.type !== 'ordinal' && dimensionInfo.type !== 'time' && (!stackedCoordDimension || stackedCoordDimension === dimensionInfo.coordDim)) {\n        stackedDimInfo = dimensionInfo;\n      }\n    }\n  });\n\n  if (stackedDimInfo && !byIndex && !stackedByDimInfo) {\n    // Compatible with previous design, value axis (time axis) only stack by index.\n    // It may make sense if the user provides elaborately constructed data.\n    byIndex = true;\n  } // Add stack dimension, they can be both calculated by coordinate system in `unionExtent`.\n  // That put stack logic in List is for using conveniently in echarts extensions, but it\n  // might not be a good way.\n\n\n  if (stackedDimInfo) {\n    // Use a weird name that not duplicated with other names.\n    stackResultDimension = '__\\0ecstackresult';\n    stackedOverDimension = '__\\0ecstackedover'; // Create inverted index to fast query index by value.\n\n    if (stackedByDimInfo) {\n      stackedByDimInfo.createInvertedIndices = true;\n    }\n\n    var stackedDimCoordDim = stackedDimInfo.coordDim;\n    var stackedDimType = stackedDimInfo.type;\n    var stackedDimCoordIndex = 0;\n    each(dimensionInfoList, function (dimensionInfo) {\n      if (dimensionInfo.coordDim === stackedDimCoordDim) {\n        stackedDimCoordIndex++;\n      }\n    });\n    dimensionInfoList.push({\n      name: stackResultDimension,\n      coordDim: stackedDimCoordDim,\n      coordDimIndex: stackedDimCoordIndex,\n      type: stackedDimType,\n      isExtraCoord: true,\n      isCalculationCoord: true\n    });\n    stackedDimCoordIndex++;\n    dimensionInfoList.push({\n      name: stackedOverDimension,\n      // This dimension contains stack base (generally, 0), so do not set it as\n      // `stackedDimCoordDim` to avoid extent calculation, consider log scale.\n      coordDim: stackedOverDimension,\n      coordDimIndex: stackedDimCoordIndex,\n      type: stackedDimType,\n      isExtraCoord: true,\n      isCalculationCoord: true\n    });\n  }\n\n  return {\n    stackedDimension: stackedDimInfo && stackedDimInfo.name,\n    stackedByDimension: stackedByDimInfo && stackedByDimInfo.name,\n    isStackedByIndex: byIndex,\n    stackedOverDimension: stackedOverDimension,\n    stackResultDimension: stackResultDimension\n  };\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {string} stackedDim\n */\n\n\nfunction isDimensionStacked(data, stackedDim\n/*, stackedByDim*/\n) {\n  // Each single series only maps to one pair of axis. So we do not need to\n  // check stackByDim, whatever stacked by a dimension or stacked by index.\n  return !!stackedDim && stackedDim === data.getCalculationInfo('stackedDimension'); // && (\n  //     stackedByDim != null\n  //         ? stackedByDim === data.getCalculationInfo('stackedByDimension')\n  //         : data.getCalculationInfo('isStackedByIndex')\n  // );\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {string} targetDim\n * @param {string} [stackedByDim] If not input this parameter, check whether\n *                                stacked by index.\n * @return {string} dimension\n */\n\n\nfunction getStackedDimension(data, targetDim) {\n  return isDimensionStacked(data, targetDim) ? data.getCalculationInfo('stackResultDimension') : targetDim;\n}\n\nexports.enableDataStack = enableDataStack;\nexports.isDimensionStacked = isDimensionStacked;\nexports.getStackedDimension = getStackedDimension;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar numberUtil = require(\"../../util/number\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar MONTH_TEXT = {\n  EN: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  CN: ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月']\n};\nvar WEEK_TEXT = {\n  EN: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  CN: ['日', '一', '二', '三', '四', '五', '六']\n};\n\nvar _default = echarts.extendComponentView({\n  type: 'calendar',\n\n  /**\n   * top/left line points\n   *  @private\n   */\n  _tlpoints: null,\n\n  /**\n   * bottom/right line points\n   *  @private\n   */\n  _blpoints: null,\n\n  /**\n   * first day of month\n   *  @private\n   */\n  _firstDayOfMonth: null,\n\n  /**\n   * first day point of month\n   *  @private\n   */\n  _firstDayPoints: null,\n  render: function (calendarModel, ecModel, api) {\n    var group = this.group;\n    group.removeAll();\n    var coordSys = calendarModel.coordinateSystem; // range info\n\n    var rangeData = coordSys.getRangeInfo();\n    var orient = coordSys.getOrient();\n\n    this._renderDayRect(calendarModel, rangeData, group); // _renderLines must be called prior to following function\n\n\n    this._renderLines(calendarModel, rangeData, orient, group);\n\n    this._renderYearText(calendarModel, rangeData, orient, group);\n\n    this._renderMonthText(calendarModel, orient, group);\n\n    this._renderWeekText(calendarModel, rangeData, orient, group);\n  },\n  // render day rect\n  _renderDayRect: function (calendarModel, rangeData, group) {\n    var coordSys = calendarModel.coordinateSystem;\n    var itemRectStyleModel = calendarModel.getModel('itemStyle').getItemStyle();\n    var sw = coordSys.getCellWidth();\n    var sh = coordSys.getCellHeight();\n\n    for (var i = rangeData.start.time; i <= rangeData.end.time; i = coordSys.getNextNDay(i, 1).time) {\n      var point = coordSys.dataToRect([i], false).tl; // every rect\n\n      var rect = new graphic.Rect({\n        shape: {\n          x: point[0],\n          y: point[1],\n          width: sw,\n          height: sh\n        },\n        cursor: 'default',\n        style: itemRectStyleModel\n      });\n      group.add(rect);\n    }\n  },\n  // render separate line\n  _renderLines: function (calendarModel, rangeData, orient, group) {\n    var self = this;\n    var coordSys = calendarModel.coordinateSystem;\n    var lineStyleModel = calendarModel.getModel('splitLine.lineStyle').getLineStyle();\n    var show = calendarModel.get('splitLine.show');\n    var lineWidth = lineStyleModel.lineWidth;\n    this._tlpoints = [];\n    this._blpoints = [];\n    this._firstDayOfMonth = [];\n    this._firstDayPoints = [];\n    var firstDay = rangeData.start;\n\n    for (var i = 0; firstDay.time <= rangeData.end.time; i++) {\n      addPoints(firstDay.formatedDate);\n\n      if (i === 0) {\n        firstDay = coordSys.getDateInfo(rangeData.start.y + '-' + rangeData.start.m);\n      }\n\n      var date = firstDay.date;\n      date.setMonth(date.getMonth() + 1);\n      firstDay = coordSys.getDateInfo(date);\n    }\n\n    addPoints(coordSys.getNextNDay(rangeData.end.time, 1).formatedDate);\n\n    function addPoints(date) {\n      self._firstDayOfMonth.push(coordSys.getDateInfo(date));\n\n      self._firstDayPoints.push(coordSys.dataToRect([date], false).tl);\n\n      var points = self._getLinePointsOfOneWeek(calendarModel, date, orient);\n\n      self._tlpoints.push(points[0]);\n\n      self._blpoints.push(points[points.length - 1]);\n\n      show && self._drawSplitline(points, lineStyleModel, group);\n    } // render top/left line\n\n\n    show && this._drawSplitline(self._getEdgesPoints(self._tlpoints, lineWidth, orient), lineStyleModel, group); // render bottom/right line\n\n    show && this._drawSplitline(self._getEdgesPoints(self._blpoints, lineWidth, orient), lineStyleModel, group);\n  },\n  // get points at both ends\n  _getEdgesPoints: function (points, lineWidth, orient) {\n    var rs = [points[0].slice(), points[points.length - 1].slice()];\n    var idx = orient === 'horizontal' ? 0 : 1; // both ends of the line are extend half lineWidth\n\n    rs[0][idx] = rs[0][idx] - lineWidth / 2;\n    rs[1][idx] = rs[1][idx] + lineWidth / 2;\n    return rs;\n  },\n  // render split line\n  _drawSplitline: function (points, lineStyleModel, group) {\n    var poyline = new graphic.Polyline({\n      z2: 20,\n      shape: {\n        points: points\n      },\n      style: lineStyleModel\n    });\n    group.add(poyline);\n  },\n  // render month line of one week points\n  _getLinePointsOfOneWeek: function (calendarModel, date, orient) {\n    var coordSys = calendarModel.coordinateSystem;\n    date = coordSys.getDateInfo(date);\n    var points = [];\n\n    for (var i = 0; i < 7; i++) {\n      var tmpD = coordSys.getNextNDay(date.time, i);\n      var point = coordSys.dataToRect([tmpD.time], false);\n      points[2 * tmpD.day] = point.tl;\n      points[2 * tmpD.day + 1] = point[orient === 'horizontal' ? 'bl' : 'tr'];\n    }\n\n    return points;\n  },\n  _formatterLabel: function (formatter, params) {\n    if (typeof formatter === 'string' && formatter) {\n      return formatUtil.formatTplSimple(formatter, params);\n    }\n\n    if (typeof formatter === 'function') {\n      return formatter(params);\n    }\n\n    return params.nameMap;\n  },\n  _yearTextPositionControl: function (textEl, point, orient, position, margin) {\n    point = point.slice();\n    var aligns = ['center', 'bottom'];\n\n    if (position === 'bottom') {\n      point[1] += margin;\n      aligns = ['center', 'top'];\n    } else if (position === 'left') {\n      point[0] -= margin;\n    } else if (position === 'right') {\n      point[0] += margin;\n      aligns = ['center', 'top'];\n    } else {\n      // top\n      point[1] -= margin;\n    }\n\n    var rotate = 0;\n\n    if (position === 'left' || position === 'right') {\n      rotate = Math.PI / 2;\n    }\n\n    return {\n      rotation: rotate,\n      position: point,\n      style: {\n        textAlign: aligns[0],\n        textVerticalAlign: aligns[1]\n      }\n    };\n  },\n  // render year\n  _renderYearText: function (calendarModel, rangeData, orient, group) {\n    var yearLabel = calendarModel.getModel('yearLabel');\n\n    if (!yearLabel.get('show')) {\n      return;\n    }\n\n    var margin = yearLabel.get('margin');\n    var pos = yearLabel.get('position');\n\n    if (!pos) {\n      pos = orient !== 'horizontal' ? 'top' : 'left';\n    }\n\n    var points = [this._tlpoints[this._tlpoints.length - 1], this._blpoints[0]];\n    var xc = (points[0][0] + points[1][0]) / 2;\n    var yc = (points[0][1] + points[1][1]) / 2;\n    var idx = orient === 'horizontal' ? 0 : 1;\n    var posPoints = {\n      top: [xc, points[idx][1]],\n      bottom: [xc, points[1 - idx][1]],\n      left: [points[1 - idx][0], yc],\n      right: [points[idx][0], yc]\n    };\n    var name = rangeData.start.y;\n\n    if (+rangeData.end.y > +rangeData.start.y) {\n      name = name + '-' + rangeData.end.y;\n    }\n\n    var formatter = yearLabel.get('formatter');\n    var params = {\n      start: rangeData.start.y,\n      end: rangeData.end.y,\n      nameMap: name\n    };\n\n    var content = this._formatterLabel(formatter, params);\n\n    var yearText = new graphic.Text({\n      z2: 30\n    });\n    graphic.setTextStyle(yearText.style, yearLabel, {\n      text: content\n    }), yearText.attr(this._yearTextPositionControl(yearText, posPoints[pos], orient, pos, margin));\n    group.add(yearText);\n  },\n  _monthTextPositionControl: function (point, isCenter, orient, position, margin) {\n    var align = 'left';\n    var vAlign = 'top';\n    var x = point[0];\n    var y = point[1];\n\n    if (orient === 'horizontal') {\n      y = y + margin;\n\n      if (isCenter) {\n        align = 'center';\n      }\n\n      if (position === 'start') {\n        vAlign = 'bottom';\n      }\n    } else {\n      x = x + margin;\n\n      if (isCenter) {\n        vAlign = 'middle';\n      }\n\n      if (position === 'start') {\n        align = 'right';\n      }\n    }\n\n    return {\n      x: x,\n      y: y,\n      textAlign: align,\n      textVerticalAlign: vAlign\n    };\n  },\n  // render month and year text\n  _renderMonthText: function (calendarModel, orient, group) {\n    var monthLabel = calendarModel.getModel('monthLabel');\n\n    if (!monthLabel.get('show')) {\n      return;\n    }\n\n    var nameMap = monthLabel.get('nameMap');\n    var margin = monthLabel.get('margin');\n    var pos = monthLabel.get('position');\n    var align = monthLabel.get('align');\n    var termPoints = [this._tlpoints, this._blpoints];\n\n    if (zrUtil.isString(nameMap)) {\n      nameMap = MONTH_TEXT[nameMap.toUpperCase()] || [];\n    }\n\n    var idx = pos === 'start' ? 0 : 1;\n    var axis = orient === 'horizontal' ? 0 : 1;\n    margin = pos === 'start' ? -margin : margin;\n    var isCenter = align === 'center';\n\n    for (var i = 0; i < termPoints[idx].length - 1; i++) {\n      var tmp = termPoints[idx][i].slice();\n      var firstDay = this._firstDayOfMonth[i];\n\n      if (isCenter) {\n        var firstDayPoints = this._firstDayPoints[i];\n        tmp[axis] = (firstDayPoints[axis] + termPoints[0][i + 1][axis]) / 2;\n      }\n\n      var formatter = monthLabel.get('formatter');\n      var name = nameMap[+firstDay.m - 1];\n      var params = {\n        yyyy: firstDay.y,\n        yy: (firstDay.y + '').slice(2),\n        MM: firstDay.m,\n        M: +firstDay.m,\n        nameMap: name\n      };\n\n      var content = this._formatterLabel(formatter, params);\n\n      var monthText = new graphic.Text({\n        z2: 30\n      });\n      zrUtil.extend(graphic.setTextStyle(monthText.style, monthLabel, {\n        text: content\n      }), this._monthTextPositionControl(tmp, isCenter, orient, pos, margin));\n      group.add(monthText);\n    }\n  },\n  _weekTextPositionControl: function (point, orient, position, margin, cellSize) {\n    var align = 'center';\n    var vAlign = 'middle';\n    var x = point[0];\n    var y = point[1];\n    var isStart = position === 'start';\n\n    if (orient === 'horizontal') {\n      x = x + margin + (isStart ? 1 : -1) * cellSize[0] / 2;\n      align = isStart ? 'right' : 'left';\n    } else {\n      y = y + margin + (isStart ? 1 : -1) * cellSize[1] / 2;\n      vAlign = isStart ? 'bottom' : 'top';\n    }\n\n    return {\n      x: x,\n      y: y,\n      textAlign: align,\n      textVerticalAlign: vAlign\n    };\n  },\n  // render weeks\n  _renderWeekText: function (calendarModel, rangeData, orient, group) {\n    var dayLabel = calendarModel.getModel('dayLabel');\n\n    if (!dayLabel.get('show')) {\n      return;\n    }\n\n    var coordSys = calendarModel.coordinateSystem;\n    var pos = dayLabel.get('position');\n    var nameMap = dayLabel.get('nameMap');\n    var margin = dayLabel.get('margin');\n    var firstDayOfWeek = coordSys.getFirstDayOfWeek();\n\n    if (zrUtil.isString(nameMap)) {\n      nameMap = WEEK_TEXT[nameMap.toUpperCase()] || [];\n    }\n\n    var start = coordSys.getNextNDay(rangeData.end.time, 7 - rangeData.lweek).time;\n    var cellSize = [coordSys.getCellWidth(), coordSys.getCellHeight()];\n    margin = numberUtil.parsePercent(margin, cellSize[orient === 'horizontal' ? 0 : 1]);\n\n    if (pos === 'start') {\n      start = coordSys.getNextNDay(rangeData.start.time, -(7 + rangeData.fweek)).time;\n      margin = -margin;\n    }\n\n    for (var i = 0; i < 7; i++) {\n      var tmpD = coordSys.getNextNDay(start, i);\n      var point = coordSys.dataToRect([tmpD.time], false).center;\n      var day = i;\n      day = Math.abs((i + firstDayOfWeek) % 7);\n      var weekText = new graphic.Text({\n        z2: 30\n      });\n      zrUtil.extend(graphic.setTextStyle(weekText.style, dayLabel, {\n        text: nameMap[day]\n      }), this._weekTextPositionControl(point, orient, pos, margin, cellSize));\n      group.add(weekText);\n    }\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * nest helper used to group by the array.\n * can specified the keys and sort the keys.\n */\nfunction nest() {\n  var keysFunction = [];\n  var sortKeysFunction = [];\n  /**\n   * map an Array into the mapObject.\n   * @param {Array} array\n   * @param {number} depth\n   */\n\n  function map(array, depth) {\n    if (depth >= keysFunction.length) {\n      return array;\n    }\n\n    var i = -1;\n    var n = array.length;\n    var keyFunction = keysFunction[depth++];\n    var mapObject = {};\n    var valuesByKey = {};\n\n    while (++i < n) {\n      var keyValue = keyFunction(array[i]);\n      var values = valuesByKey[keyValue];\n\n      if (values) {\n        values.push(array[i]);\n      } else {\n        valuesByKey[keyValue] = [array[i]];\n      }\n    }\n\n    zrUtil.each(valuesByKey, function (value, key) {\n      mapObject[key] = map(value, depth);\n    });\n    return mapObject;\n  }\n  /**\n   * transform the Map Object to multidimensional Array\n   * @param {Object} map\n   * @param {number} depth\n   */\n\n\n  function entriesMap(mapObject, depth) {\n    if (depth >= keysFunction.length) {\n      return mapObject;\n    }\n\n    var array = [];\n    var sortKeyFunction = sortKeysFunction[depth++];\n    zrUtil.each(mapObject, function (value, key) {\n      array.push({\n        key: key,\n        values: entriesMap(value, depth)\n      });\n    });\n\n    if (sortKeyFunction) {\n      return array.sort(function (a, b) {\n        return sortKeyFunction(a.key, b.key);\n      });\n    } else {\n      return array;\n    }\n  }\n\n  return {\n    /**\n     * specified the key to groupby the arrays.\n     * users can specified one more keys.\n     * @param {Function} d\n     */\n    key: function (d) {\n      keysFunction.push(d);\n      return this;\n    },\n\n    /**\n     * specified the comparator to sort the keys\n     * @param {Function} order\n     */\n    sortKeys: function (order) {\n      sortKeysFunction[keysFunction.length - 1] = order;\n      return this;\n    },\n\n    /**\n     * the array to be grouped by.\n     * @param {Array} array\n     */\n    entries: function (array) {\n      return entriesMap(map(array, 0), 0);\n    }\n  };\n}\n\nmodule.exports = nest;","var PathProxy = require(\"../core/PathProxy\");\n\nvar _vector = require(\"../core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar CMD = PathProxy.CMD;\nvar points = [[], [], []];\nvar mathSqrt = Math.sqrt;\nvar mathAtan2 = Math.atan2;\n\nfunction _default(path, m) {\n  var data = path.data;\n  var cmd;\n  var nPoint;\n  var i;\n  var j;\n  var k;\n  var p;\n  var M = CMD.M;\n  var C = CMD.C;\n  var L = CMD.L;\n  var R = CMD.R;\n  var A = CMD.A;\n  var Q = CMD.Q;\n\n  for (i = 0, j = 0; i < data.length;) {\n    cmd = data[i++];\n    j = i;\n    nPoint = 0;\n\n    switch (cmd) {\n      case M:\n        nPoint = 1;\n        break;\n\n      case L:\n        nPoint = 1;\n        break;\n\n      case C:\n        nPoint = 3;\n        break;\n\n      case Q:\n        nPoint = 2;\n        break;\n\n      case A:\n        var x = m[4];\n        var y = m[5];\n        var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n        var angle = mathAtan2(-m[1] / sy, m[0] / sx); // cx\n\n        data[i] *= sx;\n        data[i++] += x; // cy\n\n        data[i] *= sy;\n        data[i++] += y; // Scale rx and ry\n        // FIXME Assume psi is 0 here\n\n        data[i++] *= sx;\n        data[i++] *= sy; // Start angle\n\n        data[i++] += angle; // end angle\n\n        data[i++] += angle; // FIXME psi\n\n        i += 2;\n        j = i;\n        break;\n\n      case R:\n        // x0, y0\n        p[0] = data[i++];\n        p[1] = data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1]; // x1, y1\n\n        p[0] += data[i++];\n        p[1] += data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1];\n    }\n\n    for (k = 0; k < nPoint; k++) {\n      var p = points[k];\n      p[0] = data[i++];\n      p[1] = data[i++];\n      v2ApplyTransform(p, p, m); // Write back\n\n      data[j++] = p[0];\n      data[j++] = p[1];\n    }\n  }\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar preprocessor = require(\"./timeline/preprocessor\");\n\nrequire(\"./timeline/typeDefaulter\");\n\nrequire(\"./timeline/timelineAction\");\n\nrequire(\"./timeline/SliderTimelineModel\");\n\nrequire(\"./timeline/SliderTimelineView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * DataZoom component entry\n */\necharts.registerPreprocessor(preprocessor);","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction normalize(a) {\n  if (!(a instanceof Array)) {\n    a = [a, a];\n  }\n\n  return a;\n}\n\nvar opacityQuery = 'lineStyle.opacity'.split('.');\nvar _default = {\n  seriesType: 'lines',\n  reset: function (seriesModel, ecModel, api) {\n    var symbolType = normalize(seriesModel.get('symbol'));\n    var symbolSize = normalize(seriesModel.get('symbolSize'));\n    var data = seriesModel.getData();\n    data.setVisual('fromSymbol', symbolType && symbolType[0]);\n    data.setVisual('toSymbol', symbolType && symbolType[1]);\n    data.setVisual('fromSymbolSize', symbolSize && symbolSize[0]);\n    data.setVisual('toSymbolSize', symbolSize && symbolSize[1]);\n    data.setVisual('opacity', seriesModel.get(opacityQuery));\n\n    function dataEach(data, idx) {\n      var itemModel = data.getItemModel(idx);\n      var symbolType = normalize(itemModel.getShallow('symbol', true));\n      var symbolSize = normalize(itemModel.getShallow('symbolSize', true));\n      var opacity = itemModel.get(opacityQuery);\n      symbolType[0] && data.setItemVisual(idx, 'fromSymbol', symbolType[0]);\n      symbolType[1] && data.setItemVisual(idx, 'toSymbol', symbolType[1]);\n      symbolSize[0] && data.setItemVisual(idx, 'fromSymbolSize', symbolSize[0]);\n      symbolSize[1] && data.setItemVisual(idx, 'toSymbolSize', symbolSize[1]);\n      data.setItemVisual(idx, 'opacity', opacity);\n    }\n\n    return {\n      dataEach: data.hasItemOption ? dataEach : null\n    };\n  }\n};\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Geo = require(\"./Geo\");\n\nvar layout = require(\"../../util/layout\");\n\nvar numberUtil = require(\"../../util/number\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Resize method bound to the geo\n * @param {module:echarts/coord/geo/GeoModel|module:echarts/chart/map/MapModel} geoModel\n * @param {module:echarts/ExtensionAPI} api\n */\nfunction resizeGeo(geoModel, api) {\n  var boundingCoords = geoModel.get('boundingCoords');\n\n  if (boundingCoords != null) {\n    var leftTop = boundingCoords[0];\n    var rightBottom = boundingCoords[1];\n\n    if (isNaN(leftTop[0]) || isNaN(leftTop[1]) || isNaN(rightBottom[0]) || isNaN(rightBottom[1])) {} else {\n      this.setBoundingRect(leftTop[0], leftTop[1], rightBottom[0] - leftTop[0], rightBottom[1] - leftTop[1]);\n    }\n  }\n\n  var rect = this.getBoundingRect();\n  var boxLayoutOption;\n  var center = geoModel.get('layoutCenter');\n  var size = geoModel.get('layoutSize');\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  var aspectScale = geoModel.get('aspectScale') || 0.75;\n  var aspect = rect.width / rect.height * aspectScale;\n  var useCenterAndSize = false;\n\n  if (center && size) {\n    center = [numberUtil.parsePercent(center[0], viewWidth), numberUtil.parsePercent(center[1], viewHeight)];\n    size = numberUtil.parsePercent(size, Math.min(viewWidth, viewHeight));\n\n    if (!isNaN(center[0]) && !isNaN(center[1]) && !isNaN(size)) {\n      useCenterAndSize = true;\n    } else {}\n  }\n\n  var viewRect;\n\n  if (useCenterAndSize) {\n    var viewRect = {};\n\n    if (aspect > 1) {\n      // Width is same with size\n      viewRect.width = size;\n      viewRect.height = size / aspect;\n    } else {\n      viewRect.height = size;\n      viewRect.width = size * aspect;\n    }\n\n    viewRect.y = center[1] - viewRect.height / 2;\n    viewRect.x = center[0] - viewRect.width / 2;\n  } else {\n    // Use left/top/width/height\n    boxLayoutOption = geoModel.getBoxLayoutParams(); // 0.75 rate\n\n    boxLayoutOption.aspect = aspect;\n    viewRect = layout.getLayoutRect(boxLayoutOption, {\n      width: viewWidth,\n      height: viewHeight\n    });\n  }\n\n  this.setViewRect(viewRect.x, viewRect.y, viewRect.width, viewRect.height);\n  this.setCenter(geoModel.get('center'));\n  this.setZoom(geoModel.get('zoom'));\n}\n/**\n * @param {module:echarts/coord/Geo} geo\n * @param {module:echarts/model/Model} model\n * @inner\n */\n\n\nfunction setGeoCoords(geo, model) {\n  zrUtil.each(model.get('geoCoord'), function (geoCoord, name) {\n    geo.addGeoCoord(name, geoCoord);\n  });\n}\n\nvar geoCreator = {\n  // For deciding which dimensions to use when creating list data\n  dimensions: Geo.prototype.dimensions,\n  create: function (ecModel, api) {\n    var geoList = []; // FIXME Create each time may be slow\n\n    ecModel.eachComponent('geo', function (geoModel, idx) {\n      var name = geoModel.get('map');\n      var mapData = echarts.getMap(name);\n      var geo = new Geo(name + idx, name, mapData && mapData.geoJson, mapData && mapData.specialAreas, geoModel.get('nameMap'));\n      geo.zoomLimit = geoModel.get('scaleLimit');\n      geoList.push(geo);\n      setGeoCoords(geo, geoModel);\n      geoModel.coordinateSystem = geo;\n      geo.model = geoModel; // Inject resize method\n\n      geo.resize = resizeGeo;\n      geo.resize(geoModel, api);\n    });\n    ecModel.eachSeries(function (seriesModel) {\n      var coordSys = seriesModel.get('coordinateSystem');\n\n      if (coordSys === 'geo') {\n        var geoIndex = seriesModel.get('geoIndex') || 0;\n        seriesModel.coordinateSystem = geoList[geoIndex];\n      }\n    }); // If has map series\n\n    var mapModelGroupBySeries = {};\n    ecModel.eachSeriesByType('map', function (seriesModel) {\n      if (!seriesModel.getHostGeoModel()) {\n        var mapType = seriesModel.getMapType();\n        mapModelGroupBySeries[mapType] = mapModelGroupBySeries[mapType] || [];\n        mapModelGroupBySeries[mapType].push(seriesModel);\n      }\n    });\n    zrUtil.each(mapModelGroupBySeries, function (mapSeries, mapType) {\n      var mapData = echarts.getMap(mapType);\n      var nameMapList = zrUtil.map(mapSeries, function (singleMapSeries) {\n        return singleMapSeries.get('nameMap');\n      });\n      var geo = new Geo(mapType, mapType, mapData && mapData.geoJson, mapData && mapData.specialAreas, zrUtil.mergeAll(nameMapList));\n      geo.zoomLimit = zrUtil.retrieve.apply(null, zrUtil.map(mapSeries, function (singleMapSeries) {\n        return singleMapSeries.get('scaleLimit');\n      }));\n      geoList.push(geo); // Inject resize method\n\n      geo.resize = resizeGeo;\n      geo.resize(mapSeries[0], api);\n      zrUtil.each(mapSeries, function (singleMapSeries) {\n        singleMapSeries.coordinateSystem = geo;\n        setGeoCoords(geo, singleMapSeries);\n      });\n    });\n    return geoList;\n  },\n\n  /**\n   * Fill given regions array\n   * @param  {Array.<Object>} originRegionArr\n   * @param  {string} mapName\n   * @param  {Object} [nameMap]\n   * @return {Array}\n   */\n  getFilledRegions: function (originRegionArr, mapName, nameMap) {\n    // Not use the original\n    var regionsArr = (originRegionArr || []).slice();\n    nameMap = nameMap || {};\n    var map = echarts.getMap(mapName);\n    var geoJson = map && map.geoJson;\n\n    if (!geoJson) {\n      return originRegionArr;\n    }\n\n    var dataNameMap = zrUtil.createHashMap();\n    var features = geoJson.features;\n\n    for (var i = 0; i < regionsArr.length; i++) {\n      dataNameMap.set(regionsArr[i].name, regionsArr[i]);\n    }\n\n    for (var i = 0; i < features.length; i++) {\n      var name = features[i].properties.name;\n\n      if (!dataNameMap.get(name)) {\n        if (nameMap.hasOwnProperty(name)) {\n          name = nameMap[name];\n        }\n\n        regionsArr.push({\n          name: name\n        });\n      }\n    }\n\n    return regionsArr;\n  }\n};\necharts.registerCoordinateSystem('geo', geoCreator);\nvar _default = geoCreator;\nmodule.exports = _default;","var vec2 = require(\"zrender/lib/core/vector\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar scaleAndAdd = vec2.scaleAndAdd; // function adjacentNode(n, e) {\n//     return e.n1 === n ? e.n2 : e.n1;\n// }\n\nfunction forceLayout(nodes, edges, opts) {\n  var rect = opts.rect;\n  var width = rect.width;\n  var height = rect.height;\n  var center = [rect.x + width / 2, rect.y + height / 2]; // var scale = opts.scale || 1;\n\n  var gravity = opts.gravity == null ? 0.1 : opts.gravity; // for (var i = 0; i < edges.length; i++) {\n  //     var e = edges[i];\n  //     var n1 = e.n1;\n  //     var n2 = e.n2;\n  //     n1.edges = n1.edges || [];\n  //     n2.edges = n2.edges || [];\n  //     n1.edges.push(e);\n  //     n2.edges.push(e);\n  // }\n  // Init position\n\n  for (var i = 0; i < nodes.length; i++) {\n    var n = nodes[i];\n\n    if (!n.p) {\n      // Use the position from first adjecent node with defined position\n      // Or use a random position\n      // From d3\n      // if (n.edges) {\n      //     var j = -1;\n      //     while (++j < n.edges.length) {\n      //         var e = n.edges[j];\n      //         var other = adjacentNode(n, e);\n      //         if (other.p) {\n      //             n.p = vec2.clone(other.p);\n      //             break;\n      //         }\n      //     }\n      // }\n      // if (!n.p) {\n      n.p = vec2.create(width * (Math.random() - 0.5) + center[0], height * (Math.random() - 0.5) + center[1]); // }\n    }\n\n    n.pp = vec2.clone(n.p);\n    n.edges = null;\n  } // Formula in 'Graph Drawing by Force-directed Placement'\n  // var k = scale * Math.sqrt(width * height / nodes.length);\n  // var k2 = k * k;\n\n\n  var friction = 0.6;\n  return {\n    warmUp: function () {\n      friction = 0.5;\n    },\n    setFixed: function (idx) {\n      nodes[idx].fixed = true;\n    },\n    setUnfixed: function (idx) {\n      nodes[idx].fixed = false;\n    },\n    step: function (cb) {\n      var v12 = [];\n      var nLen = nodes.length;\n\n      for (var i = 0; i < edges.length; i++) {\n        var e = edges[i];\n        var n1 = e.n1;\n        var n2 = e.n2;\n        vec2.sub(v12, n2.p, n1.p);\n        var d = vec2.len(v12) - e.d;\n        var w = n2.w / (n1.w + n2.w);\n\n        if (isNaN(w)) {\n          w = 0;\n        }\n\n        vec2.normalize(v12, v12);\n        !n1.fixed && scaleAndAdd(n1.p, n1.p, v12, w * d * friction);\n        !n2.fixed && scaleAndAdd(n2.p, n2.p, v12, -(1 - w) * d * friction);\n      } // Gravity\n\n\n      for (var i = 0; i < nLen; i++) {\n        var n = nodes[i];\n\n        if (!n.fixed) {\n          vec2.sub(v12, center, n.p); // var d = vec2.len(v12);\n          // vec2.scale(v12, v12, 1 / d);\n          // var gravityFactor = gravity;\n\n          scaleAndAdd(n.p, n.p, v12, gravity * friction);\n        }\n      } // Repulsive\n      // PENDING\n\n\n      for (var i = 0; i < nLen; i++) {\n        var n1 = nodes[i];\n\n        for (var j = i + 1; j < nLen; j++) {\n          var n2 = nodes[j];\n          vec2.sub(v12, n2.p, n1.p);\n          var d = vec2.len(v12);\n\n          if (d === 0) {\n            // Random repulse\n            vec2.set(v12, Math.random() - 0.5, Math.random() - 0.5);\n            d = 1;\n          }\n\n          var repFact = (n1.rep + n2.rep) / d / d;\n          !n1.fixed && scaleAndAdd(n1.pp, n1.pp, v12, repFact);\n          !n2.fixed && scaleAndAdd(n2.pp, n2.pp, v12, -repFact);\n        }\n      }\n\n      var v = [];\n\n      for (var i = 0; i < nLen; i++) {\n        var n = nodes[i];\n\n        if (!n.fixed) {\n          vec2.sub(v, n.p, n.pp);\n          scaleAndAdd(n.p, n.p, v, friction);\n          vec2.copy(n.pp, n.p);\n        }\n      }\n\n      friction = friction * 0.992;\n      cb && cb(nodes, edges, friction < 0.01);\n    }\n  };\n}\n\nexports.forceLayout = forceLayout;","var _helper = require(\"./helper\");\n\nvar prepareDataCoordInfo = _helper.prepareDataCoordInfo;\nvar getStackedOnPoint = _helper.getStackedOnPoint;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// var arrayDiff = require('zrender/src/core/arrayDiff');\n// 'zrender/src/core/arrayDiff' has been used before, but it did\n// not do well in performance when roam with fixed dataZoom window.\n// function convertToIntId(newIdList, oldIdList) {\n//     // Generate int id instead of string id.\n//     // Compare string maybe slow in score function of arrDiff\n//     // Assume id in idList are all unique\n//     var idIndicesMap = {};\n//     var idx = 0;\n//     for (var i = 0; i < newIdList.length; i++) {\n//         idIndicesMap[newIdList[i]] = idx;\n//         newIdList[i] = idx++;\n//     }\n//     for (var i = 0; i < oldIdList.length; i++) {\n//         var oldId = oldIdList[i];\n//         // Same with newIdList\n//         if (idIndicesMap[oldId]) {\n//             oldIdList[i] = idIndicesMap[oldId];\n//         }\n//         else {\n//             oldIdList[i] = idx++;\n//         }\n//     }\n// }\nfunction diffData(oldData, newData) {\n  var diffResult = [];\n  newData.diff(oldData).add(function (idx) {\n    diffResult.push({\n      cmd: '+',\n      idx: idx\n    });\n  }).update(function (newIdx, oldIdx) {\n    diffResult.push({\n      cmd: '=',\n      idx: oldIdx,\n      idx1: newIdx\n    });\n  }).remove(function (idx) {\n    diffResult.push({\n      cmd: '-',\n      idx: idx\n    });\n  }).execute();\n  return diffResult;\n}\n\nfunction _default(oldData, newData, oldStackedOnPoints, newStackedOnPoints, oldCoordSys, newCoordSys, oldValueOrigin, newValueOrigin) {\n  var diff = diffData(oldData, newData); // var newIdList = newData.mapArray(newData.getId);\n  // var oldIdList = oldData.mapArray(oldData.getId);\n  // convertToIntId(newIdList, oldIdList);\n  // // FIXME One data ?\n  // diff = arrayDiff(oldIdList, newIdList);\n\n  var currPoints = [];\n  var nextPoints = []; // Points for stacking base line\n\n  var currStackedPoints = [];\n  var nextStackedPoints = [];\n  var status = [];\n  var sortedIndices = [];\n  var rawIndices = [];\n  var newDataOldCoordInfo = prepareDataCoordInfo(oldCoordSys, newData, oldValueOrigin);\n  var oldDataNewCoordInfo = prepareDataCoordInfo(newCoordSys, oldData, newValueOrigin);\n\n  for (var i = 0; i < diff.length; i++) {\n    var diffItem = diff[i];\n    var pointAdded = true; // FIXME, animation is not so perfect when dataZoom window moves fast\n    // Which is in case remvoing or add more than one data in the tail or head\n\n    switch (diffItem.cmd) {\n      case '=':\n        var currentPt = oldData.getItemLayout(diffItem.idx);\n        var nextPt = newData.getItemLayout(diffItem.idx1); // If previous data is NaN, use next point directly\n\n        if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n          currentPt = nextPt.slice();\n        }\n\n        currPoints.push(currentPt);\n        nextPoints.push(nextPt);\n        currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n        nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n        rawIndices.push(newData.getRawIndex(diffItem.idx1));\n        break;\n\n      case '+':\n        var idx = diffItem.idx;\n        currPoints.push(oldCoordSys.dataToPoint([newData.get(newDataOldCoordInfo.dataDimsForPoint[0], idx), newData.get(newDataOldCoordInfo.dataDimsForPoint[1], idx)]));\n        nextPoints.push(newData.getItemLayout(idx).slice());\n        currStackedPoints.push(getStackedOnPoint(newDataOldCoordInfo, oldCoordSys, newData, idx));\n        nextStackedPoints.push(newStackedOnPoints[idx]);\n        rawIndices.push(newData.getRawIndex(idx));\n        break;\n\n      case '-':\n        var idx = diffItem.idx;\n        var rawIndex = oldData.getRawIndex(idx); // Data is replaced. In the case of dynamic data queue\n        // FIXME FIXME FIXME\n\n        if (rawIndex !== idx) {\n          currPoints.push(oldData.getItemLayout(idx));\n          nextPoints.push(newCoordSys.dataToPoint([oldData.get(oldDataNewCoordInfo.dataDimsForPoint[0], idx), oldData.get(oldDataNewCoordInfo.dataDimsForPoint[1], idx)]));\n          currStackedPoints.push(oldStackedOnPoints[idx]);\n          nextStackedPoints.push(getStackedOnPoint(oldDataNewCoordInfo, newCoordSys, oldData, idx));\n          rawIndices.push(rawIndex);\n        } else {\n          pointAdded = false;\n        }\n\n    } // Original indices\n\n\n    if (pointAdded) {\n      status.push(diffItem);\n      sortedIndices.push(sortedIndices.length);\n    }\n  } // Diff result may be crossed if all items are changed\n  // Sort by data index\n\n\n  sortedIndices.sort(function (a, b) {\n    return rawIndices[a] - rawIndices[b];\n  });\n  var sortedCurrPoints = [];\n  var sortedNextPoints = [];\n  var sortedCurrStackedPoints = [];\n  var sortedNextStackedPoints = [];\n  var sortedStatus = [];\n\n  for (var i = 0; i < sortedIndices.length; i++) {\n    var idx = sortedIndices[i];\n    sortedCurrPoints[i] = currPoints[idx];\n    sortedNextPoints[i] = nextPoints[idx];\n    sortedCurrStackedPoints[i] = currStackedPoints[idx];\n    sortedNextStackedPoints[i] = nextStackedPoints[idx];\n    sortedStatus[i] = status[idx];\n  }\n\n  return {\n    current: sortedCurrPoints,\n    next: sortedNextPoints,\n    stackedOnCurrent: sortedCurrStackedPoints,\n    stackedOnNext: sortedNextStackedPoints,\n    status: sortedStatus\n  };\n}\n\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar singleAxisHelper = require(\"../../coord/single/singleAxisHelper\");\n\nvar AxisView = require(\"../axis/AxisView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar XY = ['x', 'y'];\nvar WH = ['width', 'height'];\nvar SingleAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var coordSys = axis.coordinateSystem;\n    var otherExtent = getGlobalExtent(coordSys, 1 - getPointDimIndex(axis));\n    var pixelValue = coordSys.dataToPoint(value)[0];\n    var axisPointerType = axisPointerModel.get('type');\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = singleAxisHelper.layout(axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = singleAxisHelper.layout(axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var coordSys = axis.coordinateSystem;\n    var dimIndex = getPointDimIndex(axis);\n    var axisExtent = getGlobalExtent(coordSys, dimIndex);\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var otherExtent = getGlobalExtent(coordSys, 1 - dimIndex);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: {\n        verticalAlign: 'middle'\n      }\n    };\n  }\n});\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getPointDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = axis.getBandWidth();\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getPointDimIndex(axis))\n    };\n  }\n};\n\nfunction getPointDimIndex(axis) {\n  return axis.isHorizontal() ? 0 : 1;\n}\n\nfunction getGlobalExtent(coordSys, dimIndex) {\n  var rect = coordSys.getRect();\n  return [rect[XY[dimIndex]], rect[XY[dimIndex]] + rect[WH[dimIndex]]];\n}\n\nAxisView.registerAxisPointerClass('SingleAxisPointer', SingleAxisPointer);\nvar _default = SingleAxisPointer;\nmodule.exports = _default;","var LegendModel = require(\"./LegendModel\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar getLayoutParams = _layout.getLayoutParams;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar ScrollableLegendModel = LegendModel.extend({\n  type: 'legend.scroll',\n\n  /**\n   * @param {number} scrollDataIndex\n   */\n  setScrollDataIndex: function (scrollDataIndex) {\n    this.option.scrollDataIndex = scrollDataIndex;\n  },\n  defaultOption: {\n    scrollDataIndex: 0,\n    pageButtonItemGap: 5,\n    pageButtonGap: null,\n    pageButtonPosition: 'end',\n    // 'start' or 'end'\n    pageFormatter: '{current}/{total}',\n    // If null/undefined, do not show page.\n    pageIcons: {\n      horizontal: ['M0,0L12,-10L12,10z', 'M0,0L-12,-10L-12,10z'],\n      vertical: ['M0,0L20,0L10,-20z', 'M0,0L20,0L10,20z']\n    },\n    pageIconColor: '#2f4554',\n    pageIconInactiveColor: '#aaa',\n    pageIconSize: 15,\n    // Can be [10, 3], which represents [width, height]\n    pageTextStyle: {\n      color: '#333'\n    },\n    animationDurationUpdate: 800\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    var inputPositionParams = getLayoutParams(option);\n    ScrollableLegendModel.superCall(this, 'init', option, parentModel, ecModel, extraOpt);\n    mergeAndNormalizeLayoutParams(this, option, inputPositionParams);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option, extraOpt) {\n    ScrollableLegendModel.superCall(this, 'mergeOption', option, extraOpt);\n    mergeAndNormalizeLayoutParams(this, this.option, option);\n  },\n  getOrient: function () {\n    return this.get('orient') === 'vertical' ? {\n      index: 1,\n      name: 'vertical'\n    } : {\n      index: 0,\n      name: 'horizontal'\n    };\n  }\n}); // Do not `ignoreSize` to enable setting {left: 10, right: 10}.\n\nfunction mergeAndNormalizeLayoutParams(legendModel, target, raw) {\n  var orient = legendModel.getOrient();\n  var ignoreSize = [1, 1];\n  ignoreSize[orient.index] = 0;\n  mergeLayoutParam(target, raw, {\n    type: 'box',\n    ignoreSize: ignoreSize\n  });\n}\n\nvar _default = ScrollableLegendModel;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar SymbolClz = require(\"../helper/Symbol\");\n\nvar lineAnimationDiff = require(\"./lineAnimationDiff\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar _poly = require(\"./poly\");\n\nvar Polyline = _poly.Polyline;\nvar Polygon = _poly.Polygon;\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar _number = require(\"../../util/number\");\n\nvar round = _number.round;\n\nvar _helper = require(\"./helper\");\n\nvar prepareDataCoordInfo = _helper.prepareDataCoordInfo;\nvar getStackedOnPoint = _helper.getStackedOnPoint;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME step not support polar\nfunction isPointsSame(points1, points2) {\n  if (points1.length !== points2.length) {\n    return;\n  }\n\n  for (var i = 0; i < points1.length; i++) {\n    var p1 = points1[i];\n    var p2 = points2[i];\n\n    if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n      return;\n    }\n  }\n\n  return true;\n}\n\nfunction getSmooth(smooth) {\n  return typeof smooth === 'number' ? smooth : smooth ? 0.5 : 0;\n}\n\nfunction getAxisExtentWithGap(axis) {\n  var extent = axis.getGlobalExtent();\n\n  if (axis.onBand) {\n    // Remove extra 1px to avoid line miter in clipped edge\n    var halfBandWidth = axis.getBandWidth() / 2 - 1;\n    var dir = extent[1] > extent[0] ? 1 : -1;\n    extent[0] += dir * halfBandWidth;\n    extent[1] -= dir * halfBandWidth;\n  }\n\n  return extent;\n}\n/**\n * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n * @param {module:echarts/data/List} data\n * @param {Object} dataCoordInfo\n * @param {Array.<Array.<number>>} points\n */\n\n\nfunction getStackedOnPoints(coordSys, data, dataCoordInfo) {\n  if (!dataCoordInfo.valueDim) {\n    return [];\n  }\n\n  var points = [];\n\n  for (var idx = 0, len = data.count(); idx < len; idx++) {\n    points.push(getStackedOnPoint(dataCoordInfo, coordSys, data, idx));\n  }\n\n  return points;\n}\n\nfunction createGridClipShape(cartesian, hasAnimation, forSymbol, seriesModel) {\n  var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n  var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n  var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n  var x = Math.min(xExtent[0], xExtent[1]);\n  var y = Math.min(yExtent[0], yExtent[1]);\n  var width = Math.max(xExtent[0], xExtent[1]) - x;\n  var height = Math.max(yExtent[0], yExtent[1]) - y; // Avoid float number rounding error for symbol on the edge of axis extent.\n  // See #7913 and `test/dataZoom-clip.html`.\n\n  if (forSymbol) {\n    x -= 0.5;\n    width += 0.5;\n    y -= 0.5;\n    height += 0.5;\n  } else {\n    var lineWidth = seriesModel.get('lineStyle.width') || 2; // Expand clip shape to avoid clipping when line value exceeds axis\n\n    var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n\n    if (isHorizontal) {\n      y -= expandSize;\n      height += expandSize * 2;\n    } else {\n      x -= expandSize;\n      width += expandSize * 2;\n    }\n  }\n\n  var clipPath = new graphic.Rect({\n    shape: {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n    graphic.initProps(clipPath, {\n      shape: {\n        width: width,\n        height: height\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createPolarClipShape(polar, hasAnimation, forSymbol, seriesModel) {\n  var angleAxis = polar.getAngleAxis();\n  var radiusAxis = polar.getRadiusAxis();\n  var radiusExtent = radiusAxis.getExtent().slice();\n  radiusExtent[0] > radiusExtent[1] && radiusExtent.reverse();\n  var angleExtent = angleAxis.getExtent();\n  var RADIAN = Math.PI / 180; // Avoid float number rounding error for symbol on the edge of axis extent.\n\n  if (forSymbol) {\n    radiusExtent[0] -= 0.5;\n    radiusExtent[1] += 0.5;\n  }\n\n  var clipPath = new graphic.Sector({\n    shape: {\n      cx: round(polar.cx, 1),\n      cy: round(polar.cy, 1),\n      r0: round(radiusExtent[0], 1),\n      r: round(radiusExtent[1], 1),\n      startAngle: -angleExtent[0] * RADIAN,\n      endAngle: -angleExtent[1] * RADIAN,\n      clockwise: angleAxis.inverse\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: -angleExtent[1] * RADIAN\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createClipShape(coordSys, hasAnimation, forSymbol, seriesModel) {\n  return coordSys.type === 'polar' ? createPolarClipShape(coordSys, hasAnimation, forSymbol, seriesModel) : createGridClipShape(coordSys, hasAnimation, forSymbol, seriesModel);\n}\n\nfunction turnPointsIntoStep(points, coordSys, stepTurnAt) {\n  var baseAxis = coordSys.getBaseAxis();\n  var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n  var stepPoints = [];\n\n  for (var i = 0; i < points.length - 1; i++) {\n    var nextPt = points[i + 1];\n    var pt = points[i];\n    stepPoints.push(pt);\n    var stepPt = [];\n\n    switch (stepTurnAt) {\n      case 'end':\n        stepPt[baseIndex] = nextPt[baseIndex];\n        stepPt[1 - baseIndex] = pt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n        break;\n\n      case 'middle':\n        // default is start\n        var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n        var stepPt2 = [];\n        stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\n        stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n        stepPoints.push(stepPt);\n        stepPoints.push(stepPt2);\n        break;\n\n      default:\n        stepPt[baseIndex] = pt[baseIndex];\n        stepPt[1 - baseIndex] = nextPt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n    }\n  } // Last points\n\n\n  points[i] && stepPoints.push(points[i]);\n  return stepPoints;\n}\n\nfunction getVisualGradient(data, coordSys) {\n  var visualMetaList = data.getVisual('visualMeta');\n\n  if (!visualMetaList || !visualMetaList.length || !data.count()) {\n    // When data.count() is 0, gradient range can not be calculated.\n    return;\n  }\n\n  if (coordSys.type !== 'cartesian2d') {\n    return;\n  }\n\n  var coordDim;\n  var visualMeta;\n\n  for (var i = visualMetaList.length - 1; i >= 0; i--) {\n    var dimIndex = visualMetaList[i].dimension;\n    var dimName = data.dimensions[dimIndex];\n    var dimInfo = data.getDimensionInfo(dimName);\n    coordDim = dimInfo && dimInfo.coordDim; // Can only be x or y\n\n    if (coordDim === 'x' || coordDim === 'y') {\n      visualMeta = visualMetaList[i];\n      break;\n    }\n  }\n\n  if (!visualMeta) {\n    return;\n  } // If the area to be rendered is bigger than area defined by LinearGradient,\n  // the canvas spec prescribes that the color of the first stop and the last\n  // stop should be used. But if two stops are added at offset 0, in effect\n  // browsers use the color of the second stop to render area outside\n  // LinearGradient. So we can only infinitesimally extend area defined in\n  // LinearGradient to render `outerColors`.\n\n\n  var axis = coordSys.getAxis(coordDim); // dataToCoor mapping may not be linear, but must be monotonic.\n\n  var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n    return {\n      coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n      color: stop.color\n    };\n  });\n  var stopLen = colorStops.length;\n  var outerColors = visualMeta.outerColors.slice();\n\n  if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n    colorStops.reverse();\n    outerColors.reverse();\n  }\n\n  var tinyExtent = 10; // Arbitrary value: 10px\n\n  var minCoord = colorStops[0].coord - tinyExtent;\n  var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n  var coordSpan = maxCoord - minCoord;\n\n  if (coordSpan < 1e-3) {\n    return 'transparent';\n  }\n\n  zrUtil.each(colorStops, function (stop) {\n    stop.offset = (stop.coord - minCoord) / coordSpan;\n  });\n  colorStops.push({\n    offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n    color: outerColors[1] || 'transparent'\n  });\n  colorStops.unshift({\n    // notice colorStops.length have been changed.\n    offset: stopLen ? colorStops[0].offset : 0.5,\n    color: outerColors[0] || 'transparent'\n  }); // zrUtil.each(colorStops, function (colorStop) {\n  //     // Make sure each offset has rounded px to avoid not sharp edge\n  //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n  // });\n\n  var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n  gradient[coordDim] = minCoord;\n  gradient[coordDim + '2'] = maxCoord;\n  return gradient;\n}\n\nfunction getIsIgnoreFunc(seriesModel, data, coordSys) {\n  var showAllSymbol = seriesModel.get('showAllSymbol');\n  var isAuto = showAllSymbol === 'auto';\n\n  if (showAllSymbol && !isAuto) {\n    return;\n  }\n\n  var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n\n  if (!categoryAxis) {\n    return;\n  } // Note that category label interval strategy might bring some weird effect\n  // in some scenario: users may wonder why some of the symbols are not\n  // displayed. So we show all symbols as possible as we can.\n\n\n  if (isAuto // Simplify the logic, do not determine label overlap here.\n  && canShowAllSymbolForCategory(categoryAxis, data)) {\n    return;\n  } // Otherwise follow the label interval strategy on category axis.\n\n\n  var categoryDataDim = data.mapDimension(categoryAxis.dim);\n  var labelMap = {};\n  zrUtil.each(categoryAxis.getViewLabels(), function (labelItem) {\n    labelMap[labelItem.tickValue] = 1;\n  });\n  return function (dataIndex) {\n    return !labelMap.hasOwnProperty(data.get(categoryDataDim, dataIndex));\n  };\n}\n\nfunction canShowAllSymbolForCategory(categoryAxis, data) {\n  // In mose cases, line is monotonous on category axis, and the label size\n  // is close with each other. So we check the symbol size and some of the\n  // label size alone with the category axis to estimate whether all symbol\n  // can be shown without overlap.\n  var axisExtent = categoryAxis.getExtent();\n  var availSize = Math.abs(axisExtent[1] - axisExtent[0]) / categoryAxis.scale.count();\n  isNaN(availSize) && (availSize = 0); // 0/0 is NaN.\n  // Sampling some points, max 5.\n\n  var dataLen = data.count();\n  var step = Math.max(1, Math.round(dataLen / 5));\n\n  for (var dataIndex = 0; dataIndex < dataLen; dataIndex += step) {\n    if (SymbolClz.getSymbolSize(data, dataIndex // Only for cartesian, where `isHorizontal` exists.\n    )[categoryAxis.isHorizontal() ? 1 : 0] // Empirical number\n    * 1.5 > availSize) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nvar _default = ChartView.extend({\n  type: 'line',\n  init: function () {\n    var lineGroup = new graphic.Group();\n    var symbolDraw = new SymbolDraw();\n    this.group.add(symbolDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineGroup = lineGroup;\n  },\n  render: function (seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var lineStyleModel = seriesModel.getModel('lineStyle');\n    var areaStyleModel = seriesModel.getModel('areaStyle');\n    var points = data.mapArray(data.getItemLayout);\n    var isCoordSysPolar = coordSys.type === 'polar';\n    var prevCoordSys = this._coordSys;\n    var symbolDraw = this._symbolDraw;\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var lineGroup = this._lineGroup;\n    var hasAnimation = seriesModel.get('animation');\n    var isAreaChart = !areaStyleModel.isEmpty();\n    var valueOrigin = areaStyleModel.get('origin');\n    var dataCoordInfo = prepareDataCoordInfo(coordSys, data, valueOrigin);\n    var stackedOnPoints = getStackedOnPoints(coordSys, data, dataCoordInfo);\n    var showSymbol = seriesModel.get('showSymbol');\n    var isIgnoreFunc = showSymbol && !isCoordSysPolar && getIsIgnoreFunc(seriesModel, data, coordSys); // Remove temporary symbols\n\n    var oldData = this._data;\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    }); // Remove previous created symbols if showSymbol changed to false\n\n    if (!showSymbol) {\n      symbolDraw.remove();\n    }\n\n    group.add(lineGroup); // FIXME step not support polar\n\n    var step = !isCoordSysPolar && seriesModel.get('step'); // Initialization animation or coordinate system changed\n\n    if (!(polyline && prevCoordSys.type === coordSys.type && step === this._step)) {\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isIgnoreFunc,\n        clipShape: createClipShape(coordSys, false, true, seriesModel)\n      });\n\n      if (step) {\n        // TODO If stacked series is not step\n        points = turnPointsIntoStep(points, coordSys, step);\n        stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n      }\n\n      polyline = this._newPolyline(points, coordSys, hasAnimation);\n\n      if (isAreaChart) {\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      }\n\n      lineGroup.setClipPath(createClipShape(coordSys, true, false, seriesModel));\n    } else {\n      if (isAreaChart && !polygon) {\n        // If areaStyle is added\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      } else if (polygon && !isAreaChart) {\n        // If areaStyle is removed\n        lineGroup.remove(polygon);\n        polygon = this._polygon = null;\n      } // Update clipPath\n\n\n      lineGroup.setClipPath(createClipShape(coordSys, false, false, seriesModel)); // Always update, or it is wrong in the case turning on legend\n      // because points are not changed\n\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isIgnoreFunc,\n        clipShape: createClipShape(coordSys, false, true, seriesModel)\n      }); // Stop symbol animation and sync with line points\n      // FIXME performance?\n\n      data.eachItemGraphicEl(function (el) {\n        el.stopAnimation(true);\n      }); // In the case data zoom triggerred refreshing frequently\n      // Data may not change if line has a category axis. So it should animate nothing\n\n      if (!isPointsSame(this._stackedOnPoints, stackedOnPoints) || !isPointsSame(this._points, points)) {\n        if (hasAnimation) {\n          this._updateAnimation(data, stackedOnPoints, coordSys, api, step, valueOrigin);\n        } else {\n          // Not do it in update with animation\n          if (step) {\n            // TODO If stacked series is not step\n            points = turnPointsIntoStep(points, coordSys, step);\n            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n          }\n\n          polyline.setShape({\n            points: points\n          });\n          polygon && polygon.setShape({\n            points: points,\n            stackedOnPoints: stackedOnPoints\n          });\n        }\n      }\n    }\n\n    var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n    polyline.useStyle(zrUtil.defaults( // Use color in lineStyle first\n    lineStyleModel.getLineStyle(), {\n      fill: 'none',\n      stroke: visualColor,\n      lineJoin: 'bevel'\n    }));\n    var smooth = seriesModel.get('smooth');\n    smooth = getSmooth(seriesModel.get('smooth'));\n    polyline.setShape({\n      smooth: smooth,\n      smoothMonotone: seriesModel.get('smoothMonotone'),\n      connectNulls: seriesModel.get('connectNulls')\n    });\n\n    if (polygon) {\n      var stackedOnSeries = data.getCalculationInfo('stackedOnSeries');\n      var stackedOnSmooth = 0;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: visualColor,\n        opacity: 0.7,\n        lineJoin: 'bevel'\n      }));\n\n      if (stackedOnSeries) {\n        stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n      }\n\n      polygon.setShape({\n        smooth: smooth,\n        stackedOnSmooth: stackedOnSmooth,\n        smoothMonotone: seriesModel.get('smoothMonotone'),\n        connectNulls: seriesModel.get('connectNulls')\n      });\n    }\n\n    this._data = data; // Save the coordinate system for transition animation when data changed\n\n    this._coordSys = coordSys;\n    this._stackedOnPoints = stackedOnPoints;\n    this._points = points;\n    this._step = step;\n    this._valueOrigin = valueOrigin;\n  },\n  dispose: function () {},\n  highlight: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (!symbol) {\n        // Create a temporary symbol if it is not exists\n        var pt = data.getItemLayout(dataIndex);\n\n        if (!pt) {\n          // Null data\n          return;\n        }\n\n        symbol = new SymbolClz(data, dataIndex);\n        symbol.position = pt;\n        symbol.setZ(seriesModel.get('zlevel'), seriesModel.get('z'));\n        symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n        symbol.__temp = true;\n        data.setItemGraphicEl(dataIndex, symbol); // Stop scale animation\n\n        symbol.stopSymbolAnimation(true);\n        this.group.add(symbol);\n      }\n\n      symbol.highlight();\n    } else {\n      // Highlight whole series\n      ChartView.prototype.highlight.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n  downplay: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (symbol) {\n        if (symbol.__temp) {\n          data.setItemGraphicEl(dataIndex, null);\n          this.group.remove(symbol);\n        } else {\n          symbol.downplay();\n        }\n      }\n    } else {\n      // FIXME\n      // can not downplay completely.\n      // Downplay whole series\n      ChartView.prototype.downplay.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolyline: function (points) {\n    var polyline = this._polyline; // Remove previous created polyline\n\n    if (polyline) {\n      this._lineGroup.remove(polyline);\n    }\n\n    polyline = new Polyline({\n      shape: {\n        points: points\n      },\n      silent: true,\n      z2: 10\n    });\n\n    this._lineGroup.add(polyline);\n\n    this._polyline = polyline;\n    return polyline;\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} stackedOnPoints\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolygon: function (points, stackedOnPoints) {\n    var polygon = this._polygon; // Remove previous created polygon\n\n    if (polygon) {\n      this._lineGroup.remove(polygon);\n    }\n\n    polygon = new Polygon({\n      shape: {\n        points: points,\n        stackedOnPoints: stackedOnPoints\n      },\n      silent: true\n    });\n\n    this._lineGroup.add(polygon);\n\n    this._polygon = polygon;\n    return polygon;\n  },\n\n  /**\n   * @private\n   */\n  // FIXME Two value axis\n  _updateAnimation: function (data, stackedOnPoints, coordSys, api, step, valueOrigin) {\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var seriesModel = data.hostModel;\n    var diff = lineAnimationDiff(this._data, data, this._stackedOnPoints, stackedOnPoints, this._coordSys, coordSys, this._valueOrigin, valueOrigin);\n    var current = diff.current;\n    var stackedOnCurrent = diff.stackedOnCurrent;\n    var next = diff.next;\n    var stackedOnNext = diff.stackedOnNext;\n\n    if (step) {\n      // TODO If stacked series is not step\n      current = turnPointsIntoStep(diff.current, coordSys, step);\n      stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n      next = turnPointsIntoStep(diff.next, coordSys, step);\n      stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n    } // `diff.current` is subset of `current` (which should be ensured by\n    // turnPointsIntoStep), so points in `__points` can be updated when\n    // points in `current` are update during animation.\n\n\n    polyline.shape.__points = diff.current;\n    polyline.shape.points = current;\n    graphic.updateProps(polyline, {\n      shape: {\n        points: next\n      }\n    }, seriesModel);\n\n    if (polygon) {\n      polygon.setShape({\n        points: current,\n        stackedOnPoints: stackedOnCurrent\n      });\n      graphic.updateProps(polygon, {\n        shape: {\n          points: next,\n          stackedOnPoints: stackedOnNext\n        }\n      }, seriesModel);\n    }\n\n    var updatedDataInfo = [];\n    var diffStatus = diff.status;\n\n    for (var i = 0; i < diffStatus.length; i++) {\n      var cmd = diffStatus[i].cmd;\n\n      if (cmd === '=') {\n        var el = data.getItemGraphicEl(diffStatus[i].idx1);\n\n        if (el) {\n          updatedDataInfo.push({\n            el: el,\n            ptIdx: i // Index of points\n\n          });\n        }\n      }\n    }\n\n    if (polyline.animators && polyline.animators.length) {\n      polyline.animators[0].during(function () {\n        for (var i = 0; i < updatedDataInfo.length; i++) {\n          var el = updatedDataInfo[i].el;\n          el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n        }\n      });\n    }\n  },\n  remove: function (ecModel) {\n    var group = this.group;\n    var oldData = this._data;\n\n    this._lineGroup.removeAll();\n\n    this._symbolDraw.remove(true); // Remove temporary created elements when highlighting\n\n\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    });\n    this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._data = null;\n  }\n});\n\nmodule.exports = _default;","require(\"./graphic\");\n\nvar _zrender = require(\"../zrender\");\n\nvar registerPainter = _zrender.registerPainter;\n\nvar Painter = require(\"./Painter\");\n\nregisterPainter('vml', Painter);","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar contrastColor = '#eee';\n\nvar axisCommon = function () {\n  return {\n    axisLine: {\n      lineStyle: {\n        color: contrastColor\n      }\n    },\n    axisTick: {\n      lineStyle: {\n        color: contrastColor\n      }\n    },\n    axisLabel: {\n      textStyle: {\n        color: contrastColor\n      }\n    },\n    splitLine: {\n      lineStyle: {\n        type: 'dashed',\n        color: '#aaa'\n      }\n    },\n    splitArea: {\n      areaStyle: {\n        color: contrastColor\n      }\n    }\n  };\n};\n\nvar colorPalette = ['#dd6b66', '#759aa0', '#e69d87', '#8dc1a9', '#ea7e53', '#eedd78', '#73a373', '#73b9bc', '#7289ab', '#91ca8c', '#f49f42'];\nvar theme = {\n  color: colorPalette,\n  backgroundColor: '#333',\n  tooltip: {\n    axisPointer: {\n      lineStyle: {\n        color: contrastColor\n      },\n      crossStyle: {\n        color: contrastColor\n      }\n    }\n  },\n  legend: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  textStyle: {\n    color: contrastColor\n  },\n  title: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  toolbox: {\n    iconStyle: {\n      normal: {\n        borderColor: contrastColor\n      }\n    }\n  },\n  dataZoom: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  visualMap: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  timeline: {\n    lineStyle: {\n      color: contrastColor\n    },\n    itemStyle: {\n      normal: {\n        color: colorPalette[1]\n      }\n    },\n    label: {\n      normal: {\n        textStyle: {\n          color: contrastColor\n        }\n      }\n    },\n    controlStyle: {\n      normal: {\n        color: contrastColor,\n        borderColor: contrastColor\n      }\n    }\n  },\n  timeAxis: axisCommon(),\n  logAxis: axisCommon(),\n  valueAxis: axisCommon(),\n  categoryAxis: axisCommon(),\n  line: {\n    symbol: 'circle'\n  },\n  graph: {\n    color: colorPalette\n  },\n  gauge: {\n    title: {\n      textStyle: {\n        color: contrastColor\n      }\n    }\n  },\n  candlestick: {\n    itemStyle: {\n      normal: {\n        color: '#FD1050',\n        color0: '#0CF49B',\n        borderColor: '#FD1050',\n        borderColor0: '#0CF49B'\n      }\n    }\n  }\n};\ntheme.categoryAxis.splitLine.show = false;\nvar _default = theme;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar AxisView = require(\"./AxisView\");\n\nvar cartesianAxisHelper = require(\"../../coord/cartesian/cartesianAxisHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitArea', 'splitLine']; // function getAlignWithLabel(model, axisModel) {\n//     var alignWithLabel = model.get('alignWithLabel');\n//     if (alignWithLabel === 'auto') {\n//         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n//     }\n//     return alignWithLabel;\n// }\n\nvar CartesianAxisView = AxisView.extend({\n  type: 'cartesianAxis',\n  axisPointerClass: 'CartesianAxisPointer',\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var gridModel = axisModel.getCoordSysModel();\n    var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (axisModel.get(name + '.show')) {\n        this['_' + name](axisModel, gridModel);\n      }\n    }, this);\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n    CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n  remove: function () {\n    this._splitAreaColors = null;\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @private\n   */\n  _splitLine: function (axisModel, gridModel) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords({\n      tickModel: splitLineModel\n    });\n    var p1 = [];\n    var p2 = []; // Simple optimization\n    // Batching the lines if color are the same\n\n    var lineStyle = lineStyleModel.getLineStyle();\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n      var tickValue = ticksCoords[i].tickValue;\n\n      this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n        anid: tickValue != null ? 'line_' + ticksCoords[i].tickValue : null,\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: zrUtil.defaults({\n          stroke: lineColors[colorIndex]\n        }, lineStyle),\n        silent: true\n      })));\n    }\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @private\n   */\n  _splitArea: function (axisModel, gridModel) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitAreaModel = axisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var ticksCoords = axis.getTicksCoords({\n      tickModel: splitAreaModel,\n      clamp: true\n    });\n\n    if (!ticksCoords.length) {\n      return;\n    } // For Making appropriate splitArea animation, the color and anid\n    // should be corresponding to previous one if possible.\n\n\n    var areaColorsLen = areaColors.length;\n    var lastSplitAreaColors = this._splitAreaColors;\n    var newSplitAreaColors = zrUtil.createHashMap();\n    var colorIndex = 0;\n\n    if (lastSplitAreaColors) {\n      for (var i = 0; i < ticksCoords.length; i++) {\n        var cIndex = lastSplitAreaColors.get(ticksCoords[i].tickValue);\n\n        if (cIndex != null) {\n          colorIndex = (cIndex + (areaColorsLen - 1) * i) % areaColorsLen;\n          break;\n        }\n      }\n    }\n\n    var prev = axis.toGlobalCoord(ticksCoords[0].coord);\n    var areaStyle = areaStyleModel.getAreaStyle();\n    areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (axis.isHorizontal()) {\n        x = prev;\n        y = gridRect.y;\n        width = tickCoord - x;\n        height = gridRect.height;\n        prev = x + width;\n      } else {\n        x = gridRect.x;\n        y = prev;\n        width = gridRect.width;\n        height = tickCoord - y;\n        prev = y + height;\n      }\n\n      var tickValue = ticksCoords[i - 1].tickValue;\n      tickValue != null && newSplitAreaColors.set(tickValue, colorIndex);\n\n      this._axisGroup.add(new graphic.Rect({\n        anid: tickValue != null ? 'area_' + tickValue : null,\n        shape: {\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        },\n        style: zrUtil.defaults({\n          fill: areaColors[colorIndex]\n        }, areaStyle),\n        silent: true\n      }));\n\n      colorIndex = (colorIndex + 1) % areaColorsLen;\n    }\n\n    this._splitAreaColors = newSplitAreaColors;\n  }\n});\nCartesianAxisView.extend({\n  type: 'xAxis'\n});\nCartesianAxisView.extend({\n  type: 'yAxis'\n});","var BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar bbox = require(\"zrender/lib/core/bbox\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar polygonContain = require(\"zrender/lib/contain/polygon\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/coord/geo/Region\n */\n\n/**\n * @param {string} name\n * @param {Array} geometries\n * @param {Array.<number>} cp\n */\nfunction Region(name, geometries, cp) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.name = name;\n  /**\n   * @type {Array.<Array>}\n   * @readOnly\n   */\n\n  this.geometries = geometries;\n\n  if (!cp) {\n    var rect = this.getBoundingRect();\n    cp = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  } else {\n    cp = [cp[0], cp[1]];\n  }\n  /**\n   * @type {Array.<number>}\n   */\n\n\n  this.center = cp;\n}\n\nRegion.prototype = {\n  constructor: Region,\n  properties: null,\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    var rect = this._rect;\n\n    if (rect) {\n      return rect;\n    }\n\n    var MAX_NUMBER = Number.MAX_VALUE;\n    var min = [MAX_NUMBER, MAX_NUMBER];\n    var max = [-MAX_NUMBER, -MAX_NUMBER];\n    var min2 = [];\n    var max2 = [];\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      } // Doesn't consider hole\n\n\n      var exterior = geometries[i].exterior;\n      bbox.fromPoints(exterior, min2, max2);\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return this._rect = new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * @param {<Array.<number>} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var rect = this.getBoundingRect();\n    var geometries = this.geometries;\n\n    if (!rect.contain(coord[0], coord[1])) {\n      return false;\n    }\n\n    loopGeo: for (var i = 0, len = geometries.length; i < len; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      if (polygonContain.contain(exterior, coord[0], coord[1])) {\n        // Not in the region if point is in the hole.\n        for (var k = 0; k < (interiors ? interiors.length : 0); k++) {\n          if (polygonContain.contain(interiors[k])) {\n            continue loopGeo;\n          }\n        }\n\n        return true;\n      }\n    }\n\n    return false;\n  },\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var aspect = rect.width / rect.height;\n\n    if (!width) {\n      width = aspect * height;\n    } else if (!height) {\n      height = width / aspect;\n    }\n\n    var target = new BoundingRect(x, y, width, height);\n    var transform = rect.calculateTransform(target);\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      for (var p = 0; p < exterior.length; p++) {\n        vec2.applyTransform(exterior[p], exterior[p], transform);\n      }\n\n      for (var h = 0; h < (interiors ? interiors.length : 0); h++) {\n        for (var p = 0; p < interiors[h].length; p++) {\n          vec2.applyTransform(interiors[h][p], interiors[h][p], transform);\n        }\n      }\n    }\n\n    rect = this._rect;\n    rect.copy(target); // Update center\n\n    this.center = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n};\nvar _default = Region;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar throttleUtil = require(\"../util/throttle\");\n\nvar parallelPreprocessor = require(\"../coord/parallel/parallelPreprocessor\");\n\nrequire(\"../coord/parallel/parallelCreator\");\n\nrequire(\"../coord/parallel/ParallelModel\");\n\nrequire(\"./parallelAxis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar CLICK_THRESHOLD = 5; // > 4\n// Parallel view\n\necharts.extendComponentView({\n  type: 'parallel',\n  render: function (parallelModel, ecModel, api) {\n    this._model = parallelModel;\n    this._api = api;\n\n    if (!this._handlers) {\n      this._handlers = {};\n      zrUtil.each(handlers, function (handler, eventName) {\n        api.getZr().on(eventName, this._handlers[eventName] = zrUtil.bind(handler, this));\n      }, this);\n    }\n\n    throttleUtil.createOrUpdate(this, '_throttledDispatchExpand', parallelModel.get('axisExpandRate'), 'fixRate');\n  },\n  dispose: function (ecModel, api) {\n    zrUtil.each(this._handlers, function (handler, eventName) {\n      api.getZr().off(eventName, handler);\n    });\n    this._handlers = null;\n  },\n\n  /**\n   * @param {Object} [opt] If null, cancle the last action triggering for debounce.\n   */\n  _throttledDispatchExpand: function (opt) {\n    this._dispatchExpand(opt);\n  },\n  _dispatchExpand: function (opt) {\n    opt && this._api.dispatchAction(zrUtil.extend({\n      type: 'parallelAxisExpand'\n    }, opt));\n  }\n});\nvar handlers = {\n  mousedown: function (e) {\n    if (checkTrigger(this, 'click')) {\n      this._mouseDownPoint = [e.offsetX, e.offsetY];\n    }\n  },\n  mouseup: function (e) {\n    var mouseDownPoint = this._mouseDownPoint;\n\n    if (checkTrigger(this, 'click') && mouseDownPoint) {\n      var point = [e.offsetX, e.offsetY];\n      var dist = Math.pow(mouseDownPoint[0] - point[0], 2) + Math.pow(mouseDownPoint[1] - point[1], 2);\n\n      if (dist > CLICK_THRESHOLD) {\n        return;\n      }\n\n      var result = this._model.coordinateSystem.getSlidedAxisExpandWindow([e.offsetX, e.offsetY]);\n\n      result.behavior !== 'none' && this._dispatchExpand({\n        axisExpandWindow: result.axisExpandWindow\n      });\n    }\n\n    this._mouseDownPoint = null;\n  },\n  mousemove: function (e) {\n    // Should do nothing when brushing.\n    if (this._mouseDownPoint || !checkTrigger(this, 'mousemove')) {\n      return;\n    }\n\n    var model = this._model;\n    var result = model.coordinateSystem.getSlidedAxisExpandWindow([e.offsetX, e.offsetY]);\n    var behavior = result.behavior;\n    behavior === 'jump' && this._throttledDispatchExpand.debounceNextCall(model.get('axisExpandDebounce'));\n\n    this._throttledDispatchExpand(behavior === 'none' ? null // Cancle the last trigger, in case that mouse slide out of the area quickly.\n    : {\n      axisExpandWindow: result.axisExpandWindow,\n      // Jumping uses animation, and sliding suppresses animation.\n      animation: behavior === 'jump' ? null : false\n    });\n  }\n};\n\nfunction checkTrigger(view, triggerOn) {\n  var model = view._model;\n  return model.get('axisExpandable') && model.get('axisExpandTriggerOn') === triggerOn;\n}\n\necharts.registerPreprocessor(parallelPreprocessor);","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar Model = require(\"../../model/Model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar DEFAULT_OUT_OF_BRUSH_COLOR = ['#ddd'];\nvar BrushModel = echarts.extendComponentModel({\n  type: 'brush',\n  dependencies: ['geo', 'grid', 'xAxis', 'yAxis', 'parallel', 'series'],\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    // inBrush: null,\n    // outOfBrush: null,\n    toolbox: null,\n    // Default value see preprocessor.\n    brushLink: null,\n    // Series indices array, broadcast using dataIndex.\n    // or 'all', which means all series. 'none' or null means no series.\n    seriesIndex: 'all',\n    // seriesIndex array, specify series controlled by this brush component.\n    geoIndex: null,\n    //\n    xAxisIndex: null,\n    yAxisIndex: null,\n    brushType: 'rect',\n    // Default brushType, see BrushController.\n    brushMode: 'single',\n    // Default brushMode, 'single' or 'multiple'\n    transformable: true,\n    // Default transformable.\n    brushStyle: {\n      // Default brushStyle\n      borderWidth: 1,\n      color: 'rgba(120,140,180,0.3)',\n      borderColor: 'rgba(120,140,180,0.8)'\n    },\n    throttleType: 'fixRate',\n    // Throttle in brushSelected event. 'fixRate' or 'debounce'.\n    // If null, no throttle. Valid only in the first brush component\n    throttleDelay: 0,\n    // Unit: ms, 0 means every event will be triggered.\n    // FIXME\n    // 试验效果\n    removeOnClick: true,\n    z: 10000\n  },\n\n  /**\n   * @readOnly\n   * @type {Array.<Object>}\n   */\n  areas: [],\n\n  /**\n   * Current activated brush type.\n   * If null, brush is inactived.\n   * see module:echarts/component/helper/BrushController\n   * @readOnly\n   * @type {string}\n   */\n  brushType: null,\n\n  /**\n   * Current brush opt.\n   * see module:echarts/component/helper/BrushController\n   * @readOnly\n   * @type {Object}\n   */\n  brushOption: {},\n\n  /**\n   * @readOnly\n   * @type {Array.<Object>}\n   */\n  coordInfoList: [],\n  optionUpdated: function (newOption, isInit) {\n    var thisOption = this.option;\n    !isInit && visualSolution.replaceVisualOption(thisOption, newOption, ['inBrush', 'outOfBrush']);\n    var inBrush = thisOption.inBrush = thisOption.inBrush || {}; // Always give default visual, consider setOption at the second time.\n\n    thisOption.outOfBrush = thisOption.outOfBrush || {\n      color: DEFAULT_OUT_OF_BRUSH_COLOR\n    };\n\n    if (!inBrush.hasOwnProperty('liftZ')) {\n      // Bigger than the highlight z lift, otherwise it will\n      // be effected by the highlight z when brush.\n      inBrush.liftZ = 5;\n    }\n  },\n\n  /**\n   * If ranges is null/undefined, range state remain.\n   *\n   * @param {Array.<Object>} [ranges]\n   */\n  setAreas: function (areas) {\n    // If ranges is null/undefined, range state remain.\n    // This helps user to dispatchAction({type: 'brush'}) with no areas\n    // set but just want to get the current brush select info from a `brush` event.\n    if (!areas) {\n      return;\n    }\n\n    this.areas = zrUtil.map(areas, function (area) {\n      return generateBrushOption(this.option, area);\n    }, this);\n  },\n\n  /**\n   * see module:echarts/component/helper/BrushController\n   * @param {Object} brushOption\n   */\n  setBrushOption: function (brushOption) {\n    this.brushOption = generateBrushOption(this.option, brushOption);\n    this.brushType = this.brushOption.brushType;\n  }\n});\n\nfunction generateBrushOption(option, brushOption) {\n  return zrUtil.merge({\n    brushType: option.brushType,\n    brushMode: option.brushMode,\n    transformable: option.transformable,\n    brushStyle: new Model(option.brushStyle).getItemStyle(),\n    removeOnClick: option.removeOnClick,\n    z: option.z\n  }, brushOption, true);\n}\n\nvar _default = BrushModel;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar _number = require(\"../../util/number\");\n\nvar getPercentWithPrecision = _number.getPercentWithPrecision;\n\nvar dataSelectableMixin = require(\"../../component/helper/selectableMixin\");\n\nvar _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawAttr = _dataProvider.retrieveRawAttr;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PieSeries = echarts.extendSeriesModel({\n  type: 'series.pie',\n  // Overwrite\n  init: function (option) {\n    PieSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n\n    this.updateSelectedMap(this._createSelectableList());\n\n    this._defaultLabelLine(option);\n  },\n  // Overwrite\n  mergeOption: function (newOption) {\n    PieSeries.superCall(this, 'mergeOption', newOption);\n    this.updateSelectedMap(this._createSelectableList());\n  },\n  getInitialData: function (option, ecModel) {\n    return createListSimply(this, ['value']);\n  },\n  _createSelectableList: function () {\n    var data = this.getRawData();\n    var valueDim = data.mapDimension('value');\n    var targetList = [];\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      targetList.push({\n        name: data.getName(i),\n        value: data.get(valueDim, i),\n        selected: retrieveRawAttr(data, i, 'selected')\n      });\n    }\n\n    return targetList;\n  },\n  // Overwrite\n  getDataParams: function (dataIndex) {\n    var data = this.getData();\n    var params = PieSeries.superCall(this, 'getDataParams', dataIndex); // FIXME toFixed?\n\n    var valueList = [];\n    data.each(data.mapDimension('value'), function (value) {\n      valueList.push(value);\n    });\n    params.percent = getPercentWithPrecision(valueList, dataIndex, data.hostModel.get('percentPrecision'));\n    params.$vars.push('percent');\n    return params;\n  },\n  _defaultLabelLine: function (option) {\n    // Extend labelLine emphasis\n    modelUtil.defaultEmphasis(option, 'labelLine', ['show']);\n    var labelLineNormalOpt = option.labelLine;\n    var labelLineEmphasisOpt = option.emphasis.labelLine; // Not show label line if `label.normal.show = false`\n\n    labelLineNormalOpt.show = labelLineNormalOpt.show && option.label.show;\n    labelLineEmphasisOpt.show = labelLineEmphasisOpt.show && option.emphasis.label.show;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    radius: [0, '75%'],\n    // 默认顺时针\n    clockwise: true,\n    startAngle: 90,\n    // 最小角度改为0\n    minAngle: 0,\n    // 选中时扇区偏移量\n    selectedOffset: 10,\n    // 高亮扇区偏移量\n    hoverOffset: 10,\n    // If use strategy to avoid label overlapping\n    avoidLabelOverlap: true,\n    // 选择模式，默认关闭，可选single，multiple\n    // selectedMode: false,\n    // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）\n    // roseType: null,\n    percentPrecision: 2,\n    // If still show when all data zero.\n    stillShowZeroSum: true,\n    // cursor: null,\n    label: {\n      // If rotate around circle\n      rotate: false,\n      show: true,\n      // 'outer', 'inside', 'center'\n      position: 'outer' // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n      // 默认使用全局文本样式，详见TEXTSTYLE\n      // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数\n\n    },\n    // Enabled when label.normal.position is 'outer'\n    labelLine: {\n      show: true,\n      // 引导线两段中的第一段长度\n      length: 15,\n      // 引导线两段中的第二段长度\n      length2: 15,\n      smooth: false,\n      lineStyle: {\n        // color: 各异,\n        width: 1,\n        type: 'solid'\n      }\n    },\n    itemStyle: {\n      borderWidth: 1\n    },\n    // Animation type canbe expansion, scale\n    animationType: 'expansion',\n    animationEasing: 'cubicOut'\n  }\n});\nzrUtil.mixin(PieSeries, dataSelectableMixin);\nvar _default = PieSeries;\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar assert = _util.assert;\nvar isArray = _util.isArray;\n\nvar _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {Object} define\n * @return See the return of `createTask`.\n */\nfunction createTask(define) {\n  return new Task(define);\n}\n/**\n * @constructor\n * @param {Object} define\n * @param {Function} define.reset Custom reset\n * @param {Function} [define.plan] Returns 'reset' indicate reset immediately.\n * @param {Function} [define.count] count is used to determin data task.\n * @param {Function} [define.onDirty] count is used to determin data task.\n */\n\n\nfunction Task(define) {\n  define = define || {};\n  this._reset = define.reset;\n  this._plan = define.plan;\n  this._count = define.count;\n  this._onDirty = define.onDirty;\n  this._dirty = true; // Context must be specified implicitly, to\n  // avoid miss update context when model changed.\n\n  this.context;\n}\n\nvar taskProto = Task.prototype;\n/**\n * @param {Object} performArgs\n * @param {number} [performArgs.step] Specified step.\n * @param {number} [performArgs.skip] Skip customer perform call.\n * @param {number} [performArgs.modBy] Sampling window size.\n * @param {number} [performArgs.modDataCount] Sampling count.\n */\n\ntaskProto.perform = function (performArgs) {\n  var upTask = this._upstream;\n  var skip = performArgs && performArgs.skip; // TODO some refactor.\n  // Pull data. Must pull data each time, because context.data\n  // may be updated by Series.setData.\n\n  if (this._dirty && upTask) {\n    var context = this.context;\n    context.data = context.outputData = upTask.context.outputData;\n  }\n\n  if (this.__pipeline) {\n    this.__pipeline.currentTask = this;\n  }\n\n  var planResult;\n\n  if (this._plan && !skip) {\n    planResult = this._plan(this.context);\n  } // Support sharding by mod, which changes the render sequence and makes the rendered graphic\n  // elements uniformed distributed when progress, especially when moving or zooming.\n\n\n  var lastModBy = normalizeModBy(this._modBy);\n  var lastModDataCount = this._modDataCount || 0;\n  var modBy = normalizeModBy(performArgs && performArgs.modBy);\n  var modDataCount = performArgs && performArgs.modDataCount || 0;\n\n  if (lastModBy !== modBy || lastModDataCount !== modDataCount) {\n    planResult = 'reset';\n  }\n\n  function normalizeModBy(val) {\n    !(val >= 1) && (val = 1); // jshint ignore:line\n\n    return val;\n  }\n\n  var forceFirstProgress;\n\n  if (this._dirty || planResult === 'reset') {\n    this._dirty = false;\n    forceFirstProgress = reset(this, skip);\n  }\n\n  this._modBy = modBy;\n  this._modDataCount = modDataCount;\n  var step = performArgs && performArgs.step;\n\n  if (upTask) {\n    this._dueEnd = upTask._outputDueEnd;\n  } // DataTask or overallTask\n  else {\n      this._dueEnd = this._count ? this._count(this.context) : Infinity;\n    } // Note: Stubs, that its host overall task let it has progress, has progress.\n  // If no progress, pass index from upstream to downstream each time plan called.\n\n\n  if (this._progress) {\n    var start = this._dueIndex;\n    var end = Math.min(step != null ? this._dueIndex + step : Infinity, this._dueEnd);\n\n    if (!skip && (forceFirstProgress || start < end)) {\n      var progress = this._progress;\n\n      if (isArray(progress)) {\n        for (var i = 0; i < progress.length; i++) {\n          doProgress(this, progress[i], start, end, modBy, modDataCount);\n        }\n      } else {\n        doProgress(this, progress, start, end, modBy, modDataCount);\n      }\n    }\n\n    this._dueIndex = end; // If no `outputDueEnd`, assume that output data and\n    // input data is the same, so use `dueIndex` as `outputDueEnd`.\n\n    var outputDueEnd = this._settedOutputEnd != null ? this._settedOutputEnd : end;\n    this._outputDueEnd = outputDueEnd;\n  } else {\n    // (1) Some overall task has no progress.\n    // (2) Stubs, that its host overall task do not let it has progress, has no progress.\n    // This should always be performed so it can be passed to downstream.\n    this._dueIndex = this._outputDueEnd = this._settedOutputEnd != null ? this._settedOutputEnd : this._dueEnd;\n  }\n\n  return this.unfinished();\n};\n\nvar iterator = function () {\n  var end;\n  var current;\n  var modBy;\n  var modDataCount;\n  var winCount;\n  var it = {\n    reset: function (s, e, sStep, sCount) {\n      current = s;\n      end = e;\n      modBy = sStep;\n      modDataCount = sCount;\n      winCount = Math.ceil(modDataCount / modBy);\n      it.next = modBy > 1 && modDataCount > 0 ? modNext : sequentialNext;\n    }\n  };\n  return it;\n\n  function sequentialNext() {\n    return current < end ? current++ : null;\n  }\n\n  function modNext() {\n    var dataIndex = current % winCount * modBy + Math.ceil(current / winCount);\n    var result = current >= end ? null : dataIndex < modDataCount ? dataIndex // If modDataCount is smaller than data.count() (consider `appendData` case),\n    // Use normal linear rendering mode.\n    : current;\n    current++;\n    return result;\n  }\n}();\n\ntaskProto.dirty = function () {\n  this._dirty = true;\n  this._onDirty && this._onDirty(this.context);\n};\n\nfunction doProgress(taskIns, progress, start, end, modBy, modDataCount) {\n  iterator.reset(start, end, modBy, modDataCount);\n  taskIns._callingProgress = progress;\n\n  taskIns._callingProgress({\n    start: start,\n    end: end,\n    count: end - start,\n    next: iterator.next\n  }, taskIns.context);\n}\n\nfunction reset(taskIns, skip) {\n  taskIns._dueIndex = taskIns._outputDueEnd = taskIns._dueEnd = 0;\n  taskIns._settedOutputEnd = null;\n  var progress;\n  var forceFirstProgress;\n\n  if (!skip && taskIns._reset) {\n    progress = taskIns._reset(taskIns.context);\n\n    if (progress && progress.progress) {\n      forceFirstProgress = progress.forceFirstProgress;\n      progress = progress.progress;\n    } // To simplify no progress checking, array must has item.\n\n\n    if (isArray(progress) && !progress.length) {\n      progress = null;\n    }\n  }\n\n  taskIns._progress = progress;\n  taskIns._modBy = taskIns._modDataCount = null;\n  var downstream = taskIns._downstream;\n  downstream && downstream.dirty();\n  return forceFirstProgress;\n}\n/**\n * @return {boolean}\n */\n\n\ntaskProto.unfinished = function () {\n  return this._progress && this._dueIndex < this._dueEnd;\n};\n/**\n * @param {Object} downTask The downstream task.\n * @return {Object} The downstream task.\n */\n\n\ntaskProto.pipe = function (downTask) {\n  // If already downstream, do not dirty downTask.\n  if (this._downstream !== downTask || this._dirty) {\n    this._downstream = downTask;\n    downTask._upstream = this;\n    downTask.dirty();\n  }\n};\n\ntaskProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._upstream && (this._upstream._downstream = null);\n  this._downstream && (this._downstream._upstream = null);\n  this._dirty = false;\n  this._disposed = true;\n};\n\ntaskProto.getUpstream = function () {\n  return this._upstream;\n};\n\ntaskProto.getDownstream = function () {\n  return this._downstream;\n};\n\ntaskProto.setOutputEnd = function (end) {\n  // This only happend in dataTask, dataZoom, map, currently.\n  // where dataZoom do not set end each time, but only set\n  // when reset. So we should record the setted end, in case\n  // that the stub of dataZoom perform again and earse the\n  // setted end by upstream.\n  this._outputDueEnd = this._settedOutputEnd = end;\n}; ///////////////////////////////////////////////////////////\n// For stream debug (Should be commented out after used!)\n// Usage: printTask(this, 'begin');\n// Usage: printTask(this, null, {someExtraProp});\n// function printTask(task, prefix, extra) {\n//     window.ecTaskUID == null && (window.ecTaskUID = 0);\n//     task.uidDebug == null && (task.uidDebug = `task_${window.ecTaskUID++}`);\n//     task.agent && task.agent.uidDebug == null && (task.agent.uidDebug = `task_${window.ecTaskUID++}`);\n//     var props = [];\n//     if (task.__pipeline) {\n//         var val = `${task.__idxInPipeline}/${task.__pipeline.tail.__idxInPipeline} ${task.agent ? '(stub)' : ''}`;\n//         props.push({text: 'idx', value: val});\n//     } else {\n//         var stubCount = 0;\n//         task.agentStubMap.each(() => stubCount++);\n//         props.push({text: 'idx', value: `overall (stubs: ${stubCount})`});\n//     }\n//     props.push({text: 'uid', value: task.uidDebug});\n//     if (task.__pipeline) {\n//         props.push({text: 'pid', value: task.__pipeline.id});\n//         task.agent && props.push(\n//             {text: 'stubFor', value: task.agent.uidDebug}\n//         );\n//     }\n//     props.push(\n//         {text: 'dirty', value: task._dirty},\n//         {text: 'dueIndex', value: task._dueIndex},\n//         {text: 'dueEnd', value: task._dueEnd},\n//         {text: 'outputDueEnd', value: task._outputDueEnd}\n//     );\n//     if (extra) {\n//         Object.keys(extra).forEach(key => {\n//             props.push({text: key, value: extra[key]});\n//         });\n//     }\n//     var args = ['color: blue'];\n//     var msg = `%c[${prefix || 'T'}] %c` + props.map(item => (\n//         args.push('color: black', 'color: red'),\n//         `${item.text}: %c${item.value}`\n//     )).join('%c, ');\n//     console.log.apply(console, [msg].concat(args));\n//     // console.log(this);\n// }\n\n\nexports.createTask = createTask;","var BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _cursorHelper = require(\"./cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphicUtil = require(\"../../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction makeRectPanelClipPath(rect) {\n  rect = normalizeRect(rect);\n  return function (localPoints, transform) {\n    return graphicUtil.clipPointsByRect(localPoints, rect);\n  };\n}\n\nfunction makeLinearBrushOtherExtent(rect, specifiedXYIndex) {\n  rect = normalizeRect(rect);\n  return function (xyIndex) {\n    var idx = specifiedXYIndex != null ? specifiedXYIndex : xyIndex;\n    var brushWidth = idx ? rect.width : rect.height;\n    var base = idx ? rect.x : rect.y;\n    return [base, base + (brushWidth || 0)];\n  };\n}\n\nfunction makeRectIsTargetByCursor(rect, api, targetModel) {\n  rect = normalizeRect(rect);\n  return function (e, localCursorPoint, transform) {\n    return rect.contain(localCursorPoint[0], localCursorPoint[1]) && !onIrrelevantElement(e, api, targetModel);\n  };\n} // Consider width/height is negative.\n\n\nfunction normalizeRect(rect) {\n  return BoundingRect.create(rect);\n}\n\nexports.makeRectPanelClipPath = makeRectPanelClipPath;\nexports.makeLinearBrushOtherExtent = makeLinearBrushOtherExtent;\nexports.makeRectIsTargetByCursor = makeRectIsTargetByCursor;","require(\"../coord/polar/polarCreator\");\n\nrequire(\"./axis/AngleAxisView\");","var graphic = require(\"../../util/graphic\");\n\nvar layout = require(\"../../util/layout\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _treeHelper = require(\"../helper/treeHelper\");\n\nvar wrapTreePathInfo = _treeHelper.wrapTreePathInfo;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar TEXT_PADDING = 8;\nvar ITEM_GAP = 8;\nvar ARRAY_LENGTH = 5;\n\nfunction Breadcrumb(containerGroup) {\n  /**\n   * @private\n   * @type {module:zrender/container/Group}\n   */\n  this.group = new graphic.Group();\n  containerGroup.add(this.group);\n}\n\nBreadcrumb.prototype = {\n  constructor: Breadcrumb,\n  render: function (seriesModel, api, targetNode, onSelect) {\n    var model = seriesModel.getModel('breadcrumb');\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n\n    if (!model.get('show') || !targetNode) {\n      return;\n    }\n\n    var normalStyleModel = model.getModel('itemStyle'); // var emphasisStyleModel = model.getModel('emphasis.itemStyle');\n\n    var textStyleModel = normalStyleModel.getModel('textStyle');\n    var layoutParam = {\n      pos: {\n        left: model.get('left'),\n        right: model.get('right'),\n        top: model.get('top'),\n        bottom: model.get('bottom')\n      },\n      box: {\n        width: api.getWidth(),\n        height: api.getHeight()\n      },\n      emptyItemWidth: model.get('emptyItemWidth'),\n      totalWidth: 0,\n      renderList: []\n    };\n\n    this._prepare(targetNode, layoutParam, textStyleModel);\n\n    this._renderContent(seriesModel, layoutParam, normalStyleModel, textStyleModel, onSelect);\n\n    layout.positionElement(thisGroup, layoutParam.pos, layoutParam.box);\n  },\n\n  /**\n   * Prepare render list and total width\n   * @private\n   */\n  _prepare: function (targetNode, layoutParam, textStyleModel) {\n    for (var node = targetNode; node; node = node.parentNode) {\n      var text = node.getModel().get('name');\n      var textRect = textStyleModel.getTextRect(text);\n      var itemWidth = Math.max(textRect.width + TEXT_PADDING * 2, layoutParam.emptyItemWidth);\n      layoutParam.totalWidth += itemWidth + ITEM_GAP;\n      layoutParam.renderList.push({\n        node: node,\n        text: text,\n        width: itemWidth\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderContent: function (seriesModel, layoutParam, normalStyleModel, textStyleModel, onSelect) {\n    // Start rendering.\n    var lastX = 0;\n    var emptyItemWidth = layoutParam.emptyItemWidth;\n    var height = seriesModel.get('breadcrumb.height');\n    var availableSize = layout.getAvailableSize(layoutParam.pos, layoutParam.box);\n    var totalWidth = layoutParam.totalWidth;\n    var renderList = layoutParam.renderList;\n\n    for (var i = renderList.length - 1; i >= 0; i--) {\n      var item = renderList[i];\n      var itemNode = item.node;\n      var itemWidth = item.width;\n      var text = item.text; // Hdie text and shorten width if necessary.\n\n      if (totalWidth > availableSize.width) {\n        totalWidth -= itemWidth - emptyItemWidth;\n        itemWidth = emptyItemWidth;\n        text = null;\n      }\n\n      var el = new graphic.Polygon({\n        shape: {\n          points: makeItemPoints(lastX, 0, itemWidth, height, i === renderList.length - 1, i === 0)\n        },\n        style: zrUtil.defaults(normalStyleModel.getItemStyle(), {\n          lineJoin: 'bevel',\n          text: text,\n          textFill: textStyleModel.getTextColor(),\n          textFont: textStyleModel.getFont()\n        }),\n        z: 10,\n        onclick: zrUtil.curry(onSelect, itemNode)\n      });\n      this.group.add(el);\n      packEventData(el, seriesModel, itemNode);\n      lastX += itemWidth + ITEM_GAP;\n    }\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this.group.removeAll();\n  }\n};\n\nfunction makeItemPoints(x, y, itemWidth, itemHeight, head, tail) {\n  var points = [[head ? x : x - ARRAY_LENGTH, y], [x + itemWidth, y], [x + itemWidth, y + itemHeight], [head ? x : x - ARRAY_LENGTH, y + itemHeight]];\n  !tail && points.splice(2, 0, [x + itemWidth + ARRAY_LENGTH, y + itemHeight / 2]);\n  !head && points.push([x, y + itemHeight / 2]);\n  return points;\n} // Package custom mouse event.\n\n\nfunction packEventData(el, seriesModel, itemNode) {\n  el.eventData = {\n    componentType: 'series',\n    componentSubType: 'treemap',\n    seriesIndex: seriesModel.componentIndex,\n    seriesName: seriesModel.name,\n    seriesType: 'treemap',\n    selfType: 'breadcrumb',\n    // Distinguish with click event on treemap node.\n    nodeData: {\n      dataIndex: itemNode && itemNode.dataIndex,\n      name: itemNode && itemNode.name\n    },\n    treePathInfo: itemNode && wrapTreePathInfo(itemNode, seriesModel)\n  };\n}\n\nvar _default = Breadcrumb;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME 公用？\n\n/**\n * @param {Array.<module:echarts/data/List>} datas\n * @param {string} statisticType 'average' 'sum'\n * @inner\n */\nfunction dataStatistics(datas, statisticType) {\n  var dataNameMap = {};\n  zrUtil.each(datas, function (data) {\n    data.each(data.mapDimension('value'), function (value, idx) {\n      // Add prefix to avoid conflict with Object.prototype.\n      var mapKey = 'ec-' + data.getName(idx);\n      dataNameMap[mapKey] = dataNameMap[mapKey] || [];\n\n      if (!isNaN(value)) {\n        dataNameMap[mapKey].push(value);\n      }\n    });\n  });\n  return datas[0].map(datas[0].mapDimension('value'), function (value, idx) {\n    var mapKey = 'ec-' + datas[0].getName(idx);\n    var sum = 0;\n    var min = Infinity;\n    var max = -Infinity;\n    var len = dataNameMap[mapKey].length;\n\n    for (var i = 0; i < len; i++) {\n      min = Math.min(min, dataNameMap[mapKey][i]);\n      max = Math.max(max, dataNameMap[mapKey][i]);\n      sum += dataNameMap[mapKey][i];\n    }\n\n    var result;\n\n    if (statisticType === 'min') {\n      result = min;\n    } else if (statisticType === 'max') {\n      result = max;\n    } else if (statisticType === 'average') {\n      result = sum / len;\n    } else {\n      result = sum;\n    }\n\n    return len === 0 ? NaN : result;\n  });\n}\n\nfunction _default(ecModel) {\n  var seriesGroups = {};\n  ecModel.eachSeriesByType('map', function (seriesModel) {\n    var hostGeoModel = seriesModel.getHostGeoModel();\n    var key = hostGeoModel ? 'o' + hostGeoModel.id : 'i' + seriesModel.getMapType();\n    (seriesGroups[key] = seriesGroups[key] || []).push(seriesModel);\n  });\n  zrUtil.each(seriesGroups, function (seriesList, key) {\n    var data = dataStatistics(zrUtil.map(seriesList, function (seriesModel) {\n      return seriesModel.getData();\n    }), seriesList[0].get('mapValueCalculation'));\n\n    for (var i = 0; i < seriesList.length; i++) {\n      seriesList[i].originalData = seriesList[i].getData();\n    } // FIXME Put where?\n\n\n    for (var i = 0; i < seriesList.length; i++) {\n      seriesList[i].seriesGroup = seriesList;\n      seriesList[i].needsDrawMap = i === 0 && !seriesList[i].getHostGeoModel();\n      seriesList[i].setData(data.cloneShallow());\n      seriesList[i].mainSeries = seriesList[0];\n    }\n  });\n}\n\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar SymbolClz = require(\"./Symbol\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar isObject = _util.isObject;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n/**\n * @constructor\n * @alias module:echarts/chart/helper/SymbolDraw\n * @param {module:zrender/graphic/Group} [symbolCtor]\n */\nfunction SymbolDraw(symbolCtor) {\n  this.group = new graphic.Group();\n  this._symbolCtor = symbolCtor || SymbolClz;\n}\n\nvar symbolDrawProto = SymbolDraw.prototype;\n\nfunction symbolNeedsDraw(data, point, idx, opt) {\n  return point && !isNaN(point[0]) && !isNaN(point[1]) && !(opt.isIgnore && opt.isIgnore(idx)) // We do not set clipShape on group, because it will cut part of\n  // the symbol element shape. We use the same clip shape here as\n  // the line clip.\n  && !(opt.clipShape && !opt.clipShape.contain(point[0], point[1])) && data.getItemVisual(idx, 'symbol') !== 'none';\n}\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Object} [opt] Or isIgnore\n * @param {Function} [opt.isIgnore]\n * @param {Object} [opt.clipShape]\n */\n\n\nsymbolDrawProto.updateData = function (data, opt) {\n  opt = normalizeUpdateOpt(opt);\n  var group = this.group;\n  var seriesModel = data.hostModel;\n  var oldData = this._data;\n  var SymbolCtor = this._symbolCtor;\n  var seriesScope = makeSeriesScope(data); // There is no oldLineData only when first rendering or switching from\n  // stream mode to normal mode, where previous elements should be removed.\n\n  if (!oldData) {\n    group.removeAll();\n  }\n\n  data.diff(oldData).add(function (newIdx) {\n    var point = data.getItemLayout(newIdx);\n\n    if (symbolNeedsDraw(data, point, newIdx, opt)) {\n      var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n      symbolEl.attr('position', point);\n      data.setItemGraphicEl(newIdx, symbolEl);\n      group.add(symbolEl);\n    }\n  }).update(function (newIdx, oldIdx) {\n    var symbolEl = oldData.getItemGraphicEl(oldIdx);\n    var point = data.getItemLayout(newIdx);\n\n    if (!symbolNeedsDraw(data, point, newIdx, opt)) {\n      group.remove(symbolEl);\n      return;\n    }\n\n    if (!symbolEl) {\n      symbolEl = new SymbolCtor(data, newIdx);\n      symbolEl.attr('position', point);\n    } else {\n      symbolEl.updateData(data, newIdx, seriesScope);\n      graphic.updateProps(symbolEl, {\n        position: point\n      }, seriesModel);\n    } // Add back\n\n\n    group.add(symbolEl);\n    data.setItemGraphicEl(newIdx, symbolEl);\n  }).remove(function (oldIdx) {\n    var el = oldData.getItemGraphicEl(oldIdx);\n    el && el.fadeOut(function () {\n      group.remove(el);\n    });\n  }).execute();\n  this._data = data;\n};\n\nsymbolDrawProto.isPersistent = function () {\n  return true;\n};\n\nsymbolDrawProto.updateLayout = function () {\n  var data = this._data;\n\n  if (data) {\n    // Not use animation\n    data.eachItemGraphicEl(function (el, idx) {\n      var point = data.getItemLayout(idx);\n      el.attr('position', point);\n    });\n  }\n};\n\nsymbolDrawProto.incrementalPrepareUpdate = function (data) {\n  this._seriesScope = makeSeriesScope(data);\n  this._data = null;\n  this.group.removeAll();\n};\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Object} [opt] Or isIgnore\n * @param {Function} [opt.isIgnore]\n * @param {Object} [opt.clipShape]\n */\n\n\nsymbolDrawProto.incrementalUpdate = function (taskParams, data, opt) {\n  opt = normalizeUpdateOpt(opt);\n\n  function updateIncrementalAndHover(el) {\n    if (!el.isGroup) {\n      el.incremental = el.useHoverLayer = true;\n    }\n  }\n\n  for (var idx = taskParams.start; idx < taskParams.end; idx++) {\n    var point = data.getItemLayout(idx);\n\n    if (symbolNeedsDraw(data, point, idx, opt)) {\n      var el = new this._symbolCtor(data, idx, this._seriesScope);\n      el.traverse(updateIncrementalAndHover);\n      el.attr('position', point);\n      this.group.add(el);\n      data.setItemGraphicEl(idx, el);\n    }\n  }\n};\n\nfunction normalizeUpdateOpt(opt) {\n  if (opt != null && !isObject(opt)) {\n    opt = {\n      isIgnore: opt\n    };\n  }\n\n  return opt || {};\n}\n\nsymbolDrawProto.remove = function (enableAnimation) {\n  var group = this.group;\n  var data = this._data; // Incremental model do not have this._data.\n\n  if (data && enableAnimation) {\n    data.eachItemGraphicEl(function (el) {\n      el.fadeOut(function () {\n        group.remove(el);\n      });\n    });\n  } else {\n    group.removeAll();\n  }\n};\n\nfunction makeSeriesScope(data) {\n  var seriesModel = data.hostModel;\n  return {\n    itemStyle: seriesModel.getModel('itemStyle').getItemStyle(['color']),\n    hoverItemStyle: seriesModel.getModel('emphasis.itemStyle').getItemStyle(),\n    symbolRotate: seriesModel.get('symbolRotate'),\n    symbolOffset: seriesModel.get('symbolOffset'),\n    hoverAnimation: seriesModel.get('hoverAnimation'),\n    labelModel: seriesModel.getModel('label'),\n    hoverLabelModel: seriesModel.getModel('emphasis.label'),\n    cursorStyle: seriesModel.get('cursor')\n  };\n}\n\nvar _default = SymbolDraw;\nmodule.exports = _default;","var ComponentModel = require(\"../model/Component\");\n\nvar ComponentView = require(\"../view/Component\");\n\nvar _sourceHelper = require(\"../data/helper/sourceHelper\");\n\nvar detectSourceFormat = _sourceHelper.detectSourceFormat;\n\nvar _sourceType = require(\"../data/helper/sourceType\");\n\nvar SERIES_LAYOUT_BY_COLUMN = _sourceType.SERIES_LAYOUT_BY_COLUMN;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * This module is imported by echarts directly.\n *\n * Notice:\n * Always keep this file exists for backward compatibility.\n * Because before 4.1.0, dataset is an optional component,\n * some users may import this module manually.\n */\nComponentModel.extend({\n  type: 'dataset',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    // 'row', 'column'\n    seriesLayoutBy: SERIES_LAYOUT_BY_COLUMN,\n    // null/'auto': auto detect header, see \"module:echarts/data/helper/sourceHelper\"\n    sourceHeader: null,\n    dimensions: null,\n    source: null\n  },\n  optionUpdated: function () {\n    detectSourceFormat(this);\n  }\n});\nComponentView.extend({\n  type: 'dataset'\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapView = require(\"./VisualMapView\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar layout = require(\"../../util/layout\");\n\nvar helper = require(\"./helper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PiecewiseVisualMapView = VisualMapView.extend({\n  type: 'visualMap.piecewise',\n\n  /**\n   * @protected\n   * @override\n   */\n  doRender: function () {\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n    var visualMapModel = this.visualMapModel;\n    var textGap = visualMapModel.get('textGap');\n    var textStyleModel = visualMapModel.textStyleModel;\n    var textFont = textStyleModel.getFont();\n    var textFill = textStyleModel.getTextColor();\n\n    var itemAlign = this._getItemAlign();\n\n    var itemSize = visualMapModel.itemSize;\n\n    var viewData = this._getViewData();\n\n    var endsText = viewData.endsText;\n    var showLabel = zrUtil.retrieve(visualMapModel.get('showLabel', true), !endsText);\n    endsText && this._renderEndsText(thisGroup, endsText[0], itemSize, showLabel, itemAlign);\n    zrUtil.each(viewData.viewPieceList, renderItem, this);\n    endsText && this._renderEndsText(thisGroup, endsText[1], itemSize, showLabel, itemAlign);\n    layout.box(visualMapModel.get('orient'), thisGroup, visualMapModel.get('itemGap'));\n    this.renderBackground(thisGroup);\n    this.positionGroup(thisGroup);\n\n    function renderItem(item) {\n      var piece = item.piece;\n      var itemGroup = new graphic.Group();\n      itemGroup.onclick = zrUtil.bind(this._onItemClick, this, piece);\n\n      this._enableHoverLink(itemGroup, item.indexInModelPieceList);\n\n      var representValue = visualMapModel.getRepresentValue(piece);\n\n      this._createItemSymbol(itemGroup, representValue, [0, 0, itemSize[0], itemSize[1]]);\n\n      if (showLabel) {\n        var visualState = this.visualMapModel.getValueState(representValue);\n        itemGroup.add(new graphic.Text({\n          style: {\n            x: itemAlign === 'right' ? -textGap : itemSize[0] + textGap,\n            y: itemSize[1] / 2,\n            text: piece.text,\n            textVerticalAlign: 'middle',\n            textAlign: itemAlign,\n            textFont: textFont,\n            textFill: textFill,\n            opacity: visualState === 'outOfRange' ? 0.5 : 1\n          }\n        }));\n      }\n\n      thisGroup.add(itemGroup);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _enableHoverLink: function (itemGroup, pieceIndex) {\n    itemGroup.on('mouseover', zrUtil.bind(onHoverLink, this, 'highlight')).on('mouseout', zrUtil.bind(onHoverLink, this, 'downplay'));\n\n    function onHoverLink(method) {\n      var visualMapModel = this.visualMapModel;\n      visualMapModel.option.hoverLink && this.api.dispatchAction({\n        type: method,\n        batch: helper.convertDataIndex(visualMapModel.findTargetDataIndices(pieceIndex))\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _getItemAlign: function () {\n    var visualMapModel = this.visualMapModel;\n    var modelOption = visualMapModel.option;\n\n    if (modelOption.orient === 'vertical') {\n      return helper.getItemAlign(visualMapModel, this.api, visualMapModel.itemSize);\n    } else {\n      // horizontal, most case left unless specifying right.\n      var align = modelOption.align;\n\n      if (!align || align === 'auto') {\n        align = 'left';\n      }\n\n      return align;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderEndsText: function (group, text, itemSize, showLabel, itemAlign) {\n    if (!text) {\n      return;\n    }\n\n    var itemGroup = new graphic.Group();\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    itemGroup.add(new graphic.Text({\n      style: {\n        x: showLabel ? itemAlign === 'right' ? itemSize[0] : 0 : itemSize[0] / 2,\n        y: itemSize[1] / 2,\n        textVerticalAlign: 'middle',\n        textAlign: showLabel ? itemAlign : 'center',\n        text: text,\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    }));\n    group.add(itemGroup);\n  },\n\n  /**\n   * @private\n   * @return {Object} {peiceList, endsText} The order is the same as screen pixel order.\n   */\n  _getViewData: function () {\n    var visualMapModel = this.visualMapModel;\n    var viewPieceList = zrUtil.map(visualMapModel.getPieceList(), function (piece, index) {\n      return {\n        piece: piece,\n        indexInModelPieceList: index\n      };\n    });\n    var endsText = visualMapModel.get('text'); // Consider orient and inverse.\n\n    var orient = visualMapModel.get('orient');\n    var inverse = visualMapModel.get('inverse'); // Order of model pieceList is always [low, ..., high]\n\n    if (orient === 'horizontal' ? inverse : !inverse) {\n      viewPieceList.reverse();\n    } // Origin order of endsText is [high, low]\n    else if (endsText) {\n        endsText = endsText.slice().reverse();\n      }\n\n    return {\n      viewPieceList: viewPieceList,\n      endsText: endsText\n    };\n  },\n\n  /**\n   * @private\n   */\n  _createItemSymbol: function (group, representValue, shapeParam) {\n    group.add(createSymbol(this.getControllerVisual(representValue, 'symbol'), shapeParam[0], shapeParam[1], shapeParam[2], shapeParam[3], this.getControllerVisual(representValue, 'color')));\n  },\n\n  /**\n   * @private\n   */\n  _onItemClick: function (piece) {\n    var visualMapModel = this.visualMapModel;\n    var option = visualMapModel.option;\n    var selected = zrUtil.clone(option.selected);\n    var newKey = visualMapModel.getSelectedMapKey(piece);\n\n    if (option.selectedMode === 'single') {\n      selected[newKey] = true;\n      zrUtil.each(selected, function (o, key) {\n        selected[key] = key === newKey;\n      });\n    } else {\n      selected[newKey] = !selected[newKey];\n    }\n\n    this.api.dispatchAction({\n      type: 'selectDataRange',\n      from: this.uid,\n      visualMapId: this.visualMapModel.id,\n      selected: selected\n    });\n  }\n});\nvar _default = PiecewiseVisualMapView;\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar createHashMap = _util.createHashMap;\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.parallel',\n  dependencies: ['parallel'],\n  visualColorAccessPath: 'lineStyle.color',\n  getInitialData: function (option, ecModel) {\n    var source = this.getSource();\n    setEncodeAndDimensions(source, this);\n    return createListFromArray(source, this);\n  },\n\n  /**\n   * User can get data raw indices on 'axisAreaSelected' event received.\n   *\n   * @public\n   * @param {string} activeState 'active' or 'inactive' or 'normal'\n   * @return {Array.<number>} Raw indices\n   */\n  getRawIndicesByActiveState: function (activeState) {\n    var coordSys = this.coordinateSystem;\n    var data = this.getData();\n    var indices = [];\n    coordSys.eachActiveState(data, function (theActiveState, dataIndex) {\n      if (activeState === theActiveState) {\n        indices.push(data.getRawIndex(dataIndex));\n      }\n    });\n    return indices;\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'parallel',\n    parallelIndex: 0,\n    label: {\n      show: false\n    },\n    inactiveOpacity: 0.05,\n    activeOpacity: 1,\n    lineStyle: {\n      width: 1,\n      opacity: 0.45,\n      type: 'solid'\n    },\n    emphasis: {\n      label: {\n        show: false\n      }\n    },\n    progressive: 500,\n    smooth: false,\n    // true | false | number\n    animationEasing: 'linear'\n  }\n});\n\nfunction setEncodeAndDimensions(source, seriesModel) {\n  // The mapping of parallelAxis dimension to data dimension can\n  // be specified in parallelAxis.option.dim. For example, if\n  // parallelAxis.option.dim is 'dim3', it mapping to the third\n  // dimension of data. But `data.encode` has higher priority.\n  // Moreover, parallelModel.dimension should not be regarded as data\n  // dimensions. Consider dimensions = ['dim4', 'dim2', 'dim6'];\n  if (source.encodeDefine) {\n    return;\n  }\n\n  var parallelModel = seriesModel.ecModel.getComponent('parallel', seriesModel.get('parallelIndex'));\n\n  if (!parallelModel) {\n    return;\n  }\n\n  var encodeDefine = source.encodeDefine = createHashMap();\n  each(parallelModel.dimensions, function (axisDim) {\n    var dataDimIndex = convertDimNameToNumber(axisDim);\n    encodeDefine.set(axisDim, dataDimIndex);\n  });\n}\n\nfunction convertDimNameToNumber(dimName) {\n  return +dimName.replace('dim', '');\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./tooltip/TooltipModel\");\n\nrequire(\"./tooltip/TooltipView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME Better way to pack data in graphic element\n\n/**\n * @action\n * @property {string} type\n * @property {number} seriesIndex\n * @property {number} dataIndex\n * @property {number} [x]\n * @property {number} [y]\n */\necharts.registerAction({\n  type: 'showTip',\n  event: 'showTip',\n  update: 'tooltip:manuallyShowTip'\n}, // noop\nfunction () {});\necharts.registerAction({\n  type: 'hideTip',\n  event: 'hideTip',\n  update: 'tooltip:manuallyHideTip'\n}, // noop\nfunction () {});","var echarts = require(\"../../echarts\");\n\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar _model = require(\"../../util/model\");\n\nvar defaultEmphasis = _model.defaultEmphasis;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar FunnelSeries = echarts.extendSeriesModel({\n  type: 'series.funnel',\n  init: function (option) {\n    FunnelSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    }; // Extend labelLine emphasis\n\n\n    this._defaultLabelLine(option);\n  },\n  getInitialData: function (option, ecModel) {\n    return createListSimply(this, ['value']);\n  },\n  _defaultLabelLine: function (option) {\n    // Extend labelLine emphasis\n    defaultEmphasis(option, 'labelLine', ['show']);\n    var labelLineNormalOpt = option.labelLine;\n    var labelLineEmphasisOpt = option.emphasis.labelLine; // Not show label line if `label.normal.show = false`\n\n    labelLineNormalOpt.show = labelLineNormalOpt.show && option.label.show;\n    labelLineEmphasisOpt.show = labelLineEmphasisOpt.show && option.emphasis.label.show;\n  },\n  // Overwrite\n  getDataParams: function (dataIndex) {\n    var data = this.getData();\n    var params = FunnelSeries.superCall(this, 'getDataParams', dataIndex);\n    var valueDim = data.mapDimension('value');\n    var sum = data.getSum(valueDim); // Percent is 0 if sum is 0\n\n    params.percent = !sum ? 0 : +(data.get(valueDim, dataIndex) / sum * 100).toFixed(2);\n    params.$vars.push('percent');\n    return params;\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    legendHoverLink: true,\n    left: 80,\n    top: 60,\n    right: 80,\n    bottom: 60,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    // 默认取数据最小最大值\n    // min: 0,\n    // max: 100,\n    minSize: '0%',\n    maxSize: '100%',\n    sort: 'descending',\n    // 'ascending', 'descending'\n    gap: 0,\n    funnelAlign: 'center',\n    label: {\n      show: true,\n      position: 'outer' // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n\n    },\n    labelLine: {\n      show: true,\n      length: 20,\n      lineStyle: {\n        // color: 各异,\n        width: 1,\n        type: 'solid'\n      }\n    },\n    itemStyle: {\n      // color: 各异,\n      borderColor: '#fff',\n      borderWidth: 1\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\nvar _default = FunnelSeries;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction dataToCoordSize(dataSize, dataItem) {\n  dataItem = dataItem || [0, 0];\n  return zrUtil.map([0, 1], function (dimIdx) {\n    var val = dataItem[dimIdx];\n    var halfSize = dataSize[dimIdx] / 2;\n    var p1 = [];\n    var p2 = [];\n    p1[dimIdx] = val - halfSize;\n    p2[dimIdx] = val + halfSize;\n    p1[1 - dimIdx] = p2[1 - dimIdx] = dataItem[1 - dimIdx];\n    return Math.abs(this.dataToPoint(p1)[dimIdx] - this.dataToPoint(p2)[dimIdx]);\n  }, this);\n}\n\nfunction _default(coordSys) {\n  var rect = coordSys.getBoundingRect();\n  return {\n    coordSys: {\n      type: 'geo',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    api: {\n      coord: function (data) {\n        // do not provide \"out\" and noRoam param,\n        // Compatible with this usage:\n        // echarts.util.map(item.points, api.coord)\n        return coordSys.dataToPoint(data);\n      },\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar parseGeoJson = require(\"./parseGeoJson\");\n\nvar View = require(\"../View\");\n\nvar fixNanhai = require(\"./fix/nanhai\");\n\nvar fixTextCoord = require(\"./fix/textCoord\");\n\nvar fixGeoCoord = require(\"./fix/geoCoord\");\n\nvar fixDiaoyuIsland = require(\"./fix/diaoyuIsland\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Geo fix functions\nvar geoFixFuncs = [fixNanhai, fixTextCoord, fixGeoCoord, fixDiaoyuIsland];\n/**\n * [Geo description]\n * @param {string} name Geo name\n * @param {string} map Map type\n * @param {Object} geoJson\n * @param {Object} [specialAreas]\n *        Specify the positioned areas by left, top, width, height\n * @param {Object.<string, string>} [nameMap]\n *        Specify name alias\n */\n\nfunction Geo(name, map, geoJson, specialAreas, nameMap) {\n  View.call(this, name);\n  /**\n   * Map type\n   * @type {string}\n   */\n\n  this.map = map;\n  this._nameCoordMap = zrUtil.createHashMap();\n  this.loadGeoJson(geoJson, specialAreas, nameMap);\n}\n\nGeo.prototype = {\n  constructor: Geo,\n  type: 'geo',\n\n  /**\n   * @param {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['lng', 'lat'],\n\n  /**\n   * If contain given lng,lat coord\n   * @param {Array.<number>}\n   * @readOnly\n   */\n  containCoord: function (coord) {\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      if (regions[i].contain(coord)) {\n        return true;\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @param {Object} geoJson\n   * @param {Object} [specialAreas]\n   *        Specify the positioned areas by left, top, width, height\n   * @param {Object.<string, string>} [nameMap]\n   *        Specify name alias\n   */\n  loadGeoJson: function (geoJson, specialAreas, nameMap) {\n    // https://jsperf.com/try-catch-performance-overhead\n    try {\n      this.regions = geoJson ? parseGeoJson(geoJson) : [];\n    } catch (e) {\n      throw 'Invalid geoJson format\\n' + e.message;\n    }\n\n    specialAreas = specialAreas || {};\n    nameMap = nameMap || {};\n    var regions = this.regions;\n    var regionsMap = zrUtil.createHashMap();\n\n    for (var i = 0; i < regions.length; i++) {\n      var regionName = regions[i].name; // Try use the alias in nameMap\n\n      regionName = nameMap.hasOwnProperty(regionName) ? nameMap[regionName] : regionName;\n      regions[i].name = regionName;\n      regionsMap.set(regionName, regions[i]); // Add geoJson\n\n      this.addGeoCoord(regionName, regions[i].center); // Some area like Alaska in USA map needs to be tansformed\n      // to look better\n\n      var specialArea = specialAreas[regionName];\n\n      if (specialArea) {\n        regions[i].transformTo(specialArea.left, specialArea.top, specialArea.width, specialArea.height);\n      }\n    }\n\n    this._regionsMap = regionsMap;\n    this._rect = null;\n    zrUtil.each(geoFixFuncs, function (fixFunc) {\n      fixFunc(this);\n    }, this);\n  },\n  // Overwrite\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    rect = rect.clone(); // Longitute is inverted\n\n    rect.y = -rect.y - rect.height;\n    var rawTransformable = this._rawTransformable;\n    rawTransformable.transform = rect.calculateTransform(new BoundingRect(x, y, width, height));\n    rawTransformable.decomposeTransform();\n    var scale = rawTransformable.scale;\n    scale[1] = -scale[1];\n    rawTransformable.updateTransform();\n\n    this._updateTransform();\n  },\n\n  /**\n   * @param {string} name\n   * @return {module:echarts/coord/geo/Region}\n   */\n  getRegion: function (name) {\n    return this._regionsMap.get(name);\n  },\n  getRegionByCoord: function (coord) {\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      if (regions[i].contain(coord)) {\n        return regions[i];\n      }\n    }\n  },\n\n  /**\n   * Add geoCoord for indexing by name\n   * @param {string} name\n   * @param {Array.<number>} geoCoord\n   */\n  addGeoCoord: function (name, geoCoord) {\n    this._nameCoordMap.set(name, geoCoord);\n  },\n\n  /**\n   * Get geoCoord by name\n   * @param {string} name\n   * @return {Array.<number>}\n   */\n  getGeoCoord: function (name) {\n    return this._nameCoordMap.get(name);\n  },\n  // Overwrite\n  getBoundingRect: function () {\n    if (this._rect) {\n      return this._rect;\n    }\n\n    var rect;\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      var regionRect = regions[i].getBoundingRect();\n      rect = rect || regionRect.clone();\n      rect.union(regionRect);\n    } // FIXME Always return new ?\n\n\n    return this._rect = rect || new BoundingRect(0, 0, 0, 0);\n  },\n\n  /**\n   * @param {string|Array.<number>} data\n   * @param {boolean} noRoam\n   * @param {Array.<number>} [out]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, noRoam, out) {\n    if (typeof data === 'string') {\n      // Map area name to geoCoord\n      data = this.getGeoCoord(data);\n    }\n\n    if (data) {\n      return View.prototype.dataToPoint.call(this, data, noRoam, out);\n    }\n  },\n\n  /**\n   * @inheritDoc\n   */\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\n\n  /**\n   * @inheritDoc\n   */\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData')\n};\nzrUtil.mixin(Geo, View);\n\nfunction doConvert(methodName, ecModel, finder, value) {\n  var geoModel = finder.geoModel;\n  var seriesModel = finder.seriesModel;\n  var coordSys = geoModel ? geoModel.coordinateSystem : seriesModel ? seriesModel.coordinateSystem // For map.\n  || (seriesModel.getReferringComponents('geo')[0] || {}).coordinateSystem : null;\n  return coordSys === this ? coordSys[methodName](value) : null;\n}\n\nvar _default = Geo;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Can only be called after coordinate system creation stage.\n * (Can be called before coordinate system update stage).\n *\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, z2\n * }\n */\nfunction layout(gridModel, axisModel, opt) {\n  opt = opt || {};\n  var grid = gridModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var otherAxisOnZeroOf = axis.getAxesOnZeroOf()[0];\n  var rawAxisPosition = axis.position;\n  var axisPosition = otherAxisOnZeroOf ? 'onZero' : rawAxisPosition;\n  var axisDim = axis.dim;\n  var rect = grid.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var idx = {\n    left: 0,\n    right: 1,\n    top: 0,\n    bottom: 1,\n    onZero: 2\n  };\n  var axisOffset = axisModel.get('offset') || 0;\n  var posBound = axisDim === 'x' ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset] : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n  if (otherAxisOnZeroOf) {\n    var onZeroCoord = otherAxisOnZeroOf.toGlobalCoord(otherAxisOnZeroOf.dataToCoord(0));\n    posBound[idx['onZero']] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n  } // Axis position\n\n\n  layout.position = [axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0], axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]]; // Axis rotation\n\n  layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1); // Tick and label direction, x y is axisDim\n\n  var dirMap = {\n    top: -1,\n    bottom: 1,\n    left: -1,\n    right: 1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n  layout.labelOffset = otherAxisOnZeroOf ? posBound[idx[rawAxisPosition]] - posBound[idx['onZero']] : 0;\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  } // Special label rotation\n\n\n  var labelRotate = axisModel.get('axisLabel.rotate');\n  layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate; // Over splitLine and splitArea\n\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * For geo and graph.\n *\n * @param {Object} controllerHost\n * @param {module:zrender/Element} controllerHost.target\n */\nfunction updateViewOnPan(controllerHost, dx, dy) {\n  var target = controllerHost.target;\n  var pos = target.position;\n  pos[0] += dx;\n  pos[1] += dy;\n  target.dirty();\n}\n/**\n * For geo and graph.\n *\n * @param {Object} controllerHost\n * @param {module:zrender/Element} controllerHost.target\n * @param {number} controllerHost.zoom\n * @param {number} controllerHost.zoomLimit like: {min: 1, max: 2}\n */\n\n\nfunction updateViewOnZoom(controllerHost, zoomDelta, zoomX, zoomY) {\n  var target = controllerHost.target;\n  var zoomLimit = controllerHost.zoomLimit;\n  var pos = target.position;\n  var scale = target.scale;\n  var newZoom = controllerHost.zoom = controllerHost.zoom || 1;\n  newZoom *= zoomDelta;\n\n  if (zoomLimit) {\n    var zoomMin = zoomLimit.min || 0;\n    var zoomMax = zoomLimit.max || Infinity;\n    newZoom = Math.max(Math.min(zoomMax, newZoom), zoomMin);\n  }\n\n  var zoomScale = newZoom / controllerHost.zoom;\n  controllerHost.zoom = newZoom; // Keep the mouse center when scaling\n\n  pos[0] -= (zoomX - pos[0]) * (zoomScale - 1);\n  pos[1] -= (zoomY - pos[1]) * (zoomScale - 1);\n  scale[0] *= zoomScale;\n  scale[1] *= zoomScale;\n  target.dirty();\n}\n\nexports.updateViewOnPan = updateViewOnPan;\nexports.updateViewOnZoom = updateViewOnZoom;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Grid view\necharts.extendComponentView({\n  type: 'grid',\n  render: function (gridModel, ecModel) {\n    this.group.removeAll();\n\n    if (gridModel.get('show')) {\n      this.group.add(new graphic.Rect({\n        shape: gridModel.coordinateSystem.getRect(),\n        style: zrUtil.defaults({\n          fill: gridModel.get('backgroundColor')\n        }, gridModel.getItemStyle()),\n        silent: true,\n        z2: -1\n      }));\n    }\n  }\n});\necharts.registerPreprocessor(function (option) {\n  // Only create grid when need\n  if (option.xAxis && option.yAxis && !option.grid) {\n    option.grid = {};\n  }\n});","require(\"./gauge/GaugeSeries\");\n\nrequire(\"./gauge/GaugeView\");","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar eventUtil = require(\"zrender/lib/core/event\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar formatUtil = require(\"../../util/format\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar toCamelCase = formatUtil.toCamelCase;\nvar vendors = ['', '-webkit-', '-moz-', '-o-'];\nvar gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n/**\n * @param {number} duration\n * @return {string}\n * @inner\n */\n\nfunction assembleTransition(duration) {\n  var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n  var transitionText = 'left ' + duration + 's ' + transitionCurve + ',' + 'top ' + duration + 's ' + transitionCurve;\n  return zrUtil.map(vendors, function (vendorPrefix) {\n    return vendorPrefix + 'transition:' + transitionText;\n  }).join(';');\n}\n/**\n * @param {Object} textStyle\n * @return {string}\n * @inner\n */\n\n\nfunction assembleFont(textStyleModel) {\n  var cssText = [];\n  var fontSize = textStyleModel.get('fontSize');\n  var color = textStyleModel.getTextColor();\n  color && cssText.push('color:' + color);\n  cssText.push('font:' + textStyleModel.getFont());\n  fontSize && cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n  each(['decoration', 'align'], function (name) {\n    var val = textStyleModel.get(name);\n    val && cssText.push('text-' + name + ':' + val);\n  });\n  return cssText.join(';');\n}\n/**\n * @param {Object} tooltipModel\n * @return {string}\n * @inner\n */\n\n\nfunction assembleCssText(tooltipModel) {\n  var cssText = [];\n  var transitionDuration = tooltipModel.get('transitionDuration');\n  var backgroundColor = tooltipModel.get('backgroundColor');\n  var textStyleModel = tooltipModel.getModel('textStyle');\n  var padding = tooltipModel.get('padding'); // Animation transition. Do not animate when transitionDuration is 0.\n\n  transitionDuration && cssText.push(assembleTransition(transitionDuration));\n\n  if (backgroundColor) {\n    if (env.canvasSupported) {\n      cssText.push('background-Color:' + backgroundColor);\n    } else {\n      // for ie\n      cssText.push('background-Color:#' + zrColor.toHex(backgroundColor));\n      cssText.push('filter:alpha(opacity=70)');\n    }\n  } // Border style\n\n\n  each(['width', 'color', 'radius'], function (name) {\n    var borderName = 'border-' + name;\n    var camelCase = toCamelCase(borderName);\n    var val = tooltipModel.get(camelCase);\n    val != null && cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n  }); // Text style\n\n  cssText.push(assembleFont(textStyleModel)); // Padding\n\n  if (padding != null) {\n    cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n  }\n\n  return cssText.join(';') + ';';\n}\n/**\n * @alias module:echarts/component/tooltip/TooltipContent\n * @constructor\n */\n\n\nfunction TooltipContent(container, api) {\n  if (env.wxa) {\n    return null;\n  }\n\n  var el = document.createElement('div');\n  var zr = this._zr = api.getZr();\n  this.el = el;\n  this._x = api.getWidth() / 2;\n  this._y = api.getHeight() / 2;\n  container.appendChild(el);\n  this._container = container;\n  this._show = false;\n  /**\n   * @private\n   */\n\n  this._hideTimeout;\n  var self = this;\n\n  el.onmouseenter = function () {\n    // clear the timeout in hideLater and keep showing tooltip\n    if (self._enterable) {\n      clearTimeout(self._hideTimeout);\n      self._show = true;\n    }\n\n    self._inContent = true;\n  };\n\n  el.onmousemove = function (e) {\n    e = e || window.event;\n\n    if (!self._enterable) {\n      // Try trigger zrender event to avoid mouse\n      // in and out shape too frequently\n      var handler = zr.handler;\n      eventUtil.normalizeEvent(container, e, true);\n      handler.dispatch('mousemove', e);\n    }\n  };\n\n  el.onmouseleave = function () {\n    if (self._enterable) {\n      if (self._show) {\n        self.hideLater(self._hideDelay);\n      }\n    }\n\n    self._inContent = false;\n  };\n}\n\nTooltipContent.prototype = {\n  constructor: TooltipContent,\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  _enterable: true,\n\n  /**\n   * Update when tooltip is rendered\n   */\n  update: function () {\n    // FIXME\n    // Move this logic to ec main?\n    var container = this._container;\n    var stl = container.currentStyle || document.defaultView.getComputedStyle(container);\n    var domStyle = container.style;\n\n    if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n      domStyle.position = 'relative';\n    } // Hide the tooltip\n    // PENDING\n    // this.hide();\n\n  },\n  show: function (tooltipModel) {\n    clearTimeout(this._hideTimeout);\n    var el = this.el;\n    el.style.cssText = gCssText + assembleCssText(tooltipModel) // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n    + ';left:' + this._x + 'px;top:' + this._y + 'px;' + (tooltipModel.get('extraCssText') || '');\n    el.style.display = el.innerHTML ? 'block' : 'none';\n    this._show = true;\n  },\n  setContent: function (content) {\n    this.el.innerHTML = content == null ? '' : content;\n  },\n  setEnterable: function (enterable) {\n    this._enterable = enterable;\n  },\n  getSize: function () {\n    var el = this.el;\n    return [el.clientWidth, el.clientHeight];\n  },\n  moveTo: function (x, y) {\n    // xy should be based on canvas root. But tooltipContent is\n    // the sibling of canvas root. So padding of ec container\n    // should be considered here.\n    var zr = this._zr;\n    var viewportRootOffset;\n\n    if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n      x += viewportRootOffset.offsetLeft;\n      y += viewportRootOffset.offsetTop;\n    }\n\n    var style = this.el.style;\n    style.left = x + 'px';\n    style.top = y + 'px';\n    this._x = x;\n    this._y = y;\n  },\n  hide: function () {\n    this.el.style.display = 'none';\n    this._show = false;\n  },\n  hideLater: function (time) {\n    if (this._show && !(this._inContent && this._enterable)) {\n      if (time) {\n        this._hideDelay = time; // Set show false to avoid invoke hideLater mutiple times\n\n        this._show = false;\n        this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n      } else {\n        this.hide();\n      }\n    }\n  },\n  isShow: function () {\n    return this._show;\n  }\n};\nvar _default = TooltipContent;\nmodule.exports = _default;","// https://github.com/mziccard/node-timsort\nvar DEFAULT_MIN_MERGE = 32;\nvar DEFAULT_MIN_GALLOPING = 7;\nvar DEFAULT_TMP_STORAGE_LENGTH = 256;\n\nfunction minRunLength(n) {\n  var r = 0;\n\n  while (n >= DEFAULT_MIN_MERGE) {\n    r |= n & 1;\n    n >>= 1;\n  }\n\n  return n + r;\n}\n\nfunction makeAscendingRun(array, lo, hi, compare) {\n  var runHi = lo + 1;\n\n  if (runHi === hi) {\n    return 1;\n  }\n\n  if (compare(array[runHi++], array[lo]) < 0) {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n      runHi++;\n    }\n\n    reverseRun(array, lo, runHi);\n  } else {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n      runHi++;\n    }\n  }\n\n  return runHi - lo;\n}\n\nfunction reverseRun(array, lo, hi) {\n  hi--;\n\n  while (lo < hi) {\n    var t = array[lo];\n    array[lo++] = array[hi];\n    array[hi--] = t;\n  }\n}\n\nfunction binaryInsertionSort(array, lo, hi, start, compare) {\n  if (start === lo) {\n    start++;\n  }\n\n  for (; start < hi; start++) {\n    var pivot = array[start];\n    var left = lo;\n    var right = start;\n    var mid;\n\n    while (left < right) {\n      mid = left + right >>> 1;\n\n      if (compare(pivot, array[mid]) < 0) {\n        right = mid;\n      } else {\n        left = mid + 1;\n      }\n    }\n\n    var n = start - left;\n\n    switch (n) {\n      case 3:\n        array[left + 3] = array[left + 2];\n\n      case 2:\n        array[left + 2] = array[left + 1];\n\n      case 1:\n        array[left + 1] = array[left];\n        break;\n\n      default:\n        while (n > 0) {\n          array[left + n] = array[left + n - 1];\n          n--;\n        }\n\n    }\n\n    array[left] = pivot;\n  }\n}\n\nfunction gallopLeft(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) > 0) {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  } else {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) > 0) {\n      lastOffset = m + 1;\n    } else {\n      offset = m;\n    }\n  }\n\n  return offset;\n}\n\nfunction gallopRight(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) < 0) {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  } else {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) < 0) {\n      offset = m;\n    } else {\n      lastOffset = m + 1;\n    }\n  }\n\n  return offset;\n}\n\nfunction TimSort(array, compare) {\n  var minGallop = DEFAULT_MIN_GALLOPING;\n  var length = 0;\n  var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n  var stackLength = 0;\n  var runStart;\n  var runLength;\n  var stackSize = 0;\n  length = array.length;\n\n  if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n    tmpStorageLength = length >>> 1;\n  }\n\n  var tmp = [];\n  stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n  runStart = [];\n  runLength = [];\n\n  function pushRun(_runStart, _runLength) {\n    runStart[stackSize] = _runStart;\n    runLength[stackSize] = _runLength;\n    stackSize += 1;\n  }\n\n  function mergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n        if (runLength[n - 1] < runLength[n + 1]) {\n          n--;\n        }\n      } else if (runLength[n] > runLength[n + 1]) {\n        break;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function forceMergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n        n--;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function mergeAt(i) {\n    var start1 = runStart[i];\n    var length1 = runLength[i];\n    var start2 = runStart[i + 1];\n    var length2 = runLength[i + 1];\n    runLength[i] = length1 + length2;\n\n    if (i === stackSize - 3) {\n      runStart[i + 1] = runStart[i + 2];\n      runLength[i + 1] = runLength[i + 2];\n    }\n\n    stackSize--;\n    var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n    start1 += k;\n    length1 -= k;\n\n    if (length1 === 0) {\n      return;\n    }\n\n    length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n    if (length2 === 0) {\n      return;\n    }\n\n    if (length1 <= length2) {\n      mergeLow(start1, length1, start2, length2);\n    } else {\n      mergeHigh(start1, length1, start2, length2);\n    }\n  }\n\n  function mergeLow(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length1; i++) {\n      tmp[i] = array[start1 + i];\n    }\n\n    var cursor1 = 0;\n    var cursor2 = start2;\n    var dest = start1;\n    array[dest++] = array[cursor2++];\n\n    if (--length2 === 0) {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n\n      return;\n    }\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n      return;\n    }\n\n    var _minGallop = minGallop;\n    var count1, count2, exit;\n\n    while (1) {\n      count1 = 0;\n      count2 = 0;\n      exit = false;\n\n      do {\n        if (compare(array[cursor2], tmp[cursor1]) < 0) {\n          array[dest++] = array[cursor2++];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest++] = tmp[cursor1++];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n        if (count1 !== 0) {\n          for (i = 0; i < count1; i++) {\n            array[dest + i] = tmp[cursor1 + i];\n          }\n\n          dest += count1;\n          cursor1 += count1;\n          length1 -= count1;\n\n          if (length1 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = array[cursor2++];\n\n        if (--length2 === 0) {\n          exit = true;\n          break;\n        }\n\n        count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n        if (count2 !== 0) {\n          for (i = 0; i < count2; i++) {\n            array[dest + i] = array[cursor2 + i];\n          }\n\n          dest += count2;\n          cursor2 += count2;\n          length2 -= count2;\n\n          if (length2 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = tmp[cursor1++];\n\n        if (--length1 === 1) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n    minGallop < 1 && (minGallop = 1);\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n    } else if (length1 === 0) {\n      throw new Error(); // throw new Error('mergeLow preconditions were not respected');\n    } else {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n    }\n  }\n\n  function mergeHigh(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length2; i++) {\n      tmp[i] = array[start2 + i];\n    }\n\n    var cursor1 = start1 + length1 - 1;\n    var cursor2 = length2 - 1;\n    var dest = start2 + length2 - 1;\n    var customCursor = 0;\n    var customDest = 0;\n    array[dest--] = array[cursor1--];\n\n    if (--length1 === 0) {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n\n      return;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n      return;\n    }\n\n    var _minGallop = minGallop;\n\n    while (true) {\n      var count1 = 0;\n      var count2 = 0;\n      var exit = false;\n\n      do {\n        if (compare(tmp[cursor2], array[cursor1]) < 0) {\n          array[dest--] = array[cursor1--];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest--] = tmp[cursor2--];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n        if (count1 !== 0) {\n          dest -= count1;\n          cursor1 -= count1;\n          length1 -= count1;\n          customDest = dest + 1;\n          customCursor = cursor1 + 1;\n\n          for (i = count1 - 1; i >= 0; i--) {\n            array[customDest + i] = array[customCursor + i];\n          }\n\n          if (length1 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = tmp[cursor2--];\n\n        if (--length2 === 1) {\n          exit = true;\n          break;\n        }\n\n        count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n        if (count2 !== 0) {\n          dest -= count2;\n          cursor2 -= count2;\n          length2 -= count2;\n          customDest = dest + 1;\n          customCursor = cursor2 + 1;\n\n          for (i = 0; i < count2; i++) {\n            array[customDest + i] = tmp[customCursor + i];\n          }\n\n          if (length2 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = array[cursor1--];\n\n        if (--length1 === 0) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n\n    if (minGallop < 1) {\n      minGallop = 1;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n    } else if (length2 === 0) {\n      throw new Error(); // throw new Error('mergeHigh preconditions were not respected');\n    } else {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n    }\n  }\n\n  this.mergeRuns = mergeRuns;\n  this.forceMergeRuns = forceMergeRuns;\n  this.pushRun = pushRun;\n}\n\nfunction sort(array, compare, lo, hi) {\n  if (!lo) {\n    lo = 0;\n  }\n\n  if (!hi) {\n    hi = array.length;\n  }\n\n  var remaining = hi - lo;\n\n  if (remaining < 2) {\n    return;\n  }\n\n  var runLength = 0;\n\n  if (remaining < DEFAULT_MIN_MERGE) {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n    binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n    return;\n  }\n\n  var ts = new TimSort(array, compare);\n  var minRun = minRunLength(remaining);\n\n  do {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n\n    if (runLength < minRun) {\n      var force = remaining;\n\n      if (force > minRun) {\n        force = minRun;\n      }\n\n      binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n      runLength = force;\n    }\n\n    ts.pushRun(lo, runLength);\n    ts.mergeRuns();\n    remaining -= runLength;\n    lo += runLength;\n  } while (remaining !== 0);\n\n  ts.forceMergeRuns();\n}\n\nmodule.exports = sort;","var windingLine = require(\"./windingLine\");\n\nvar EPSILON = 1e-8;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n}\n\nfunction contain(points, x, y) {\n  var w = 0;\n  var p = points[0];\n\n  if (!p) {\n    return false;\n  }\n\n  for (var i = 1; i < points.length; i++) {\n    var p2 = points[i];\n    w += windingLine(p[0], p[1], p2[0], p2[1], x, y);\n    p = p2;\n  } // Close polygon\n\n\n  var p0 = points[0];\n\n  if (!isAroundEqual(p[0], p0[0]) || !isAroundEqual(p[1], p0[1])) {\n    w += windingLine(p[0], p[1], p0[0], p0[1], x, y);\n  }\n\n  return w !== 0;\n}\n\nexports.contain = contain;","var Clip = require(\"./Clip\");\n\nvar color = require(\"../tool/color\");\n\nvar _util = require(\"../core/util\");\n\nvar isArrayLike = _util.isArrayLike;\n\n/**\n * @module echarts/animation/Animator\n */\nvar arraySlice = Array.prototype.slice;\n\nfunction defaultGetter(target, key) {\n  return target[key];\n}\n\nfunction defaultSetter(target, key, value) {\n  target[key] = value;\n}\n/**\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} percent\n * @return {number}\n */\n\n\nfunction interpolateNumber(p0, p1, percent) {\n  return (p1 - p0) * percent + p0;\n}\n/**\n * @param  {string} p0\n * @param  {string} p1\n * @param  {number} percent\n * @return {string}\n */\n\n\nfunction interpolateString(p0, p1, percent) {\n  return percent > 0.5 ? p1 : p0;\n}\n/**\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {number} percent\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction interpolateArray(p0, p1, percent, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = interpolateNumber(p0[i], p1[i], percent);\n    }\n  } else {\n    var len2 = len && p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = interpolateNumber(p0[i][j], p1[i][j], percent);\n      }\n    }\n  }\n} // arr0 is source array, arr1 is target array.\n// Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n\n\nfunction fillArr(arr0, arr1, arrDim) {\n  var arr0Len = arr0.length;\n  var arr1Len = arr1.length;\n\n  if (arr0Len !== arr1Len) {\n    // FIXME Not work for TypedArray\n    var isPreviousLarger = arr0Len > arr1Len;\n\n    if (isPreviousLarger) {\n      // Cut the previous\n      arr0.length = arr1Len;\n    } else {\n      // Fill the previous\n      for (var i = arr0Len; i < arr1Len; i++) {\n        arr0.push(arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i]));\n      }\n    }\n  } // Handling NaN value\n\n\n  var len2 = arr0[0] && arr0[0].length;\n\n  for (var i = 0; i < arr0.length; i++) {\n    if (arrDim === 1) {\n      if (isNaN(arr0[i])) {\n        arr0[i] = arr1[i];\n      }\n    } else {\n      for (var j = 0; j < len2; j++) {\n        if (isNaN(arr0[i][j])) {\n          arr0[i][j] = arr1[i][j];\n        }\n      }\n    }\n  }\n}\n/**\n * @param  {Array} arr0\n * @param  {Array} arr1\n * @param  {number} arrDim\n * @return {boolean}\n */\n\n\nfunction isArraySame(arr0, arr1, arrDim) {\n  if (arr0 === arr1) {\n    return true;\n  }\n\n  var len = arr0.length;\n\n  if (len !== arr1.length) {\n    return false;\n  }\n\n  if (arrDim === 1) {\n    for (var i = 0; i < len; i++) {\n      if (arr0[i] !== arr1[i]) {\n        return false;\n      }\n    }\n  } else {\n    var len2 = arr0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        if (arr0[i][j] !== arr1[i][j]) {\n          return false;\n        }\n      }\n    }\n  }\n\n  return true;\n}\n/**\n * Catmull Rom interpolate array\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {Array} p2\n * @param  {Array} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction catmullRomInterpolateArray(p0, p1, p2, p3, t, t2, t3, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = catmullRomInterpolate(p0[i], p1[i], p2[i], p3[i], t, t2, t3);\n    }\n  } else {\n    var len2 = p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = catmullRomInterpolate(p0[i][j], p1[i][j], p2[i][j], p3[i][j], t, t2, t3);\n      }\n    }\n  }\n}\n/**\n * Catmull Rom interpolate number\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @return {number}\n */\n\n\nfunction catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n\nfunction cloneValue(value) {\n  if (isArrayLike(value)) {\n    var len = value.length;\n\n    if (isArrayLike(value[0])) {\n      var ret = [];\n\n      for (var i = 0; i < len; i++) {\n        ret.push(arraySlice.call(value[i]));\n      }\n\n      return ret;\n    }\n\n    return arraySlice.call(value);\n  }\n\n  return value;\n}\n\nfunction rgba2String(rgba) {\n  rgba[0] = Math.floor(rgba[0]);\n  rgba[1] = Math.floor(rgba[1]);\n  rgba[2] = Math.floor(rgba[2]);\n  return 'rgba(' + rgba.join(',') + ')';\n}\n\nfunction getArrayDim(keyframes) {\n  var lastValue = keyframes[keyframes.length - 1].value;\n  return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n}\n\nfunction createTrackClip(animator, easing, oneTrackDone, keyframes, propName, forceAnimate) {\n  var getter = animator._getter;\n  var setter = animator._setter;\n  var useSpline = easing === 'spline';\n  var trackLen = keyframes.length;\n\n  if (!trackLen) {\n    return;\n  } // Guess data type\n\n\n  var firstVal = keyframes[0].value;\n  var isValueArray = isArrayLike(firstVal);\n  var isValueColor = false;\n  var isValueString = false; // For vertices morphing\n\n  var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n  var trackMaxTime; // Sort keyframe as ascending\n\n  keyframes.sort(function (a, b) {\n    return a.time - b.time;\n  });\n  trackMaxTime = keyframes[trackLen - 1].time; // Percents of each keyframe\n\n  var kfPercents = []; // Value of each keyframe\n\n  var kfValues = [];\n  var prevValue = keyframes[0].value;\n  var isAllValueEqual = true;\n\n  for (var i = 0; i < trackLen; i++) {\n    kfPercents.push(keyframes[i].time / trackMaxTime); // Assume value is a color when it is a string\n\n    var value = keyframes[i].value; // Check if value is equal, deep check if value is array\n\n    if (!(isValueArray && isArraySame(value, prevValue, arrDim) || !isValueArray && value === prevValue)) {\n      isAllValueEqual = false;\n    }\n\n    prevValue = value; // Try converting a string to a color array\n\n    if (typeof value == 'string') {\n      var colorArray = color.parse(value);\n\n      if (colorArray) {\n        value = colorArray;\n        isValueColor = true;\n      } else {\n        isValueString = true;\n      }\n    }\n\n    kfValues.push(value);\n  }\n\n  if (!forceAnimate && isAllValueEqual) {\n    return;\n  }\n\n  var lastValue = kfValues[trackLen - 1]; // Polyfill array and NaN value\n\n  for (var i = 0; i < trackLen - 1; i++) {\n    if (isValueArray) {\n      fillArr(kfValues[i], lastValue, arrDim);\n    } else {\n      if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n        kfValues[i] = lastValue;\n      }\n    }\n  }\n\n  isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim); // Cache the key of last frame to speed up when\n  // animation playback is sequency\n\n  var lastFrame = 0;\n  var lastFramePercent = 0;\n  var start;\n  var w;\n  var p0;\n  var p1;\n  var p2;\n  var p3;\n\n  if (isValueColor) {\n    var rgba = [0, 0, 0, 0];\n  }\n\n  var onframe = function (target, percent) {\n    // Find the range keyframes\n    // kf1-----kf2---------current--------kf3\n    // find kf2 and kf3 and do interpolation\n    var frame; // In the easing function like elasticOut, percent may less than 0\n\n    if (percent < 0) {\n      frame = 0;\n    } else if (percent < lastFramePercent) {\n      // Start from next key\n      // PENDING start from lastFrame ?\n      start = Math.min(lastFrame + 1, trackLen - 1);\n\n      for (frame = start; frame >= 0; frame--) {\n        if (kfPercents[frame] <= percent) {\n          break;\n        }\n      } // PENDING really need to do this ?\n\n\n      frame = Math.min(frame, trackLen - 2);\n    } else {\n      for (frame = lastFrame; frame < trackLen; frame++) {\n        if (kfPercents[frame] > percent) {\n          break;\n        }\n      }\n\n      frame = Math.min(frame - 1, trackLen - 2);\n    }\n\n    lastFrame = frame;\n    lastFramePercent = percent;\n    var range = kfPercents[frame + 1] - kfPercents[frame];\n\n    if (range === 0) {\n      return;\n    } else {\n      w = (percent - kfPercents[frame]) / range;\n    }\n\n    if (useSpline) {\n      p1 = kfValues[frame];\n      p0 = kfValues[frame === 0 ? frame : frame - 1];\n      p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n      p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n\n      if (isValueArray) {\n        catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          value = catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(p1, p2, w);\n        } else {\n          value = catmullRomInterpolate(p0, p1, p2, p3, w, w * w, w * w * w);\n        }\n\n        setter(target, propName, value);\n      }\n    } else {\n      if (isValueArray) {\n        interpolateArray(kfValues[frame], kfValues[frame + 1], w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          interpolateArray(kfValues[frame], kfValues[frame + 1], w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n        } else {\n          value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n        }\n\n        setter(target, propName, value);\n      }\n    }\n  };\n\n  var clip = new Clip({\n    target: animator._target,\n    life: trackMaxTime,\n    loop: animator._loop,\n    delay: animator._delay,\n    onframe: onframe,\n    ondestroy: oneTrackDone\n  });\n\n  if (easing && easing !== 'spline') {\n    clip.easing = easing;\n  }\n\n  return clip;\n}\n/**\n * @alias module:zrender/animation/Animator\n * @constructor\n * @param {Object} target\n * @param {boolean} loop\n * @param {Function} getter\n * @param {Function} setter\n */\n\n\nvar Animator = function (target, loop, getter, setter) {\n  this._tracks = {};\n  this._target = target;\n  this._loop = loop || false;\n  this._getter = getter || defaultGetter;\n  this._setter = setter || defaultSetter;\n  this._clipCount = 0;\n  this._delay = 0;\n  this._doneList = [];\n  this._onframeList = [];\n  this._clipList = [];\n};\n\nAnimator.prototype = {\n  /**\n   * 设置动画关键帧\n   * @param  {number} time 关键帧时间，单位是ms\n   * @param  {Object} props 关键帧的属性值，key-value表示\n   * @return {module:zrender/animation/Animator}\n   */\n  when: function (time\n  /* ms */\n  , props) {\n    var tracks = this._tracks;\n\n    for (var propName in props) {\n      if (!props.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      if (!tracks[propName]) {\n        tracks[propName] = []; // Invalid value\n\n        var value = this._getter(this._target, propName);\n\n        if (value == null) {\n          // zrLog('Invalid property ' + propName);\n          continue;\n        } // If time is 0\n        //  Then props is given initialize value\n        // Else\n        //  Initialize value from current prop value\n\n\n        if (time !== 0) {\n          tracks[propName].push({\n            time: 0,\n            value: cloneValue(value)\n          });\n        }\n      }\n\n      tracks[propName].push({\n        time: time,\n        value: props[propName]\n      });\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加动画每一帧的回调函数\n   * @param  {Function} callback\n   * @return {module:zrender/animation/Animator}\n   */\n  during: function (callback) {\n    this._onframeList.push(callback);\n\n    return this;\n  },\n  pause: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].pause();\n    }\n\n    this._paused = true;\n  },\n  resume: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].resume();\n    }\n\n    this._paused = false;\n  },\n  isPaused: function () {\n    return !!this._paused;\n  },\n  _doneCallback: function () {\n    // Clear all tracks\n    this._tracks = {}; // Clear all clips\n\n    this._clipList.length = 0;\n    var doneList = this._doneList;\n    var len = doneList.length;\n\n    for (var i = 0; i < len; i++) {\n      doneList[i].call(this);\n    }\n  },\n\n  /**\n   * 开始执行动画\n   * @param  {string|Function} [easing]\n   *         动画缓动函数，详见{@link module:zrender/animation/easing}\n   * @param  {boolean} forceAnimate\n   * @return {module:zrender/animation/Animator}\n   */\n  start: function (easing, forceAnimate) {\n    var self = this;\n    var clipCount = 0;\n\n    var oneTrackDone = function () {\n      clipCount--;\n\n      if (!clipCount) {\n        self._doneCallback();\n      }\n    };\n\n    var lastClip;\n\n    for (var propName in this._tracks) {\n      if (!this._tracks.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      var clip = createTrackClip(this, easing, oneTrackDone, this._tracks[propName], propName, forceAnimate);\n\n      if (clip) {\n        this._clipList.push(clip);\n\n        clipCount++; // If start after added to animation\n\n        if (this.animation) {\n          this.animation.addClip(clip);\n        }\n\n        lastClip = clip;\n      }\n    } // Add during callback on the last clip\n\n\n    if (lastClip) {\n      var oldOnFrame = lastClip.onframe;\n\n      lastClip.onframe = function (target, percent) {\n        oldOnFrame(target, percent);\n\n        for (var i = 0; i < self._onframeList.length; i++) {\n          self._onframeList[i](target, percent);\n        }\n      };\n    } // This optimization will help the case that in the upper application\n    // the view may be refreshed frequently, where animation will be\n    // called repeatly but nothing changed.\n\n\n    if (!clipCount) {\n      this._doneCallback();\n    }\n\n    return this;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stop: function (forwardToLast) {\n    var clipList = this._clipList;\n    var animation = this.animation;\n\n    for (var i = 0; i < clipList.length; i++) {\n      var clip = clipList[i];\n\n      if (forwardToLast) {\n        // Move to last frame before stop\n        clip.onframe(this._target, 1);\n      }\n\n      animation && animation.removeClip(clip);\n    }\n\n    clipList.length = 0;\n  },\n\n  /**\n   * 设置动画延迟开始的时间\n   * @param  {number} time 单位ms\n   * @return {module:zrender/animation/Animator}\n   */\n  delay: function (time) {\n    this._delay = time;\n    return this;\n  },\n\n  /**\n   * 添加动画结束的回调\n   * @param  {Function} cb\n   * @return {module:zrender/animation/Animator}\n   */\n  done: function (cb) {\n    if (cb) {\n      this._doneList.push(cb);\n    }\n\n    return this;\n  },\n\n  /**\n   * @return {Array.<module:zrender/animation/Clip>}\n   */\n  getClips: function () {\n    return this._clipList;\n  }\n};\nvar _default = Animator;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../model/Model\");\n\nvar linkList = require(\"./helper/linkList\");\n\nvar List = require(\"./List\");\n\nvar createDimensions = require(\"./helper/createDimensions\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Tree data structure\n *\n * @module echarts/data/Tree\n */\n\n/**\n * @constructor module:echarts/data/Tree~TreeNode\n * @param {string} name\n * @param {module:echarts/data/Tree} hostTree\n */\nvar TreeNode = function (name, hostTree) {\n  /**\n   * @type {string}\n   */\n  this.name = name || '';\n  /**\n   * Depth of node\n   *\n   * @type {number}\n   * @readOnly\n   */\n\n  this.depth = 0;\n  /**\n   * Height of the subtree rooted at this node.\n   * @type {number}\n   * @readOnly\n   */\n\n  this.height = 0;\n  /**\n   * @type {module:echarts/data/Tree~TreeNode}\n   * @readOnly\n   */\n\n  this.parentNode = null;\n  /**\n   * Reference to list item.\n   * Do not persistent dataIndex outside,\n   * besause it may be changed by list.\n   * If dataIndex -1,\n   * this node is logical deleted (filtered) in list.\n   *\n   * @type {Object}\n   * @readOnly\n   */\n\n  this.dataIndex = -1;\n  /**\n   * @type {Array.<module:echarts/data/Tree~TreeNode>}\n   * @readOnly\n   */\n\n  this.children = [];\n  /**\n   * @type {Array.<module:echarts/data/Tree~TreeNode>}\n   * @pubilc\n   */\n\n  this.viewChildren = [];\n  /**\n   * @type {moduel:echarts/data/Tree}\n   * @readOnly\n   */\n\n  this.hostTree = hostTree;\n};\n\nTreeNode.prototype = {\n  constructor: TreeNode,\n\n  /**\n   * The node is removed.\n   * @return {boolean} is removed.\n   */\n  isRemoved: function () {\n    return this.dataIndex < 0;\n  },\n\n  /**\n   * Travel this subtree (include this node).\n   * Usage:\n   *    node.eachNode(function () { ... }); // preorder\n   *    node.eachNode('preorder', function () { ... }); // preorder\n   *    node.eachNode('postorder', function () { ... }); // postorder\n   *    node.eachNode(\n   *        {order: 'postorder', attr: 'viewChildren'},\n   *        function () { ... }\n   *    ); // postorder\n   *\n   * @param {(Object|string)} options If string, means order.\n   * @param {string=} options.order 'preorder' or 'postorder'\n   * @param {string=} options.attr 'children' or 'viewChildren'\n   * @param {Function} cb If in preorder and return false,\n   *                      its subtree will not be visited.\n   * @param {Object} [context]\n   */\n  eachNode: function (options, cb, context) {\n    if (typeof options === 'function') {\n      context = cb;\n      cb = options;\n      options = null;\n    }\n\n    options = options || {};\n\n    if (zrUtil.isString(options)) {\n      options = {\n        order: options\n      };\n    }\n\n    var order = options.order || 'preorder';\n    var children = this[options.attr || 'children'];\n    var suppressVisitSub;\n    order === 'preorder' && (suppressVisitSub = cb.call(context, this));\n\n    for (var i = 0; !suppressVisitSub && i < children.length; i++) {\n      children[i].eachNode(options, cb, context);\n    }\n\n    order === 'postorder' && cb.call(context, this);\n  },\n\n  /**\n   * Update depth and height of this subtree.\n   *\n   * @param  {number} depth\n   */\n  updateDepthAndHeight: function (depth) {\n    var height = 0;\n    this.depth = depth;\n\n    for (var i = 0; i < this.children.length; i++) {\n      var child = this.children[i];\n      child.updateDepthAndHeight(depth + 1);\n\n      if (child.height > height) {\n        height = child.height;\n      }\n    }\n\n    this.height = height + 1;\n  },\n\n  /**\n   * @param  {string} id\n   * @return {module:echarts/data/Tree~TreeNode}\n   */\n  getNodeById: function (id) {\n    if (this.getId() === id) {\n      return this;\n    }\n\n    for (var i = 0, children = this.children, len = children.length; i < len; i++) {\n      var res = children[i].getNodeById(id);\n\n      if (res) {\n        return res;\n      }\n    }\n  },\n\n  /**\n   * @param {module:echarts/data/Tree~TreeNode} node\n   * @return {boolean}\n   */\n  contains: function (node) {\n    if (node === this) {\n      return true;\n    }\n\n    for (var i = 0, children = this.children, len = children.length; i < len; i++) {\n      var res = children[i].contains(node);\n\n      if (res) {\n        return res;\n      }\n    }\n  },\n\n  /**\n   * @param {boolean} includeSelf Default false.\n   * @return {Array.<module:echarts/data/Tree~TreeNode>} order: [root, child, grandchild, ...]\n   */\n  getAncestors: function (includeSelf) {\n    var ancestors = [];\n    var node = includeSelf ? this : this.parentNode;\n\n    while (node) {\n      ancestors.push(node);\n      node = node.parentNode;\n    }\n\n    ancestors.reverse();\n    return ancestors;\n  },\n\n  /**\n   * @param {string|Array=} [dimension='value'] Default 'value'. can be 0, 1, 2, 3\n   * @return {number} Value.\n   */\n  getValue: function (dimension) {\n    var data = this.hostTree.data;\n    return data.get(data.getDimension(dimension || 'value'), this.dataIndex);\n  },\n\n  /**\n   * @param {Object} layout\n   * @param {boolean=} [merge=false]\n   */\n  setLayout: function (layout, merge) {\n    this.dataIndex >= 0 && this.hostTree.data.setItemLayout(this.dataIndex, layout, merge);\n  },\n\n  /**\n   * @return {Object} layout\n   */\n  getLayout: function () {\n    return this.hostTree.data.getItemLayout(this.dataIndex);\n  },\n\n  /**\n   * @param {string} [path]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path) {\n    if (this.dataIndex < 0) {\n      return;\n    }\n\n    var hostTree = this.hostTree;\n    var itemModel = hostTree.data.getItemModel(this.dataIndex);\n    var levelModel = this.getLevelModel();\n    var leavesModel;\n\n    if (!levelModel && (this.children.length === 0 || this.children.length !== 0 && this.isExpand === false)) {\n      leavesModel = this.getLeavesModel();\n    }\n\n    return itemModel.getModel(path, (levelModel || leavesModel || hostTree.hostModel).getModel(path));\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getLevelModel: function () {\n    return (this.hostTree.levelModels || [])[this.depth];\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getLeavesModel: function () {\n    return this.hostTree.leavesModel;\n  },\n\n  /**\n   * @example\n   *  setItemVisual('color', color);\n   *  setItemVisual({\n   *      'color': color\n   *  });\n   */\n  setVisual: function (key, value) {\n    this.dataIndex >= 0 && this.hostTree.data.setItemVisual(this.dataIndex, key, value);\n  },\n\n  /**\n   * Get item visual\n   */\n  getVisual: function (key, ignoreParent) {\n    return this.hostTree.data.getItemVisual(this.dataIndex, key, ignoreParent);\n  },\n\n  /**\n   * @public\n   * @return {number}\n   */\n  getRawIndex: function () {\n    return this.hostTree.data.getRawIndex(this.dataIndex);\n  },\n\n  /**\n   * @public\n   * @return {string}\n   */\n  getId: function () {\n    return this.hostTree.data.getId(this.dataIndex);\n  },\n\n  /**\n   * if this is an ancestor of another node\n   *\n   * @public\n   * @param {TreeNode} node another node\n   * @return {boolean} if is ancestor\n   */\n  isAncestorOf: function (node) {\n    var parent = node.parentNode;\n\n    while (parent) {\n      if (parent === this) {\n        return true;\n      }\n\n      parent = parent.parentNode;\n    }\n\n    return false;\n  },\n\n  /**\n   * if this is an descendant of another node\n   *\n   * @public\n   * @param {TreeNode} node another node\n   * @return {boolean} if is descendant\n   */\n  isDescendantOf: function (node) {\n    return node !== this && node.isAncestorOf(this);\n  }\n};\n/**\n * @constructor\n * @alias module:echarts/data/Tree\n * @param {module:echarts/model/Model} hostModel\n * @param {Array.<Object>} levelOptions\n * @param {Object} leavesOption\n */\n\nfunction Tree(hostModel, levelOptions, leavesOption) {\n  /**\n   * @type {module:echarts/data/Tree~TreeNode}\n   * @readOnly\n   */\n  this.root;\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.data;\n  /**\n   * Index of each item is the same as the raw index of coresponding list item.\n   * @private\n   * @type {Array.<module:echarts/data/Tree~TreeNode}\n   */\n\n  this._nodes = [];\n  /**\n   * @private\n   * @readOnly\n   * @type {module:echarts/model/Model}\n   */\n\n  this.hostModel = hostModel;\n  /**\n   * @private\n   * @readOnly\n   * @type {Array.<module:echarts/model/Model}\n   */\n\n  this.levelModels = zrUtil.map(levelOptions || [], function (levelDefine) {\n    return new Model(levelDefine, hostModel, hostModel.ecModel);\n  });\n  this.leavesModel = new Model(leavesOption || {}, hostModel, hostModel.ecModel);\n}\n\nTree.prototype = {\n  constructor: Tree,\n  type: 'tree',\n\n  /**\n   * Travel this subtree (include this node).\n   * Usage:\n   *    node.eachNode(function () { ... }); // preorder\n   *    node.eachNode('preorder', function () { ... }); // preorder\n   *    node.eachNode('postorder', function () { ... }); // postorder\n   *    node.eachNode(\n   *        {order: 'postorder', attr: 'viewChildren'},\n   *        function () { ... }\n   *    ); // postorder\n   *\n   * @param {(Object|string)} options If string, means order.\n   * @param {string=} options.order 'preorder' or 'postorder'\n   * @param {string=} options.attr 'children' or 'viewChildren'\n   * @param {Function} cb\n   * @param {Object}   [context]\n   */\n  eachNode: function (options, cb, context) {\n    this.root.eachNode(options, cb, context);\n  },\n\n  /**\n   * @param {number} dataIndex\n   * @return {module:echarts/data/Tree~TreeNode}\n   */\n  getNodeByDataIndex: function (dataIndex) {\n    var rawIndex = this.data.getRawIndex(dataIndex);\n    return this._nodes[rawIndex];\n  },\n\n  /**\n   * @param {string} name\n   * @return {module:echarts/data/Tree~TreeNode}\n   */\n  getNodeByName: function (name) {\n    return this.root.getNodeByName(name);\n  },\n\n  /**\n   * Update item available by list,\n   * when list has been performed options like 'filterSelf' or 'map'.\n   */\n  update: function () {\n    var data = this.data;\n    var nodes = this._nodes;\n\n    for (var i = 0, len = nodes.length; i < len; i++) {\n      nodes[i].dataIndex = -1;\n    }\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      nodes[data.getRawIndex(i)].dataIndex = i;\n    }\n  },\n\n  /**\n   * Clear all layouts\n   */\n  clearLayouts: function () {\n    this.data.clearItemLayouts();\n  }\n};\n/**\n * data node format:\n * {\n *     name: ...\n *     value: ...\n *     children: [\n *         {\n *             name: ...\n *             value: ...\n *             children: ...\n *         },\n *         ...\n *     ]\n * }\n *\n * @static\n * @param {Object} dataRoot Root node.\n * @param {module:echarts/model/Model} hostModel\n * @param {Object} treeOptions\n * @param {Array.<Object>} treeOptions.levels\n * @param {Array.<Object>} treeOptions.leaves\n * @return module:echarts/data/Tree\n */\n\nTree.createTree = function (dataRoot, hostModel, treeOptions) {\n  var tree = new Tree(hostModel, treeOptions.levels, treeOptions.leaves);\n  var listData = [];\n  var dimMax = 1;\n  buildHierarchy(dataRoot);\n\n  function buildHierarchy(dataNode, parentNode) {\n    var value = dataNode.value;\n    dimMax = Math.max(dimMax, zrUtil.isArray(value) ? value.length : 1);\n    listData.push(dataNode);\n    var node = new TreeNode(dataNode.name, tree);\n    parentNode ? addChild(node, parentNode) : tree.root = node;\n\n    tree._nodes.push(node);\n\n    var children = dataNode.children;\n\n    if (children) {\n      for (var i = 0; i < children.length; i++) {\n        buildHierarchy(children[i], node);\n      }\n    }\n  }\n\n  tree.root.updateDepthAndHeight(0);\n  var dimensionsInfo = createDimensions(listData, {\n    coordDimensions: ['value'],\n    dimensionsCount: dimMax\n  });\n  var list = new List(dimensionsInfo, hostModel);\n  list.initData(listData);\n  linkList({\n    mainData: list,\n    struct: tree,\n    structAttr: 'tree'\n  });\n  tree.update();\n  return tree;\n};\n/**\n * It is needed to consider the mess of 'list', 'hostModel' when creating a TreeNote,\n * so this function is not ready and not necessary to be public.\n *\n * @param {(module:echarts/data/Tree~TreeNode|Object)} child\n */\n\n\nfunction addChild(child, node) {\n  var children = node.children;\n\n  if (child.parentNode === node) {\n    return;\n  }\n\n  children.push(child);\n  child.parentNode = node;\n}\n\nvar _default = Tree;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapModel = require(\"./VisualMapModel\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar visualDefault = require(\"../../visual/visualDefault\");\n\nvar _number = require(\"../../util/number\");\n\nvar reformIntervals = _number.reformIntervals;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PiecewiseModel = VisualMapModel.extend({\n  type: 'visualMap.piecewise',\n\n  /**\n   * Order Rule:\n   *\n   * option.categories / option.pieces / option.text / option.selected:\n   *     If !option.inverse,\n   *     Order when vertical: ['top', ..., 'bottom'].\n   *     Order when horizontal: ['left', ..., 'right'].\n   *     If option.inverse, the meaning of\n   *     the order should be reversed.\n   *\n   * this._pieceList:\n   *     The order is always [low, ..., high].\n   *\n   * Mapping from location to low-high:\n   *     If !option.inverse\n   *     When vertical, top is high.\n   *     When horizontal, right is high.\n   *     If option.inverse, reverse.\n   */\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    selected: null,\n    // Object. If not specified, means selected.\n    // When pieces and splitNumber: {'0': true, '5': true}\n    // When categories: {'cate1': false, 'cate3': true}\n    // When selected === false, means all unselected.\n    minOpen: false,\n    // Whether include values that smaller than `min`.\n    maxOpen: false,\n    // Whether include values that bigger than `max`.\n    align: 'auto',\n    // 'auto', 'left', 'right'\n    itemWidth: 20,\n    // When put the controller vertically, it is the length of\n    // horizontal side of each item. Otherwise, vertical side.\n    itemHeight: 14,\n    // When put the controller vertically, it is the length of\n    // vertical side of each item. Otherwise, horizontal side.\n    itemSymbol: 'roundRect',\n    pieceList: null,\n    // Each item is Object, with some of those attrs:\n    // {min, max, lt, gt, lte, gte, value,\n    // color, colorSaturation, colorAlpha, opacity,\n    // symbol, symbolSize}, which customize the range or visual\n    // coding of the certain piece. Besides, see \"Order Rule\".\n    categories: null,\n    // category names, like: ['some1', 'some2', 'some3'].\n    // Attr min/max are ignored when categories set. See \"Order Rule\"\n    splitNumber: 5,\n    // If set to 5, auto split five pieces equally.\n    // If set to 0 and component type not set, component type will be\n    // determined as \"continuous\". (It is less reasonable but for ec2\n    // compatibility, see echarts/component/visualMap/typeDefaulter)\n    selectedMode: 'multiple',\n    // Can be 'multiple' or 'single'.\n    itemGap: 10,\n    // The gap between two items, in px.\n    hoverLink: true,\n    // Enable hover highlight.\n    showLabel: null // By default, when text is used, label will hide (the logic\n    // is remained for compatibility reason)\n\n  },\n\n  /**\n   * @override\n   */\n  optionUpdated: function (newOption, isInit) {\n    PiecewiseModel.superApply(this, 'optionUpdated', arguments);\n    /**\n     * The order is always [low, ..., high].\n     * [{text: string, interval: Array.<number>}, ...]\n     * @private\n     * @type {Array.<Object>}\n     */\n\n    this._pieceList = [];\n    this.resetExtent();\n    /**\n     * 'pieces', 'categories', 'splitNumber'\n     * @type {string}\n     */\n\n    var mode = this._mode = this._determineMode();\n\n    resetMethods[this._mode].call(this);\n\n    this._resetSelected(newOption, isInit);\n\n    var categories = this.option.categories;\n    this.resetVisual(function (mappingOption, state) {\n      if (mode === 'categories') {\n        mappingOption.mappingMethod = 'category';\n        mappingOption.categories = zrUtil.clone(categories);\n      } else {\n        mappingOption.dataExtent = this.getExtent();\n        mappingOption.mappingMethod = 'piecewise';\n        mappingOption.pieceList = zrUtil.map(this._pieceList, function (piece) {\n          var piece = zrUtil.clone(piece);\n\n          if (state !== 'inRange') {\n            // FIXME\n            // outOfRange do not support special visual in pieces.\n            piece.visual = null;\n          }\n\n          return piece;\n        });\n      }\n    });\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  completeVisualOption: function () {\n    // Consider this case:\n    // visualMap: {\n    //      pieces: [{symbol: 'circle', lt: 0}, {symbol: 'rect', gte: 0}]\n    // }\n    // where no inRange/outOfRange set but only pieces. So we should make\n    // default inRange/outOfRange for this case, otherwise visuals that only\n    // appear in `pieces` will not be taken into account in visual encoding.\n    var option = this.option;\n    var visualTypesInPieces = {};\n    var visualTypes = VisualMapping.listVisualTypes();\n    var isCategory = this.isCategory();\n    zrUtil.each(option.pieces, function (piece) {\n      zrUtil.each(visualTypes, function (visualType) {\n        if (piece.hasOwnProperty(visualType)) {\n          visualTypesInPieces[visualType] = 1;\n        }\n      });\n    });\n    zrUtil.each(visualTypesInPieces, function (v, visualType) {\n      var exists = 0;\n      zrUtil.each(this.stateList, function (state) {\n        exists |= has(option, state, visualType) || has(option.target, state, visualType);\n      }, this);\n      !exists && zrUtil.each(this.stateList, function (state) {\n        (option[state] || (option[state] = {}))[visualType] = visualDefault.get(visualType, state === 'inRange' ? 'active' : 'inactive', isCategory);\n      });\n    }, this);\n\n    function has(obj, state, visualType) {\n      return obj && obj[state] && (zrUtil.isObject(obj[state]) ? obj[state].hasOwnProperty(visualType) : obj[state] === visualType // e.g., inRange: 'symbol'\n      );\n    }\n\n    VisualMapModel.prototype.completeVisualOption.apply(this, arguments);\n  },\n  _resetSelected: function (newOption, isInit) {\n    var thisOption = this.option;\n    var pieceList = this._pieceList; // Selected do not merge but all override.\n\n    var selected = (isInit ? thisOption : newOption).selected || {};\n    thisOption.selected = selected; // Consider 'not specified' means true.\n\n    zrUtil.each(pieceList, function (piece, index) {\n      var key = this.getSelectedMapKey(piece);\n\n      if (!selected.hasOwnProperty(key)) {\n        selected[key] = true;\n      }\n    }, this);\n\n    if (thisOption.selectedMode === 'single') {\n      // Ensure there is only one selected.\n      var hasSel = false;\n      zrUtil.each(pieceList, function (piece, index) {\n        var key = this.getSelectedMapKey(piece);\n\n        if (selected[key]) {\n          hasSel ? selected[key] = false : hasSel = true;\n        }\n      }, this);\n    } // thisOption.selectedMode === 'multiple', default: all selected.\n\n  },\n\n  /**\n   * @public\n   */\n  getSelectedMapKey: function (piece) {\n    return this._mode === 'categories' ? piece.value + '' : piece.index + '';\n  },\n\n  /**\n   * @public\n   */\n  getPieceList: function () {\n    return this._pieceList;\n  },\n\n  /**\n   * @private\n   * @return {string}\n   */\n  _determineMode: function () {\n    var option = this.option;\n    return option.pieces && option.pieces.length > 0 ? 'pieces' : this.option.categories ? 'categories' : 'splitNumber';\n  },\n\n  /**\n   * @public\n   * @override\n   */\n  setSelected: function (selected) {\n    this.option.selected = zrUtil.clone(selected);\n  },\n\n  /**\n   * @public\n   * @override\n   */\n  getValueState: function (value) {\n    var index = VisualMapping.findPieceIndex(value, this._pieceList);\n    return index != null ? this.option.selected[this.getSelectedMapKey(this._pieceList[index])] ? 'inRange' : 'outOfRange' : 'outOfRange';\n  },\n\n  /**\n   * @public\n   * @params {number} pieceIndex piece index in visualMapModel.getPieceList()\n   * @return {Array.<Object>} [{seriesId, dataIndices: <Array.<number>>}, ...]\n   */\n  findTargetDataIndices: function (pieceIndex) {\n    var result = [];\n    this.eachTargetSeries(function (seriesModel) {\n      var dataIndices = [];\n      var data = seriesModel.getData();\n      data.each(this.getDataDimension(data), function (value, dataIndex) {\n        // Should always base on model pieceList, because it is order sensitive.\n        var pIdx = VisualMapping.findPieceIndex(value, this._pieceList);\n        pIdx === pieceIndex && dataIndices.push(dataIndex);\n      }, this);\n      result.push({\n        seriesId: seriesModel.id,\n        dataIndex: dataIndices\n      });\n    }, this);\n    return result;\n  },\n\n  /**\n   * @private\n   * @param {Object} piece piece.value or piece.interval is required.\n   * @return {number} Can be Infinity or -Infinity\n   */\n  getRepresentValue: function (piece) {\n    var representValue;\n\n    if (this.isCategory()) {\n      representValue = piece.value;\n    } else {\n      if (piece.value != null) {\n        representValue = piece.value;\n      } else {\n        var pieceInterval = piece.interval || [];\n        representValue = pieceInterval[0] === -Infinity && pieceInterval[1] === Infinity ? 0 : (pieceInterval[0] + pieceInterval[1]) / 2;\n      }\n    }\n\n    return representValue;\n  },\n  getVisualMeta: function (getColorVisual) {\n    // Do not support category. (category axis is ordinal, numerical)\n    if (this.isCategory()) {\n      return;\n    }\n\n    var stops = [];\n    var outerColors = [];\n    var visualMapModel = this;\n\n    function setStop(interval, valueState) {\n      var representValue = visualMapModel.getRepresentValue({\n        interval: interval\n      });\n\n      if (!valueState) {\n        valueState = visualMapModel.getValueState(representValue);\n      }\n\n      var color = getColorVisual(representValue, valueState);\n\n      if (interval[0] === -Infinity) {\n        outerColors[0] = color;\n      } else if (interval[1] === Infinity) {\n        outerColors[1] = color;\n      } else {\n        stops.push({\n          value: interval[0],\n          color: color\n        }, {\n          value: interval[1],\n          color: color\n        });\n      }\n    } // Suplement\n\n\n    var pieceList = this._pieceList.slice();\n\n    if (!pieceList.length) {\n      pieceList.push({\n        interval: [-Infinity, Infinity]\n      });\n    } else {\n      var edge = pieceList[0].interval[0];\n      edge !== -Infinity && pieceList.unshift({\n        interval: [-Infinity, edge]\n      });\n      edge = pieceList[pieceList.length - 1].interval[1];\n      edge !== Infinity && pieceList.push({\n        interval: [edge, Infinity]\n      });\n    }\n\n    var curr = -Infinity;\n    zrUtil.each(pieceList, function (piece) {\n      var interval = piece.interval;\n\n      if (interval) {\n        // Fulfill gap.\n        interval[0] > curr && setStop([curr, interval[0]], 'outOfRange');\n        setStop(interval.slice());\n        curr = interval[1];\n      }\n    }, this);\n    return {\n      stops: stops,\n      outerColors: outerColors\n    };\n  }\n});\n/**\n * Key is this._mode\n * @type {Object}\n * @this {module:echarts/component/viusalMap/PiecewiseMode}\n */\n\nvar resetMethods = {\n  splitNumber: function () {\n    var thisOption = this.option;\n    var pieceList = this._pieceList;\n    var precision = Math.min(thisOption.precision, 20);\n    var dataExtent = this.getExtent();\n    var splitNumber = thisOption.splitNumber;\n    splitNumber = Math.max(parseInt(splitNumber, 10), 1);\n    thisOption.splitNumber = splitNumber;\n    var splitStep = (dataExtent[1] - dataExtent[0]) / splitNumber; // Precision auto-adaption\n\n    while (+splitStep.toFixed(precision) !== splitStep && precision < 5) {\n      precision++;\n    }\n\n    thisOption.precision = precision;\n    splitStep = +splitStep.toFixed(precision);\n    var index = 0;\n\n    if (thisOption.minOpen) {\n      pieceList.push({\n        index: index++,\n        interval: [-Infinity, dataExtent[0]],\n        close: [0, 0]\n      });\n    }\n\n    for (var curr = dataExtent[0], len = index + splitNumber; index < len; curr += splitStep) {\n      var max = index === splitNumber - 1 ? dataExtent[1] : curr + splitStep;\n      pieceList.push({\n        index: index++,\n        interval: [curr, max],\n        close: [1, 1]\n      });\n    }\n\n    if (thisOption.maxOpen) {\n      pieceList.push({\n        index: index++,\n        interval: [dataExtent[1], Infinity],\n        close: [0, 0]\n      });\n    }\n\n    reformIntervals(pieceList);\n    zrUtil.each(pieceList, function (piece) {\n      piece.text = this.formatValueText(piece.interval);\n    }, this);\n  },\n  categories: function () {\n    var thisOption = this.option;\n    zrUtil.each(thisOption.categories, function (cate) {\n      // FIXME category模式也使用pieceList，但在visualMapping中不是使用pieceList。\n      // 是否改一致。\n      this._pieceList.push({\n        text: this.formatValueText(cate, true),\n        value: cate\n      });\n    }, this); // See \"Order Rule\".\n\n    normalizeReverse(thisOption, this._pieceList);\n  },\n  pieces: function () {\n    var thisOption = this.option;\n    var pieceList = this._pieceList;\n    zrUtil.each(thisOption.pieces, function (pieceListItem, index) {\n      if (!zrUtil.isObject(pieceListItem)) {\n        pieceListItem = {\n          value: pieceListItem\n        };\n      }\n\n      var item = {\n        text: '',\n        index: index\n      };\n\n      if (pieceListItem.label != null) {\n        item.text = pieceListItem.label;\n      }\n\n      if (pieceListItem.hasOwnProperty('value')) {\n        var value = item.value = pieceListItem.value;\n        item.interval = [value, value];\n        item.close = [1, 1];\n      } else {\n        // `min` `max` is legacy option.\n        // `lt` `gt` `lte` `gte` is recommanded.\n        var interval = item.interval = [];\n        var close = item.close = [0, 0];\n        var closeList = [1, 0, 1];\n        var infinityList = [-Infinity, Infinity];\n        var useMinMax = [];\n\n        for (var lg = 0; lg < 2; lg++) {\n          var names = [['gte', 'gt', 'min'], ['lte', 'lt', 'max']][lg];\n\n          for (var i = 0; i < 3 && interval[lg] == null; i++) {\n            interval[lg] = pieceListItem[names[i]];\n            close[lg] = closeList[i];\n            useMinMax[lg] = i === 2;\n          }\n\n          interval[lg] == null && (interval[lg] = infinityList[lg]);\n        }\n\n        useMinMax[0] && interval[1] === Infinity && (close[0] = 0);\n        useMinMax[1] && interval[0] === -Infinity && (close[1] = 0);\n\n        if (interval[0] === interval[1] && close[0] && close[1]) {\n          // Consider: [{min: 5, max: 5, visual: {...}}, {min: 0, max: 5}],\n          // we use value to lift the priority when min === max\n          item.value = interval[0];\n        }\n      }\n\n      item.visual = VisualMapping.retrieveVisuals(pieceListItem);\n      pieceList.push(item);\n    }, this); // See \"Order Rule\".\n\n    normalizeReverse(thisOption, pieceList); // Only pieces\n\n    reformIntervals(pieceList);\n    zrUtil.each(pieceList, function (piece) {\n      var close = piece.close;\n      var edgeSymbols = [['<', '≤'][close[1]], ['>', '≥'][close[0]]];\n      piece.text = piece.text || this.formatValueText(piece.value != null ? piece.value : piece.interval, false, edgeSymbols);\n    }, this);\n  }\n};\n\nfunction normalizeReverse(thisOption, pieceList) {\n  var inverse = thisOption.inverse;\n\n  if (thisOption.orient === 'vertical' ? !inverse : inverse) {\n    pieceList.reverse();\n  }\n}\n\nvar _default = PiecewiseModel;\nmodule.exports = _default;","var eventUtil = require(\"./event\");\n\n/**\n * Only implements needed gestures for mobile.\n */\nvar GestureMgr = function () {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  this._track = [];\n};\n\nGestureMgr.prototype = {\n  constructor: GestureMgr,\n  recognize: function (event, target, root) {\n    this._doTrack(event, target, root);\n\n    return this._recognize(event);\n  },\n  clear: function () {\n    this._track.length = 0;\n    return this;\n  },\n  _doTrack: function (event, target, root) {\n    var touches = event.touches;\n\n    if (!touches) {\n      return;\n    }\n\n    var trackItem = {\n      points: [],\n      touches: [],\n      target: target,\n      event: event\n    };\n\n    for (var i = 0, len = touches.length; i < len; i++) {\n      var touch = touches[i];\n      var pos = eventUtil.clientToLocal(root, touch, {});\n      trackItem.points.push([pos.zrX, pos.zrY]);\n      trackItem.touches.push(touch);\n    }\n\n    this._track.push(trackItem);\n  },\n  _recognize: function (event) {\n    for (var eventName in recognizers) {\n      if (recognizers.hasOwnProperty(eventName)) {\n        var gestureInfo = recognizers[eventName](this._track, event);\n\n        if (gestureInfo) {\n          return gestureInfo;\n        }\n      }\n    }\n  }\n};\n\nfunction dist(pointPair) {\n  var dx = pointPair[1][0] - pointPair[0][0];\n  var dy = pointPair[1][1] - pointPair[0][1];\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nfunction center(pointPair) {\n  return [(pointPair[0][0] + pointPair[1][0]) / 2, (pointPair[0][1] + pointPair[1][1]) / 2];\n}\n\nvar recognizers = {\n  pinch: function (track, event) {\n    var trackLen = track.length;\n\n    if (!trackLen) {\n      return;\n    }\n\n    var pinchEnd = (track[trackLen - 1] || {}).points;\n    var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n    if (pinchPre && pinchPre.length > 1 && pinchEnd && pinchEnd.length > 1) {\n      var pinchScale = dist(pinchEnd) / dist(pinchPre);\n      !isFinite(pinchScale) && (pinchScale = 1);\n      event.pinchScale = pinchScale;\n      var pinchCenter = center(pinchEnd);\n      event.pinchX = pinchCenter[0];\n      event.pinchY = pinchCenter[1];\n      return {\n        type: 'pinch',\n        target: track[0].target,\n        event: event\n      };\n    }\n  } // Only pinch currently.\n\n};\nvar _default = GestureMgr;\nmodule.exports = _default;","require(\"./legend\");\n\nrequire(\"./legend/ScrollableLegendModel\");\n\nrequire(\"./legend/ScrollableLegendView\");\n\nrequire(\"./legend/scrollableLegendAction\");","var echarts = require(\"../echarts\");\n\nrequire(\"../component/parallel\");\n\nrequire(\"./parallel/ParallelSeries\");\n\nrequire(\"./parallel/ParallelView\");\n\nvar parallelVisual = require(\"./parallel/parallelVisual\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerVisual(parallelVisual);","var echarts = require(\"../echarts\");\n\nrequire(\"./candlestick/CandlestickSeries\");\n\nrequire(\"./candlestick/CandlestickView\");\n\nvar preprocessor = require(\"./candlestick/preprocessor\");\n\nvar candlestickVisual = require(\"./candlestick/candlestickVisual\");\n\nvar candlestickLayout = require(\"./candlestick/candlestickLayout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerPreprocessor(preprocessor);\necharts.registerVisual(candlestickVisual);\necharts.registerLayout(candlestickLayout);","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../../coord/Axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar TimelineAxis = function (dim, scale, coordExtent, axisType) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis model\n   * @param {module:echarts/component/TimelineModel}\n   */\n\n  this.model = null;\n};\n\nTimelineAxis.prototype = {\n  constructor: TimelineAxis,\n\n  /**\n   * @override\n   */\n  getLabelModel: function () {\n    return this.model.getModel('label');\n  },\n\n  /**\n   * @override\n   */\n  isHorizontal: function () {\n    return this.model.get('orient') === 'horizontal';\n  }\n};\nzrUtil.inherits(TimelineAxis, Axis);\nvar _default = TimelineAxis;\nmodule.exports = _default;","var _graphic = require(\"../../util/graphic\");\n\nvar subPixelOptimize = _graphic.subPixelOptimize;\n\nvar createRenderPlanner = require(\"../helper/createRenderPlanner\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar retrieve2 = _util.retrieve2;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar LargeArr = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nvar _default = {\n  seriesType: 'candlestick',\n  plan: createRenderPlanner(),\n  reset: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var data = seriesModel.getData();\n    var candleWidth = calculateCandleWidth(seriesModel, data);\n    var cDimIdx = 0;\n    var vDimIdx = 1;\n    var coordDims = ['x', 'y'];\n    var cDim = data.mapDimension(coordDims[cDimIdx]);\n    var vDims = data.mapDimension(coordDims[vDimIdx], true);\n    var openDim = vDims[0];\n    var closeDim = vDims[1];\n    var lowestDim = vDims[2];\n    var highestDim = vDims[3];\n    data.setLayout({\n      candleWidth: candleWidth,\n      // The value is experimented visually.\n      isSimpleBox: candleWidth <= 1.3\n    });\n\n    if (cDim == null || vDims.length < 4) {\n      return;\n    }\n\n    return {\n      progress: seriesModel.pipelineContext.large ? largeProgress : normalProgress\n    };\n\n    function normalProgress(params, data) {\n      var dataIndex;\n\n      while ((dataIndex = params.next()) != null) {\n        var axisDimVal = data.get(cDim, dataIndex);\n        var openVal = data.get(openDim, dataIndex);\n        var closeVal = data.get(closeDim, dataIndex);\n        var lowestVal = data.get(lowestDim, dataIndex);\n        var highestVal = data.get(highestDim, dataIndex);\n        var ocLow = Math.min(openVal, closeVal);\n        var ocHigh = Math.max(openVal, closeVal);\n        var ocLowPoint = getPoint(ocLow, axisDimVal);\n        var ocHighPoint = getPoint(ocHigh, axisDimVal);\n        var lowestPoint = getPoint(lowestVal, axisDimVal);\n        var highestPoint = getPoint(highestVal, axisDimVal);\n        var ends = [];\n        addBodyEnd(ends, ocHighPoint, 0);\n        addBodyEnd(ends, ocLowPoint, 1);\n        ends.push(subPixelOptimizePoint(highestPoint), subPixelOptimizePoint(ocHighPoint), subPixelOptimizePoint(lowestPoint), subPixelOptimizePoint(ocLowPoint));\n        data.setItemLayout(dataIndex, {\n          sign: getSign(data, dataIndex, openVal, closeVal, closeDim),\n          initBaseline: openVal > closeVal ? ocHighPoint[vDimIdx] : ocLowPoint[vDimIdx],\n          // open point.\n          ends: ends,\n          brushRect: makeBrushRect(lowestVal, highestVal, axisDimVal)\n        });\n      }\n\n      function getPoint(val, axisDimVal) {\n        var p = [];\n        p[cDimIdx] = axisDimVal;\n        p[vDimIdx] = val;\n        return isNaN(axisDimVal) || isNaN(val) ? [NaN, NaN] : coordSys.dataToPoint(p);\n      }\n\n      function addBodyEnd(ends, point, start) {\n        var point1 = point.slice();\n        var point2 = point.slice();\n        point1[cDimIdx] = subPixelOptimize(point1[cDimIdx] + candleWidth / 2, 1, false);\n        point2[cDimIdx] = subPixelOptimize(point2[cDimIdx] - candleWidth / 2, 1, true);\n        start ? ends.push(point1, point2) : ends.push(point2, point1);\n      }\n\n      function makeBrushRect(lowestVal, highestVal, axisDimVal) {\n        var pmin = getPoint(lowestVal, axisDimVal);\n        var pmax = getPoint(highestVal, axisDimVal);\n        pmin[cDimIdx] -= candleWidth / 2;\n        pmax[cDimIdx] -= candleWidth / 2;\n        return {\n          x: pmin[0],\n          y: pmin[1],\n          width: vDimIdx ? candleWidth : pmax[0] - pmin[0],\n          height: vDimIdx ? pmax[1] - pmin[1] : candleWidth\n        };\n      }\n\n      function subPixelOptimizePoint(point) {\n        point[cDimIdx] = subPixelOptimize(point[cDimIdx], 1);\n        return point;\n      }\n    }\n\n    function largeProgress(params, data) {\n      // Structure: [sign, x, yhigh, ylow, sign, x, yhigh, ylow, ...]\n      var points = new LargeArr(params.count * 5);\n      var offset = 0;\n      var point;\n      var tmpIn = [];\n      var tmpOut = [];\n      var dataIndex;\n\n      while ((dataIndex = params.next()) != null) {\n        var axisDimVal = data.get(cDim, dataIndex);\n        var openVal = data.get(openDim, dataIndex);\n        var closeVal = data.get(closeDim, dataIndex);\n        var lowestVal = data.get(lowestDim, dataIndex);\n        var highestVal = data.get(highestDim, dataIndex);\n\n        if (isNaN(axisDimVal) || isNaN(lowestVal) || isNaN(highestVal)) {\n          points[offset++] = NaN;\n          offset += 4;\n          continue;\n        }\n\n        points[offset++] = getSign(data, dataIndex, openVal, closeVal, closeDim);\n        tmpIn[cDimIdx] = axisDimVal;\n        tmpIn[vDimIdx] = lowestVal;\n        point = coordSys.dataToPoint(tmpIn, null, tmpOut);\n        points[offset++] = point ? point[0] : NaN;\n        points[offset++] = point ? point[1] : NaN;\n        tmpIn[vDimIdx] = highestVal;\n        point = coordSys.dataToPoint(tmpIn, null, tmpOut);\n        points[offset++] = point ? point[1] : NaN;\n      }\n\n      data.setLayout('largePoints', points);\n    }\n  }\n};\n\nfunction getSign(data, dataIndex, openVal, closeVal, closeDim) {\n  var sign;\n\n  if (openVal > closeVal) {\n    sign = -1;\n  } else if (openVal < closeVal) {\n    sign = 1;\n  } else {\n    sign = dataIndex > 0 // If close === open, compare with close of last record\n    ? data.get(closeDim, dataIndex - 1) <= closeVal ? 1 : -1 : // No record of previous, set to be positive\n    1;\n  }\n\n  return sign;\n}\n\nfunction calculateCandleWidth(seriesModel, data) {\n  var baseAxis = seriesModel.getBaseAxis();\n  var extent;\n  var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : (extent = baseAxis.getExtent(), Math.abs(extent[1] - extent[0]) / data.count());\n  var barMaxWidth = parsePercent(retrieve2(seriesModel.get('barMaxWidth'), bandWidth), bandWidth);\n  var barMinWidth = parsePercent(retrieve2(seriesModel.get('barMinWidth'), 1), bandWidth);\n  var barWidth = seriesModel.get('barWidth');\n  return barWidth != null ? parsePercent(barWidth, bandWidth) // Put max outer to ensure bar visible in spite of overlap.\n  : Math.max(Math.min(bandWidth / 2, barMaxWidth), barMinWidth);\n}\n\nmodule.exports = _default;","require(\"./dataZoom/typeDefaulter\");\n\nrequire(\"./dataZoom/DataZoomModel\");\n\nrequire(\"./dataZoom/DataZoomView\");\n\nrequire(\"./dataZoom/SliderZoomModel\");\n\nrequire(\"./dataZoom/SliderZoomView\");\n\nrequire(\"./dataZoom/InsideZoomModel\");\n\nrequire(\"./dataZoom/InsideZoomView\");\n\nrequire(\"./dataZoom/dataZoomProcessor\");\n\nrequire(\"./dataZoom/dataZoomAction\");","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @constructor module:echarts/coord/parallel/ParallelAxis\n * @extends {module:echarts/coord/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n */\nvar ParallelAxis = function (dim, scale, coordExtent, axisType, axisIndex) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.axisIndex = axisIndex;\n};\n\nParallelAxis.prototype = {\n  constructor: ParallelAxis,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/parallel/AxisModel}\n   */\n  model: null,\n\n  /**\n   * @override\n   */\n  isHorizontal: function () {\n    return this.coordinateSystem.getModel().get('layout') !== 'horizontal';\n  }\n};\nzrUtil.inherits(ParallelAxis, Axis);\nvar _default = ParallelAxis;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\nvar getDataItemValue = _model.getDataItemValue;\n\nvar _referHelper = require(\"../../model/referHelper\");\n\nvar getCoordSysDefineBySeries = _referHelper.getCoordSysDefineBySeries;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\nvar map = _util.map;\nvar isArray = _util.isArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\nvar isTypedArray = _util.isTypedArray;\nvar isArrayLike = _util.isArrayLike;\nvar extend = _util.extend;\nvar assert = _util.assert;\n\nvar Source = require(\"../Source\");\n\nvar _sourceType = require(\"./sourceType\");\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SOURCE_FORMAT_ARRAY_ROWS = _sourceType.SOURCE_FORMAT_ARRAY_ROWS;\nvar SOURCE_FORMAT_OBJECT_ROWS = _sourceType.SOURCE_FORMAT_OBJECT_ROWS;\nvar SOURCE_FORMAT_KEYED_COLUMNS = _sourceType.SOURCE_FORMAT_KEYED_COLUMNS;\nvar SOURCE_FORMAT_UNKNOWN = _sourceType.SOURCE_FORMAT_UNKNOWN;\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SERIES_LAYOUT_BY_ROW = _sourceType.SERIES_LAYOUT_BY_ROW;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\n/**\n * @see {module:echarts/data/Source}\n * @param {module:echarts/component/dataset/DatasetModel} datasetModel\n * @return {string} sourceFormat\n */\n\nfunction detectSourceFormat(datasetModel) {\n  var data = datasetModel.option.source;\n  var sourceFormat = SOURCE_FORMAT_UNKNOWN;\n\n  if (isTypedArray(data)) {\n    sourceFormat = SOURCE_FORMAT_TYPED_ARRAY;\n  } else if (isArray(data)) {\n    // FIXME Whether tolerate null in top level array?\n    for (var i = 0, len = data.length; i < len; i++) {\n      var item = data[i];\n\n      if (item == null) {\n        continue;\n      } else if (isArray(item)) {\n        sourceFormat = SOURCE_FORMAT_ARRAY_ROWS;\n        break;\n      } else if (isObject(item)) {\n        sourceFormat = SOURCE_FORMAT_OBJECT_ROWS;\n        break;\n      }\n    }\n  } else if (isObject(data)) {\n    for (var key in data) {\n      if (data.hasOwnProperty(key) && isArrayLike(data[key])) {\n        sourceFormat = SOURCE_FORMAT_KEYED_COLUMNS;\n        break;\n      }\n    }\n  } else if (data != null) {\n    throw new Error('Invalid data');\n  }\n\n  inner(datasetModel).sourceFormat = sourceFormat;\n}\n/**\n * [Scenarios]:\n * (1) Provide source data directly:\n *     series: {\n *         encode: {...},\n *         dimensions: [...]\n *         seriesLayoutBy: 'row',\n *         data: [[...]]\n *     }\n * (2) Refer to datasetModel.\n *     series: [{\n *         encode: {...}\n *         // Ignore datasetIndex means `datasetIndex: 0`\n *         // and the dimensions defination in dataset is used\n *     }, {\n *         encode: {...},\n *         seriesLayoutBy: 'column',\n *         datasetIndex: 1\n *     }]\n *\n * Get data from series itself or datset.\n * @return {module:echarts/data/Source} source\n */\n\n\nfunction getSource(seriesModel) {\n  return inner(seriesModel).source;\n}\n/**\n * MUST be called before mergeOption of all series.\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction resetSourceDefaulter(ecModel) {\n  // `datasetMap` is used to make default encode.\n  inner(ecModel).datasetMap = createHashMap();\n}\n/**\n * [Caution]:\n * MUST be called after series option merged and\n * before \"series.getInitailData()\" called.\n *\n * [The rule of making default encode]:\n * Category axis (if exists) alway map to the first dimension.\n * Each other axis occupies a subsequent dimension.\n *\n * [Why make default encode]:\n * Simplify the typing of encode in option, avoiding the case like that:\n * series: [{encode: {x: 0, y: 1}}, {encode: {x: 0, y: 2}}, {encode: {x: 0, y: 3}}],\n * where the \"y\" have to be manually typed as \"1, 2, 3, ...\".\n *\n * @param {module:echarts/model/Series} seriesModel\n */\n\n\nfunction prepareSource(seriesModel) {\n  var seriesOption = seriesModel.option;\n  var data = seriesOption.data;\n  var sourceFormat = isTypedArray(data) ? SOURCE_FORMAT_TYPED_ARRAY : SOURCE_FORMAT_ORIGINAL;\n  var fromDataset = false;\n  var seriesLayoutBy = seriesOption.seriesLayoutBy;\n  var sourceHeader = seriesOption.sourceHeader;\n  var dimensionsDefine = seriesOption.dimensions;\n  var datasetModel = getDatasetModel(seriesModel);\n\n  if (datasetModel) {\n    var datasetOption = datasetModel.option;\n    data = datasetOption.source;\n    sourceFormat = inner(datasetModel).sourceFormat;\n    fromDataset = true; // These settings from series has higher priority.\n\n    seriesLayoutBy = seriesLayoutBy || datasetOption.seriesLayoutBy;\n    sourceHeader == null && (sourceHeader = datasetOption.sourceHeader);\n    dimensionsDefine = dimensionsDefine || datasetOption.dimensions;\n  }\n\n  var completeResult = completeBySourceData(data, sourceFormat, seriesLayoutBy, sourceHeader, dimensionsDefine); // Note: dataset option does not have `encode`.\n\n  var encodeDefine = seriesOption.encode;\n\n  if (!encodeDefine && datasetModel) {\n    encodeDefine = makeDefaultEncode(seriesModel, datasetModel, data, sourceFormat, seriesLayoutBy, completeResult);\n  }\n\n  inner(seriesModel).source = new Source({\n    data: data,\n    fromDataset: fromDataset,\n    seriesLayoutBy: seriesLayoutBy,\n    sourceFormat: sourceFormat,\n    dimensionsDefine: completeResult.dimensionsDefine,\n    startIndex: completeResult.startIndex,\n    dimensionsDetectCount: completeResult.dimensionsDetectCount,\n    encodeDefine: encodeDefine\n  });\n} // return {startIndex, dimensionsDefine, dimensionsCount}\n\n\nfunction completeBySourceData(data, sourceFormat, seriesLayoutBy, sourceHeader, dimensionsDefine) {\n  if (!data) {\n    return {\n      dimensionsDefine: normalizeDimensionsDefine(dimensionsDefine)\n    };\n  }\n\n  var dimensionsDetectCount;\n  var startIndex;\n  var findPotentialName;\n\n  if (sourceFormat === SOURCE_FORMAT_ARRAY_ROWS) {\n    // Rule: Most of the first line are string: it is header.\n    // Caution: consider a line with 5 string and 1 number,\n    // it still can not be sure it is a head, because the\n    // 5 string may be 5 values of category columns.\n    if (sourceHeader === 'auto' || sourceHeader == null) {\n      arrayRowsTravelFirst(function (val) {\n        // '-' is regarded as null/undefined.\n        if (val != null && val !== '-') {\n          if (isString(val)) {\n            startIndex == null && (startIndex = 1);\n          } else {\n            startIndex = 0;\n          }\n        } // 10 is an experience number, avoid long loop.\n\n      }, seriesLayoutBy, data, 10);\n    } else {\n      startIndex = sourceHeader ? 1 : 0;\n    }\n\n    if (!dimensionsDefine && startIndex === 1) {\n      dimensionsDefine = [];\n      arrayRowsTravelFirst(function (val, index) {\n        dimensionsDefine[index] = val != null ? val : '';\n      }, seriesLayoutBy, data);\n    }\n\n    dimensionsDetectCount = dimensionsDefine ? dimensionsDefine.length : seriesLayoutBy === SERIES_LAYOUT_BY_ROW ? data.length : data[0] ? data[0].length : null;\n  } else if (sourceFormat === SOURCE_FORMAT_OBJECT_ROWS) {\n    if (!dimensionsDefine) {\n      dimensionsDefine = objectRowsCollectDimensions(data);\n      findPotentialName = true;\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS) {\n    if (!dimensionsDefine) {\n      dimensionsDefine = [];\n      findPotentialName = true;\n      each(data, function (colArr, key) {\n        dimensionsDefine.push(key);\n      });\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    var value0 = getDataItemValue(data[0]);\n    dimensionsDetectCount = isArray(value0) && value0.length || 1;\n  } else if (sourceFormat === SOURCE_FORMAT_TYPED_ARRAY) {}\n\n  var potentialNameDimIndex;\n\n  if (findPotentialName) {\n    each(dimensionsDefine, function (dim, idx) {\n      if ((isObject(dim) ? dim.name : dim) === 'name') {\n        potentialNameDimIndex = idx;\n      }\n    });\n  }\n\n  return {\n    startIndex: startIndex,\n    dimensionsDefine: normalizeDimensionsDefine(dimensionsDefine),\n    dimensionsDetectCount: dimensionsDetectCount,\n    potentialNameDimIndex: potentialNameDimIndex // TODO: potentialIdDimIdx\n\n  };\n} // Consider dimensions defined like ['A', 'price', 'B', 'price', 'C', 'price'],\n// which is reasonable. But dimension name is duplicated.\n// Returns undefined or an array contains only object without null/undefiend or string.\n\n\nfunction normalizeDimensionsDefine(dimensionsDefine) {\n  if (!dimensionsDefine) {\n    // The meaning of null/undefined is different from empty array.\n    return;\n  }\n\n  var nameMap = createHashMap();\n  return map(dimensionsDefine, function (item, index) {\n    item = extend({}, isObject(item) ? item : {\n      name: item\n    }); // User can set null in dimensions.\n    // We dont auto specify name, othewise a given name may\n    // cause it be refered unexpectedly.\n\n    if (item.name == null) {\n      return item;\n    } // Also consider number form like 2012.\n\n\n    item.name += ''; // User may also specify displayName.\n    // displayName will always exists except user not\n    // specified or dim name is not specified or detected.\n    // (A auto generated dim name will not be used as\n    // displayName).\n\n    if (item.displayName == null) {\n      item.displayName = item.name;\n    }\n\n    var exist = nameMap.get(item.name);\n\n    if (!exist) {\n      nameMap.set(item.name, {\n        count: 1\n      });\n    } else {\n      item.name += '-' + exist.count++;\n    }\n\n    return item;\n  });\n}\n\nfunction arrayRowsTravelFirst(cb, seriesLayoutBy, data, maxLoop) {\n  maxLoop == null && (maxLoop = Infinity);\n\n  if (seriesLayoutBy === SERIES_LAYOUT_BY_ROW) {\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      cb(data[i] ? data[i][0] : null, i);\n    }\n  } else {\n    var value0 = data[0] || [];\n\n    for (var i = 0; i < value0.length && i < maxLoop; i++) {\n      cb(value0[i], i);\n    }\n  }\n}\n\nfunction objectRowsCollectDimensions(data) {\n  var firstIndex = 0;\n  var obj;\n\n  while (firstIndex < data.length && !(obj = data[firstIndex++])) {} // jshint ignore: line\n\n\n  if (obj) {\n    var dimensions = [];\n    each(obj, function (value, key) {\n      dimensions.push(key);\n    });\n    return dimensions;\n  }\n} // ??? TODO merge to completedimensions, where also has\n// default encode making logic. And the default rule\n// should depends on series? consider 'map'.\n\n\nfunction makeDefaultEncode(seriesModel, datasetModel, data, sourceFormat, seriesLayoutBy, completeResult) {\n  var coordSysDefine = getCoordSysDefineBySeries(seriesModel);\n  var encode = {}; // var encodeTooltip = [];\n  // var encodeLabel = [];\n\n  var encodeItemName = [];\n  var encodeSeriesName = [];\n  var seriesType = seriesModel.subType; // ??? TODO refactor: provide by series itself.\n  // Consider the case: 'map' series is based on geo coordSys,\n  // 'graph', 'heatmap' can be based on cartesian. But can not\n  // give default rule simply here.\n\n  var nSeriesMap = createHashMap(['pie', 'map', 'funnel']);\n  var cSeriesMap = createHashMap(['line', 'bar', 'pictorialBar', 'scatter', 'effectScatter', 'candlestick', 'boxplot']); // Usually in this case series will use the first data\n  // dimension as the \"value\" dimension, or other default\n  // processes respectively.\n\n  if (coordSysDefine && cSeriesMap.get(seriesType) != null) {\n    var ecModel = seriesModel.ecModel;\n    var datasetMap = inner(ecModel).datasetMap;\n    var key = datasetModel.uid + '_' + seriesLayoutBy;\n    var datasetRecord = datasetMap.get(key) || datasetMap.set(key, {\n      categoryWayDim: 1,\n      valueWayDim: 0\n    }); // TODO\n    // Auto detect first time axis and do arrangement.\n\n    each(coordSysDefine.coordSysDims, function (coordDim) {\n      // In value way.\n      if (coordSysDefine.firstCategoryDimIndex == null) {\n        var dataDim = datasetRecord.valueWayDim++;\n        encode[coordDim] = dataDim; // ??? TODO give a better default series name rule?\n        // especially when encode x y specified.\n        // consider: when mutiple series share one dimension\n        // category axis, series name should better use\n        // the other dimsion name. On the other hand, use\n        // both dimensions name.\n\n        encodeSeriesName.push(dataDim); // encodeTooltip.push(dataDim);\n        // encodeLabel.push(dataDim);\n      } // In category way, category axis.\n      else if (coordSysDefine.categoryAxisMap.get(coordDim)) {\n          encode[coordDim] = 0;\n          encodeItemName.push(0);\n        } // In category way, non-category axis.\n        else {\n            var dataDim = datasetRecord.categoryWayDim++;\n            encode[coordDim] = dataDim; // encodeTooltip.push(dataDim);\n            // encodeLabel.push(dataDim);\n\n            encodeSeriesName.push(dataDim);\n          }\n    });\n  } // Do not make a complex rule! Hard to code maintain and not necessary.\n  // ??? TODO refactor: provide by series itself.\n  // [{name: ..., value: ...}, ...] like:\n  else if (nSeriesMap.get(seriesType) != null) {\n      // Find the first not ordinal. (5 is an experience value)\n      var firstNotOrdinal;\n\n      for (var i = 0; i < 5 && firstNotOrdinal == null; i++) {\n        if (!doGuessOrdinal(data, sourceFormat, seriesLayoutBy, completeResult.dimensionsDefine, completeResult.startIndex, i)) {\n          firstNotOrdinal = i;\n        }\n      }\n\n      if (firstNotOrdinal != null) {\n        encode.value = firstNotOrdinal;\n        var nameDimIndex = completeResult.potentialNameDimIndex || Math.max(firstNotOrdinal - 1, 0); // By default, label use itemName in charts.\n        // So we dont set encodeLabel here.\n\n        encodeSeriesName.push(nameDimIndex);\n        encodeItemName.push(nameDimIndex); // encodeTooltip.push(firstNotOrdinal);\n      }\n    } // encodeTooltip.length && (encode.tooltip = encodeTooltip);\n  // encodeLabel.length && (encode.label = encodeLabel);\n\n\n  encodeItemName.length && (encode.itemName = encodeItemName);\n  encodeSeriesName.length && (encode.seriesName = encodeSeriesName);\n  return encode;\n}\n/**\n * If return null/undefined, indicate that should not use datasetModel.\n */\n\n\nfunction getDatasetModel(seriesModel) {\n  var option = seriesModel.option; // Caution: consider the scenario:\n  // A dataset is declared and a series is not expected to use the dataset,\n  // and at the beginning `setOption({series: { noData })` (just prepare other\n  // option but no data), then `setOption({series: {data: [...]}); In this case,\n  // the user should set an empty array to avoid that dataset is used by default.\n\n  var thisData = option.data;\n\n  if (!thisData) {\n    return seriesModel.ecModel.getComponent('dataset', option.datasetIndex || 0);\n  }\n}\n/**\n * The rule should not be complex, otherwise user might not\n * be able to known where the data is wrong.\n * The code is ugly, but how to make it neat?\n *\n * @param {module:echars/data/Source} source\n * @param {number} dimIndex\n * @return {boolean} Whether ordinal.\n */\n\n\nfunction guessOrdinal(source, dimIndex) {\n  return doGuessOrdinal(source.data, source.sourceFormat, source.seriesLayoutBy, source.dimensionsDefine, source.startIndex, dimIndex);\n} // dimIndex may be overflow source data.\n\n\nfunction doGuessOrdinal(data, sourceFormat, seriesLayoutBy, dimensionsDefine, startIndex, dimIndex) {\n  var result; // Experience value.\n\n  var maxLoop = 5;\n\n  if (isTypedArray(data)) {\n    return false;\n  } // When sourceType is 'objectRows' or 'keyedColumns', dimensionsDefine\n  // always exists in source.\n\n\n  var dimName;\n\n  if (dimensionsDefine) {\n    dimName = dimensionsDefine[dimIndex];\n    dimName = isObject(dimName) ? dimName.name : dimName;\n  }\n\n  if (sourceFormat === SOURCE_FORMAT_ARRAY_ROWS) {\n    if (seriesLayoutBy === SERIES_LAYOUT_BY_ROW) {\n      var sample = data[dimIndex];\n\n      for (var i = 0; i < (sample || []).length && i < maxLoop; i++) {\n        if ((result = detectValue(sample[startIndex + i])) != null) {\n          return result;\n        }\n      }\n    } else {\n      for (var i = 0; i < data.length && i < maxLoop; i++) {\n        var row = data[startIndex + i];\n\n        if (row && (result = detectValue(row[dimIndex])) != null) {\n          return result;\n        }\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_OBJECT_ROWS) {\n    if (!dimName) {\n      return;\n    }\n\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      var item = data[i];\n\n      if (item && (result = detectValue(item[dimName])) != null) {\n        return result;\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS) {\n    if (!dimName) {\n      return;\n    }\n\n    var sample = data[dimName];\n\n    if (!sample || isTypedArray(sample)) {\n      return false;\n    }\n\n    for (var i = 0; i < sample.length && i < maxLoop; i++) {\n      if ((result = detectValue(sample[i])) != null) {\n        return result;\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      var item = data[i];\n      var val = getDataItemValue(item);\n\n      if (!isArray(val)) {\n        return false;\n      }\n\n      if ((result = detectValue(val[dimIndex])) != null) {\n        return result;\n      }\n    }\n  }\n\n  function detectValue(val) {\n    // Consider usage convenience, '1', '2' will be treated as \"number\".\n    // `isFinit('')` get `true`.\n    if (val != null && isFinite(val) && val !== '') {\n      return false;\n    } else if (isString(val) && val !== '-') {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexports.detectSourceFormat = detectSourceFormat;\nexports.getSource = getSource;\nexports.resetSourceDefaulter = resetSourceDefaulter;\nexports.prepareSource = prepareSource;\nexports.guessOrdinal = guessOrdinal;","var graphic = require(\"../../util/graphic\");\n\nvar Line = require(\"./Line\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar curveUtil = require(\"zrender/lib/core/curve\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Provide effect for line\n * @module echarts/chart/helper/EffectLine\n */\n\n/**\n * @constructor\n * @extends {module:zrender/graphic/Group}\n * @alias {module:echarts/chart/helper/Line}\n */\nfunction EffectLine(lineData, idx, seriesScope) {\n  graphic.Group.call(this);\n  this.add(this.createLine(lineData, idx, seriesScope));\n\n  this._updateEffectSymbol(lineData, idx);\n}\n\nvar effectLineProto = EffectLine.prototype;\n\neffectLineProto.createLine = function (lineData, idx, seriesScope) {\n  return new Line(lineData, idx, seriesScope);\n};\n\neffectLineProto._updateEffectSymbol = function (lineData, idx) {\n  var itemModel = lineData.getItemModel(idx);\n  var effectModel = itemModel.getModel('effect');\n  var size = effectModel.get('symbolSize');\n  var symbolType = effectModel.get('symbol');\n\n  if (!zrUtil.isArray(size)) {\n    size = [size, size];\n  }\n\n  var color = effectModel.get('color') || lineData.getItemVisual(idx, 'color');\n  var symbol = this.childAt(1);\n\n  if (this._symbolType !== symbolType) {\n    // Remove previous\n    this.remove(symbol);\n    symbol = createSymbol(symbolType, -0.5, -0.5, 1, 1, color);\n    symbol.z2 = 100;\n    symbol.culling = true;\n    this.add(symbol);\n  } // Symbol may be removed if loop is false\n\n\n  if (!symbol) {\n    return;\n  } // Shadow color is same with color in default\n\n\n  symbol.setStyle('shadowColor', color);\n  symbol.setStyle(effectModel.getItemStyle(['color']));\n  symbol.attr('scale', size);\n  symbol.setColor(color);\n  symbol.attr('scale', size);\n  this._symbolType = symbolType;\n\n  this._updateEffectAnimation(lineData, effectModel, idx);\n};\n\neffectLineProto._updateEffectAnimation = function (lineData, effectModel, idx) {\n  var symbol = this.childAt(1);\n\n  if (!symbol) {\n    return;\n  }\n\n  var self = this;\n  var points = lineData.getItemLayout(idx);\n  var period = effectModel.get('period') * 1000;\n  var loop = effectModel.get('loop');\n  var constantSpeed = effectModel.get('constantSpeed');\n  var delayExpr = zrUtil.retrieve(effectModel.get('delay'), function (idx) {\n    return idx / lineData.count() * period / 3;\n  });\n  var isDelayFunc = typeof delayExpr === 'function'; // Ignore when updating\n\n  symbol.ignore = true;\n  this.updateAnimationPoints(symbol, points);\n\n  if (constantSpeed > 0) {\n    period = this.getLineLength(symbol) / constantSpeed * 1000;\n  }\n\n  if (period !== this._period || loop !== this._loop) {\n    symbol.stopAnimation();\n    var delay = delayExpr;\n\n    if (isDelayFunc) {\n      delay = delayExpr(idx);\n    }\n\n    if (symbol.__t > 0) {\n      delay = -period * symbol.__t;\n    }\n\n    symbol.__t = 0;\n    var animator = symbol.animate('', loop).when(period, {\n      __t: 1\n    }).delay(delay).during(function () {\n      self.updateSymbolPosition(symbol);\n    });\n\n    if (!loop) {\n      animator.done(function () {\n        self.remove(symbol);\n      });\n    }\n\n    animator.start();\n  }\n\n  this._period = period;\n  this._loop = loop;\n};\n\neffectLineProto.getLineLength = function (symbol) {\n  // Not so accurate\n  return vec2.dist(symbol.__p1, symbol.__cp1) + vec2.dist(symbol.__cp1, symbol.__p2);\n};\n\neffectLineProto.updateAnimationPoints = function (symbol, points) {\n  symbol.__p1 = points[0];\n  symbol.__p2 = points[1];\n  symbol.__cp1 = points[2] || [(points[0][0] + points[1][0]) / 2, (points[0][1] + points[1][1]) / 2];\n};\n\neffectLineProto.updateData = function (lineData, idx, seriesScope) {\n  this.childAt(0).updateData(lineData, idx, seriesScope);\n\n  this._updateEffectSymbol(lineData, idx);\n};\n\neffectLineProto.updateSymbolPosition = function (symbol) {\n  var p1 = symbol.__p1;\n  var p2 = symbol.__p2;\n  var cp1 = symbol.__cp1;\n  var t = symbol.__t;\n  var pos = symbol.position;\n  var quadraticAt = curveUtil.quadraticAt;\n  var quadraticDerivativeAt = curveUtil.quadraticDerivativeAt;\n  pos[0] = quadraticAt(p1[0], cp1[0], p2[0], t);\n  pos[1] = quadraticAt(p1[1], cp1[1], p2[1], t); // Tangent\n\n  var tx = quadraticDerivativeAt(p1[0], cp1[0], p2[0], t);\n  var ty = quadraticDerivativeAt(p1[1], cp1[1], p2[1], t);\n  symbol.rotation = -Math.atan2(ty, tx) - Math.PI / 2;\n  symbol.ignore = false;\n};\n\neffectLineProto.updateLayout = function (lineData, idx) {\n  this.childAt(0).updateLayout(lineData, idx);\n  var effectModel = lineData.getItemModel(idx).getModel('effect');\n\n  this._updateEffectAnimation(lineData, effectModel, idx);\n};\n\nzrUtil.inherits(EffectLine, graphic.Group);\nvar _default = EffectLine;\nmodule.exports = _default;","// Myers' Diff Algorithm\n// Modified from https://github.com/kpdecker/jsdiff/blob/master/src/diff/base.js\nfunction Diff() {}\n\nDiff.prototype = {\n  diff: function (oldArr, newArr, equals) {\n    if (!equals) {\n      equals = function (a, b) {\n        return a === b;\n      };\n    }\n\n    this.equals = equals;\n    var self = this;\n    oldArr = oldArr.slice();\n    newArr = newArr.slice(); // Allow subclasses to massage the input prior to running\n\n    var newLen = newArr.length;\n    var oldLen = oldArr.length;\n    var editLength = 1;\n    var maxEditLength = newLen + oldLen;\n    var bestPath = [{\n      newPos: -1,\n      components: []\n    }]; // Seed editLength = 0, i.e. the content starts with the same values\n\n    var oldPos = this.extractCommon(bestPath[0], newArr, oldArr, 0);\n\n    if (bestPath[0].newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n      var indices = [];\n\n      for (var i = 0; i < newArr.length; i++) {\n        indices.push(i);\n      } // Identity per the equality and tokenizer\n\n\n      return [{\n        indices: indices,\n        count: newArr.length\n      }];\n    } // Main worker method. checks all permutations of a given edit length for acceptance.\n\n\n    function execEditLength() {\n      for (var diagonalPath = -1 * editLength; diagonalPath <= editLength; diagonalPath += 2) {\n        var basePath;\n        var addPath = bestPath[diagonalPath - 1];\n        var removePath = bestPath[diagonalPath + 1];\n        var oldPos = (removePath ? removePath.newPos : 0) - diagonalPath;\n\n        if (addPath) {\n          // No one else is going to attempt to use this value, clear it\n          bestPath[diagonalPath - 1] = undefined;\n        }\n\n        var canAdd = addPath && addPath.newPos + 1 < newLen;\n        var canRemove = removePath && 0 <= oldPos && oldPos < oldLen;\n\n        if (!canAdd && !canRemove) {\n          // If this path is a terminal then prune\n          bestPath[diagonalPath] = undefined;\n          continue;\n        } // Select the diagonal that we want to branch from. We select the prior\n        // path whose position in the new string is the farthest from the origin\n        // and does not pass the bounds of the diff graph\n\n\n        if (!canAdd || canRemove && addPath.newPos < removePath.newPos) {\n          basePath = clonePath(removePath);\n          self.pushComponent(basePath.components, undefined, true);\n        } else {\n          basePath = addPath; // No need to clone, we've pulled it from the list\n\n          basePath.newPos++;\n          self.pushComponent(basePath.components, true, undefined);\n        }\n\n        oldPos = self.extractCommon(basePath, newArr, oldArr, diagonalPath); // If we have hit the end of both strings, then we are done\n\n        if (basePath.newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n          return buildValues(self, basePath.components, newArr, oldArr);\n        } else {\n          // Otherwise track this path as a potential candidate and continue.\n          bestPath[diagonalPath] = basePath;\n        }\n      }\n\n      editLength++;\n    }\n\n    while (editLength <= maxEditLength) {\n      var ret = execEditLength();\n\n      if (ret) {\n        return ret;\n      }\n    }\n  },\n  pushComponent: function (components, added, removed) {\n    var last = components[components.length - 1];\n\n    if (last && last.added === added && last.removed === removed) {\n      // We need to clone here as the component clone operation is just\n      // as shallow array clone\n      components[components.length - 1] = {\n        count: last.count + 1,\n        added: added,\n        removed: removed\n      };\n    } else {\n      components.push({\n        count: 1,\n        added: added,\n        removed: removed\n      });\n    }\n  },\n  extractCommon: function (basePath, newArr, oldArr, diagonalPath) {\n    var newLen = newArr.length;\n    var oldLen = oldArr.length;\n    var newPos = basePath.newPos;\n    var oldPos = newPos - diagonalPath;\n    var commonCount = 0;\n\n    while (newPos + 1 < newLen && oldPos + 1 < oldLen && this.equals(newArr[newPos + 1], oldArr[oldPos + 1])) {\n      newPos++;\n      oldPos++;\n      commonCount++;\n    }\n\n    if (commonCount) {\n      basePath.components.push({\n        count: commonCount\n      });\n    }\n\n    basePath.newPos = newPos;\n    return oldPos;\n  },\n  tokenize: function (value) {\n    return value.slice();\n  },\n  join: function (value) {\n    return value.slice();\n  }\n};\n\nfunction buildValues(diff, components, newArr, oldArr) {\n  var componentPos = 0;\n  var componentLen = components.length;\n  var newPos = 0;\n  var oldPos = 0;\n\n  for (; componentPos < componentLen; componentPos++) {\n    var component = components[componentPos];\n\n    if (!component.removed) {\n      var indices = [];\n\n      for (var i = newPos; i < newPos + component.count; i++) {\n        indices.push(i);\n      }\n\n      component.indices = indices;\n      newPos += component.count; // Common case\n\n      if (!component.added) {\n        oldPos += component.count;\n      }\n    } else {\n      var indices = [];\n\n      for (var i = oldPos; i < oldPos + component.count; i++) {\n        indices.push(i);\n      }\n\n      component.indices = indices;\n      oldPos += component.count;\n    }\n  }\n\n  return components;\n}\n\nfunction clonePath(path) {\n  return {\n    newPos: path.newPos,\n    components: path.components.slice(0)\n  };\n}\n\nvar arrayDiff = new Diff();\n\nfunction _default(oldArr, newArr, callback) {\n  return arrayDiff.diff(oldArr, newArr, callback);\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar RoamController = require(\"./RoamController\");\n\nvar roamHelper = require(\"../../component/helper/roamHelper\");\n\nvar _cursorHelper = require(\"../../component/helper/cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphic = require(\"../../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction getFixedItemStyle(model, scale) {\n  var itemStyle = model.getItemStyle();\n  var areaColor = model.get('areaColor'); // If user want the color not to be changed when hover,\n  // they should both set areaColor and color to be null.\n\n  if (areaColor != null) {\n    itemStyle.fill = areaColor;\n  }\n\n  return itemStyle;\n}\n\nfunction updateMapSelectHandler(mapDraw, mapOrGeoModel, group, api, fromView) {\n  group.off('click');\n  group.off('mousedown');\n\n  if (mapOrGeoModel.get('selectedMode')) {\n    group.on('mousedown', function () {\n      mapDraw._mouseDownFlag = true;\n    });\n    group.on('click', function (e) {\n      if (!mapDraw._mouseDownFlag) {\n        return;\n      }\n\n      mapDraw._mouseDownFlag = false;\n      var el = e.target;\n\n      while (!el.__regions) {\n        el = el.parent;\n      }\n\n      if (!el) {\n        return;\n      }\n\n      var action = {\n        type: (mapOrGeoModel.mainType === 'geo' ? 'geo' : 'map') + 'ToggleSelect',\n        batch: zrUtil.map(el.__regions, function (region) {\n          return {\n            name: region.name,\n            from: fromView.uid\n          };\n        })\n      };\n      action[mapOrGeoModel.mainType + 'Id'] = mapOrGeoModel.id;\n      api.dispatchAction(action);\n      updateMapSelected(mapOrGeoModel, group);\n    });\n  }\n}\n\nfunction updateMapSelected(mapOrGeoModel, group) {\n  // FIXME\n  group.eachChild(function (otherRegionEl) {\n    zrUtil.each(otherRegionEl.__regions, function (region) {\n      otherRegionEl.trigger(mapOrGeoModel.isSelected(region.name) ? 'emphasis' : 'normal');\n    });\n  });\n}\n/**\n * @alias module:echarts/component/helper/MapDraw\n * @param {module:echarts/ExtensionAPI} api\n * @param {boolean} updateGroup\n */\n\n\nfunction MapDraw(api, updateGroup) {\n  var group = new graphic.Group();\n  /**\n   * @type {module:echarts/component/helper/RoamController}\n   * @private\n   */\n\n  this._controller = new RoamController(api.getZr());\n  /**\n   * @type {Object} {target, zoom, zoomLimit}\n   * @private\n   */\n\n  this._controllerHost = {\n    target: updateGroup ? group : null\n  };\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n\n  this.group = group;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._updateGroup = updateGroup;\n  /**\n   * This flag is used to make sure that only one among\n   * `pan`, `zoom`, `click` can occurs, otherwise 'selected'\n   * action may be triggered when `pan`, which is unexpected.\n   * @type {booelan}\n   */\n\n  this._mouseDownFlag;\n}\n\nMapDraw.prototype = {\n  constructor: MapDraw,\n  draw: function (mapOrGeoModel, ecModel, api, fromView, payload) {\n    var isGeo = mapOrGeoModel.mainType === 'geo'; // Map series has data. GEO model that controlled by map series\n    // will be assigned with map data. Other GEO model has no data.\n\n    var data = mapOrGeoModel.getData && mapOrGeoModel.getData();\n    isGeo && ecModel.eachComponent({\n      mainType: 'series',\n      subType: 'map'\n    }, function (mapSeries) {\n      if (!data && mapSeries.getHostGeoModel() === mapOrGeoModel) {\n        data = mapSeries.getData();\n      }\n    });\n    var geo = mapOrGeoModel.coordinateSystem;\n    var group = this.group;\n    var scale = geo.scale;\n    var groupNewProp = {\n      position: geo.position,\n      scale: scale\n    }; // No animation when first draw or in action\n\n    if (!group.childAt(0) || payload) {\n      group.attr(groupNewProp);\n    } else {\n      graphic.updateProps(group, groupNewProp, mapOrGeoModel);\n    }\n\n    group.removeAll();\n    var itemStyleAccessPath = ['itemStyle'];\n    var hoverItemStyleAccessPath = ['emphasis', 'itemStyle'];\n    var labelAccessPath = ['label'];\n    var hoverLabelAccessPath = ['emphasis', 'label'];\n    var nameMap = zrUtil.createHashMap();\n    zrUtil.each(geo.regions, function (region) {\n      // Consider in GeoJson properties.name may be duplicated, for example,\n      // there is multiple region named \"United Kindom\" or \"France\" (so many\n      // colonies). And it is not appropriate to merge them in geo, which\n      // will make them share the same label and bring trouble in label\n      // location calculation.\n      var regionGroup = nameMap.get(region.name) || nameMap.set(region.name, new graphic.Group());\n      var compoundPath = new graphic.CompoundPath({\n        shape: {\n          paths: []\n        }\n      });\n      regionGroup.add(compoundPath);\n      var regionModel = mapOrGeoModel.getRegionModel(region.name) || mapOrGeoModel;\n      var itemStyleModel = regionModel.getModel(itemStyleAccessPath);\n      var hoverItemStyleModel = regionModel.getModel(hoverItemStyleAccessPath);\n      var itemStyle = getFixedItemStyle(itemStyleModel, scale);\n      var hoverItemStyle = getFixedItemStyle(hoverItemStyleModel, scale);\n      var labelModel = regionModel.getModel(labelAccessPath);\n      var hoverLabelModel = regionModel.getModel(hoverLabelAccessPath);\n      var dataIdx; // Use the itemStyle in data if has data\n\n      if (data) {\n        dataIdx = data.indexOfName(region.name); // Only visual color of each item will be used. It can be encoded by dataRange\n        // But visual color of series is used in symbol drawing\n        //\n        // Visual color for each series is for the symbol draw\n\n        var visualColor = data.getItemVisual(dataIdx, 'color', true);\n\n        if (visualColor) {\n          itemStyle.fill = visualColor;\n        }\n      }\n\n      zrUtil.each(region.geometries, function (geometry) {\n        if (geometry.type !== 'polygon') {\n          return;\n        }\n\n        compoundPath.shape.paths.push(new graphic.Polygon({\n          shape: {\n            points: geometry.exterior\n          }\n        }));\n\n        for (var i = 0; i < (geometry.interiors ? geometry.interiors.length : 0); i++) {\n          compoundPath.shape.paths.push(new graphic.Polygon({\n            shape: {\n              points: geometry.interiors[i]\n            }\n          }));\n        }\n      });\n      compoundPath.setStyle(itemStyle);\n      compoundPath.style.strokeNoScale = true;\n      compoundPath.culling = true; // Label\n\n      var showLabel = labelModel.get('show');\n      var hoverShowLabel = hoverLabelModel.get('show');\n      var isDataNaN = data && isNaN(data.get(data.mapDimension('value'), dataIdx));\n      var itemLayout = data && data.getItemLayout(dataIdx); // In the following cases label will be drawn\n      // 1. In map series and data value is NaN\n      // 2. In geo component\n      // 4. Region has no series legendSymbol, which will be add a showLabel flag in mapSymbolLayout\n\n      if (isGeo || isDataNaN && (showLabel || hoverShowLabel) || itemLayout && itemLayout.showLabel) {\n        var query = !isGeo ? dataIdx : region.name;\n        var labelFetcher; // Consider dataIdx not found.\n\n        if (!data || dataIdx >= 0) {\n          labelFetcher = mapOrGeoModel;\n        }\n\n        var textEl = new graphic.Text({\n          position: region.center.slice(),\n          scale: [1 / scale[0], 1 / scale[1]],\n          z2: 10,\n          silent: true\n        });\n        graphic.setLabelStyle(textEl.style, textEl.hoverStyle = {}, labelModel, hoverLabelModel, {\n          labelFetcher: labelFetcher,\n          labelDataIndex: query,\n          defaultText: region.name,\n          useInsideStyle: false\n        }, {\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        });\n        regionGroup.add(textEl);\n      } // setItemGraphicEl, setHoverStyle after all polygons and labels\n      // are added to the rigionGroup\n\n\n      if (data) {\n        data.setItemGraphicEl(dataIdx, regionGroup);\n      } else {\n        var regionModel = mapOrGeoModel.getRegionModel(region.name); // Package custom mouse event for geo component\n\n        compoundPath.eventData = {\n          componentType: 'geo',\n          geoIndex: mapOrGeoModel.componentIndex,\n          name: region.name,\n          region: regionModel && regionModel.option || {}\n        };\n      }\n\n      var groupRegions = regionGroup.__regions || (regionGroup.__regions = []);\n      groupRegions.push(region);\n      graphic.setHoverStyle(regionGroup, hoverItemStyle, {\n        hoverSilentOnTouch: !!mapOrGeoModel.get('selectedMode')\n      });\n      group.add(regionGroup);\n    });\n\n    this._updateController(mapOrGeoModel, ecModel, api);\n\n    updateMapSelectHandler(this, mapOrGeoModel, group, api, fromView);\n    updateMapSelected(mapOrGeoModel, group);\n  },\n  remove: function () {\n    this.group.removeAll();\n\n    this._controller.dispose();\n\n    this._controllerHost = {};\n  },\n  _updateController: function (mapOrGeoModel, ecModel, api) {\n    var geo = mapOrGeoModel.coordinateSystem;\n    var controller = this._controller;\n    var controllerHost = this._controllerHost;\n    controllerHost.zoomLimit = mapOrGeoModel.get('scaleLimit');\n    controllerHost.zoom = geo.getZoom(); // roamType is will be set default true if it is null\n\n    controller.enable(mapOrGeoModel.get('roam') || false);\n    var mainType = mapOrGeoModel.mainType;\n\n    function makeActionBase() {\n      var action = {\n        type: 'geoRoam',\n        componentType: mainType\n      };\n      action[mainType + 'Id'] = mapOrGeoModel.id;\n      return action;\n    }\n\n    controller.off('pan').on('pan', function (dx, dy) {\n      this._mouseDownFlag = false;\n      roamHelper.updateViewOnPan(controllerHost, dx, dy);\n      api.dispatchAction(zrUtil.extend(makeActionBase(), {\n        dx: dx,\n        dy: dy\n      }));\n    }, this);\n    controller.off('zoom').on('zoom', function (zoom, mouseX, mouseY) {\n      this._mouseDownFlag = false;\n      roamHelper.updateViewOnZoom(controllerHost, zoom, mouseX, mouseY);\n      api.dispatchAction(zrUtil.extend(makeActionBase(), {\n        zoom: zoom,\n        originX: mouseX,\n        originY: mouseY\n      }));\n\n      if (this._updateGroup) {\n        var group = this.group;\n        var scale = group.scale;\n        group.traverse(function (el) {\n          if (el.type === 'text') {\n            el.attr('scale', [1 / scale[0], 1 / scale[1]]);\n          }\n        });\n      }\n    }, this);\n    controller.setPointerChecker(function (e, x, y) {\n      return geo.getViewRectAfterRoam().contain(x, y) && !onIrrelevantElement(e, api, mapOrGeoModel);\n    });\n  }\n};\nvar _default = MapDraw;\nmodule.exports = _default;","var matrix = require(\"../core/matrix\");\n\nvar vector = require(\"../core/vector\");\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\nvar mIdentity = matrix.identity;\nvar EPSILON = 5e-5;\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * @alias module:zrender/mixin/Transformable\n * @constructor\n */\n\n\nvar Transformable = function (opts) {\n  opts = opts || {}; // If there are no given position, rotation, scale\n\n  if (!opts.position) {\n    /**\n     * 平移\n     * @type {Array.<number>}\n     * @default [0, 0]\n     */\n    this.position = [0, 0];\n  }\n\n  if (opts.rotation == null) {\n    /**\n     * 旋转\n     * @type {Array.<number>}\n     * @default 0\n     */\n    this.rotation = 0;\n  }\n\n  if (!opts.scale) {\n    /**\n     * 缩放\n     * @type {Array.<number>}\n     * @default [1, 1]\n     */\n    this.scale = [1, 1];\n  }\n  /**\n   * 旋转和缩放的原点\n   * @type {Array.<number>}\n   * @default null\n   */\n\n\n  this.origin = this.origin || null;\n};\n\nvar transformableProto = Transformable.prototype;\ntransformableProto.transform = null;\n/**\n * 判断是否需要有坐标变换\n * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n */\n\ntransformableProto.needLocalTransform = function () {\n  return isNotAroundZero(this.rotation) || isNotAroundZero(this.position[0]) || isNotAroundZero(this.position[1]) || isNotAroundZero(this.scale[0] - 1) || isNotAroundZero(this.scale[1] - 1);\n};\n\ntransformableProto.updateTransform = function () {\n  var parent = this.parent;\n  var parentHasTransform = parent && parent.transform;\n  var needLocalTransform = this.needLocalTransform();\n  var m = this.transform;\n\n  if (!(needLocalTransform || parentHasTransform)) {\n    m && mIdentity(m);\n    return;\n  }\n\n  m = m || matrix.create();\n\n  if (needLocalTransform) {\n    this.getLocalTransform(m);\n  } else {\n    mIdentity(m);\n  } // 应用父节点变换\n\n\n  if (parentHasTransform) {\n    if (needLocalTransform) {\n      matrix.mul(m, parent.transform, m);\n    } else {\n      matrix.copy(m, parent.transform);\n    }\n  } // 保存这个变换矩阵\n\n\n  this.transform = m;\n  this.invTransform = this.invTransform || matrix.create();\n  matrix.invert(this.invTransform, m);\n};\n\ntransformableProto.getLocalTransform = function (m) {\n  return Transformable.getLocalTransform(this, m);\n};\n/**\n * 将自己的transform应用到context上\n * @param {CanvasRenderingContext2D} ctx\n */\n\n\ntransformableProto.setTransform = function (ctx) {\n  var m = this.transform;\n  var dpr = ctx.dpr || 1;\n\n  if (m) {\n    ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n  } else {\n    ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n  }\n};\n\ntransformableProto.restoreTransform = function (ctx) {\n  var dpr = ctx.dpr || 1;\n  ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n};\n\nvar tmpTransform = [];\n/**\n * 分解`transform`矩阵到`position`, `rotation`, `scale`\n */\n\ntransformableProto.decomposeTransform = function () {\n  if (!this.transform) {\n    return;\n  }\n\n  var parent = this.parent;\n  var m = this.transform;\n\n  if (parent && parent.transform) {\n    // Get local transform and decompose them to position, scale, rotation\n    matrix.mul(tmpTransform, parent.invTransform, m);\n    m = tmpTransform;\n  }\n\n  var sx = m[0] * m[0] + m[1] * m[1];\n  var sy = m[2] * m[2] + m[3] * m[3];\n  var position = this.position;\n  var scale = this.scale;\n\n  if (isNotAroundZero(sx - 1)) {\n    sx = Math.sqrt(sx);\n  }\n\n  if (isNotAroundZero(sy - 1)) {\n    sy = Math.sqrt(sy);\n  }\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  position[0] = m[4];\n  position[1] = m[5];\n  scale[0] = sx;\n  scale[1] = sy;\n  this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n};\n/**\n * Get global scale\n * @return {Array.<number>}\n */\n\n\ntransformableProto.getGlobalScale = function () {\n  var m = this.transform;\n\n  if (!m) {\n    return [1, 1];\n  }\n\n  var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n  var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  return [sx, sy];\n};\n/**\n * 变换坐标位置到 shape 的局部坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToLocal = function (x, y) {\n  var v2 = [x, y];\n  var invTransform = this.invTransform;\n\n  if (invTransform) {\n    vector.applyTransform(v2, v2, invTransform);\n  }\n\n  return v2;\n};\n/**\n * 变换局部坐标位置到全局坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToGlobal = function (x, y) {\n  var v2 = [x, y];\n  var transform = this.transform;\n\n  if (transform) {\n    vector.applyTransform(v2, v2, transform);\n  }\n\n  return v2;\n};\n/**\n * @static\n * @param {Object} target\n * @param {Array.<number>} target.origin\n * @param {number} target.rotation\n * @param {Array.<number>} target.position\n * @param {Array.<number>} [m]\n */\n\n\nTransformable.getLocalTransform = function (target, m) {\n  m = m || [];\n  mIdentity(m);\n  var origin = target.origin;\n  var scale = target.scale || [1, 1];\n  var rotation = target.rotation || 0;\n  var position = target.position || [0, 0];\n\n  if (origin) {\n    // Translate to origin\n    m[4] -= origin[0];\n    m[5] -= origin[1];\n  }\n\n  matrix.scale(m, m, scale);\n\n  if (rotation) {\n    matrix.rotate(m, m, rotation);\n  }\n\n  if (origin) {\n    // Translate back from origin\n    m[4] += origin[0];\n    m[5] += origin[1];\n  }\n\n  m[4] += position[0];\n  m[5] += position[1];\n  return m;\n};\n\nvar _default = Transformable;\nmodule.exports = _default;","var Displayable = require(\"./Displayable\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar imageHelper = require(\"./helper/image\");\n\n/**\n * @alias zrender/graphic/Image\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nfunction ZImage(opts) {\n  Displayable.call(this, opts);\n}\n\nZImage.prototype = {\n  constructor: ZImage,\n  type: 'image',\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var src = style.image; // Must bind each time\n\n    style.bind(ctx, this, prevEl);\n    var image = this._image = imageHelper.createOrUpdateImage(src, this._image, this, this.onload);\n\n    if (!image || !imageHelper.isImageReady(image)) {\n      return;\n    } // 图片已经加载完成\n    // if (image.nodeName.toUpperCase() == 'IMG') {\n    //     if (!image.complete) {\n    //         return;\n    //     }\n    // }\n    // Else is canvas\n\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var width = style.width;\n    var height = style.height;\n    var aspect = image.width / image.height;\n\n    if (width == null && height != null) {\n      // Keep image/height ratio\n      width = height * aspect;\n    } else if (height == null && width != null) {\n      height = width / aspect;\n    } else if (width == null && height == null) {\n      width = image.width;\n      height = image.height;\n    } // 设置transform\n\n\n    this.setTransform(ctx);\n\n    if (style.sWidth && style.sHeight) {\n      var sx = style.sx || 0;\n      var sy = style.sy || 0;\n      ctx.drawImage(image, sx, sy, style.sWidth, style.sHeight, x, y, width, height);\n    } else if (style.sx && style.sy) {\n      var sx = style.sx;\n      var sy = style.sy;\n      var sWidth = width - sx;\n      var sHeight = height - sy;\n      ctx.drawImage(image, sx, sy, sWidth, sHeight, x, y, width, height);\n    } else {\n      ctx.drawImage(image, x, y, width, height);\n    } // Draw rect text\n\n\n    if (style.text != null) {\n      // Only restore transform when needs draw text.\n      this.restoreTransform(ctx);\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  getBoundingRect: function () {\n    var style = this.style;\n\n    if (!this._rect) {\n      this._rect = new BoundingRect(style.x || 0, style.y || 0, style.width || 0, style.height || 0);\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(ZImage, Displayable);\nvar _default = ZImage;\nmodule.exports = _default;","var VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Visual encoding for sankey view\n * @author  Deqing Li(annong035@gmail.com)\n */\nfunction _default(ecModel, payload) {\n  ecModel.eachSeriesByType('sankey', function (seriesModel) {\n    var graph = seriesModel.getGraph();\n    var nodes = graph.nodes;\n\n    if (nodes.length) {\n      var minValue = Infinity;\n      var maxValue = -Infinity;\n      zrUtil.each(nodes, function (node) {\n        var nodeValue = node.getLayout().value;\n\n        if (nodeValue < minValue) {\n          minValue = nodeValue;\n        }\n\n        if (nodeValue > maxValue) {\n          maxValue = nodeValue;\n        }\n      });\n      zrUtil.each(nodes, function (node) {\n        var mapping = new VisualMapping({\n          type: 'color',\n          mappingMethod: 'linear',\n          dataExtent: [minValue, maxValue],\n          visual: seriesModel.get('color')\n        });\n        var mapValueToColor = mapping.mapValueToVisual(node.getLayout().value);\n        node.setVisual('color', mapValueToColor); // If set itemStyle.normal.color\n\n        var itemModel = node.getModel();\n        var customColor = itemModel.get('itemStyle.color');\n\n        if (customColor != null) {\n          node.setVisual('color', customColor);\n        }\n      });\n    }\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar LegendView = require(\"./LegendView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Separate legend and scrollable legend to reduce package size.\n */\nvar Group = graphic.Group;\nvar WH = ['width', 'height'];\nvar XY = ['x', 'y'];\nvar ScrollableLegendView = LegendView.extend({\n  type: 'legend.scroll',\n  newlineDisabled: true,\n  init: function () {\n    ScrollableLegendView.superCall(this, 'init');\n    /**\n     * @private\n     * @type {number} For `scroll`.\n     */\n\n    this._currentIndex = 0;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this.group.add(this._containerGroup = new Group());\n\n    this._containerGroup.add(this.getContentGroup());\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n\n    this.group.add(this._controllerGroup = new Group());\n    /**\n     *\n     * @private\n     */\n\n    this._showController;\n  },\n\n  /**\n   * @override\n   */\n  resetInner: function () {\n    ScrollableLegendView.superCall(this, 'resetInner');\n\n    this._controllerGroup.removeAll();\n\n    this._containerGroup.removeClipPath();\n\n    this._containerGroup.__rectSize = null;\n  },\n\n  /**\n   * @override\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var me = this; // Render content items.\n\n    ScrollableLegendView.superCall(this, 'renderInner', itemAlign, legendModel, ecModel, api);\n    var controllerGroup = this._controllerGroup;\n    var pageIconSize = legendModel.get('pageIconSize', true);\n\n    if (!zrUtil.isArray(pageIconSize)) {\n      pageIconSize = [pageIconSize, pageIconSize];\n    }\n\n    createPageButton('pagePrev', 0);\n    var pageTextStyleModel = legendModel.getModel('pageTextStyle');\n    controllerGroup.add(new graphic.Text({\n      name: 'pageText',\n      style: {\n        textFill: pageTextStyleModel.getTextColor(),\n        font: pageTextStyleModel.getFont(),\n        textVerticalAlign: 'middle',\n        textAlign: 'center'\n      },\n      silent: true\n    }));\n    createPageButton('pageNext', 1);\n\n    function createPageButton(name, iconIdx) {\n      var pageDataIndexName = name + 'DataIndex';\n      var icon = graphic.createIcon(legendModel.get('pageIcons', true)[legendModel.getOrient().name][iconIdx], {\n        // Buttons will be created in each render, so we do not need\n        // to worry about avoiding using legendModel kept in scope.\n        onclick: zrUtil.bind(me._pageGo, me, pageDataIndexName, legendModel, api)\n      }, {\n        x: -pageIconSize[0] / 2,\n        y: -pageIconSize[1] / 2,\n        width: pageIconSize[0],\n        height: pageIconSize[1]\n      });\n      icon.name = name;\n      controllerGroup.add(icon);\n    }\n  },\n\n  /**\n   * @override\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup();\n    var containerGroup = this._containerGroup;\n    var controllerGroup = this._controllerGroup;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var yx = XY[1 - orientIdx]; // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), !orientIdx ? null : maxSize.width, orientIdx ? null : maxSize.height);\n    layoutUtil.box( // Buttons in controller are layout always horizontally.\n    'horizontal', controllerGroup, legendModel.get('pageButtonItemGap', true));\n    var contentRect = contentGroup.getBoundingRect();\n    var controllerRect = controllerGroup.getBoundingRect();\n    var showController = this._showController = contentRect[wh] > maxSize[wh];\n    var contentPos = [-contentRect.x, -contentRect.y]; // Remain contentPos when scroll animation perfroming.\n\n    contentPos[orientIdx] = contentGroup.position[orientIdx]; // Layout container group based on 0.\n\n    var containerPos = [0, 0];\n    var controllerPos = [-controllerRect.x, -controllerRect.y];\n    var pageButtonGap = zrUtil.retrieve2(legendModel.get('pageButtonGap', true), legendModel.get('itemGap', true)); // Place containerGroup and controllerGroup and contentGroup.\n\n    if (showController) {\n      var pageButtonPosition = legendModel.get('pageButtonPosition', true); // controller is on the right / bottom.\n\n      if (pageButtonPosition === 'end') {\n        controllerPos[orientIdx] += maxSize[wh] - controllerRect[wh];\n      } // controller is on the left / top.\n      else {\n          containerPos[orientIdx] += controllerRect[wh] + pageButtonGap;\n        }\n    } // Always align controller to content as 'middle'.\n\n\n    controllerPos[1 - orientIdx] += contentRect[hw] / 2 - controllerRect[hw] / 2;\n    contentGroup.attr('position', contentPos);\n    containerGroup.attr('position', containerPos);\n    controllerGroup.attr('position', controllerPos); // Calculate `mainRect` and set `clipPath`.\n    // mainRect should not be calculated by `this.group.getBoundingRect()`\n    // for sake of the overflow.\n\n    var mainRect = this.group.getBoundingRect();\n    var mainRect = {\n      x: 0,\n      y: 0\n    }; // Consider content may be overflow (should be clipped).\n\n    mainRect[wh] = showController ? maxSize[wh] : contentRect[wh];\n    mainRect[hw] = Math.max(contentRect[hw], controllerRect[hw]); // `containerRect[yx] + containerPos[1 - orientIdx]` is 0.\n\n    mainRect[yx] = Math.min(0, controllerRect[yx] + controllerPos[1 - orientIdx]);\n    containerGroup.__rectSize = maxSize[wh];\n\n    if (showController) {\n      var clipShape = {\n        x: 0,\n        y: 0\n      };\n      clipShape[wh] = Math.max(maxSize[wh] - controllerRect[wh] - pageButtonGap, 0);\n      clipShape[hw] = mainRect[hw];\n      containerGroup.setClipPath(new graphic.Rect({\n        shape: clipShape\n      })); // Consider content may be larger than container, container rect\n      // can not be obtained from `containerGroup.getBoundingRect()`.\n\n      containerGroup.__rectSize = clipShape[wh];\n    } else {\n      // Do not remove or ignore controller. Keep them set as place holders.\n      controllerGroup.eachChild(function (child) {\n        child.attr({\n          invisible: true,\n          silent: true\n        });\n      });\n    } // Content translate animation.\n\n\n    var pageInfo = this._getPageInfo(legendModel);\n\n    pageInfo.pageIndex != null && graphic.updateProps(contentGroup, {\n      position: pageInfo.contentPosition\n    }, // When switch from \"show controller\" to \"not show controller\", view should be\n    // updated immediately without animation, otherwise causes weird efffect.\n    showController ? legendModel : false);\n\n    this._updatePageInfoView(legendModel, pageInfo);\n\n    return mainRect;\n  },\n  _pageGo: function (to, legendModel, api) {\n    var scrollDataIndex = this._getPageInfo(legendModel)[to];\n\n    scrollDataIndex != null && api.dispatchAction({\n      type: 'legendScroll',\n      scrollDataIndex: scrollDataIndex,\n      legendId: legendModel.id\n    });\n  },\n  _updatePageInfoView: function (legendModel, pageInfo) {\n    var controllerGroup = this._controllerGroup;\n    zrUtil.each(['pagePrev', 'pageNext'], function (name) {\n      var canJump = pageInfo[name + 'DataIndex'] != null;\n      var icon = controllerGroup.childOfName(name);\n\n      if (icon) {\n        icon.setStyle('fill', canJump ? legendModel.get('pageIconColor', true) : legendModel.get('pageIconInactiveColor', true));\n        icon.cursor = canJump ? 'pointer' : 'default';\n      }\n    });\n    var pageText = controllerGroup.childOfName('pageText');\n    var pageFormatter = legendModel.get('pageFormatter');\n    var pageIndex = pageInfo.pageIndex;\n    var current = pageIndex != null ? pageIndex + 1 : 0;\n    var total = pageInfo.pageCount;\n    pageText && pageFormatter && pageText.setStyle('text', zrUtil.isString(pageFormatter) ? pageFormatter.replace('{current}', current).replace('{total}', total) : pageFormatter({\n      current: current,\n      total: total\n    }));\n  },\n\n  /**\n   * @param {module:echarts/model/Model} legendModel\n   * @return {Object} {\n   *  contentPosition: Array.<number>, null when data item not found.\n   *  pageIndex: number, null when data item not found.\n   *  pageCount: number, always be a number, can be 0.\n   *  pagePrevDataIndex: number, null when no next page.\n   *  pageNextDataIndex: number, null when no previous page.\n   * }\n   */\n  _getPageInfo: function (legendModel) {\n    // Align left or top by the current dataIndex.\n    var currDataIndex = legendModel.get('scrollDataIndex', true);\n    var contentGroup = this.getContentGroup();\n    var contentRect = contentGroup.getBoundingRect();\n    var containerRectSize = this._containerGroup.__rectSize;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var xy = XY[orientIdx];\n    var contentPos = contentGroup.position.slice();\n    var pageIndex;\n    var pagePrevDataIndex;\n    var pageNextDataIndex;\n    var targetItemGroup;\n\n    if (this._showController) {\n      contentGroup.eachChild(function (child) {\n        if (child.__legendDataIndex === currDataIndex) {\n          targetItemGroup = child;\n        }\n      });\n    } else {\n      targetItemGroup = contentGroup.childAt(0);\n    }\n\n    var pageCount = containerRectSize ? Math.ceil(contentRect[wh] / containerRectSize) : 0;\n\n    if (targetItemGroup) {\n      var itemRect = targetItemGroup.getBoundingRect();\n      var itemLoc = targetItemGroup.position[orientIdx] + itemRect[xy];\n      contentPos[orientIdx] = -itemLoc - contentRect[xy];\n      pageIndex = Math.floor(pageCount * (itemLoc + itemRect[xy] + containerRectSize / 2) / contentRect[wh]);\n      pageIndex = contentRect[wh] && pageCount ? Math.max(0, Math.min(pageCount - 1, pageIndex)) : -1;\n      var winRect = {\n        x: 0,\n        y: 0\n      };\n      winRect[wh] = containerRectSize;\n      winRect[hw] = contentRect[hw];\n      winRect[xy] = -contentPos[orientIdx] - contentRect[xy];\n      var startIdx;\n      var children = contentGroup.children();\n      contentGroup.eachChild(function (child, index) {\n        var itemRect = getItemRect(child);\n\n        if (itemRect.intersect(winRect)) {\n          startIdx == null && (startIdx = index); // It is user-friendly that the last item shown in the\n          // current window is shown at the begining of next window.\n\n          pageNextDataIndex = child.__legendDataIndex;\n        } // If the last item is shown entirely, no next page.\n\n\n        if (index === children.length - 1 && itemRect[xy] + itemRect[wh] <= winRect[xy] + winRect[wh]) {\n          pageNextDataIndex = null;\n        }\n      }); // Always align based on the left/top most item, so the left/top most\n      // item in the previous window is needed to be found here.\n\n      if (startIdx != null) {\n        var startItem = children[startIdx];\n        var startRect = getItemRect(startItem);\n        winRect[xy] = startRect[xy] + startRect[wh] - winRect[wh]; // If the first item is shown entirely, no previous page.\n\n        if (startIdx <= 0 && startRect[xy] >= winRect[xy]) {\n          pagePrevDataIndex = null;\n        } else {\n          while (startIdx > 0 && getItemRect(children[startIdx - 1]).intersect(winRect)) {\n            startIdx--;\n          }\n\n          pagePrevDataIndex = children[startIdx].__legendDataIndex;\n        }\n      }\n    }\n\n    return {\n      contentPosition: contentPos,\n      pageIndex: pageIndex,\n      pageCount: pageCount,\n      pagePrevDataIndex: pagePrevDataIndex,\n      pageNextDataIndex: pageNextDataIndex\n    };\n\n    function getItemRect(el) {\n      var itemRect = el.getBoundingRect().clone();\n      itemRect[xy] += el.position[orientIdx];\n      return itemRect;\n    }\n  }\n});\nvar _default = ScrollableLegendView;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar selector = require(\"./selector\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\nvar BrushTargetManager = require(\"../helper/BrushTargetManager\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar STATE_LIST = ['inBrush', 'outOfBrush'];\nvar DISPATCH_METHOD = '__ecBrushSelect';\nvar DISPATCH_FLAG = '__ecInBrushSelectEvent';\nvar PRIORITY_BRUSH = echarts.PRIORITY.VISUAL.BRUSH;\n/**\n * Layout for visual, the priority higher than other layout, and before brush visual.\n */\n\necharts.registerLayout(PRIORITY_BRUSH, function (ecModel, api, payload) {\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel) {\n    payload && payload.type === 'takeGlobalCursor' && brushModel.setBrushOption(payload.key === 'brush' ? payload.brushOption : {\n      brushType: false\n    });\n    var brushTargetManager = brushModel.brushTargetManager = new BrushTargetManager(brushModel.option, ecModel);\n    brushTargetManager.setInputRanges(brushModel.areas, ecModel);\n  });\n});\n/**\n * Register the visual encoding if this modules required.\n */\n\necharts.registerVisual(PRIORITY_BRUSH, function (ecModel, api, payload) {\n  var brushSelected = [];\n  var throttleType;\n  var throttleDelay;\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel, brushIndex) {\n    var thisBrushSelected = {\n      brushId: brushModel.id,\n      brushIndex: brushIndex,\n      brushName: brushModel.name,\n      areas: zrUtil.clone(brushModel.areas),\n      selected: []\n    }; // Every brush component exists in event params, convenient\n    // for user to find by index.\n\n    brushSelected.push(thisBrushSelected);\n    var brushOption = brushModel.option;\n    var brushLink = brushOption.brushLink;\n    var linkedSeriesMap = [];\n    var selectedDataIndexForLink = [];\n    var rangeInfoBySeries = [];\n    var hasBrushExists = 0;\n\n    if (!brushIndex) {\n      // Only the first throttle setting works.\n      throttleType = brushOption.throttleType;\n      throttleDelay = brushOption.throttleDelay;\n    } // Add boundingRect and selectors to range.\n\n\n    var areas = zrUtil.map(brushModel.areas, function (area) {\n      return bindSelector(zrUtil.defaults({\n        boundingRect: boundingRectBuilders[area.brushType](area)\n      }, area));\n    });\n    var visualMappings = visualSolution.createVisualMappings(brushModel.option, STATE_LIST, function (mappingOption) {\n      mappingOption.mappingMethod = 'fixed';\n    });\n    zrUtil.isArray(brushLink) && zrUtil.each(brushLink, function (seriesIndex) {\n      linkedSeriesMap[seriesIndex] = 1;\n    });\n\n    function linkOthers(seriesIndex) {\n      return brushLink === 'all' || linkedSeriesMap[seriesIndex];\n    } // If no supported brush or no brush on the series,\n    // all visuals should be in original state.\n\n\n    function brushed(rangeInfoList) {\n      return !!rangeInfoList.length;\n    }\n    /**\n     * Logic for each series: (If the logic has to be modified one day, do it carefully!)\n     *\n     * ( brushed ┬ && ┬hasBrushExist ┬ && linkOthers  ) => StepA: ┬record, ┬ StepB: ┬visualByRecord.\n     *   !brushed┘    ├hasBrushExist ┤                            └nothing,┘        ├visualByRecord.\n     *                └!hasBrushExist┘                                              └nothing.\n     * ( !brushed  && ┬hasBrushExist ┬ && linkOthers  ) => StepA:  nothing,  StepB: ┬visualByRecord.\n     *                └!hasBrushExist┘                                              └nothing.\n     * ( brushed ┬ &&                     !linkOthers ) => StepA:  nothing,  StepB: ┬visualByCheck.\n     *   !brushed┘                                                                  └nothing.\n     * ( !brushed  &&                     !linkOthers ) => StepA:  nothing,  StepB:  nothing.\n     */\n    // Step A\n\n\n    ecModel.eachSeries(function (seriesModel, seriesIndex) {\n      var rangeInfoList = rangeInfoBySeries[seriesIndex] = [];\n      seriesModel.subType === 'parallel' ? stepAParallel(seriesModel, seriesIndex, rangeInfoList) : stepAOthers(seriesModel, seriesIndex, rangeInfoList);\n    });\n\n    function stepAParallel(seriesModel, seriesIndex) {\n      var coordSys = seriesModel.coordinateSystem;\n      hasBrushExists |= coordSys.hasAxisBrushed();\n      linkOthers(seriesIndex) && coordSys.eachActiveState(seriesModel.getData(), function (activeState, dataIndex) {\n        activeState === 'active' && (selectedDataIndexForLink[dataIndex] = 1);\n      });\n    }\n\n    function stepAOthers(seriesModel, seriesIndex, rangeInfoList) {\n      var selectorsByBrushType = getSelectorsByBrushType(seriesModel);\n\n      if (!selectorsByBrushType || brushModelNotControll(brushModel, seriesIndex)) {\n        return;\n      }\n\n      zrUtil.each(areas, function (area) {\n        selectorsByBrushType[area.brushType] && brushModel.brushTargetManager.controlSeries(area, seriesModel, ecModel) && rangeInfoList.push(area);\n        hasBrushExists |= brushed(rangeInfoList);\n      });\n\n      if (linkOthers(seriesIndex) && brushed(rangeInfoList)) {\n        var data = seriesModel.getData();\n        data.each(function (dataIndex) {\n          if (checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex)) {\n            selectedDataIndexForLink[dataIndex] = 1;\n          }\n        });\n      }\n    } // Step B\n\n\n    ecModel.eachSeries(function (seriesModel, seriesIndex) {\n      var seriesBrushSelected = {\n        seriesId: seriesModel.id,\n        seriesIndex: seriesIndex,\n        seriesName: seriesModel.name,\n        dataIndex: []\n      }; // Every series exists in event params, convenient\n      // for user to find series by seriesIndex.\n\n      thisBrushSelected.selected.push(seriesBrushSelected);\n      var selectorsByBrushType = getSelectorsByBrushType(seriesModel);\n      var rangeInfoList = rangeInfoBySeries[seriesIndex];\n      var data = seriesModel.getData();\n      var getValueState = linkOthers(seriesIndex) ? function (dataIndex) {\n        return selectedDataIndexForLink[dataIndex] ? (seriesBrushSelected.dataIndex.push(data.getRawIndex(dataIndex)), 'inBrush') : 'outOfBrush';\n      } : function (dataIndex) {\n        return checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex) ? (seriesBrushSelected.dataIndex.push(data.getRawIndex(dataIndex)), 'inBrush') : 'outOfBrush';\n      }; // If no supported brush or no brush, all visuals are in original state.\n\n      (linkOthers(seriesIndex) ? hasBrushExists : brushed(rangeInfoList)) && visualSolution.applyVisual(STATE_LIST, visualMappings, data, getValueState);\n    });\n  });\n  dispatchAction(api, throttleType, throttleDelay, brushSelected, payload);\n});\n\nfunction dispatchAction(api, throttleType, throttleDelay, brushSelected, payload) {\n  // This event will not be triggered when `setOpion`, otherwise dead lock may\n  // triggered when do `setOption` in event listener, which we do not find\n  // satisfactory way to solve yet. Some considered resolutions:\n  // (a) Diff with prevoius selected data ant only trigger event when changed.\n  // But store previous data and diff precisely (i.e., not only by dataIndex, but\n  // also detect value changes in selected data) might bring complexity or fragility.\n  // (b) Use spectial param like `silent` to suppress event triggering.\n  // But such kind of volatile param may be weird in `setOption`.\n  if (!payload) {\n    return;\n  }\n\n  var zr = api.getZr();\n\n  if (zr[DISPATCH_FLAG]) {\n    return;\n  }\n\n  if (!zr[DISPATCH_METHOD]) {\n    zr[DISPATCH_METHOD] = doDispatch;\n  }\n\n  var fn = throttleUtil.createOrUpdate(zr, DISPATCH_METHOD, throttleDelay, throttleType);\n  fn(api, brushSelected);\n}\n\nfunction doDispatch(api, brushSelected) {\n  if (!api.isDisposed()) {\n    var zr = api.getZr();\n    zr[DISPATCH_FLAG] = true;\n    api.dispatchAction({\n      type: 'brushSelect',\n      batch: brushSelected\n    });\n    zr[DISPATCH_FLAG] = false;\n  }\n}\n\nfunction checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex) {\n  for (var i = 0, len = rangeInfoList.length; i < len; i++) {\n    var area = rangeInfoList[i];\n\n    if (selectorsByBrushType[area.brushType](dataIndex, data, area.selectors, area)) {\n      return true;\n    }\n  }\n}\n\nfunction getSelectorsByBrushType(seriesModel) {\n  var brushSelector = seriesModel.brushSelector;\n\n  if (zrUtil.isString(brushSelector)) {\n    var sels = [];\n    zrUtil.each(selector, function (selectorsByElementType, brushType) {\n      sels[brushType] = function (dataIndex, data, selectors, area) {\n        var itemLayout = data.getItemLayout(dataIndex);\n        return selectorsByElementType[brushSelector](itemLayout, selectors, area);\n      };\n    });\n    return sels;\n  } else if (zrUtil.isFunction(brushSelector)) {\n    var bSelector = {};\n    zrUtil.each(selector, function (sel, brushType) {\n      bSelector[brushType] = brushSelector;\n    });\n    return bSelector;\n  }\n\n  return brushSelector;\n}\n\nfunction brushModelNotControll(brushModel, seriesIndex) {\n  var seriesIndices = brushModel.option.seriesIndex;\n  return seriesIndices != null && seriesIndices !== 'all' && (zrUtil.isArray(seriesIndices) ? zrUtil.indexOf(seriesIndices, seriesIndex) < 0 : seriesIndex !== seriesIndices);\n}\n\nfunction bindSelector(area) {\n  var selectors = area.selectors = {};\n  zrUtil.each(selector[area.brushType], function (selFn, elType) {\n    // Do not use function binding or curry for performance.\n    selectors[elType] = function (itemLayout) {\n      return selFn(itemLayout, selectors, area);\n    };\n  });\n  return area;\n}\n\nvar boundingRectBuilders = {\n  lineX: zrUtil.noop,\n  lineY: zrUtil.noop,\n  rect: function (area) {\n    return getBoundingRectFromMinMax(area.range);\n  },\n  polygon: function (area) {\n    var minMax;\n    var range = area.range;\n\n    for (var i = 0, len = range.length; i < len; i++) {\n      minMax = minMax || [[Infinity, -Infinity], [Infinity, -Infinity]];\n      var rg = range[i];\n      rg[0] < minMax[0][0] && (minMax[0][0] = rg[0]);\n      rg[0] > minMax[0][1] && (minMax[0][1] = rg[0]);\n      rg[1] < minMax[1][0] && (minMax[1][0] = rg[1]);\n      rg[1] > minMax[1][1] && (minMax[1][1] = rg[1]);\n    }\n\n    return minMax && getBoundingRectFromMinMax(minMax);\n  }\n};\n\nfunction getBoundingRectFromMinMax(minMax) {\n  return new BoundingRect(minMax[0][0], minMax[1][0], minMax[0][1] - minMax[0][0], minMax[1][1] - minMax[1][0]);\n}","var echarts = require(\"../echarts\");\n\nrequire(\"./effectScatter/EffectScatterSeries\");\n\nrequire(\"./effectScatter/EffectScatterView\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar layoutPoints = require(\"../layout/points\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerVisual(visualSymbol('effectScatter', 'circle'));\necharts.registerLayout(layoutPoints('effectScatter'));","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} {point: [x, y], el: ...} point Will not be null.\n */\nfunction _default(finder, ecModel) {\n  var point = [];\n  var seriesIndex = finder.seriesIndex;\n  var seriesModel;\n\n  if (seriesIndex == null || !(seriesModel = ecModel.getSeriesByIndex(seriesIndex))) {\n    return {\n      point: []\n    };\n  }\n\n  var data = seriesModel.getData();\n  var dataIndex = modelUtil.queryDataIndex(data, finder);\n\n  if (dataIndex == null || dataIndex < 0 || zrUtil.isArray(dataIndex)) {\n    return {\n      point: []\n    };\n  }\n\n  var el = data.getItemGraphicEl(dataIndex);\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (seriesModel.getTooltipPosition) {\n    point = seriesModel.getTooltipPosition(dataIndex) || [];\n  } else if (coordSys && coordSys.dataToPoint) {\n    point = coordSys.dataToPoint(data.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\n      return data.mapDimension(dim);\n    }), dataIndex, true)) || [];\n  } else if (el) {\n    // Use graphic bounding rect\n    var rect = el.getBoundingRect().clone();\n    rect.applyTransform(el.transform);\n    point = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n\n  return {\n    point: point,\n    el: el\n  };\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisDefault = require(\"../axisDefault\");\n\nvar Model = require(\"../../model/Model\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar valueAxisDefault = axisDefault.valueAxis;\n\nfunction defaultsShow(opt, show) {\n  return zrUtil.defaults({\n    show: show\n  }, opt);\n}\n\nvar RadarModel = echarts.extendComponentModel({\n  type: 'radar',\n  optionUpdated: function () {\n    var boundaryGap = this.get('boundaryGap');\n    var splitNumber = this.get('splitNumber');\n    var scale = this.get('scale');\n    var axisLine = this.get('axisLine');\n    var axisTick = this.get('axisTick');\n    var axisLabel = this.get('axisLabel');\n    var nameTextStyle = this.get('name');\n    var showName = this.get('name.show');\n    var nameFormatter = this.get('name.formatter');\n    var nameGap = this.get('nameGap');\n    var triggerEvent = this.get('triggerEvent');\n    var indicatorModels = zrUtil.map(this.get('indicator') || [], function (indicatorOpt) {\n      // PENDING\n      if (indicatorOpt.max != null && indicatorOpt.max > 0 && !indicatorOpt.min) {\n        indicatorOpt.min = 0;\n      } else if (indicatorOpt.min != null && indicatorOpt.min < 0 && !indicatorOpt.max) {\n        indicatorOpt.max = 0;\n      }\n\n      var iNameTextStyle = nameTextStyle;\n\n      if (indicatorOpt.color != null) {\n        iNameTextStyle = zrUtil.defaults({\n          color: indicatorOpt.color\n        }, nameTextStyle);\n      } // Use same configuration\n\n\n      indicatorOpt = zrUtil.merge(zrUtil.clone(indicatorOpt), {\n        boundaryGap: boundaryGap,\n        splitNumber: splitNumber,\n        scale: scale,\n        axisLine: axisLine,\n        axisTick: axisTick,\n        axisLabel: axisLabel,\n        // Competitable with 2 and use text\n        name: indicatorOpt.text,\n        nameLocation: 'end',\n        nameGap: nameGap,\n        // min: 0,\n        nameTextStyle: iNameTextStyle,\n        triggerEvent: triggerEvent\n      }, false);\n\n      if (!showName) {\n        indicatorOpt.name = '';\n      }\n\n      if (typeof nameFormatter === 'string') {\n        var indName = indicatorOpt.name;\n        indicatorOpt.name = nameFormatter.replace('{value}', indName != null ? indName : '');\n      } else if (typeof nameFormatter === 'function') {\n        indicatorOpt.name = nameFormatter(indicatorOpt.name, indicatorOpt);\n      }\n\n      var model = zrUtil.extend(new Model(indicatorOpt, null, this.ecModel), axisModelCommonMixin); // For triggerEvent.\n\n      model.mainType = 'radar';\n      model.componentIndex = this.componentIndex;\n      return model;\n    }, this);\n\n    this.getIndicatorModels = function () {\n      return indicatorModels;\n    };\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    center: ['50%', '50%'],\n    radius: '75%',\n    startAngle: 90,\n    name: {\n      show: true // formatter: null\n      // textStyle: {}\n\n    },\n    boundaryGap: [0, 0],\n    splitNumber: 5,\n    nameGap: 15,\n    scale: false,\n    // Polygon or circle\n    shape: 'polygon',\n    axisLine: zrUtil.merge({\n      lineStyle: {\n        color: '#bbb'\n      }\n    }, valueAxisDefault.axisLine),\n    axisLabel: defaultsShow(valueAxisDefault.axisLabel, false),\n    axisTick: defaultsShow(valueAxisDefault.axisTick, false),\n    splitLine: defaultsShow(valueAxisDefault.splitLine, true),\n    splitArea: defaultsShow(valueAxisDefault.splitArea, true),\n    // {text, min, max}\n    indicator: []\n  }\n});\nvar _default = RadarModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar coordsOffsetMap = {\n  '南海诸岛': [32, 80],\n  // 全国\n  '广东': [0, -10],\n  '香港': [10, 5],\n  '澳门': [-10, 10],\n  //'北京': [-10, 0],\n  '天津': [5, 5]\n};\n\nfunction _default(geo) {\n  zrUtil.each(geo.regions, function (region) {\n    var coordFix = coordsOffsetMap[region.name];\n\n    if (coordFix) {\n      var cp = region.center;\n      cp[0] += coordFix[0] / 10.5;\n      cp[1] += -coordFix[1] / (10.5 / 0.75);\n    }\n  });\n}\n\nmodule.exports = _default;","var BaseBarSeries = require(\"./BaseBarSeries\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = BaseBarSeries.extend({\n  type: 'series.bar',\n  dependencies: ['grid', 'polar'],\n  brushSelector: 'rect',\n\n  /**\n   * @override\n   */\n  getProgressive: function () {\n    // Do not support progressive in normal mode.\n    return this.get('large') ? this.get('progressive') : false;\n  },\n\n  /**\n   * @override\n   */\n  getProgressiveThreshold: function () {\n    // Do not support progressive in normal mode.\n    var progressiveThreshold = this.get('progressiveThreshold');\n    var largeThreshold = this.get('largeThreshold');\n\n    if (largeThreshold > progressiveThreshold) {\n      progressiveThreshold = largeThreshold;\n    }\n\n    return progressiveThreshold;\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\nvar each = zrUtil.each;\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n * @param {Function} handler\n *      param: {string} currTrigger\n *      param: {Array.<number>} point\n */\n\nfunction register(key, api, handler) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  inner(zr).records || (inner(zr).records = {});\n  initGlobalListeners(zr, api);\n  var record = inner(zr).records[key] || (inner(zr).records[key] = {});\n  record.handler = handler;\n}\n\nfunction initGlobalListeners(zr, api) {\n  if (inner(zr).initialized) {\n    return;\n  }\n\n  inner(zr).initialized = true;\n  useHandler('click', zrUtil.curry(doEnter, 'click'));\n  useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove')); // useHandler('mouseout', onLeave);\n\n  useHandler('globalout', onLeave);\n\n  function useHandler(eventType, cb) {\n    zr.on(eventType, function (e) {\n      var dis = makeDispatchAction(api);\n      each(inner(zr).records, function (record) {\n        record && cb(record, e, dis.dispatchAction);\n      });\n      dispatchTooltipFinally(dis.pendings, api);\n    });\n  }\n}\n\nfunction dispatchTooltipFinally(pendings, api) {\n  var showLen = pendings.showTip.length;\n  var hideLen = pendings.hideTip.length;\n  var actuallyPayload;\n\n  if (showLen) {\n    actuallyPayload = pendings.showTip[showLen - 1];\n  } else if (hideLen) {\n    actuallyPayload = pendings.hideTip[hideLen - 1];\n  }\n\n  if (actuallyPayload) {\n    actuallyPayload.dispatchAction = null;\n    api.dispatchAction(actuallyPayload);\n  }\n}\n\nfunction onLeave(record, e, dispatchAction) {\n  record.handler('leave', null, dispatchAction);\n}\n\nfunction doEnter(currTrigger, record, e, dispatchAction) {\n  record.handler(currTrigger, e, dispatchAction);\n}\n\nfunction makeDispatchAction(api) {\n  var pendings = {\n    showTip: [],\n    hideTip: []\n  }; // FIXME\n  // better approach?\n  // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n  // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n  // So we have to add \"final stage\" to merge those dispatched actions.\n\n  var dispatchAction = function (payload) {\n    var pendingList = pendings[payload.type];\n\n    if (pendingList) {\n      pendingList.push(payload);\n    } else {\n      payload.dispatchAction = dispatchAction;\n      api.dispatchAction(payload);\n    }\n  };\n\n  return {\n    dispatchAction: dispatchAction,\n    pendings: pendings\n  };\n}\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction unregister(key, api) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  var record = (inner(zr).records || {})[key];\n\n  if (record) {\n    inner(zr).records[key] = null;\n  }\n}\n\nexports.register = register;\nexports.unregister = unregister;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _labelHelper = require(\"./labelHelper\");\n\nvar getDefaultLabel = _labelHelper.getDefaultLabel;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/Symbol\n */\n\n/**\n * @constructor\n * @alias {module:echarts/chart/helper/Symbol}\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @extends {module:zrender/graphic/Group}\n */\nfunction SymbolClz(data, idx, seriesScope) {\n  graphic.Group.call(this);\n  this.updateData(data, idx, seriesScope);\n}\n\nvar symbolProto = SymbolClz.prototype;\n/**\n * @public\n * @static\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @return {Array.<number>} [width, height]\n */\n\nvar getSymbolSize = SymbolClz.getSymbolSize = function (data, idx) {\n  var symbolSize = data.getItemVisual(idx, 'symbolSize');\n  return symbolSize instanceof Array ? symbolSize.slice() : [+symbolSize, +symbolSize];\n};\n\nfunction getScale(symbolSize) {\n  return [symbolSize[0] / 2, symbolSize[1] / 2];\n}\n\nfunction driftSymbol(dx, dy) {\n  this.parent.drift(dx, dy);\n}\n\nsymbolProto._createSymbol = function (symbolType, data, idx, symbolSize, keepAspect) {\n  // Remove paths created before\n  this.removeAll();\n  var color = data.getItemVisual(idx, 'color'); // var symbolPath = createSymbol(\n  //     symbolType, -0.5, -0.5, 1, 1, color\n  // );\n  // If width/height are set too small (e.g., set to 1) on ios10\n  // and macOS Sierra, a circle stroke become a rect, no matter what\n  // the scale is set. So we set width/height as 2. See #4150.\n\n  var symbolPath = createSymbol(symbolType, -1, -1, 2, 2, color, keepAspect);\n  symbolPath.attr({\n    z2: 100,\n    culling: true,\n    scale: getScale(symbolSize)\n  }); // Rewrite drift method\n\n  symbolPath.drift = driftSymbol;\n  this._symbolType = symbolType;\n  this.add(symbolPath);\n};\n/**\n * Stop animation\n * @param {boolean} toLastFrame\n */\n\n\nsymbolProto.stopSymbolAnimation = function (toLastFrame) {\n  this.childAt(0).stopAnimation(toLastFrame);\n};\n/**\n * FIXME:\n * Caution: This method breaks the encapsulation of this module,\n * but it indeed brings convenience. So do not use the method\n * unless you detailedly know all the implements of `Symbol`,\n * especially animation.\n *\n * Get symbol path element.\n */\n\n\nsymbolProto.getSymbolPath = function () {\n  return this.childAt(0);\n};\n/**\n * Get scale(aka, current symbol size).\n * Including the change caused by animation\n */\n\n\nsymbolProto.getScale = function () {\n  return this.childAt(0).scale;\n};\n/**\n * Highlight symbol\n */\n\n\nsymbolProto.highlight = function () {\n  this.childAt(0).trigger('emphasis');\n};\n/**\n * Downplay symbol\n */\n\n\nsymbolProto.downplay = function () {\n  this.childAt(0).trigger('normal');\n};\n/**\n * @param {number} zlevel\n * @param {number} z\n */\n\n\nsymbolProto.setZ = function (zlevel, z) {\n  var symbolPath = this.childAt(0);\n  symbolPath.zlevel = zlevel;\n  symbolPath.z = z;\n};\n\nsymbolProto.setDraggable = function (draggable) {\n  var symbolPath = this.childAt(0);\n  symbolPath.draggable = draggable;\n  symbolPath.cursor = draggable ? 'move' : 'pointer';\n};\n/**\n * Update symbol properties\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Object} [seriesScope]\n * @param {Object} [seriesScope.itemStyle]\n * @param {Object} [seriesScope.hoverItemStyle]\n * @param {Object} [seriesScope.symbolRotate]\n * @param {Object} [seriesScope.symbolOffset]\n * @param {module:echarts/model/Model} [seriesScope.labelModel]\n * @param {module:echarts/model/Model} [seriesScope.hoverLabelModel]\n * @param {boolean} [seriesScope.hoverAnimation]\n * @param {Object} [seriesScope.cursorStyle]\n * @param {module:echarts/model/Model} [seriesScope.itemModel]\n * @param {string} [seriesScope.symbolInnerColor]\n * @param {Object} [seriesScope.fadeIn=false]\n */\n\n\nsymbolProto.updateData = function (data, idx, seriesScope) {\n  this.silent = false;\n  var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n  var seriesModel = data.hostModel;\n  var symbolSize = getSymbolSize(data, idx);\n  var isInit = symbolType !== this._symbolType;\n\n  if (isInit) {\n    var keepAspect = data.getItemVisual(idx, 'symbolKeepAspect');\n\n    this._createSymbol(symbolType, data, idx, symbolSize, keepAspect);\n  } else {\n    var symbolPath = this.childAt(0);\n    symbolPath.silent = false;\n    graphic.updateProps(symbolPath, {\n      scale: getScale(symbolSize)\n    }, seriesModel, idx);\n  }\n\n  this._updateCommon(data, idx, symbolSize, seriesScope);\n\n  if (isInit) {\n    var symbolPath = this.childAt(0);\n    var fadeIn = seriesScope && seriesScope.fadeIn;\n    var target = {\n      scale: symbolPath.scale.slice()\n    };\n    fadeIn && (target.style = {\n      opacity: symbolPath.style.opacity\n    });\n    symbolPath.scale = [0, 0];\n    fadeIn && (symbolPath.style.opacity = 0);\n    graphic.initProps(symbolPath, target, seriesModel, idx);\n  }\n\n  this._seriesModel = seriesModel;\n}; // Update common properties\n\n\nvar normalStyleAccessPath = ['itemStyle'];\nvar emphasisStyleAccessPath = ['emphasis', 'itemStyle'];\nvar normalLabelAccessPath = ['label'];\nvar emphasisLabelAccessPath = ['emphasis', 'label'];\n/**\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Array.<number>} symbolSize\n * @param {Object} [seriesScope]\n */\n\nsymbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n  var symbolPath = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var color = data.getItemVisual(idx, 'color'); // Reset style\n\n  if (symbolPath.type !== 'image') {\n    symbolPath.useStyle({\n      strokeNoScale: true\n    });\n  }\n\n  var itemStyle = seriesScope && seriesScope.itemStyle;\n  var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n  var symbolRotate = seriesScope && seriesScope.symbolRotate;\n  var symbolOffset = seriesScope && seriesScope.symbolOffset;\n  var labelModel = seriesScope && seriesScope.labelModel;\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n  var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n  var cursorStyle = seriesScope && seriesScope.cursorStyle;\n\n  if (!seriesScope || data.hasItemOption) {\n    var itemModel = seriesScope && seriesScope.itemModel ? seriesScope.itemModel : data.getItemModel(idx); // Color must be excluded.\n    // Because symbol provide setColor individually to set fill and stroke\n\n    itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n    hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n    symbolRotate = itemModel.getShallow('symbolRotate');\n    symbolOffset = itemModel.getShallow('symbolOffset');\n    labelModel = itemModel.getModel(normalLabelAccessPath);\n    hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n    hoverAnimation = itemModel.getShallow('hoverAnimation');\n    cursorStyle = itemModel.getShallow('cursor');\n  } else {\n    hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n  }\n\n  var elStyle = symbolPath.style;\n  symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n  if (symbolOffset) {\n    symbolPath.attr('position', [parsePercent(symbolOffset[0], symbolSize[0]), parsePercent(symbolOffset[1], symbolSize[1])]);\n  }\n\n  cursorStyle && symbolPath.attr('cursor', cursorStyle); // PENDING setColor before setStyle!!!\n\n  symbolPath.setColor(color, seriesScope && seriesScope.symbolInnerColor);\n  symbolPath.setStyle(itemStyle);\n  var opacity = data.getItemVisual(idx, 'opacity');\n\n  if (opacity != null) {\n    elStyle.opacity = opacity;\n  }\n\n  var liftZ = data.getItemVisual(idx, 'liftZ');\n  var z2Origin = symbolPath.__z2Origin;\n\n  if (liftZ != null) {\n    if (z2Origin == null) {\n      symbolPath.__z2Origin = symbolPath.z2;\n      symbolPath.z2 += liftZ;\n    }\n  } else if (z2Origin != null) {\n    symbolPath.z2 = z2Origin;\n    symbolPath.__z2Origin = null;\n  }\n\n  var useNameLabel = seriesScope && seriesScope.useNameLabel;\n  graphic.setLabelStyle(elStyle, hoverItemStyle, labelModel, hoverLabelModel, {\n    labelFetcher: seriesModel,\n    labelDataIndex: idx,\n    defaultText: getLabelDefaultText,\n    isRectText: true,\n    autoColor: color\n  }); // Do not execute util needed.\n\n  function getLabelDefaultText(idx, opt) {\n    return useNameLabel ? data.getName(idx) : getDefaultLabel(data, idx);\n  }\n\n  symbolPath.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  symbolPath.hoverStyle = hoverItemStyle; // FIXME\n  // Do not use symbol.trigger('emphasis'), but use symbol.highlight() instead.\n\n  graphic.setHoverStyle(symbolPath);\n  var scale = getScale(symbolSize);\n\n  if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n    var onEmphasis = function () {\n      // Do not support this hover animation util some scenario required.\n      // Animation can only be supported in hover layer when using `el.incremetal`.\n      if (this.incremental) {\n        return;\n      }\n\n      var ratio = scale[1] / scale[0];\n      this.animateTo({\n        scale: [Math.max(scale[0] * 1.1, scale[0] + 3), Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)]\n      }, 400, 'elasticOut');\n    };\n\n    var onNormal = function () {\n      if (this.incremental) {\n        return;\n      }\n\n      this.animateTo({\n        scale: scale\n      }, 400, 'elasticOut');\n    };\n\n    symbolPath.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n};\n/**\n * @param {Function} cb\n * @param {Object} [opt]\n * @param {Object} [opt.keepLabel=true]\n */\n\n\nsymbolProto.fadeOut = function (cb, opt) {\n  var symbolPath = this.childAt(0); // Avoid mistaken hover when fading out\n\n  this.silent = symbolPath.silent = true; // Not show text when animating\n\n  !(opt && opt.keepLabel) && (symbolPath.style.text = null);\n  graphic.updateProps(symbolPath, {\n    style: {\n      opacity: 0\n    },\n    scale: [0, 0]\n  }, this._seriesModel, this.dataIndex, cb);\n};\n\nzrUtil.inherits(SymbolClz, graphic.Group);\nvar _default = SymbolClz;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar symbolUtil = require(\"../../util/symbol\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction normalizeSymbolSize(symbolSize) {\n  if (!zrUtil.isArray(symbolSize)) {\n    symbolSize = [+symbolSize, +symbolSize];\n  }\n\n  return symbolSize;\n}\n\nvar _default = echarts.extendChartView({\n  type: 'radar',\n  render: function (seriesModel, ecModel, api) {\n    var polar = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n\n    function createSymbol(data, idx) {\n      var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n      var color = data.getItemVisual(idx, 'color');\n\n      if (symbolType === 'none') {\n        return;\n      }\n\n      var symbolSize = normalizeSymbolSize(data.getItemVisual(idx, 'symbolSize'));\n      var symbolPath = symbolUtil.createSymbol(symbolType, -1, -1, 2, 2, color);\n      symbolPath.attr({\n        style: {\n          strokeNoScale: true\n        },\n        z2: 100,\n        scale: [symbolSize[0] / 2, symbolSize[1] / 2]\n      });\n      return symbolPath;\n    }\n\n    function updateSymbols(oldPoints, newPoints, symbolGroup, data, idx, isInit) {\n      // Simply rerender all\n      symbolGroup.removeAll();\n\n      for (var i = 0; i < newPoints.length - 1; i++) {\n        var symbolPath = createSymbol(data, idx);\n\n        if (symbolPath) {\n          symbolPath.__dimIdx = i;\n\n          if (oldPoints[i]) {\n            symbolPath.attr('position', oldPoints[i]);\n            graphic[isInit ? 'initProps' : 'updateProps'](symbolPath, {\n              position: newPoints[i]\n            }, seriesModel, idx);\n          } else {\n            symbolPath.attr('position', newPoints[i]);\n          }\n\n          symbolGroup.add(symbolPath);\n        }\n      }\n    }\n\n    function getInitialPoints(points) {\n      return zrUtil.map(points, function (pt) {\n        return [polar.cx, polar.cy];\n      });\n    }\n\n    data.diff(oldData).add(function (idx) {\n      var points = data.getItemLayout(idx);\n\n      if (!points) {\n        return;\n      }\n\n      var polygon = new graphic.Polygon();\n      var polyline = new graphic.Polyline();\n      var target = {\n        shape: {\n          points: points\n        }\n      };\n      polygon.shape.points = getInitialPoints(points);\n      polyline.shape.points = getInitialPoints(points);\n      graphic.initProps(polygon, target, seriesModel, idx);\n      graphic.initProps(polyline, target, seriesModel, idx);\n      var itemGroup = new graphic.Group();\n      var symbolGroup = new graphic.Group();\n      itemGroup.add(polyline);\n      itemGroup.add(polygon);\n      itemGroup.add(symbolGroup);\n      updateSymbols(polyline.shape.points, points, symbolGroup, data, idx, true);\n      data.setItemGraphicEl(idx, itemGroup);\n    }).update(function (newIdx, oldIdx) {\n      var itemGroup = oldData.getItemGraphicEl(oldIdx);\n      var polyline = itemGroup.childAt(0);\n      var polygon = itemGroup.childAt(1);\n      var symbolGroup = itemGroup.childAt(2);\n      var target = {\n        shape: {\n          points: data.getItemLayout(newIdx)\n        }\n      };\n\n      if (!target.shape.points) {\n        return;\n      }\n\n      updateSymbols(polyline.shape.points, target.shape.points, symbolGroup, data, newIdx, false);\n      graphic.updateProps(polyline, target, seriesModel);\n      graphic.updateProps(polygon, target, seriesModel);\n      data.setItemGraphicEl(newIdx, itemGroup);\n    }).remove(function (idx) {\n      group.remove(oldData.getItemGraphicEl(idx));\n    }).execute();\n    data.eachItemGraphicEl(function (itemGroup, idx) {\n      var itemModel = data.getItemModel(idx);\n      var polyline = itemGroup.childAt(0);\n      var polygon = itemGroup.childAt(1);\n      var symbolGroup = itemGroup.childAt(2);\n      var color = data.getItemVisual(idx, 'color');\n      group.add(itemGroup);\n      polyline.useStyle(zrUtil.defaults(itemModel.getModel('lineStyle').getLineStyle(), {\n        fill: 'none',\n        stroke: color\n      }));\n      polyline.hoverStyle = itemModel.getModel('emphasis.lineStyle').getLineStyle();\n      var areaStyleModel = itemModel.getModel('areaStyle');\n      var hoverAreaStyleModel = itemModel.getModel('emphasis.areaStyle');\n      var polygonIgnore = areaStyleModel.isEmpty() && areaStyleModel.parentModel.isEmpty();\n      var hoverPolygonIgnore = hoverAreaStyleModel.isEmpty() && hoverAreaStyleModel.parentModel.isEmpty();\n      hoverPolygonIgnore = hoverPolygonIgnore && polygonIgnore;\n      polygon.ignore = polygonIgnore;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: color,\n        opacity: 0.7\n      }));\n      polygon.hoverStyle = hoverAreaStyleModel.getAreaStyle();\n      var itemStyle = itemModel.getModel('itemStyle').getItemStyle(['color']);\n      var itemHoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n      var labelModel = itemModel.getModel('label');\n      var labelHoverModel = itemModel.getModel('emphasis.label');\n      symbolGroup.eachChild(function (symbolPath) {\n        symbolPath.setStyle(itemStyle);\n        symbolPath.hoverStyle = zrUtil.clone(itemHoverStyle);\n        graphic.setLabelStyle(symbolPath.style, symbolPath.hoverStyle, labelModel, labelHoverModel, {\n          labelFetcher: data.hostModel,\n          labelDataIndex: idx,\n          labelDimIndex: symbolPath.__dimIdx,\n          defaultText: data.get(data.dimensions[symbolPath.__dimIdx], idx),\n          autoColor: color,\n          isRectText: true\n        });\n      });\n\n      function onEmphasis() {\n        polygon.attr('ignore', hoverPolygonIgnore);\n      }\n\n      function onNormal() {\n        polygon.attr('ignore', polygonIgnore);\n      }\n\n      itemGroup.off('mouseover').off('mouseout').off('normal').off('emphasis');\n      itemGroup.on('emphasis', onEmphasis).on('mouseover', onEmphasis).on('normal', onNormal).on('mouseout', onNormal);\n      graphic.setHoverStyle(itemGroup);\n    });\n    this._data = data;\n  },\n  remove: function () {\n    this.group.removeAll();\n    this._data = null;\n  },\n  dispose: function () {}\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar AxisView = require(\"./AxisView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitLine', 'splitArea'];\n\nvar _default = AxisView.extend({\n  type: 'radiusAxis',\n  axisPointerClass: 'PolarAxisPointer',\n  render: function (radiusAxisModel, ecModel) {\n    this.group.removeAll();\n\n    if (!radiusAxisModel.get('show')) {\n      return;\n    }\n\n    var radiusAxis = radiusAxisModel.axis;\n    var polar = radiusAxis.polar;\n    var angleAxis = polar.getAngleAxis();\n    var ticksCoords = radiusAxis.getTicksCoords();\n    var axisAngle = angleAxis.getExtent()[0];\n    var radiusExtent = radiusAxis.getExtent();\n    var layout = layoutAxis(polar, radiusAxisModel, axisAngle);\n    var axisBuilder = new AxisBuilder(radiusAxisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n    this.group.add(axisBuilder.getGroup());\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (radiusAxisModel.get(name + '.show') && !radiusAxis.scale.isBlank()) {\n        this['_' + name](radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords);\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _splitLine: function (radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords) {\n    var splitLineModel = radiusAxisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineCount = 0;\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var splitLines = [];\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Circle({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r: ticksCoords[i].coord\n        },\n        silent: true\n      }));\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitLines.length; i++) {\n      this.group.add(graphic.mergePath(splitLines[i], {\n        style: zrUtil.defaults({\n          stroke: lineColors[i % lineColors.length],\n          fill: null\n        }, lineStyleModel.getLineStyle()),\n        silent: true\n      }));\n    }\n  },\n\n  /**\n   * @private\n   */\n  _splitArea: function (radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords) {\n    if (!ticksCoords.length) {\n      return;\n    }\n\n    var splitAreaModel = radiusAxisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var lineCount = 0;\n    areaColors = areaColors instanceof Array ? areaColors : [areaColors];\n    var splitAreas = [];\n    var prevRadius = ticksCoords[0].coord;\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      var colorIndex = lineCount++ % areaColors.length;\n      splitAreas[colorIndex] = splitAreas[colorIndex] || [];\n      splitAreas[colorIndex].push(new graphic.Sector({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r0: prevRadius,\n          r: ticksCoords[i].coord,\n          startAngle: 0,\n          endAngle: Math.PI * 2\n        },\n        silent: true\n      }));\n      prevRadius = ticksCoords[i].coord;\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitAreas.length; i++) {\n      this.group.add(graphic.mergePath(splitAreas[i], {\n        style: zrUtil.defaults({\n          fill: areaColors[i % areaColors.length]\n        }, areaStyleModel.getAreaStyle()),\n        silent: true\n      }));\n    }\n  }\n});\n/**\n * @inner\n */\n\n\nfunction layoutAxis(polar, radiusAxisModel, axisAngle) {\n  return {\n    position: [polar.cx, polar.cy],\n    rotation: axisAngle / 180 * Math.PI,\n    labelDirection: -1,\n    tickDirection: -1,\n    nameDirection: 1,\n    labelRotate: radiusAxisModel.getModel('axisLabel').get('rotate'),\n    // Over splitLine and splitArea\n    z2: 1\n  };\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar createListFromArray = require(\"./chart/helper/createListFromArray\");\n\nvar axisHelper = require(\"./coord/axisHelper\");\n\nvar axisModelCommonMixin = require(\"./coord/axisModelCommonMixin\");\n\nvar Model = require(\"./model/Model\");\n\nvar _layout = require(\"./util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\nexports.getLayoutRect = _layout.getLayoutRect;\n\nvar _dataStackHelper = require(\"./data/helper/dataStackHelper\");\n\nvar enableDataStack = _dataStackHelper.enableDataStack;\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\nvar getStackedDimension = _dataStackHelper.getStackedDimension;\n\nvar _completeDimensions = require(\"./data/helper/completeDimensions\");\n\nexports.completeDimensions = _completeDimensions;\n\nvar _createDimensions = require(\"./data/helper/createDimensions\");\n\nexports.createDimensions = _createDimensions;\n\nvar _symbol = require(\"./util/symbol\");\n\nexports.createSymbol = _symbol.createSymbol;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// import createGraphFromNodeEdge from './chart/helper/createGraphFromNodeEdge';\n\n/**\n * Create a muti dimension List structure from seriesModel.\n * @param  {module:echarts/model/Model} seriesModel\n * @return {module:echarts/data/List} list\n */\nfunction createList(seriesModel) {\n  return createListFromArray(seriesModel.getSource(), seriesModel);\n} // export function createGraph(seriesModel) {\n//     var nodes = seriesModel.get('data');\n//     var links = seriesModel.get('links');\n//     return createGraphFromNodeEdge(nodes, links, seriesModel);\n// }\n\n\nvar dataStack = {\n  isDimensionStacked: isDimensionStacked,\n  enableDataStack: enableDataStack,\n  getStackedDimension: getStackedDimension\n};\n/**\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n * @see http://echarts.baidu.com/option.html#series-scatter.symbol\n * @param {string} symbolDesc\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {string} color\n */\n\n/**\n * Create scale\n * @param {Array.<number>} dataExtent\n * @param {Object|module:echarts/Model} option\n */\nfunction createScale(dataExtent, option) {\n  var axisModel = option;\n\n  if (!Model.isInstance(option)) {\n    axisModel = new Model(option);\n    zrUtil.mixin(axisModel, axisModelCommonMixin);\n  }\n\n  var scale = axisHelper.createScaleByModel(axisModel);\n  scale.setExtent(dataExtent[0], dataExtent[1]);\n  axisHelper.niceScaleExtent(scale, axisModel);\n  return scale;\n}\n/**\n * Mixin common methods to axis model,\n *\n * Inlcude methods\n * `getFormattedLabels() => Array.<string>`\n * `getCategories() => Array.<string>`\n * `getMin(origin: boolean) => number`\n * `getMax(origin: boolean) => number`\n * `getNeedCrossZero() => boolean`\n * `setRange(start: number, end: number)`\n * `resetRange()`\n */\n\n\nfunction mixinAxisModelCommonMethods(Model) {\n  zrUtil.mixin(Model, axisModelCommonMixin);\n}\n\nexports.createList = createList;\nexports.dataStack = dataStack;\nexports.createScale = createScale;\nexports.mixinAxisModelCommonMethods = mixinAxisModelCommonMethods;","var echarts = require(\"../echarts\");\n\nrequire(\"./scatter/ScatterSeries\");\n\nrequire(\"./scatter/ScatterView\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar layoutPoints = require(\"../layout/points\");\n\nrequire(\"../component/gridSimple\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// import * as zrUtil from 'zrender/src/core/util';\n// In case developer forget to include grid component\necharts.registerVisual(visualSymbol('scatter', 'circle'));\necharts.registerLayout(layoutPoints('scatter')); // echarts.registerProcessor(function (ecModel, api) {\n//     ecModel.eachSeriesByType('scatter', function (seriesModel) {\n//         var data = seriesModel.getData();\n//         var coordSys = seriesModel.coordinateSystem;\n//         if (coordSys.type !== 'geo') {\n//             return;\n//         }\n//         var startPt = coordSys.pointToData([0, 0]);\n//         var endPt = coordSys.pointToData([api.getWidth(), api.getHeight()]);\n//         var dims = zrUtil.map(coordSys.dimensions, function (dim) {\n//             return data.mapDimension(dim);\n//         });\n//         var range = {};\n//         range[dims[0]] = [Math.min(startPt[0], endPt[0]), Math.max(startPt[0], endPt[0])];\n//         range[dims[1]] = [Math.min(startPt[1], endPt[1]), Math.max(startPt[1], endPt[1])];\n//         data.selectRange(range);\n//     });\n// });","/**\n * 3x2矩阵操作类\n * @exports zrender/tool/matrix\n */\nvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * Create a identity matrix.\n * @return {Float32Array|Array.<number>}\n */\n\nfunction create() {\n  var out = new ArrayCtor(6);\n  identity(out);\n  return out;\n}\n/**\n * 设置矩阵为单位矩阵\n * @param {Float32Array|Array.<number>} out\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * 复制矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m\n */\n\n\nfunction copy(out, m) {\n  out[0] = m[0];\n  out[1] = m[1];\n  out[2] = m[2];\n  out[3] = m[3];\n  out[4] = m[4];\n  out[5] = m[5];\n  return out;\n}\n/**\n * 矩阵相乘\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m1\n * @param {Float32Array|Array.<number>} m2\n */\n\n\nfunction mul(out, m1, m2) {\n  // Consider matrix.mul(m, m2, m);\n  // where out is the same as m2.\n  // So use temp variable to escape error.\n  var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n  var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n  var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n  var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n  var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n  var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = out3;\n  out[4] = out4;\n  out[5] = out5;\n  return out;\n}\n/**\n * 平移变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction translate(out, a, v) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4] + v[0];\n  out[5] = a[5] + v[1];\n  return out;\n}\n/**\n * 旋转变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {number} rad\n */\n\n\nfunction rotate(out, a, rad) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var st = Math.sin(rad);\n  var ct = Math.cos(rad);\n  out[0] = aa * ct + ab * st;\n  out[1] = -aa * st + ab * ct;\n  out[2] = ac * ct + ad * st;\n  out[3] = -ac * st + ct * ad;\n  out[4] = ct * atx + st * aty;\n  out[5] = ct * aty - st * atx;\n  return out;\n}\n/**\n * 缩放变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction scale(out, a, v) {\n  var vx = v[0];\n  var vy = v[1];\n  out[0] = a[0] * vx;\n  out[1] = a[1] * vy;\n  out[2] = a[2] * vx;\n  out[3] = a[3] * vy;\n  out[4] = a[4] * vx;\n  out[5] = a[5] * vy;\n  return out;\n}\n/**\n * 求逆矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n */\n\n\nfunction invert(out, a) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n/**\n * Clone a new matrix.\n * @param {Float32Array|Array.<number>} a\n */\n\n\nfunction clone(a) {\n  var b = create();\n  copy(b, a);\n  return b;\n}\n\nexports.create = create;\nexports.identity = identity;\nexports.copy = copy;\nexports.mul = mul;\nexports.translate = translate;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.invert = invert;\nexports.clone = clone;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Scale = require(\"./Scale\");\n\nvar OrdinalMeta = require(\"../data/OrdinalMeta\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n// FIXME only one data\nvar scaleProto = Scale.prototype;\nvar OrdinalScale = Scale.extend({\n  type: 'ordinal',\n\n  /**\n   * @param {module:echarts/data/OrdianlMeta|Array.<string>} ordinalMeta\n   */\n  init: function (ordinalMeta, extent) {\n    // Caution: Should not use instanceof, consider ec-extensions using\n    // import approach to get OrdinalMeta class.\n    if (!ordinalMeta || zrUtil.isArray(ordinalMeta)) {\n      ordinalMeta = new OrdinalMeta({\n        categories: ordinalMeta\n      });\n    }\n\n    this._ordinalMeta = ordinalMeta;\n    this._extent = extent || [0, ordinalMeta.categories.length - 1];\n  },\n  parse: function (val) {\n    return typeof val === 'string' ? this._ordinalMeta.getOrdinal(val) // val might be float.\n    : Math.round(val);\n  },\n  contain: function (rank) {\n    rank = this.parse(rank);\n    return scaleProto.contain.call(this, rank) && this._ordinalMeta.categories[rank] != null;\n  },\n\n  /**\n   * Normalize given rank or name to linear [0, 1]\n   * @param {number|string} [val]\n   * @return {number}\n   */\n  normalize: function (val) {\n    return scaleProto.normalize.call(this, this.parse(val));\n  },\n  scale: function (val) {\n    return Math.round(scaleProto.scale.call(this, val));\n  },\n\n  /**\n   * @return {Array}\n   */\n  getTicks: function () {\n    var ticks = [];\n    var extent = this._extent;\n    var rank = extent[0];\n\n    while (rank <= extent[1]) {\n      ticks.push(rank);\n      rank++;\n    }\n\n    return ticks;\n  },\n\n  /**\n   * Get item on rank n\n   * @param {number} n\n   * @return {string}\n   */\n  getLabel: function (n) {\n    if (!this.isBlank()) {\n      // Note that if no data, ordinalMeta.categories is an empty array.\n      return this._ordinalMeta.categories[n];\n    }\n  },\n\n  /**\n   * @return {number}\n   */\n  count: function () {\n    return this._extent[1] - this._extent[0] + 1;\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getApproximateExtent(dim));\n  },\n  getOrdinalMeta: function () {\n    return this._ordinalMeta;\n  },\n  niceTicks: zrUtil.noop,\n  niceExtent: zrUtil.noop\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nOrdinalScale.create = function () {\n  return new OrdinalScale();\n};\n\nvar _default = OrdinalScale;\nmodule.exports = _default;","var MarkerModel = require(\"./MarkerModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = MarkerModel.extend({\n  type: 'markLine',\n  defaultOption: {\n    zlevel: 0,\n    z: 5,\n    symbol: ['circle', 'arrow'],\n    symbolSize: [8, 16],\n    //symbolRotate: 0,\n    precision: 2,\n    tooltip: {\n      trigger: 'item'\n    },\n    label: {\n      show: true,\n      position: 'end'\n    },\n    lineStyle: {\n      type: 'dashed'\n    },\n    emphasis: {\n      label: {\n        show: true\n      },\n      lineStyle: {\n        width: 3\n      }\n    },\n    animationEasing: 'linear'\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar NORMAL_ITEM_STYLE_PATH = ['itemStyle'];\nvar EMPHASIS_ITEM_STYLE_PATH = ['emphasis', 'itemStyle'];\nvar SKIP_PROPS = ['color', 'color0', 'borderColor', 'borderColor0'];\nvar CandlestickView = ChartView.extend({\n  type: 'candlestick',\n  render: function (seriesModel, ecModel, api) {\n    this._updateDrawMode(seriesModel);\n\n    this._isLargeDraw ? this._renderLarge(seriesModel) : this._renderNormal(seriesModel);\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    this._clear();\n\n    this._updateDrawMode(seriesModel);\n  },\n  incrementalRender: function (params, seriesModel, ecModel, api) {\n    this._isLargeDraw ? this._incrementalRenderLarge(params, seriesModel) : this._incrementalRenderNormal(params, seriesModel);\n  },\n  _updateDrawMode: function (seriesModel) {\n    var isLargeDraw = seriesModel.pipelineContext.large;\n\n    if (this._isLargeDraw == null || isLargeDraw ^ this._isLargeDraw) {\n      this._isLargeDraw = isLargeDraw;\n\n      this._clear();\n    }\n  },\n  _renderNormal: function (seriesModel) {\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    var isSimpleBox = data.getLayout('isSimpleBox'); // There is no old data only when first rendering or switching from\n    // stream mode to normal mode, where previous elements should be removed.\n\n    if (!this._data) {\n      group.removeAll();\n    }\n\n    data.diff(oldData).add(function (newIdx) {\n      if (data.hasValue(newIdx)) {\n        var el;\n        var itemLayout = data.getItemLayout(newIdx);\n        el = createNormalBox(itemLayout, newIdx, true);\n        graphic.initProps(el, {\n          shape: {\n            points: itemLayout.ends\n          }\n        }, seriesModel, newIdx);\n        setBoxCommon(el, data, newIdx, isSimpleBox);\n        group.add(el);\n        data.setItemGraphicEl(newIdx, el);\n      }\n    }).update(function (newIdx, oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx); // Empty data\n\n      if (!data.hasValue(newIdx)) {\n        group.remove(el);\n        return;\n      }\n\n      var itemLayout = data.getItemLayout(newIdx);\n\n      if (!el) {\n        el = createNormalBox(itemLayout, newIdx);\n      } else {\n        graphic.updateProps(el, {\n          shape: {\n            points: itemLayout.ends\n          }\n        }, seriesModel, newIdx);\n      }\n\n      setBoxCommon(el, data, newIdx, isSimpleBox);\n      group.add(el);\n      data.setItemGraphicEl(newIdx, el);\n    }).remove(function (oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      el && group.remove(el);\n    }).execute();\n    this._data = data;\n  },\n  _renderLarge: function (seriesModel) {\n    this._clear();\n\n    createLarge(seriesModel, this.group);\n  },\n  _incrementalRenderNormal: function (params, seriesModel) {\n    var data = seriesModel.getData();\n    var isSimpleBox = data.getLayout('isSimpleBox');\n    var dataIndex;\n\n    while ((dataIndex = params.next()) != null) {\n      var el;\n      var itemLayout = data.getItemLayout(dataIndex);\n      el = createNormalBox(itemLayout, dataIndex);\n      setBoxCommon(el, data, dataIndex, isSimpleBox);\n      el.incremental = true;\n      this.group.add(el);\n    }\n  },\n  _incrementalRenderLarge: function (params, seriesModel) {\n    createLarge(seriesModel, this.group, true);\n  },\n  remove: function (ecModel) {\n    this._clear();\n  },\n  _clear: function () {\n    this.group.removeAll();\n    this._data = null;\n  },\n  dispose: zrUtil.noop\n});\nvar NormalBoxPath = Path.extend({\n  type: 'normalCandlestickBox',\n  shape: {},\n  buildPath: function (ctx, shape) {\n    var ends = shape.points;\n\n    if (this.__simpleBox) {\n      ctx.moveTo(ends[4][0], ends[4][1]);\n      ctx.lineTo(ends[6][0], ends[6][1]);\n    } else {\n      ctx.moveTo(ends[0][0], ends[0][1]);\n      ctx.lineTo(ends[1][0], ends[1][1]);\n      ctx.lineTo(ends[2][0], ends[2][1]);\n      ctx.lineTo(ends[3][0], ends[3][1]);\n      ctx.closePath();\n      ctx.moveTo(ends[4][0], ends[4][1]);\n      ctx.lineTo(ends[5][0], ends[5][1]);\n      ctx.moveTo(ends[6][0], ends[6][1]);\n      ctx.lineTo(ends[7][0], ends[7][1]);\n    }\n  }\n});\n\nfunction createNormalBox(itemLayout, dataIndex, isInit) {\n  var ends = itemLayout.ends;\n  return new NormalBoxPath({\n    shape: {\n      points: isInit ? transInit(ends, itemLayout) : ends\n    },\n    z2: 100\n  });\n}\n\nfunction setBoxCommon(el, data, dataIndex, isSimpleBox) {\n  var itemModel = data.getItemModel(dataIndex);\n  var normalItemStyleModel = itemModel.getModel(NORMAL_ITEM_STYLE_PATH);\n  var color = data.getItemVisual(dataIndex, 'color');\n  var borderColor = data.getItemVisual(dataIndex, 'borderColor') || color; // Color must be excluded.\n  // Because symbol provide setColor individually to set fill and stroke\n\n  var itemStyle = normalItemStyleModel.getItemStyle(SKIP_PROPS);\n  el.useStyle(itemStyle);\n  el.style.strokeNoScale = true;\n  el.style.fill = color;\n  el.style.stroke = borderColor;\n  el.__simpleBox = isSimpleBox;\n  var hoverStyle = itemModel.getModel(EMPHASIS_ITEM_STYLE_PATH).getItemStyle();\n  graphic.setHoverStyle(el, hoverStyle);\n}\n\nfunction transInit(points, itemLayout) {\n  return zrUtil.map(points, function (point) {\n    point = point.slice();\n    point[1] = itemLayout.initBaseline;\n    return point;\n  });\n}\n\nvar LargeBoxPath = Path.extend({\n  type: 'largeCandlestickBox',\n  shape: {},\n  buildPath: function (ctx, shape) {\n    // Drawing lines is more efficient than drawing\n    // a whole line or drawing rects.\n    var points = shape.points;\n\n    for (var i = 0; i < points.length;) {\n      if (this.__sign === points[i++]) {\n        var x = points[i++];\n        ctx.moveTo(x, points[i++]);\n        ctx.lineTo(x, points[i++]);\n      } else {\n        i += 3;\n      }\n    }\n  }\n});\n\nfunction createLarge(seriesModel, group, incremental) {\n  var data = seriesModel.getData();\n  var largePoints = data.getLayout('largePoints');\n  var elP = new LargeBoxPath({\n    shape: {\n      points: largePoints\n    },\n    __sign: 1\n  });\n  group.add(elP);\n  var elN = new LargeBoxPath({\n    shape: {\n      points: largePoints\n    },\n    __sign: -1\n  });\n  group.add(elN);\n  setLargeStyle(1, elP, seriesModel, data);\n  setLargeStyle(-1, elN, seriesModel, data);\n\n  if (incremental) {\n    elP.incremental = true;\n    elN.incremental = true;\n  }\n}\n\nfunction setLargeStyle(sign, el, seriesModel, data) {\n  var suffix = sign > 0 ? 'P' : 'N';\n  var borderColor = data.getVisual('borderColor' + suffix) || data.getVisual('color' + suffix); // Color must be excluded.\n  // Because symbol provide setColor individually to set fill and stroke\n\n  var itemStyle = seriesModel.getModel(NORMAL_ITEM_STYLE_PATH).getItemStyle(SKIP_PROPS);\n  el.useStyle(itemStyle);\n  el.style.fill = null;\n  el.style.stroke = borderColor; // No different\n  // el.style.lineWidth = .5;\n}\n\nvar _default = CandlestickView;\nmodule.exports = _default;","var zrUtil = require(\"../core/util\");\n\nvar Style = require(\"./Style\");\n\nvar Element = require(\"../Element\");\n\nvar RectText = require(\"./mixin/RectText\");\n\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n/**\n * @alias module:zrender/graphic/Displayable\n * @extends module:zrender/Element\n * @extends module:zrender/graphic/mixin/RectText\n */\nfunction Displayable(opts) {\n  opts = opts || {};\n  Element.call(this, opts); // Extend properties\n\n  for (var name in opts) {\n    if (opts.hasOwnProperty(name) && name !== 'style') {\n      this[name] = opts[name];\n    }\n  }\n  /**\n   * @type {module:zrender/graphic/Style}\n   */\n\n\n  this.style = new Style(opts.style, this);\n  this._rect = null; // Shapes for cascade clipping.\n\n  this.__clipPaths = []; // FIXME Stateful must be mixined after style is setted\n  // Stateful.call(this, opts);\n}\n\nDisplayable.prototype = {\n  constructor: Displayable,\n  type: 'displayable',\n\n  /**\n   * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n   * Dirty flag. From which painter will determine if this displayable object needs brush\n   * @name module:zrender/graphic/Displayable#__dirty\n   * @type {boolean}\n   */\n  __dirty: true,\n\n  /**\n   * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n   * If ignore drawing of the displayable object. Mouse event will still be triggered\n   * @name module:/zrender/graphic/Displayable#invisible\n   * @type {boolean}\n   * @default false\n   */\n  invisible: false,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z: 0,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z2: 0,\n\n  /**\n   * z层level，决定绘画在哪层canvas中\n   * @name module:/zrender/graphic/Displayable#zlevel\n   * @type {number}\n   * @default 0\n   */\n  zlevel: 0,\n\n  /**\n   * 是否可拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  draggable: false,\n\n  /**\n   * 是否正在拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  dragging: false,\n\n  /**\n   * 是否相应鼠标事件\n   * @name module:/zrender/graphic/Displayable#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * If enable culling\n   * @type {boolean}\n   * @default false\n   */\n  culling: false,\n\n  /**\n   * Mouse cursor when hovered\n   * @name module:/zrender/graphic/Displayable#cursor\n   * @type {string}\n   */\n  cursor: 'pointer',\n\n  /**\n   * If hover area is bounding rect\n   * @name module:/zrender/graphic/Displayable#rectHover\n   * @type {string}\n   */\n  rectHover: false,\n\n  /**\n   * Render the element progressively when the value >= 0,\n   * usefull for large data.\n   * @type {boolean}\n   */\n  progressive: false,\n\n  /**\n   * @type {boolean}\n   */\n  incremental: false,\n  // inplace is used with incremental\n  inplace: false,\n  beforeBrush: function (ctx) {},\n  afterBrush: function (ctx) {},\n\n  /**\n   * 图形绘制方法\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  // Interface\n  brush: function (ctx, prevEl) {},\n\n  /**\n   * 获取最小包围盒\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // Interface\n  getBoundingRect: function () {},\n\n  /**\n   * 判断坐标 x, y 是否在图形上\n   * If displayable element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  contain: function (x, y) {\n    return this.rectContain(x, y);\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    cb.call(context, this);\n  },\n\n  /**\n   * 判断坐标 x, y 是否在图形的包围盒上\n   * If bounding rect of element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  rectContain: function (x, y) {\n    var coord = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    return rect.contain(coord[0], coord[1]);\n  },\n\n  /**\n   * 标记图形元素为脏，并且在下一帧重绘\n   * Mark displayable element dirty and refresh next frame\n   */\n  dirty: function () {\n    this.__dirty = true;\n    this._rect = null;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * 图形是否会触发事件\n   * If displayable object binded any event\n   * @return {boolean}\n   */\n  // TODO, 通过 bind 绑定的事件\n  // isSilent: function () {\n  //     return !(\n  //         this.hoverable || this.draggable\n  //         || this.onmousemove || this.onmouseover || this.onmouseout\n  //         || this.onmousedown || this.onmouseup || this.onclick\n  //         || this.ondragenter || this.ondragover || this.ondragleave\n  //         || this.ondrop\n  //     );\n  // },\n\n  /**\n   * Alias for animate('style')\n   * @param {boolean} loop\n   */\n  animateStyle: function (loop) {\n    return this.animate('style', loop);\n  },\n  attrKV: function (key, value) {\n    if (key !== 'style') {\n      Element.prototype.attrKV.call(this, key, value);\n    } else {\n      this.style.set(value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setStyle: function (key, value) {\n    this.style.set(key, value);\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * Use given style object\n   * @param  {Object} obj\n   */\n  useStyle: function (obj) {\n    this.style = new Style(obj, this);\n    this.dirty(false);\n    return this;\n  }\n};\nzrUtil.inherits(Displayable, Element);\nzrUtil.mixin(Displayable, RectText); // zrUtil.mixin(Displayable, Stateful);\n\nvar _default = Displayable;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar ChartView = require(\"../../view/Chart\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/model/Series} seriesModel\n * @param {boolean} hasAnimation\n * @inner\n */\nfunction updateDataSelected(uid, seriesModel, hasAnimation, api) {\n  var data = seriesModel.getData();\n  var dataIndex = this.dataIndex;\n  var name = data.getName(dataIndex);\n  var selectedOffset = seriesModel.get('selectedOffset');\n  api.dispatchAction({\n    type: 'pieToggleSelect',\n    from: uid,\n    name: name,\n    seriesId: seriesModel.id\n  });\n  data.each(function (idx) {\n    toggleItemSelected(data.getItemGraphicEl(idx), data.getItemLayout(idx), seriesModel.isSelected(data.getName(idx)), selectedOffset, hasAnimation);\n  });\n}\n/**\n * @param {module:zrender/graphic/Sector} el\n * @param {Object} layout\n * @param {boolean} isSelected\n * @param {number} selectedOffset\n * @param {boolean} hasAnimation\n * @inner\n */\n\n\nfunction toggleItemSelected(el, layout, isSelected, selectedOffset, hasAnimation) {\n  var midAngle = (layout.startAngle + layout.endAngle) / 2;\n  var dx = Math.cos(midAngle);\n  var dy = Math.sin(midAngle);\n  var offset = isSelected ? selectedOffset : 0;\n  var position = [dx * offset, dy * offset];\n  hasAnimation // animateTo will stop revious animation like update transition\n  ? el.animate().when(200, {\n    position: position\n  }).start('bounceOut') : el.attr('position', position);\n}\n/**\n * Piece of pie including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction PiePiece(data, idx) {\n  graphic.Group.call(this);\n  var sector = new graphic.Sector({\n    z2: 2\n  });\n  var polyline = new graphic.Polyline();\n  var text = new graphic.Text();\n  this.add(sector);\n  this.add(polyline);\n  this.add(text);\n  this.updateData(data, idx, true); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    polyline.ignore = polyline.hoverIgnore;\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    polyline.ignore = polyline.normalIgnore;\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar piePieceProto = PiePiece.prototype;\n\npiePieceProto.updateData = function (data, idx, firstCreate) {\n  var sector = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var sectorShape = zrUtil.extend({}, layout);\n  sectorShape.label = null;\n\n  if (firstCreate) {\n    sector.setShape(sectorShape);\n    var animationType = seriesModel.getShallow('animationType');\n\n    if (animationType === 'scale') {\n      sector.shape.r = layout.r0;\n      graphic.initProps(sector, {\n        shape: {\n          r: layout.r\n        }\n      }, seriesModel, idx);\n    } // Expansion\n    else {\n        sector.shape.endAngle = layout.startAngle;\n        graphic.updateProps(sector, {\n          shape: {\n            endAngle: layout.endAngle\n          }\n        }, seriesModel, idx);\n      }\n  } else {\n    graphic.updateProps(sector, {\n      shape: sectorShape\n    }, seriesModel, idx);\n  } // Update common style\n\n\n  var visualColor = data.getItemVisual(idx, 'color');\n  sector.useStyle(zrUtil.defaults({\n    lineJoin: 'bevel',\n    fill: visualColor\n  }, itemModel.getModel('itemStyle').getItemStyle()));\n  sector.hoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && sector.attr('cursor', cursorStyle); // Toggle selected\n\n  toggleItemSelected(this, data.getItemLayout(idx), seriesModel.isSelected(null, idx), seriesModel.get('selectedOffset'), seriesModel.get('animation'));\n\n  function onEmphasis() {\n    // Sector may has animation of updating data. Force to move to the last frame\n    // Or it may stopped on the wrong shape\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r + seriesModel.get('hoverOffset')\n      }\n    }, 300, 'elasticOut');\n  }\n\n  function onNormal() {\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r\n      }\n    }, 300, 'elasticOut');\n  }\n\n  sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n\n  if (itemModel.get('hoverAnimation') && seriesModel.isAnimationEnabled()) {\n    sector.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n\n  this._updateLabel(data, idx);\n\n  graphic.setHoverStyle(this);\n};\n\npiePieceProto._updateLabel = function (data, idx) {\n  var labelLine = this.childAt(1);\n  var labelText = this.childAt(2);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var labelLayout = layout.label;\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.updateProps(labelLine, {\n    shape: {\n      points: labelLayout.linePoints || [[labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y]]\n    }\n  }, seriesModel, idx);\n  graphic.updateProps(labelText, {\n    style: {\n      x: labelLayout.x,\n      y: labelLayout.y\n    }\n  }, seriesModel, idx);\n  labelText.attr({\n    rotation: labelLayout.rotation,\n    origin: [labelLayout.x, labelLayout.y],\n    z2: 10\n  });\n  var labelModel = itemModel.getModel('label');\n  var labelHoverModel = itemModel.getModel('emphasis.label');\n  var labelLineModel = itemModel.getModel('labelLine');\n  var labelLineHoverModel = itemModel.getModel('emphasis.labelLine');\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.setLabelStyle(labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel, {\n    labelFetcher: data.hostModel,\n    labelDataIndex: idx,\n    defaultText: data.getName(idx),\n    autoColor: visualColor,\n    useInsideStyle: !!labelLayout.inside\n  }, {\n    textAlign: labelLayout.textAlign,\n    textVerticalAlign: labelLayout.verticalAlign,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n  labelText.hoverIgnore = !labelHoverModel.get('show');\n  labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n  labelLine.hoverIgnore = !labelLineHoverModel.get('show'); // Default use item visual color\n\n  labelLine.setStyle({\n    stroke: visualColor,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n  labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n  var smooth = labelLineModel.get('smooth');\n\n  if (smooth && smooth === true) {\n    smooth = 0.4;\n  }\n\n  labelLine.setShape({\n    smooth: smooth\n  });\n};\n\nzrUtil.inherits(PiePiece, graphic.Group); // Pie view\n\nvar PieView = ChartView.extend({\n  type: 'pie',\n  init: function () {\n    var sectorGroup = new graphic.Group();\n    this._sectorGroup = sectorGroup;\n  },\n  render: function (seriesModel, ecModel, api, payload) {\n    if (payload && payload.from === this.uid) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    var hasAnimation = ecModel.get('animation');\n    var isFirstRender = !oldData;\n    var animationType = seriesModel.get('animationType');\n    var onSectorClick = zrUtil.curry(updateDataSelected, this.uid, seriesModel, hasAnimation, api);\n    var selectedMode = seriesModel.get('selectedMode');\n    data.diff(oldData).add(function (idx) {\n      var piePiece = new PiePiece(data, idx); // Default expansion animation\n\n      if (isFirstRender && animationType !== 'scale') {\n        piePiece.eachChild(function (child) {\n          child.stopAnimation(true);\n        });\n      }\n\n      selectedMode && piePiece.on('click', onSectorClick);\n      data.setItemGraphicEl(idx, piePiece);\n      group.add(piePiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n      piePiece.updateData(data, newIdx);\n      piePiece.off('click');\n      selectedMode && piePiece.on('click', onSectorClick);\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      group.remove(piePiece);\n    }).execute();\n\n    if (hasAnimation && isFirstRender && data.count() > 0 // Default expansion animation\n    && animationType !== 'scale') {\n      var shape = data.getItemLayout(0);\n      var r = Math.max(api.getWidth(), api.getHeight()) / 2;\n      var removeClipPath = zrUtil.bind(group.removeClipPath, group);\n      group.setClipPath(this._createClipPath(shape.cx, shape.cy, r, shape.startAngle, shape.clockwise, removeClipPath, seriesModel));\n    }\n\n    this._data = data;\n  },\n  dispose: function () {},\n  _createClipPath: function (cx, cy, r, startAngle, clockwise, cb, seriesModel) {\n    var clipPath = new graphic.Sector({\n      shape: {\n        cx: cx,\n        cy: cy,\n        r0: 0,\n        r: r,\n        startAngle: startAngle,\n        endAngle: startAngle,\n        clockwise: clockwise\n      }\n    });\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: startAngle + (clockwise ? 1 : -1) * Math.PI * 2\n      }\n    }, seriesModel, cb);\n    return clipPath;\n  },\n\n  /**\n   * @implement\n   */\n  containPoint: function (point, seriesModel) {\n    var data = seriesModel.getData();\n    var itemLayout = data.getItemLayout(0);\n\n    if (itemLayout) {\n      var dx = point[0] - itemLayout.cx;\n      var dy = point[1] - itemLayout.cy;\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\n    }\n  }\n});\nvar _default = PieView;\nmodule.exports = _default;","/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\nvar arrySlice = Array.prototype.slice;\n/**\n * 事件分发器\n * @alias module:zrender/mixin/Eventful\n * @constructor\n */\n\nvar Eventful = function () {\n  this._$handlers = {};\n};\n\nEventful.prototype = {\n  constructor: Eventful,\n\n  /**\n   * 单次触发绑定，trigger后销毁\n   *\n   * @param {string} event 事件名\n   * @param {Function} handler 响应函数\n   * @param {Object} context\n   */\n  one: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: true,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 绑定事件\n   * @param {string} event 事件名\n   * @param {Function} handler 事件处理函数\n   * @param {Object} [context]\n   */\n  on: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: false,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 是否绑定了事件\n   * @param  {string}  event\n   * @return {boolean}\n   */\n  isSilent: function (event) {\n    var _h = this._$handlers;\n    return _h[event] && _h[event].length;\n  },\n\n  /**\n   * 解绑事件\n   * @param {string} event 事件名\n   * @param {Function} [handler] 事件处理函数\n   */\n  off: function (event, handler) {\n    var _h = this._$handlers;\n\n    if (!event) {\n      this._$handlers = {};\n      return this;\n    }\n\n    if (handler) {\n      if (_h[event]) {\n        var newList = [];\n\n        for (var i = 0, l = _h[event].length; i < l; i++) {\n          if (_h[event][i]['h'] != handler) {\n            newList.push(_h[event][i]);\n          }\n        }\n\n        _h[event] = newList;\n      }\n\n      if (_h[event] && _h[event].length === 0) {\n        delete _h[event];\n      }\n    } else {\n      delete _h[event];\n    }\n\n    return this;\n  },\n\n  /**\n   * 事件分发\n   *\n   * @param {string} type 事件类型\n   */\n  trigger: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 3) {\n        args = arrySlice.call(args, 1);\n      }\n\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(_h[i]['ctx']);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(_h[i]['ctx'], args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * 带有context的事件分发, 最后一个参数是事件回调的context\n   * @param {string} type 事件类型\n   */\n  triggerWithContext: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 4) {\n        args = arrySlice.call(args, 1, args.length - 1);\n      }\n\n      var ctx = args[args.length - 1];\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(ctx);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(ctx, args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(ctx, args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(ctx, args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  }\n}; // 对象可以通过 onxxxx 绑定事件\n\n/**\n * @event module:zrender/mixin/Eventful#onclick\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseout\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousemove\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousewheel\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousedown\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseup\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrag\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragstart\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragend\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragenter\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragleave\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrop\n * @type {Function}\n * @default null\n */\n\nvar _default = Eventful;\nmodule.exports = _default;","var vec2 = require(\"zrender/lib/core/vector\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction simpleLayout(seriesModel) {\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (coordSys && coordSys.type !== 'view') {\n    return;\n  }\n\n  var graph = seriesModel.getGraph();\n  graph.eachNode(function (node) {\n    var model = node.getModel();\n    node.setLayout([+model.get('x'), +model.get('y')]);\n  });\n  simpleLayoutEdge(graph);\n}\n\nfunction simpleLayoutEdge(graph) {\n  graph.eachEdge(function (edge) {\n    var curveness = edge.getModel().get('lineStyle.curveness') || 0;\n    var p1 = vec2.clone(edge.node1.getLayout());\n    var p2 = vec2.clone(edge.node2.getLayout());\n    var points = [p1, p2];\n\n    if (+curveness) {\n      points.push([(p1[0] + p2[0]) / 2 - (p1[1] - p2[1]) * curveness, (p1[1] + p2[1]) / 2 - (p2[0] - p1[0]) * curveness]);\n    }\n\n    edge.setLayout(points);\n  });\n}\n\nexports.simpleLayout = simpleLayout;\nexports.simpleLayoutEdge = simpleLayoutEdge;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Polar = require(\"./Polar\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _axisHelper = require(\"../../coord/axisHelper\");\n\nvar createScaleByModel = _axisHelper.createScaleByModel;\nvar niceScaleExtent = _axisHelper.niceScaleExtent;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar getStackedDimension = _dataStackHelper.getStackedDimension;\n\nrequire(\"./PolarModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO Axis scale\n\n/**\n * Resize method bound to the polar\n * @param {module:echarts/coord/polar/PolarModel} polarModel\n * @param {module:echarts/ExtensionAPI} api\n */\nfunction resizePolar(polar, polarModel, api) {\n  var center = polarModel.get('center');\n  var width = api.getWidth();\n  var height = api.getHeight();\n  polar.cx = parsePercent(center[0], width);\n  polar.cy = parsePercent(center[1], height);\n  var radiusAxis = polar.getRadiusAxis();\n  var size = Math.min(width, height) / 2;\n  var radius = parsePercent(polarModel.get('radius'), size);\n  radiusAxis.inverse ? radiusAxis.setExtent(radius, 0) : radiusAxis.setExtent(0, radius);\n}\n/**\n * Update polar\n */\n\n\nfunction updatePolarScale(ecModel, api) {\n  var polar = this;\n  var angleAxis = polar.getAngleAxis();\n  var radiusAxis = polar.getRadiusAxis(); // Reset scale\n\n  angleAxis.scale.setExtent(Infinity, -Infinity);\n  radiusAxis.scale.setExtent(Infinity, -Infinity);\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.coordinateSystem === polar) {\n      var data = seriesModel.getData();\n      zrUtil.each(data.mapDimension('radius', true), function (dim) {\n        radiusAxis.scale.unionExtentFromData(data, getStackedDimension(data, dim));\n      });\n      zrUtil.each(data.mapDimension('angle', true), function (dim) {\n        angleAxis.scale.unionExtentFromData(data, getStackedDimension(data, dim));\n      });\n    }\n  });\n  niceScaleExtent(angleAxis.scale, angleAxis.model);\n  niceScaleExtent(radiusAxis.scale, radiusAxis.model); // Fix extent of category angle axis\n\n  if (angleAxis.type === 'category' && !angleAxis.onBand) {\n    var extent = angleAxis.getExtent();\n    var diff = 360 / angleAxis.scale.count();\n    angleAxis.inverse ? extent[1] += diff : extent[1] -= diff;\n    angleAxis.setExtent(extent[0], extent[1]);\n  }\n}\n/**\n * Set common axis properties\n * @param {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n * @param {module:echarts/coord/polar/AxisModel}\n * @inner\n */\n\n\nfunction setAxis(axis, axisModel) {\n  axis.type = axisModel.get('type');\n  axis.scale = createScaleByModel(axisModel);\n  axis.onBand = axisModel.get('boundaryGap') && axis.type === 'category';\n  axis.inverse = axisModel.get('inverse');\n\n  if (axisModel.mainType === 'angleAxis') {\n    axis.inverse ^= axisModel.get('clockwise');\n    var startAngle = axisModel.get('startAngle');\n    axis.setExtent(startAngle, startAngle + (axis.inverse ? -360 : 360));\n  } // Inject axis instance\n\n\n  axisModel.axis = axis;\n  axis.model = axisModel;\n}\n\nvar polarCreator = {\n  dimensions: Polar.prototype.dimensions,\n  create: function (ecModel, api) {\n    var polarList = [];\n    ecModel.eachComponent('polar', function (polarModel, idx) {\n      var polar = new Polar(idx); // Inject resize and update method\n\n      polar.update = updatePolarScale;\n      var radiusAxis = polar.getRadiusAxis();\n      var angleAxis = polar.getAngleAxis();\n      var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n      var angleAxisModel = polarModel.findAxisModel('angleAxis');\n      setAxis(radiusAxis, radiusAxisModel);\n      setAxis(angleAxis, angleAxisModel);\n      resizePolar(polar, polarModel, api);\n      polarList.push(polar);\n      polarModel.coordinateSystem = polar;\n      polar.model = polarModel;\n    }); // Inject coordinateSystem to series\n\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.get('coordinateSystem') === 'polar') {\n        var polarModel = ecModel.queryComponents({\n          mainType: 'polar',\n          index: seriesModel.get('polarIndex'),\n          id: seriesModel.get('polarId')\n        })[0];\n        seriesModel.coordinateSystem = polarModel.coordinateSystem;\n      }\n    });\n    return polarList;\n  }\n};\nCoordinateSystem.register('polar', polarCreator);","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _dataStackHelper = require(\"../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction getSeriesStackId(seriesModel) {\n  return seriesModel.get('stack') || '__ec_stack_' + seriesModel.seriesIndex;\n}\n\nfunction getAxisKey(axis) {\n  return axis.dim;\n}\n/**\n * @param {string} seriesType\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction barLayoutPolar(seriesType, ecModel, api) {\n  var width = api.getWidth();\n  var height = api.getHeight();\n  var lastStackCoords = {};\n  var barWidthAndOffset = calRadialBar(zrUtil.filter(ecModel.getSeriesByType(seriesType), function (seriesModel) {\n    return !ecModel.isSeriesFiltered(seriesModel) && seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'polar';\n  }));\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    // Check series coordinate, do layout for polar only\n    if (seriesModel.coordinateSystem.type !== 'polar') {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var polar = seriesModel.coordinateSystem;\n    var baseAxis = polar.getBaseAxis();\n    var stackId = getSeriesStackId(seriesModel);\n    var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n    var columnOffset = columnLayoutInfo.offset;\n    var columnWidth = columnLayoutInfo.width;\n    var valueAxis = polar.getOtherAxis(baseAxis);\n    var center = seriesModel.get('center') || ['50%', '50%'];\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var barMinHeight = seriesModel.get('barMinHeight') || 0;\n    var barMinAngle = seriesModel.get('barMinAngle') || 0;\n    lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n    var valueDim = data.mapDimension(valueAxis.dim);\n    var baseDim = data.mapDimension(baseAxis.dim);\n    var stacked = isDimensionStacked(data, valueDim\n    /*, baseDim*/\n    );\n    var valueAxisStart = valueAxis.getExtent()[0];\n\n    for (var idx = 0, len = data.count(); idx < len; idx++) {\n      var value = data.get(valueDim, idx);\n      var baseValue = data.get(baseDim, idx);\n\n      if (isNaN(value)) {\n        continue;\n      }\n\n      var sign = value >= 0 ? 'p' : 'n';\n      var baseCoord = valueAxisStart; // Because of the barMinHeight, we can not use the value in\n      // stackResultDimension directly.\n      // Only ordinal axis can be stacked.\n\n      if (stacked) {\n        if (!lastStackCoords[stackId][baseValue]) {\n          lastStackCoords[stackId][baseValue] = {\n            p: valueAxisStart,\n            // Positive stack\n            n: valueAxisStart // Negative stack\n\n          };\n        } // Should also consider #4243\n\n\n        baseCoord = lastStackCoords[stackId][baseValue][sign];\n      }\n\n      var r0;\n      var r;\n      var startAngle;\n      var endAngle; // radial sector\n\n      if (valueAxis.dim === 'radius') {\n        var radiusSpan = valueAxis.dataToRadius(value) - valueAxisStart;\n        var angle = baseAxis.dataToAngle(baseValue);\n\n        if (Math.abs(radiusSpan) < barMinHeight) {\n          radiusSpan = (radiusSpan < 0 ? -1 : 1) * barMinHeight;\n        }\n\n        r0 = baseCoord;\n        r = baseCoord + radiusSpan;\n        startAngle = angle - columnOffset;\n        endAngle = startAngle - columnWidth;\n        stacked && (lastStackCoords[stackId][baseValue][sign] = r);\n      } // tangential sector\n      else {\n          // angleAxis must be clamped.\n          var angleSpan = valueAxis.dataToAngle(value, true) - valueAxisStart;\n          var radius = baseAxis.dataToRadius(baseValue);\n\n          if (Math.abs(angleSpan) < barMinAngle) {\n            angleSpan = (angleSpan < 0 ? -1 : 1) * barMinAngle;\n          }\n\n          r0 = radius + columnOffset;\n          r = r0 + columnWidth;\n          startAngle = baseCoord;\n          endAngle = baseCoord + angleSpan; // if the previous stack is at the end of the ring,\n          // add a round to differentiate it from origin\n          // var extent = angleAxis.getExtent();\n          // var stackCoord = angle;\n          // if (stackCoord === extent[0] && value > 0) {\n          //     stackCoord = extent[1];\n          // }\n          // else if (stackCoord === extent[1] && value < 0) {\n          //     stackCoord = extent[0];\n          // }\n\n          stacked && (lastStackCoords[stackId][baseValue][sign] = endAngle);\n        }\n\n      data.setItemLayout(idx, {\n        cx: cx,\n        cy: cy,\n        r0: r0,\n        r: r,\n        // Consider that positive angle is anti-clockwise,\n        // while positive radian of sector is clockwise\n        startAngle: -startAngle * Math.PI / 180,\n        endAngle: -endAngle * Math.PI / 180\n      });\n    }\n  }, this);\n}\n/**\n * Calculate bar width and offset for radial bar charts\n */\n\n\nfunction calRadialBar(barSeries, api) {\n  // Columns info on each category axis. Key is polar name\n  var columnsMap = {};\n  zrUtil.each(barSeries, function (seriesModel, idx) {\n    var data = seriesModel.getData();\n    var polar = seriesModel.coordinateSystem;\n    var baseAxis = polar.getBaseAxis();\n    var axisExtent = baseAxis.getExtent();\n    var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : Math.abs(axisExtent[1] - axisExtent[0]) / data.count();\n    var columnsOnAxis = columnsMap[getAxisKey(baseAxis)] || {\n      bandWidth: bandWidth,\n      remainedWidth: bandWidth,\n      autoWidthCount: 0,\n      categoryGap: '20%',\n      gap: '30%',\n      stacks: {}\n    };\n    var stacks = columnsOnAxis.stacks;\n    columnsMap[getAxisKey(baseAxis)] = columnsOnAxis;\n    var stackId = getSeriesStackId(seriesModel);\n\n    if (!stacks[stackId]) {\n      columnsOnAxis.autoWidthCount++;\n    }\n\n    stacks[stackId] = stacks[stackId] || {\n      width: 0,\n      maxWidth: 0\n    };\n    var barWidth = parsePercent(seriesModel.get('barWidth'), bandWidth);\n    var barMaxWidth = parsePercent(seriesModel.get('barMaxWidth'), bandWidth);\n    var barGap = seriesModel.get('barGap');\n    var barCategoryGap = seriesModel.get('barCategoryGap');\n\n    if (barWidth && !stacks[stackId].width) {\n      barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n      stacks[stackId].width = barWidth;\n      columnsOnAxis.remainedWidth -= barWidth;\n    }\n\n    barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n    barGap != null && (columnsOnAxis.gap = barGap);\n    barCategoryGap != null && (columnsOnAxis.categoryGap = barCategoryGap);\n  });\n  var result = {};\n  zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n    result[coordSysName] = {};\n    var stacks = columnsOnAxis.stacks;\n    var bandWidth = columnsOnAxis.bandWidth;\n    var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n    var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n    var remainedWidth = columnsOnAxis.remainedWidth;\n    var autoWidthCount = columnsOnAxis.autoWidthCount;\n    var autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0); // Find if any auto calculated bar exceeded maxBarWidth\n\n    zrUtil.each(stacks, function (column, stack) {\n      var maxWidth = column.maxWidth;\n\n      if (maxWidth && maxWidth < autoWidth) {\n        maxWidth = Math.min(maxWidth, remainedWidth);\n\n        if (column.width) {\n          maxWidth = Math.min(maxWidth, column.width);\n        }\n\n        remainedWidth -= maxWidth;\n        column.width = maxWidth;\n        autoWidthCount--;\n      }\n    }); // Recalculate width again\n\n    autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0);\n    var widthSum = 0;\n    var lastColumn;\n    zrUtil.each(stacks, function (column, idx) {\n      if (!column.width) {\n        column.width = autoWidth;\n      }\n\n      lastColumn = column;\n      widthSum += column.width * (1 + barGapPercent);\n    });\n\n    if (lastColumn) {\n      widthSum -= lastColumn.width * barGapPercent;\n    }\n\n    var offset = -widthSum / 2;\n    zrUtil.each(stacks, function (column, stackId) {\n      result[coordSysName][stackId] = result[coordSysName][stackId] || {\n        offset: offset,\n        width: column.width\n      };\n      offset += column.width * (1 + barGapPercent);\n    });\n  });\n  return result;\n}\n\nvar _default = barLayoutPolar;\nmodule.exports = _default;","var Path = require(\"zrender/lib/graphic/Path\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = Path.extend({\n  type: 'echartsGaugePointer',\n  shape: {\n    angle: 0,\n    width: 10,\n    r: 10,\n    x: 0,\n    y: 0\n  },\n  buildPath: function (ctx, shape) {\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var r = shape.r;\n    var width = shape.width;\n    var angle = shape.angle;\n    var x = shape.x - mathCos(angle) * width * (width >= r / 3 ? 1 : 2);\n    var y = shape.y - mathSin(angle) * width * (width >= r / 3 ? 1 : 2);\n    angle = shape.angle - Math.PI / 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(shape.x + mathCos(angle) * width, shape.y + mathSin(angle) * width);\n    ctx.lineTo(shape.x + mathCos(shape.angle) * r, shape.y + mathSin(shape.angle) * r);\n    ctx.lineTo(shape.x - mathCos(angle) * width, shape.y - mathSin(angle) * width);\n    ctx.lineTo(x, y);\n    return;\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar Model = require(\"../../model/Model\");\n\nvar selectableMixin = require(\"../../component/helper/selectableMixin\");\n\nvar geoCreator = require(\"./geoCreator\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar GeoModel = ComponentModel.extend({\n  type: 'geo',\n\n  /**\n   * @type {module:echarts/coord/geo/Geo}\n   */\n  coordinateSystem: null,\n  layoutMode: 'box',\n  init: function (option) {\n    ComponentModel.prototype.init.apply(this, arguments); // Default label emphasis `show`\n\n    modelUtil.defaultEmphasis(option, 'label', ['show']);\n  },\n  optionUpdated: function () {\n    var option = this.option;\n    var self = this;\n    option.regions = geoCreator.getFilledRegions(option.regions, option.map, option.nameMap);\n    this._optionModelMap = zrUtil.reduce(option.regions || [], function (optionModelMap, regionOpt) {\n      if (regionOpt.name) {\n        optionModelMap.set(regionOpt.name, new Model(regionOpt, self));\n      }\n\n      return optionModelMap;\n    }, zrUtil.createHashMap());\n    this.updateSelectedMap(option.regions);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    show: true,\n    left: 'center',\n    top: 'center',\n    // width:,\n    // height:,\n    // right\n    // bottom\n    // Aspect is width / height. Inited to be geoJson bbox aspect\n    // This parameter is used for scale this aspect\n    aspectScale: 0.75,\n    ///// Layout with center and size\n    // If you wan't to put map in a fixed size box with right aspect ratio\n    // This two properties may more conveninet\n    // layoutCenter: [50%, 50%]\n    // layoutSize: 100\n    silent: false,\n    // Map type\n    map: '',\n    // Define left-top, right-bottom coords to control view\n    // For example, [ [180, 90], [-180, -90] ]\n    boundingCoords: null,\n    // Default on center of map\n    center: null,\n    zoom: 1,\n    scaleLimit: null,\n    // selectedMode: false\n    label: {\n      show: false,\n      color: '#000'\n    },\n    itemStyle: {\n      // color: 各异,\n      borderWidth: 0.5,\n      borderColor: '#444',\n      color: '#eee'\n    },\n    emphasis: {\n      label: {\n        show: true,\n        color: 'rgb(100,0,0)'\n      },\n      itemStyle: {\n        color: 'rgba(255,215,0,0.8)'\n      }\n    },\n    regions: []\n  },\n\n  /**\n   * Get model of region\n   * @param  {string} name\n   * @return {module:echarts/model/Model}\n   */\n  getRegionModel: function (name) {\n    return this._optionModelMap.get(name) || new Model(null, this, this.ecModel);\n  },\n\n  /**\n   * Format label\n   * @param {string} name Region name\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\n   * @return {string}\n   */\n  getFormattedLabel: function (name, status) {\n    var regionModel = this.getRegionModel(name);\n    var formatter = regionModel.get('label.' + status + '.formatter');\n    var params = {\n      name: name\n    };\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      return formatter.replace('{a}', name != null ? name : '');\n    }\n  },\n  setZoom: function (zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function (center) {\n    this.option.center = center;\n  }\n});\nzrUtil.mixin(GeoModel, selectableMixin);\nvar _default = GeoModel;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./graph/GraphSeries\");\n\nrequire(\"./graph/GraphView\");\n\nrequire(\"./graph/graphAction\");\n\nvar categoryFilter = require(\"./graph/categoryFilter\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar categoryVisual = require(\"./graph/categoryVisual\");\n\nvar edgeVisual = require(\"./graph/edgeVisual\");\n\nvar simpleLayout = require(\"./graph/simpleLayout\");\n\nvar circularLayout = require(\"./graph/circularLayout\");\n\nvar forceLayout = require(\"./graph/forceLayout\");\n\nvar createView = require(\"./graph/createView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerProcessor(categoryFilter);\necharts.registerVisual(visualSymbol('graph', 'circle', null));\necharts.registerVisual(categoryVisual);\necharts.registerVisual(edgeVisual);\necharts.registerLayout(simpleLayout);\necharts.registerLayout(circularLayout);\necharts.registerLayout(forceLayout); // Graph view coordinate system\n\necharts.registerCoordinateSystem('graphView', {\n  create: createView\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar IndicatorAxis = require(\"./IndicatorAxis\");\n\nvar IntervalScale = require(\"../../scale/Interval\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar _axisHelper = require(\"../axisHelper\");\n\nvar getScaleExtent = _axisHelper.getScaleExtent;\nvar niceScaleExtent = _axisHelper.niceScaleExtent;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO clockwise\nfunction Radar(radarModel, ecModel, api) {\n  this._model = radarModel;\n  /**\n   * Radar dimensions\n   * @type {Array.<string>}\n   */\n\n  this.dimensions = [];\n  this._indicatorAxes = zrUtil.map(radarModel.getIndicatorModels(), function (indicatorModel, idx) {\n    var dim = 'indicator_' + idx;\n    var indicatorAxis = new IndicatorAxis(dim, new IntervalScale());\n    indicatorAxis.name = indicatorModel.get('name'); // Inject model and axis\n\n    indicatorAxis.model = indicatorModel;\n    indicatorModel.axis = indicatorAxis;\n    this.dimensions.push(dim);\n    return indicatorAxis;\n  }, this);\n  this.resize(radarModel, api);\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.cx;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.cy;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.r;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.startAngle;\n}\n\nRadar.prototype.getIndicatorAxes = function () {\n  return this._indicatorAxes;\n};\n\nRadar.prototype.dataToPoint = function (value, indicatorIndex) {\n  var indicatorAxis = this._indicatorAxes[indicatorIndex];\n  return this.coordToPoint(indicatorAxis.dataToCoord(value), indicatorIndex);\n};\n\nRadar.prototype.coordToPoint = function (coord, indicatorIndex) {\n  var indicatorAxis = this._indicatorAxes[indicatorIndex];\n  var angle = indicatorAxis.angle;\n  var x = this.cx + coord * Math.cos(angle);\n  var y = this.cy - coord * Math.sin(angle);\n  return [x, y];\n};\n\nRadar.prototype.pointToData = function (pt) {\n  var dx = pt[0] - this.cx;\n  var dy = pt[1] - this.cy;\n  var radius = Math.sqrt(dx * dx + dy * dy);\n  dx /= radius;\n  dy /= radius;\n  var radian = Math.atan2(-dy, dx); // Find the closest angle\n  // FIXME index can calculated directly\n\n  var minRadianDiff = Infinity;\n  var closestAxis;\n  var closestAxisIdx = -1;\n\n  for (var i = 0; i < this._indicatorAxes.length; i++) {\n    var indicatorAxis = this._indicatorAxes[i];\n    var diff = Math.abs(radian - indicatorAxis.angle);\n\n    if (diff < minRadianDiff) {\n      closestAxis = indicatorAxis;\n      closestAxisIdx = i;\n      minRadianDiff = diff;\n    }\n  }\n\n  return [closestAxisIdx, +(closestAxis && closestAxis.coodToData(radius))];\n};\n\nRadar.prototype.resize = function (radarModel, api) {\n  var center = radarModel.get('center');\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  var viewSize = Math.min(viewWidth, viewHeight) / 2;\n  this.cx = numberUtil.parsePercent(center[0], viewWidth);\n  this.cy = numberUtil.parsePercent(center[1], viewHeight);\n  this.startAngle = radarModel.get('startAngle') * Math.PI / 180;\n  this.r = numberUtil.parsePercent(radarModel.get('radius'), viewSize);\n  zrUtil.each(this._indicatorAxes, function (indicatorAxis, idx) {\n    indicatorAxis.setExtent(0, this.r);\n    var angle = this.startAngle + idx * Math.PI * 2 / this._indicatorAxes.length; // Normalize to [-PI, PI]\n\n    angle = Math.atan2(Math.sin(angle), Math.cos(angle));\n    indicatorAxis.angle = angle;\n  }, this);\n};\n\nRadar.prototype.update = function (ecModel, api) {\n  var indicatorAxes = this._indicatorAxes;\n  var radarModel = this._model;\n  zrUtil.each(indicatorAxes, function (indicatorAxis) {\n    indicatorAxis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeriesByType('radar', function (radarSeries, idx) {\n    if (radarSeries.get('coordinateSystem') !== 'radar' || ecModel.getComponent('radar', radarSeries.get('radarIndex')) !== radarModel) {\n      return;\n    }\n\n    var data = radarSeries.getData();\n    zrUtil.each(indicatorAxes, function (indicatorAxis) {\n      indicatorAxis.scale.unionExtentFromData(data, data.mapDimension(indicatorAxis.dim));\n    });\n  }, this);\n  var splitNumber = radarModel.get('splitNumber');\n\n  function increaseInterval(interval) {\n    var exp10 = Math.pow(10, Math.floor(Math.log(interval) / Math.LN10)); // Increase interval\n\n    var f = interval / exp10;\n\n    if (f === 2) {\n      f = 5;\n    } else {\n      // f is 2 or 5\n      f *= 2;\n    }\n\n    return f * exp10;\n  } // Force all the axis fixing the maxSplitNumber.\n\n\n  zrUtil.each(indicatorAxes, function (indicatorAxis, idx) {\n    var rawExtent = getScaleExtent(indicatorAxis.scale, indicatorAxis.model);\n    niceScaleExtent(indicatorAxis.scale, indicatorAxis.model);\n    var axisModel = indicatorAxis.model;\n    var scale = indicatorAxis.scale;\n    var fixedMin = axisModel.getMin();\n    var fixedMax = axisModel.getMax();\n    var interval = scale.getInterval();\n\n    if (fixedMin != null && fixedMax != null) {\n      // User set min, max, divide to get new interval\n      scale.setExtent(+fixedMin, +fixedMax);\n      scale.setInterval((fixedMax - fixedMin) / splitNumber);\n    } else if (fixedMin != null) {\n      var max; // User set min, expand extent on the other side\n\n      do {\n        max = fixedMin + interval * splitNumber;\n        scale.setExtent(+fixedMin, max); // Interval must been set after extent\n        // FIXME\n\n        scale.setInterval(interval);\n        interval = increaseInterval(interval);\n      } while (max < rawExtent[1] && isFinite(max) && isFinite(rawExtent[1]));\n    } else if (fixedMax != null) {\n      var min; // User set min, expand extent on the other side\n\n      do {\n        min = fixedMax - interval * splitNumber;\n        scale.setExtent(min, +fixedMax);\n        scale.setInterval(interval);\n        interval = increaseInterval(interval);\n      } while (min > rawExtent[0] && isFinite(min) && isFinite(rawExtent[0]));\n    } else {\n      var nicedSplitNumber = scale.getTicks().length - 1;\n\n      if (nicedSplitNumber > splitNumber) {\n        interval = increaseInterval(interval);\n      } // PENDING\n\n\n      var center = Math.round((rawExtent[0] + rawExtent[1]) / 2 / interval) * interval;\n      var halfSplitNumber = Math.round(splitNumber / 2);\n      scale.setExtent(numberUtil.round(center - halfSplitNumber * interval), numberUtil.round(center + (splitNumber - halfSplitNumber) * interval));\n      scale.setInterval(interval);\n    }\n  });\n};\n/**\n * Radar dimensions is based on the data\n * @type {Array}\n */\n\n\nRadar.dimensions = [];\n\nRadar.create = function (ecModel, api) {\n  var radarList = [];\n  ecModel.eachComponent('radar', function (radarModel) {\n    var radar = new Radar(radarModel, ecModel, api);\n    radarList.push(radar);\n    radarModel.coordinateSystem = radar;\n  });\n  ecModel.eachSeriesByType('radar', function (radarSeries) {\n    if (radarSeries.get('coordinateSystem') === 'radar') {\n      // Inject coordinate system\n      radarSeries.coordinateSystem = radarList[radarSeries.get('radarIndex') || 0];\n    }\n  });\n  return radarList;\n};\n\nCoordinateSystem.register('radar', Radar);\nvar _default = Radar;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar Graph = require(\"../../data/Graph\");\n\nvar linkList = require(\"../../data/helper/linkList\");\n\nvar createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar createListFromArray = require(\"./createListFromArray\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(nodes, edges, seriesModel, directed, beforeLink) {\n  // ??? TODO\n  // support dataset?\n  var graph = new Graph(directed);\n\n  for (var i = 0; i < nodes.length; i++) {\n    graph.addNode(zrUtil.retrieve( // Id, name, dataIndex\n    nodes[i].id, nodes[i].name, i), i);\n  }\n\n  var linkNameList = [];\n  var validEdges = [];\n  var linkCount = 0;\n\n  for (var i = 0; i < edges.length; i++) {\n    var link = edges[i];\n    var source = link.source;\n    var target = link.target; // addEdge may fail when source or target not exists\n\n    if (graph.addEdge(source, target, linkCount)) {\n      validEdges.push(link);\n      linkNameList.push(zrUtil.retrieve(link.id, source + ' > ' + target));\n      linkCount++;\n    }\n  }\n\n  var coordSys = seriesModel.get('coordinateSystem');\n  var nodeData;\n\n  if (coordSys === 'cartesian2d' || coordSys === 'polar') {\n    nodeData = createListFromArray(nodes, seriesModel);\n  } else {\n    var coordSysCtor = CoordinateSystem.get(coordSys);\n    var coordDimensions = coordSysCtor && coordSysCtor.type !== 'view' ? coordSysCtor.dimensions || [] : []; // FIXME: Some geo do not need `value` dimenson, whereas `calendar` needs\n    // `value` dimension, but graph need `value` dimension. It's better to\n    // uniform this behavior.\n\n    if (zrUtil.indexOf(coordDimensions, 'value') < 0) {\n      coordDimensions.concat(['value']);\n    }\n\n    var dimensionNames = createDimensions(nodes, {\n      coordDimensions: coordDimensions\n    });\n    nodeData = new List(dimensionNames, seriesModel);\n    nodeData.initData(nodes);\n  }\n\n  var edgeData = new List(['value'], seriesModel);\n  edgeData.initData(validEdges, linkNameList);\n  beforeLink && beforeLink(nodeData, edgeData);\n  linkList({\n    mainData: nodeData,\n    struct: graph,\n    structAttr: 'graph',\n    datas: {\n      node: nodeData,\n      edge: edgeData\n    },\n    datasAttr: {\n      node: 'data',\n      edge: 'edgeData'\n    }\n  }); // Update dataIndex of nodes and edges because invalid edge may be removed\n\n  graph.update();\n  return graph;\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisHelper = require(\"./axisHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = {\n  /**\n   * @param {boolean} origin\n   * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n   */\n  getMin: function (origin) {\n    var option = this.option;\n    var min = !origin && option.rangeStart != null ? option.rangeStart : option.min;\n\n    if (this.axis && min != null && min !== 'dataMin' && typeof min !== 'function' && !zrUtil.eqNaN(min)) {\n      min = this.axis.scale.parse(min);\n    }\n\n    return min;\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n   */\n  getMax: function (origin) {\n    var option = this.option;\n    var max = !origin && option.rangeEnd != null ? option.rangeEnd : option.max;\n\n    if (this.axis && max != null && max !== 'dataMax' && typeof max !== 'function' && !zrUtil.eqNaN(max)) {\n      max = this.axis.scale.parse(max);\n    }\n\n    return max;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  getNeedCrossZero: function () {\n    var option = this.option;\n    return option.rangeStart != null || option.rangeEnd != null ? false : !option.scale;\n  },\n\n  /**\n   * Should be implemented by each axis model if necessary.\n   * @return {module:echarts/model/Component} coordinate system model\n   */\n  getCoordSysModel: zrUtil.noop,\n\n  /**\n   * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n   * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n   */\n  setRange: function (rangeStart, rangeEnd) {\n    this.option.rangeStart = rangeStart;\n    this.option.rangeEnd = rangeEnd;\n  },\n\n  /**\n   * Reset range\n   */\n  resetRange: function () {\n    // rangeStart and rangeEnd is readonly.\n    this.option.rangeStart = this.option.rangeEnd = null;\n  }\n};\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar coordinateSystemCreators = {};\n\nfunction CoordinateSystemManager() {\n  this._coordinateSystems = [];\n}\n\nCoordinateSystemManager.prototype = {\n  constructor: CoordinateSystemManager,\n  create: function (ecModel, api) {\n    var coordinateSystems = [];\n    zrUtil.each(coordinateSystemCreators, function (creater, type) {\n      var list = creater.create(ecModel, api);\n      coordinateSystems = coordinateSystems.concat(list || []);\n    });\n    this._coordinateSystems = coordinateSystems;\n  },\n  update: function (ecModel, api) {\n    zrUtil.each(this._coordinateSystems, function (coordSys) {\n      coordSys.update && coordSys.update(ecModel, api);\n    });\n  },\n  getCoordinateSystems: function () {\n    return this._coordinateSystems.slice();\n  }\n};\n\nCoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n  coordinateSystemCreators[type] = coordinateSystemCreator;\n};\n\nCoordinateSystemManager.get = function (type) {\n  return coordinateSystemCreators[type];\n};\n\nvar _default = CoordinateSystemManager;\nmodule.exports = _default;","var curve = require(\"./curve\");\n\nvar vec2 = require(\"./vector\");\n\nvar bbox = require(\"./bbox\");\n\nvar BoundingRect = require(\"./BoundingRect\");\n\nvar _config = require(\"../config\");\n\nvar dpr = _config.devicePixelRatio;\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n// TODO getTotalLength, getPointAtLength\nvar CMD = {\n  M: 1,\n  L: 2,\n  C: 3,\n  Q: 4,\n  A: 5,\n  Z: 6,\n  // Rect\n  R: 7\n}; // var CMD_MEM_SIZE = {\n//     M: 3,\n//     L: 3,\n//     C: 7,\n//     Q: 5,\n//     A: 9,\n//     R: 5,\n//     Z: 1\n// };\n\nvar min = [];\nvar max = [];\nvar min2 = [];\nvar max2 = [];\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathCos = Math.cos;\nvar mathSin = Math.sin;\nvar mathSqrt = Math.sqrt;\nvar mathAbs = Math.abs;\nvar hasTypedArray = typeof Float32Array != 'undefined';\n/**\n * @alias module:zrender/core/PathProxy\n * @constructor\n */\n\nvar PathProxy = function (notSaveData) {\n  this._saveData = !(notSaveData || false);\n\n  if (this._saveData) {\n    /**\n     * Path data. Stored as flat array\n     * @type {Array.<Object>}\n     */\n    this.data = [];\n  }\n\n  this._ctx = null;\n};\n/**\n * 快速计算Path包围盒（并不是最小包围盒）\n * @return {Object}\n */\n\n\nPathProxy.prototype = {\n  constructor: PathProxy,\n  _xi: 0,\n  _yi: 0,\n  _x0: 0,\n  _y0: 0,\n  // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n  _ux: 0,\n  _uy: 0,\n  _len: 0,\n  _lineDash: null,\n  _dashOffset: 0,\n  _dashIdx: 0,\n  _dashSum: 0,\n\n  /**\n   * @readOnly\n   */\n  setScale: function (sx, sy) {\n    this._ux = mathAbs(1 / dpr / sx) || 0;\n    this._uy = mathAbs(1 / dpr / sy) || 0;\n  },\n  getContext: function () {\n    return this._ctx;\n  },\n\n  /**\n   * @param  {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  beginPath: function (ctx) {\n    this._ctx = ctx;\n    ctx && ctx.beginPath();\n    ctx && (this.dpr = ctx.dpr); // Reset\n\n    if (this._saveData) {\n      this._len = 0;\n    }\n\n    if (this._lineDash) {\n      this._lineDash = null;\n      this._dashOffset = 0;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  moveTo: function (x, y) {\n    this.addData(CMD.M, x, y);\n    this._ctx && this._ctx.moveTo(x, y); // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n    // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n    // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n    // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n\n    this._x0 = x;\n    this._y0 = y;\n    this._xi = x;\n    this._yi = y;\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  lineTo: function (x, y) {\n    var exceedUnit = mathAbs(x - this._xi) > this._ux || mathAbs(y - this._yi) > this._uy // Force draw the first segment\n    || this._len < 5;\n    this.addData(CMD.L, x, y);\n\n    if (this._ctx && exceedUnit) {\n      this._needsDash() ? this._dashedLineTo(x, y) : this._ctx.lineTo(x, y);\n    }\n\n    if (exceedUnit) {\n      this._xi = x;\n      this._yi = y;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @param  {number} x3\n   * @param  {number} y3\n   * @return {module:zrender/core/PathProxy}\n   */\n  bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n    this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3) : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n    }\n\n    this._xi = x3;\n    this._yi = y3;\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @return {module:zrender/core/PathProxy}\n   */\n  quadraticCurveTo: function (x1, y1, x2, y2) {\n    this.addData(CMD.Q, x1, y1, x2, y2);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2) : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n    }\n\n    this._xi = x2;\n    this._yi = y2;\n    return this;\n  },\n\n  /**\n   * @param  {number} cx\n   * @param  {number} cy\n   * @param  {number} r\n   * @param  {number} startAngle\n   * @param  {number} endAngle\n   * @param  {boolean} anticlockwise\n   * @return {module:zrender/core/PathProxy}\n   */\n  arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n    this.addData(CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1);\n    this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n    this._xi = mathCos(endAngle) * r + cx;\n    this._yi = mathSin(endAngle) * r + cx;\n    return this;\n  },\n  // TODO\n  arcTo: function (x1, y1, x2, y2, radius) {\n    if (this._ctx) {\n      this._ctx.arcTo(x1, y1, x2, y2, radius);\n    }\n\n    return this;\n  },\n  // TODO\n  rect: function (x, y, w, h) {\n    this._ctx && this._ctx.rect(x, y, w, h);\n    this.addData(CMD.R, x, y, w, h);\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/PathProxy}\n   */\n  closePath: function () {\n    this.addData(CMD.Z);\n    var ctx = this._ctx;\n    var x0 = this._x0;\n    var y0 = this._y0;\n\n    if (ctx) {\n      this._needsDash() && this._dashedLineTo(x0, y0);\n      ctx.closePath();\n    }\n\n    this._xi = x0;\n    this._yi = y0;\n    return this;\n  },\n\n  /**\n   * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n   * stroke 同样\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  fill: function (ctx) {\n    ctx && ctx.fill();\n    this.toStatic();\n  },\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  stroke: function (ctx) {\n    ctx && ctx.stroke();\n    this.toStatic();\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDash: function (lineDash) {\n    if (lineDash instanceof Array) {\n      this._lineDash = lineDash;\n      this._dashIdx = 0;\n      var lineDashSum = 0;\n\n      for (var i = 0; i < lineDash.length; i++) {\n        lineDashSum += lineDash[i];\n      }\n\n      this._dashSum = lineDashSum;\n    }\n\n    return this;\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDashOffset: function (offset) {\n    this._dashOffset = offset;\n    return this;\n  },\n\n  /**\n   *\n   * @return {boolean}\n   */\n  len: function () {\n    return this._len;\n  },\n\n  /**\n   * 直接设置 Path 数据\n   */\n  setData: function (data) {\n    var len = data.length;\n\n    if (!(this.data && this.data.length == len) && hasTypedArray) {\n      this.data = new Float32Array(len);\n    }\n\n    for (var i = 0; i < len; i++) {\n      this.data[i] = data[i];\n    }\n\n    this._len = len;\n  },\n\n  /**\n   * 添加子路径\n   * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n   */\n  appendPath: function (path) {\n    if (!(path instanceof Array)) {\n      path = [path];\n    }\n\n    var len = path.length;\n    var appendSize = 0;\n    var offset = this._len;\n\n    for (var i = 0; i < len; i++) {\n      appendSize += path[i].len();\n    }\n\n    if (hasTypedArray && this.data instanceof Float32Array) {\n      this.data = new Float32Array(offset + appendSize);\n    }\n\n    for (var i = 0; i < len; i++) {\n      var appendPathData = path[i].data;\n\n      for (var k = 0; k < appendPathData.length; k++) {\n        this.data[offset++] = appendPathData[k];\n      }\n    }\n\n    this._len = offset;\n  },\n\n  /**\n   * 填充 Path 数据。\n   * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n   */\n  addData: function (cmd) {\n    if (!this._saveData) {\n      return;\n    }\n\n    var data = this.data;\n\n    if (this._len + arguments.length > data.length) {\n      // 因为之前的数组已经转换成静态的 Float32Array\n      // 所以不够用时需要扩展一个新的动态数组\n      this._expandData();\n\n      data = this.data;\n    }\n\n    for (var i = 0; i < arguments.length; i++) {\n      data[this._len++] = arguments[i];\n    }\n\n    this._prevCmd = cmd;\n  },\n  _expandData: function () {\n    // Only if data is Float32Array\n    if (!(this.data instanceof Array)) {\n      var newData = [];\n\n      for (var i = 0; i < this._len; i++) {\n        newData[i] = this.data[i];\n      }\n\n      this.data = newData;\n    }\n  },\n\n  /**\n   * If needs js implemented dashed line\n   * @return {boolean}\n   * @private\n   */\n  _needsDash: function () {\n    return this._lineDash;\n  },\n  _dashedLineTo: function (x1, y1) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    var dist = mathSqrt(dx * dx + dy * dy);\n    var x = x0;\n    var y = y0;\n    var dash;\n    var nDash = lineDash.length;\n    var idx;\n    dx /= dist;\n    dy /= dist;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum;\n    x -= offset * dx;\n    y -= offset * dy;\n\n    while (dx > 0 && x <= x1 || dx < 0 && x >= x1 || dx == 0 && (dy > 0 && y <= y1 || dy < 0 && y >= y1)) {\n      idx = this._dashIdx;\n      dash = lineDash[idx];\n      x += dx * dash;\n      y += dy * dash;\n      this._dashIdx = (idx + 1) % nDash; // Skip positive offset\n\n      if (dx > 0 && x < x0 || dx < 0 && x > x0 || dy > 0 && y < y0 || dy < 0 && y > y0) {\n        continue;\n      }\n\n      ctx[idx % 2 ? 'moveTo' : 'lineTo'](dx >= 0 ? mathMin(x, x1) : mathMax(x, x1), dy >= 0 ? mathMin(y, y1) : mathMax(y, y1));\n    } // Offset for next lineTo\n\n\n    dx = x - x1;\n    dy = y - y1;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  // Not accurate dashed line to\n  _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var t;\n    var dx;\n    var dy;\n    var cubicAt = curve.cubicAt;\n    var bezierLen = 0;\n    var idx = this._dashIdx;\n    var nDash = lineDash.length;\n    var x;\n    var y;\n    var tmpLen = 0;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum; // Bezier approx length\n\n    for (t = 0; t < 1; t += 0.1) {\n      dx = cubicAt(x0, x1, x2, x3, t + 0.1) - cubicAt(x0, x1, x2, x3, t);\n      dy = cubicAt(y0, y1, y2, y3, t + 0.1) - cubicAt(y0, y1, y2, y3, t);\n      bezierLen += mathSqrt(dx * dx + dy * dy);\n    } // Find idx after add offset\n\n\n    for (; idx < nDash; idx++) {\n      tmpLen += lineDash[idx];\n\n      if (tmpLen > offset) {\n        break;\n      }\n    }\n\n    t = (tmpLen - offset) / bezierLen;\n\n    while (t <= 1) {\n      x = cubicAt(x0, x1, x2, x3, t);\n      y = cubicAt(y0, y1, y2, y3, t); // Use line to approximate dashed bezier\n      // Bad result if dash is long\n\n      idx % 2 ? ctx.moveTo(x, y) : ctx.lineTo(x, y);\n      t += lineDash[idx] / bezierLen;\n      idx = (idx + 1) % nDash;\n    } // Finish the last segment and calculate the new offset\n\n\n    idx % 2 !== 0 && ctx.lineTo(x3, y3);\n    dx = x3 - x;\n    dy = y3 - y;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  _dashedQuadraticTo: function (x1, y1, x2, y2) {\n    // Convert quadratic to cubic using degree elevation\n    var x3 = x2;\n    var y3 = y2;\n    x2 = (x2 + 2 * x1) / 3;\n    y2 = (y2 + 2 * y1) / 3;\n    x1 = (this._xi + 2 * x1) / 3;\n    y1 = (this._yi + 2 * y1) / 3;\n\n    this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n  },\n\n  /**\n   * 转成静态的 Float32Array 减少堆内存占用\n   * Convert dynamic array to static Float32Array\n   */\n  toStatic: function () {\n    var data = this.data;\n\n    if (data instanceof Array) {\n      data.length = this._len;\n\n      if (hasTypedArray) {\n        this.data = new Float32Array(data);\n      }\n    }\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n    max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n    var data = this.data;\n    var xi = 0;\n    var yi = 0;\n    var x0 = 0;\n    var y0 = 0;\n\n    for (var i = 0; i < data.length;) {\n      var cmd = data[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = data[i];\n        yi = data[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n          // 在 closePath 的时候使用\n          x0 = data[i++];\n          y0 = data[i++];\n          xi = x0;\n          yi = y0;\n          min2[0] = x0;\n          min2[1] = y0;\n          max2[0] = x0;\n          max2[1] = y0;\n          break;\n\n        case CMD.L:\n          bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.C:\n          bbox.fromCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.Q:\n          bbox.fromQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.A:\n          // TODO Arc 判断的开销比较大\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++];\n          var endAngle = data[i++] + startAngle; // TODO Arc 旋转\n\n          var psi = data[i++];\n          var anticlockwise = 1 - data[i++];\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(startAngle) * rx + cx;\n            y0 = mathSin(startAngle) * ry + cy;\n          }\n\n          bbox.fromArc(cx, cy, rx, ry, startAngle, endAngle, anticlockwise, min2, max2);\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = data[i++];\n          y0 = yi = data[i++];\n          var width = data[i++];\n          var height = data[i++]; // Use fromLine\n\n          bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n          break;\n\n        case CMD.Z:\n          xi = x0;\n          yi = y0;\n          break;\n      } // Union\n\n\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * Rebuild path from current data\n   * Rebuild path will not consider javascript implemented line dash.\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  rebuildPath: function (ctx) {\n    var d = this.data;\n    var x0, y0;\n    var xi, yi;\n    var x, y;\n    var ux = this._ux;\n    var uy = this._uy;\n    var len = this._len;\n\n    for (var i = 0; i < len;) {\n      var cmd = d[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = d[i];\n        yi = d[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          x0 = xi = d[i++];\n          y0 = yi = d[i++];\n          ctx.moveTo(xi, yi);\n          break;\n\n        case CMD.L:\n          x = d[i++];\n          y = d[i++]; // Not draw too small seg between\n\n          if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n            ctx.lineTo(x, y);\n            xi = x;\n            yi = y;\n          }\n\n          break;\n\n        case CMD.C:\n          ctx.bezierCurveTo(d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.Q:\n          ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.A:\n          var cx = d[i++];\n          var cy = d[i++];\n          var rx = d[i++];\n          var ry = d[i++];\n          var theta = d[i++];\n          var dTheta = d[i++];\n          var psi = d[i++];\n          var fs = d[i++];\n          var r = rx > ry ? rx : ry;\n          var scaleX = rx > ry ? 1 : rx / ry;\n          var scaleY = rx > ry ? ry / rx : 1;\n          var isEllipse = Math.abs(rx - ry) > 1e-3;\n          var endAngle = theta + dTheta;\n\n          if (isEllipse) {\n            ctx.translate(cx, cy);\n            ctx.rotate(psi);\n            ctx.scale(scaleX, scaleY);\n            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n            ctx.scale(1 / scaleX, 1 / scaleY);\n            ctx.rotate(-psi);\n            ctx.translate(-cx, -cy);\n          } else {\n            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n          }\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(theta) * rx + cx;\n            y0 = mathSin(theta) * ry + cy;\n          }\n\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = d[i];\n          y0 = yi = d[i + 1];\n          ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n          break;\n\n        case CMD.Z:\n          ctx.closePath();\n          xi = x0;\n          yi = y0;\n      }\n    }\n  }\n};\nPathProxy.CMD = CMD;\nvar _default = PathProxy;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar features = {};\n\nfunction register(name, ctor) {\n  features[name] = ctor;\n}\n\nfunction get(name) {\n  return features[name];\n}\n\nexports.register = register;\nexports.get = get;","var SeriesModel = require(\"../../model/Series\");\n\nvar Tree = require(\"../../data/Tree\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Create data struct and define tree view's series model\n */\nvar _default = SeriesModel.extend({\n  type: 'series.tree',\n  layoutInfo: null,\n  // can support the position parameters 'left', 'top','right','bottom', 'width',\n  // 'height' in the setOption() with 'merge' mode normal.\n  layoutMode: 'box',\n\n  /**\n   * Init a tree data structure from data in option series\n   * @param  {Object} option  the object used to config echarts view\n   * @return {module:echarts/data/List} storage initial data\n   */\n  getInitialData: function (option) {\n    //create an virtual root\n    var root = {\n      name: option.name,\n      children: option.data\n    };\n    var leaves = option.leaves || {};\n    var treeOption = {};\n    treeOption.leaves = leaves;\n    var tree = Tree.createTree(root, this, treeOption);\n    var treeDepth = 0;\n    tree.eachNode('preorder', function (node) {\n      if (node.depth > treeDepth) {\n        treeDepth = node.depth;\n      }\n    });\n    var expandAndCollapse = option.expandAndCollapse;\n    var expandTreeDepth = expandAndCollapse && option.initialTreeDepth >= 0 ? option.initialTreeDepth : treeDepth;\n    tree.root.eachNode('preorder', function (node) {\n      var item = node.hostTree.data.getRawDataItem(node.dataIndex); // add item.collapsed != null, because users can collapse node original in the series.data.\n\n      node.isExpand = item && item.collapsed != null ? !item.collapsed : node.depth <= expandTreeDepth;\n    });\n    return tree.data;\n  },\n\n  /**\n   * Make the configuration 'orient' backward compatibly, with 'horizontal = LR', 'vertical = TB'.\n   * @returns {string} orient\n   */\n  getOrient: function () {\n    var orient = this.get('orient');\n\n    if (orient === 'horizontal') {\n      orient = 'LR';\n    } else if (orient === 'vertical') {\n      orient = 'TB';\n    }\n\n    return orient;\n  },\n\n  /**\n   * @override\n   * @param {number} dataIndex\n   */\n  formatTooltip: function (dataIndex) {\n    var tree = this.getData().tree;\n    var realRoot = tree.root.children[0];\n    var node = tree.getNodeByDataIndex(dataIndex);\n    var value = node.getValue();\n    var name = node.name;\n\n    while (node && node !== realRoot) {\n      name = node.parentNode.name + '.' + name;\n      node = node.parentNode;\n    }\n\n    return encodeHTML(name + (isNaN(value) || value == null ? '' : ' : ' + value));\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    // the position of the whole view\n    left: '12%',\n    top: '12%',\n    right: '12%',\n    bottom: '12%',\n    // the layout of the tree, two value can be selected, 'orthogonal' or 'radial'\n    layout: 'orthogonal',\n    // The orient of orthoginal layout, can be setted to 'LR', 'TB', 'RL', 'BT'.\n    // and the backward compatibility configuration 'horizontal = LR', 'vertical = TB'.\n    orient: 'LR',\n    symbol: 'emptyCircle',\n    symbolSize: 7,\n    expandAndCollapse: true,\n    initialTreeDepth: 2,\n    lineStyle: {\n      color: '#ccc',\n      width: 1.5,\n      curveness: 0.5\n    },\n    itemStyle: {\n      color: 'lightsteelblue',\n      borderColor: '#c23531',\n      borderWidth: 1.5\n    },\n    label: {\n      show: true,\n      color: '#555'\n    },\n    leaves: {\n      label: {\n        show: true\n      }\n    },\n    animationEasing: 'linear',\n    animationDuration: 700,\n    animationDurationUpdate: 1000\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar formatUtil = require(\"../util/format\");\n\nvar scaleHelper = require(\"./helper\");\n\nvar IntervalScale = require(\"./Interval\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// [About UTC and local time zone]:\n// In most cases, `number.parseDate` will treat input data string as local time\n// (except time zone is specified in time string). And `format.formateTime` returns\n// local time by default. option.useUTC is false by default. This design have\n// concidered these common case:\n// (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n// in local time by default.\n// (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n// as its original time, without any time difference.\nvar intervalScaleProto = IntervalScale.prototype;\nvar mathCeil = Math.ceil;\nvar mathFloor = Math.floor;\nvar ONE_SECOND = 1000;\nvar ONE_MINUTE = ONE_SECOND * 60;\nvar ONE_HOUR = ONE_MINUTE * 60;\nvar ONE_DAY = ONE_HOUR * 24; // FIXME 公用？\n\nvar bisect = function (a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n\n    if (a[mid][1] < x) {\n      lo = mid + 1;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return lo;\n};\n/**\n * @alias module:echarts/coord/scale/Time\n * @constructor\n */\n\n\nvar TimeScale = IntervalScale.extend({\n  type: 'time',\n\n  /**\n   * @override\n   */\n  getLabel: function (val) {\n    var stepLvl = this._stepLvl;\n    var date = new Date(val);\n    return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n  },\n\n  /**\n   * @override\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      // Expand extent\n      extent[0] -= ONE_DAY;\n      extent[1] += ONE_DAY;\n    } // If there are no data and extent are [Infinity, -Infinity]\n\n\n    if (extent[1] === -Infinity && extent[0] === Infinity) {\n      var d = new Date();\n      extent[1] = +new Date(d.getFullYear(), d.getMonth(), d.getDate());\n      extent[0] = extent[1] - ONE_DAY;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n    }\n  },\n\n  /**\n   * @override\n   */\n  niceTicks: function (approxTickNum, minInterval, maxInterval) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n    var approxInterval = span / approxTickNum;\n\n    if (minInterval != null && approxInterval < minInterval) {\n      approxInterval = minInterval;\n    }\n\n    if (maxInterval != null && approxInterval > maxInterval) {\n      approxInterval = maxInterval;\n    }\n\n    var scaleLevelsLen = scaleLevels.length;\n    var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n    var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n    var interval = level[1]; // Same with interval scale if span is much larger than 1 year\n\n    if (level[0] === 'year') {\n      var yearSpan = span / interval; // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n      // var niceYearSpan = numberUtil.nice(yearSpan, false);\n\n      var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n      interval *= yearStep;\n    }\n\n    var timezoneOffset = this.getSetting('useUTC') ? 0 : new Date(+extent[0] || +extent[1]).getTimezoneOffset() * 60 * 1000;\n    var niceExtent = [Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset), Math.round(mathFloor((extent[1] - timezoneOffset) / interval) * interval + timezoneOffset)];\n    scaleHelper.fixExtent(niceExtent, extent);\n    this._stepLvl = level; // Interval will be used in getTicks\n\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n  parse: function (val) {\n    // val might be float.\n    return +numberUtil.parseDate(val);\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  TimeScale.prototype[methodName] = function (val) {\n    return intervalScaleProto[methodName].call(this, this.parse(val));\n  };\n}); // Steps from d3\n\nvar scaleLevels = [// Format              interval\n['hh:mm:ss', ONE_SECOND], // 1s\n['hh:mm:ss', ONE_SECOND * 5], // 5s\n['hh:mm:ss', ONE_SECOND * 10], // 10s\n['hh:mm:ss', ONE_SECOND * 15], // 15s\n['hh:mm:ss', ONE_SECOND * 30], // 30s\n['hh:mm\\nMM-dd', ONE_MINUTE], // 1m\n['hh:mm\\nMM-dd', ONE_MINUTE * 5], // 5m\n['hh:mm\\nMM-dd', ONE_MINUTE * 10], // 10m\n['hh:mm\\nMM-dd', ONE_MINUTE * 15], // 15m\n['hh:mm\\nMM-dd', ONE_MINUTE * 30], // 30m\n['hh:mm\\nMM-dd', ONE_HOUR], // 1h\n['hh:mm\\nMM-dd', ONE_HOUR * 2], // 2h\n['hh:mm\\nMM-dd', ONE_HOUR * 6], // 6h\n['hh:mm\\nMM-dd', ONE_HOUR * 12], // 12h\n['MM-dd\\nyyyy', ONE_DAY], // 1d\n['MM-dd\\nyyyy', ONE_DAY * 2], // 2d\n['MM-dd\\nyyyy', ONE_DAY * 3], // 3d\n['MM-dd\\nyyyy', ONE_DAY * 4], // 4d\n['MM-dd\\nyyyy', ONE_DAY * 5], // 5d\n['MM-dd\\nyyyy', ONE_DAY * 6], // 6d\n['week', ONE_DAY * 7], // 7d\n['MM-dd\\nyyyy', ONE_DAY * 10], // 10d\n['week', ONE_DAY * 14], // 2w\n['week', ONE_DAY * 21], // 3w\n['month', ONE_DAY * 31], // 1M\n['week', ONE_DAY * 42], // 6w\n['month', ONE_DAY * 62], // 2M\n['week', ONE_DAY * 42], // 10w\n['quarter', ONE_DAY * 380 / 4], // 3M\n['month', ONE_DAY * 31 * 4], // 4M\n['month', ONE_DAY * 31 * 5], // 5M\n['half-year', ONE_DAY * 380 / 2], // 6M\n['month', ONE_DAY * 31 * 8], // 8M\n['month', ONE_DAY * 31 * 10], // 10M\n['year', ONE_DAY * 380] // 1Y\n];\n/**\n * @param {module:echarts/model/Model}\n * @return {module:echarts/scale/Time}\n */\n\nTimeScale.create = function (model) {\n  return new TimeScale({\n    useUTC: model.ecModel.get('useUTC')\n  });\n};\n\nvar _default = TimeScale;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.line',\n  dependencies: ['grid', 'polar'],\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // stack: null\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // polarIndex: 0,\n    // If clip the overflow value\n    clipOverflow: true,\n    // cursor: null,\n    label: {\n      position: 'top'\n    },\n    // itemStyle: {\n    // },\n    lineStyle: {\n      width: 2,\n      type: 'solid'\n    },\n    // areaStyle: {\n    // origin of areaStyle. Valid values:\n    // `'auto'/null/undefined`: from axisLine to data\n    // `'start'`: from min to data\n    // `'end'`: from data to max\n    // origin: 'auto'\n    // },\n    // false, 'start', 'end', 'middle'\n    step: false,\n    // Disabled if step is true\n    smooth: false,\n    smoothMonotone: null,\n    symbol: 'emptyCircle',\n    symbolSize: 4,\n    symbolRotate: null,\n    showSymbol: true,\n    // `false`: follow the label interval strategy.\n    // `true`: show all symbols.\n    // `'auto'`: If possible, show all symbols, otherwise\n    //           follow the label interval strategy.\n    showAllSymbol: 'auto',\n    // Whether to connect break point.\n    connectNulls: false,\n    // Sampling for large data. Can be: 'average', 'max', 'min', 'sum'.\n    sampling: 'none',\n    animationEasing: 'linear',\n    // Disable progressive\n    progressive: 0,\n    hoverLayerThreshold: Infinity\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Component = require(\"../../model/Component\");\n\nrequire(\"./AxisModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = Component.extend({\n  type: 'parallel',\n  dependencies: ['parallelAxis'],\n\n  /**\n   * @type {module:echarts/coord/parallel/Parallel}\n   */\n  coordinateSystem: null,\n\n  /**\n   * Each item like: 'dim0', 'dim1', 'dim2', ...\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: null,\n\n  /**\n   * Coresponding to dimensions.\n   * @type {Array.<number>}\n   * @readOnly\n   */\n  parallelAxisIndex: null,\n  layoutMode: 'box',\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    left: 80,\n    top: 60,\n    right: 80,\n    bottom: 60,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    layout: 'horizontal',\n    // 'horizontal' or 'vertical'\n    // FIXME\n    // naming?\n    axisExpandable: false,\n    axisExpandCenter: null,\n    axisExpandCount: 0,\n    axisExpandWidth: 50,\n    // FIXME '10%' ?\n    axisExpandRate: 17,\n    axisExpandDebounce: 50,\n    // [out, in, jumpTarget]. In percentage. If use [null, 0.05], null means full.\n    // Do not doc to user until necessary.\n    axisExpandSlideTriggerArea: [-0.15, 0.05, 0.4],\n    axisExpandTriggerOn: 'click',\n    // 'mousemove' or 'click'\n    parallelAxisDefault: null\n  },\n\n  /**\n   * @override\n   */\n  init: function () {\n    Component.prototype.init.apply(this, arguments);\n    this.mergeOption({});\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (newOption) {\n    var thisOption = this.option;\n    newOption && zrUtil.merge(thisOption, newOption, true);\n\n    this._initDimensions();\n  },\n\n  /**\n   * Whether series or axis is in this coordinate system.\n   * @param {module:echarts/model/Series|module:echarts/coord/parallel/AxisModel} model\n   * @param {module:echarts/model/Global} ecModel\n   */\n  contains: function (model, ecModel) {\n    var parallelIndex = model.get('parallelIndex');\n    return parallelIndex != null && ecModel.getComponent('parallel', parallelIndex) === this;\n  },\n  setAxisExpand: function (opt) {\n    zrUtil.each(['axisExpandable', 'axisExpandCenter', 'axisExpandCount', 'axisExpandWidth', 'axisExpandWindow'], function (name) {\n      if (opt.hasOwnProperty(name)) {\n        this.option[name] = opt[name];\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _initDimensions: function () {\n    var dimensions = this.dimensions = [];\n    var parallelAxisIndex = this.parallelAxisIndex = [];\n    var axisModels = zrUtil.filter(this.dependentModels.parallelAxis, function (axisModel) {\n      // Can not use this.contains here, because\n      // initialization has not been completed yet.\n      return (axisModel.get('parallelIndex') || 0) === this.componentIndex;\n    }, this);\n    zrUtil.each(axisModels, function (axisModel) {\n      dimensions.push('dim' + axisModel.get('dim'));\n      parallelAxisIndex.push(axisModel.componentIndex);\n    });\n  }\n});\n\nmodule.exports = _default;","/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\nvar env = {};\n\nif (typeof wx === 'object' && typeof wx.getSystemInfoSync === 'function') {\n  // In Weixin Application\n  env = {\n    browser: {},\n    os: {},\n    node: false,\n    wxa: true,\n    // Weixin Application\n    canvasSupported: true,\n    svgSupported: false,\n    touchEventsSupported: true\n  };\n} else if (typeof document === 'undefined' && typeof self !== 'undefined') {\n  // In worker\n  env = {\n    browser: {},\n    os: {},\n    node: false,\n    worker: true,\n    canvasSupported: true\n  };\n} else if (typeof navigator === 'undefined') {\n  // In node\n  env = {\n    browser: {},\n    os: {},\n    node: true,\n    worker: false,\n    // Assume canvas is supported\n    canvasSupported: true,\n    svgSupported: true\n  };\n} else {\n  env = detect(navigator.userAgent);\n}\n\nvar _default = env; // Zepto.js\n// (c) 2010-2013 Thomas Fuchs\n// Zepto.js may be freely distributed under the MIT license.\n\nfunction detect(ua) {\n  var os = {};\n  var browser = {}; // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n  // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n  // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n  // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n  // var touchpad = webos && ua.match(/TouchPad/);\n  // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n  // var silk = ua.match(/Silk\\/([\\d._]+)/);\n  // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n  // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n  // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n  // var playbook = ua.match(/PlayBook/);\n  // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n\n  var firefox = ua.match(/Firefox\\/([\\d.]+)/); // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n  // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n\n  var ie = ua.match(/MSIE\\s([\\d.]+)/) // IE 11 Trident/7.0; rv:11.0\n  || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n  var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n  var weChat = /micromessenger/i.test(ua); // Todo: clean this up with a better OS/browser seperation:\n  // - discern (more) between multiple browsers on android\n  // - decide if kindle fire in silk mode is android or not\n  // - Firefox on Android doesn't specify the Android version\n  // - possibly devide in os, device and browser hashes\n  // if (browser.webkit = !!webkit) browser.version = webkit[1];\n  // if (android) os.android = true, os.version = android[2];\n  // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n  // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n  // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n  // if (webos) os.webos = true, os.version = webos[2];\n  // if (touchpad) os.touchpad = true;\n  // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n  // if (bb10) os.bb10 = true, os.version = bb10[2];\n  // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n  // if (playbook) browser.playbook = true;\n  // if (kindle) os.kindle = true, os.version = kindle[1];\n  // if (silk) browser.silk = true, browser.version = silk[1];\n  // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n  // if (chrome) browser.chrome = true, browser.version = chrome[1];\n\n  if (firefox) {\n    browser.firefox = true;\n    browser.version = firefox[1];\n  } // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n  // if (webview) browser.webview = true;\n\n\n  if (ie) {\n    browser.ie = true;\n    browser.version = ie[1];\n  }\n\n  if (edge) {\n    browser.edge = true;\n    browser.version = edge[1];\n  } // It is difficult to detect WeChat in Win Phone precisely, because ua can\n  // not be set on win phone. So we do not consider Win Phone.\n\n\n  if (weChat) {\n    browser.weChat = true;\n  } // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n  //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n  // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n  //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n  //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n\n  return {\n    browser: browser,\n    os: os,\n    node: false,\n    // 原生canvas支持，改极端点了\n    // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n    canvasSupported: !!document.createElement('canvas').getContext,\n    svgSupported: typeof SVGRect !== 'undefined',\n    // works on most browsers\n    // IE10/11 does not support touch event, and MS Edge supports them but not by\n    // default, so we dont check navigator.maxTouchPoints for them here.\n    touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n    // <http://caniuse.com/#search=pointer%20event>.\n    pointerEventsSupported: 'onpointerdown' in window // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n    // events currently. So we dont use that on other browsers unless tested sufficiently.\n    // Although IE 10 supports pointer event, it use old style and is different from the\n    // standard. So we exclude that. (IE 10 is hardly used on touch device)\n    && (browser.edge || browser.ie && browser.version >= 11) // passiveSupported: detectPassiveSupport()\n\n  };\n} // See https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n// function detectPassiveSupport() {\n//     // Test via a getter in the options object to see if the passive property is accessed\n//     var supportsPassive = false;\n//     try {\n//         var opts = Object.defineProperty({}, 'passive', {\n//             get: function() {\n//                 supportsPassive = true;\n//             }\n//         });\n//         window.addEventListener('testPassive', function() {}, opts);\n//     } catch (e) {\n//     }\n//     return supportsPassive;\n// }\n\n\nmodule.exports = _default;","var layout = require(\"../../util/layout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file The layout algorithm of node-link tree diagrams. Here we using Reingold-Tilford algorithm to drawing\n *       the tree.\n * @see https://github.com/d3/d3-hierarchy\n */\n\n/**\n * Initialize all computational message for following algorithm\n * @param  {module:echarts/data/Tree~TreeNode} root   The virtual root of the tree\n */\nfunction init(root) {\n  root.hierNode = {\n    defaultAncestor: null,\n    ancestor: root,\n    prelim: 0,\n    modifier: 0,\n    change: 0,\n    shift: 0,\n    i: 0,\n    thread: null\n  };\n  var nodes = [root];\n  var node;\n  var children;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    children = node.children;\n\n    if (node.isExpand && children.length) {\n      var n = children.length;\n\n      for (var i = n - 1; i >= 0; i--) {\n        var child = children[i];\n        child.hierNode = {\n          defaultAncestor: null,\n          ancestor: child,\n          prelim: 0,\n          modifier: 0,\n          change: 0,\n          shift: 0,\n          i: i,\n          thread: null\n        };\n        nodes.push(child);\n      }\n    }\n  }\n}\n/**\n * Computes a preliminary x coordinate for node. Before that, this function is\n * applied recursively to the children of node, as well as the function\n * apportion(). After spacing out the children by calling executeShifts(), the\n * node is placed to the midpoint of its outermost children.\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @param {Function} separation\n */\n\n\nfunction firstWalk(node, separation) {\n  var children = node.isExpand ? node.children : [];\n  var siblings = node.parentNode.children;\n  var subtreeW = node.hierNode.i ? siblings[node.hierNode.i - 1] : null;\n\n  if (children.length) {\n    executeShifts(node);\n    var midPoint = (children[0].hierNode.prelim + children[children.length - 1].hierNode.prelim) / 2;\n\n    if (subtreeW) {\n      node.hierNode.prelim = subtreeW.hierNode.prelim + separation(node, subtreeW);\n      node.hierNode.modifier = node.hierNode.prelim - midPoint;\n    } else {\n      node.hierNode.prelim = midPoint;\n    }\n  } else if (subtreeW) {\n    node.hierNode.prelim = subtreeW.hierNode.prelim + separation(node, subtreeW);\n  }\n\n  node.parentNode.hierNode.defaultAncestor = apportion(node, subtreeW, node.parentNode.hierNode.defaultAncestor || siblings[0], separation);\n}\n/**\n * Computes all real x-coordinates by summing up the modifiers recursively.\n * @param  {module:echarts/data/Tree~TreeNode} node\n */\n\n\nfunction secondWalk(node) {\n  var nodeX = node.hierNode.prelim + node.parentNode.hierNode.modifier;\n  node.setLayout({\n    x: nodeX\n  }, true);\n  node.hierNode.modifier += node.parentNode.hierNode.modifier;\n}\n\nfunction separation(cb) {\n  return arguments.length ? cb : defaultSeparation;\n}\n/**\n * Transform the common coordinate to radial coordinate\n * @param  {number} x\n * @param  {number} y\n * @return {Object}\n */\n\n\nfunction radialCoordinate(x, y) {\n  var radialCoor = {};\n  x -= Math.PI / 2;\n  radialCoor.x = y * Math.cos(x);\n  radialCoor.y = y * Math.sin(x);\n  return radialCoor;\n}\n/**\n * Get the layout position of the whole view\n * @param {module:echarts/model/Series} seriesModel  the model object of sankey series\n * @param {module:echarts/ExtensionAPI} api  provide the API list that the developer can call\n * @return {module:zrender/core/BoundingRect}  size of rect to draw the sankey view\n */\n\n\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n/**\n * All other shifts, applied to the smaller subtrees between w- and w+, are\n * performed by this function.\n * @param  {module:echarts/data/Tree~TreeNode} node\n */\n\n\nfunction executeShifts(node) {\n  var children = node.children;\n  var n = children.length;\n  var shift = 0;\n  var change = 0;\n\n  while (--n >= 0) {\n    var child = children[n];\n    child.hierNode.prelim += shift;\n    child.hierNode.modifier += shift;\n    change += child.hierNode.change;\n    shift += child.hierNode.shift + change;\n  }\n}\n/**\n * The core of the algorithm. Here, a new subtree is combined with the\n * previous subtrees. Threads are used to traverse the inside and outside\n * contours of the left and right subtree up to the highest common level.\n * Whenever two nodes of the inside contours conflict, we compute the left\n * one of the greatest uncommon ancestors using the function nextAncestor()\n * and call moveSubtree() to shift the subtree and prepare the shifts of\n * smaller subtrees. Finally, we add a new thread (if necessary).\n * @param  {module:echarts/data/Tree~TreeNode} subtreeV\n * @param  {module:echarts/data/Tree~TreeNode} subtreeW\n * @param  {module:echarts/data/Tree~TreeNode} ancestor\n * @param  {Function} separation\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction apportion(subtreeV, subtreeW, ancestor, separation) {\n  if (subtreeW) {\n    var nodeOutRight = subtreeV;\n    var nodeInRight = subtreeV;\n    var nodeOutLeft = nodeInRight.parentNode.children[0];\n    var nodeInLeft = subtreeW;\n    var sumOutRight = nodeOutRight.hierNode.modifier;\n    var sumInRight = nodeInRight.hierNode.modifier;\n    var sumOutLeft = nodeOutLeft.hierNode.modifier;\n    var sumInLeft = nodeInLeft.hierNode.modifier;\n\n    while (nodeInLeft = nextRight(nodeInLeft), nodeInRight = nextLeft(nodeInRight), nodeInLeft && nodeInRight) {\n      nodeOutRight = nextRight(nodeOutRight);\n      nodeOutLeft = nextLeft(nodeOutLeft);\n      nodeOutRight.hierNode.ancestor = subtreeV;\n      var shift = nodeInLeft.hierNode.prelim + sumInLeft - nodeInRight.hierNode.prelim - sumInRight + separation(nodeInLeft, nodeInRight);\n\n      if (shift > 0) {\n        moveSubtree(nextAncestor(nodeInLeft, subtreeV, ancestor), subtreeV, shift);\n        sumInRight += shift;\n        sumOutRight += shift;\n      }\n\n      sumInLeft += nodeInLeft.hierNode.modifier;\n      sumInRight += nodeInRight.hierNode.modifier;\n      sumOutRight += nodeOutRight.hierNode.modifier;\n      sumOutLeft += nodeOutLeft.hierNode.modifier;\n    }\n\n    if (nodeInLeft && !nextRight(nodeOutRight)) {\n      nodeOutRight.hierNode.thread = nodeInLeft;\n      nodeOutRight.hierNode.modifier += sumInLeft - sumOutRight;\n    }\n\n    if (nodeInRight && !nextLeft(nodeOutLeft)) {\n      nodeOutLeft.hierNode.thread = nodeInRight;\n      nodeOutLeft.hierNode.modifier += sumInRight - sumOutLeft;\n      ancestor = subtreeV;\n    }\n  }\n\n  return ancestor;\n}\n/**\n * This function is used to traverse the right contour of a subtree.\n * It returns the rightmost child of node or the thread of node. The function\n * returns null if and only if node is on the highest depth of its subtree.\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction nextRight(node) {\n  var children = node.children;\n  return children.length && node.isExpand ? children[children.length - 1] : node.hierNode.thread;\n}\n/**\n * This function is used to traverse the left contour of a subtree (or a subforest).\n * It returns the leftmost child of node or the thread of node. The function\n * returns null if and only if node is on the highest depth of its subtree.\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction nextLeft(node) {\n  var children = node.children;\n  return children.length && node.isExpand ? children[0] : node.hierNode.thread;\n}\n/**\n * If nodeInLeft’s ancestor is a sibling of node, returns nodeInLeft’s ancestor.\n * Otherwise, returns the specified ancestor.\n * @param  {module:echarts/data/Tree~TreeNode} nodeInLeft\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @param  {module:echarts/data/Tree~TreeNode} ancestor\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction nextAncestor(nodeInLeft, node, ancestor) {\n  return nodeInLeft.hierNode.ancestor.parentNode === node.parentNode ? nodeInLeft.hierNode.ancestor : ancestor;\n}\n/**\n * Shifts the current subtree rooted at wr. This is done by increasing prelim(w+) and modifier(w+) by shift.\n * @param  {module:echarts/data/Tree~TreeNode} wl\n * @param  {module:echarts/data/Tree~TreeNode} wr\n * @param  {number} shift [description]\n */\n\n\nfunction moveSubtree(wl, wr, shift) {\n  var change = shift / (wr.hierNode.i - wl.hierNode.i);\n  wr.hierNode.change -= change;\n  wr.hierNode.shift += shift;\n  wr.hierNode.modifier += shift;\n  wr.hierNode.prelim += shift;\n  wl.hierNode.change += change;\n}\n\nfunction defaultSeparation(node1, node2) {\n  return node1.parentNode === node2.parentNode ? 1 : 2;\n}\n\nexports.init = init;\nexports.firstWalk = firstWalk;\nexports.secondWalk = secondWalk;\nexports.separation = separation;\nexports.radialCoordinate = radialCoordinate;\nexports.getViewRect = getViewRect;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar pathTool = require(\"zrender/lib/tool/path\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\nvar Transformable = require(\"zrender/lib/mixin/Transformable\");\n\nvar ZImage = require(\"zrender/lib/graphic/Image\");\n\nexports.Image = ZImage;\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nexports.Group = Group;\n\nvar Text = require(\"zrender/lib/graphic/Text\");\n\nexports.Text = Text;\n\nvar Circle = require(\"zrender/lib/graphic/shape/Circle\");\n\nexports.Circle = Circle;\n\nvar Sector = require(\"zrender/lib/graphic/shape/Sector\");\n\nexports.Sector = Sector;\n\nvar Ring = require(\"zrender/lib/graphic/shape/Ring\");\n\nexports.Ring = Ring;\n\nvar Polygon = require(\"zrender/lib/graphic/shape/Polygon\");\n\nexports.Polygon = Polygon;\n\nvar Polyline = require(\"zrender/lib/graphic/shape/Polyline\");\n\nexports.Polyline = Polyline;\n\nvar Rect = require(\"zrender/lib/graphic/shape/Rect\");\n\nexports.Rect = Rect;\n\nvar Line = require(\"zrender/lib/graphic/shape/Line\");\n\nexports.Line = Line;\n\nvar BezierCurve = require(\"zrender/lib/graphic/shape/BezierCurve\");\n\nexports.BezierCurve = BezierCurve;\n\nvar Arc = require(\"zrender/lib/graphic/shape/Arc\");\n\nexports.Arc = Arc;\n\nvar CompoundPath = require(\"zrender/lib/graphic/CompoundPath\");\n\nexports.CompoundPath = CompoundPath;\n\nvar LinearGradient = require(\"zrender/lib/graphic/LinearGradient\");\n\nexports.LinearGradient = LinearGradient;\n\nvar RadialGradient = require(\"zrender/lib/graphic/RadialGradient\");\n\nexports.RadialGradient = RadialGradient;\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nexports.BoundingRect = BoundingRect;\n\nvar IncrementalDisplayable = require(\"zrender/lib/graphic/IncrementalDisplayable\");\n\nexports.IncrementalDisplayable = IncrementalDisplayable;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar round = Math.round;\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar EMPTY_OBJ = {};\n/**\n * Extend shape with parameters\n */\n\nfunction extendShape(opts) {\n  return Path.extend(opts);\n}\n/**\n * Extend path\n */\n\n\nfunction extendPath(pathData, opts) {\n  return pathTool.extendFromString(pathData, opts);\n}\n/**\n * Create a path element from path data string\n * @param {string} pathData\n * @param {Object} opts\n * @param {module:zrender/core/BoundingRect} rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makePath(pathData, opts, rect, layout) {\n  var path = pathTool.createFromString(pathData, opts);\n  var boundingRect = path.getBoundingRect();\n\n  if (rect) {\n    if (layout === 'center') {\n      rect = centerGraphic(rect, boundingRect);\n    }\n\n    resizePath(path, rect);\n  }\n\n  return path;\n}\n/**\n * Create a image element from image url\n * @param {string} imageUrl image url\n * @param {Object} opts options\n * @param {module:zrender/core/BoundingRect} rect constrain rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makeImage(imageUrl, rect, layout) {\n  var path = new ZImage({\n    style: {\n      image: imageUrl,\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    onload: function (img) {\n      if (layout === 'center') {\n        var boundingRect = {\n          width: img.width,\n          height: img.height\n        };\n        path.setStyle(centerGraphic(rect, boundingRect));\n      }\n    }\n  });\n  return path;\n}\n/**\n * Get position of centered element in bounding box.\n *\n * @param  {Object} rect         element local bounding box\n * @param  {Object} boundingRect constraint bounding box\n * @return {Object} element position containing x, y, width, and height\n */\n\n\nfunction centerGraphic(rect, boundingRect) {\n  // Set rect to center, keep width / height ratio.\n  var aspect = boundingRect.width / boundingRect.height;\n  var width = rect.height * aspect;\n  var height;\n\n  if (width <= rect.width) {\n    height = rect.height;\n  } else {\n    width = rect.width;\n    height = width / aspect;\n  }\n\n  var cx = rect.x + rect.width / 2;\n  var cy = rect.y + rect.height / 2;\n  return {\n    x: cx - width / 2,\n    y: cy - height / 2,\n    width: width,\n    height: height\n  };\n}\n\nvar mergePath = pathTool.mergePath;\n/**\n * Resize a path to fit the rect\n * @param {module:zrender/graphic/Path} path\n * @param {Object} rect\n */\n\nfunction resizePath(path, rect) {\n  if (!path.applyTransform) {\n    return;\n  }\n\n  var pathRect = path.getBoundingRect();\n  var m = pathRect.calculateTransform(rect);\n  path.applyTransform(m);\n}\n/**\n * Sub pixel optimize line for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x1]\n * @param {number} [param.shape.y1]\n * @param {number} [param.shape.x2]\n * @param {number} [param.shape.y2]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeLine(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n\n  if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n    shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n  }\n\n  if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n    shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n  }\n\n  return param;\n}\n/**\n * Sub pixel optimize rect for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x]\n * @param {number} [param.shape.y]\n * @param {number} [param.shape.width]\n * @param {number} [param.shape.height]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeRect(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n  var originX = shape.x;\n  var originY = shape.y;\n  var originWidth = shape.width;\n  var originHeight = shape.height;\n  shape.x = subPixelOptimize(shape.x, lineWidth, true);\n  shape.y = subPixelOptimize(shape.y, lineWidth, true);\n  shape.width = Math.max(subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x, originWidth === 0 ? 0 : 1);\n  shape.height = Math.max(subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y, originHeight === 0 ? 0 : 1);\n  return param;\n}\n/**\n * Sub pixel optimize for canvas\n *\n * @param {number} position Coordinate, such as x, y\n * @param {number} lineWidth Should be nonnegative integer.\n * @param {boolean=} positiveOrNegative Default false (negative).\n * @return {number} Optimized position.\n */\n\n\nfunction subPixelOptimize(position, lineWidth, positiveOrNegative) {\n  // Assure that (position + lineWidth / 2) is near integer edge,\n  // otherwise line will be fuzzy in canvas.\n  var doubledPosition = round(position * 2);\n  return (doubledPosition + round(lineWidth)) % 2 === 0 ? doubledPosition / 2 : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n}\n\nfunction hasFillOrStroke(fillOrStroke) {\n  return fillOrStroke != null && fillOrStroke != 'none';\n}\n\nfunction liftColor(color) {\n  return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n}\n/**\n * @private\n */\n\n\nfunction cacheElementStl(el) {\n  if (el.__hoverStlDirty) {\n    var stroke = el.style.stroke;\n    var fill = el.style.fill; // Create hoverStyle on mouseover\n\n    var hoverStyle = el.__hoverStl;\n    hoverStyle.fill = hoverStyle.fill || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n    hoverStyle.stroke = hoverStyle.stroke || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n    var normalStyle = {};\n\n    for (var name in hoverStyle) {\n      // See comment in `doSingleEnterHover`.\n      if (hoverStyle[name] != null) {\n        normalStyle[name] = el.style[name];\n      }\n    }\n\n    el.__normalStl = normalStyle;\n    el.__hoverStlDirty = false;\n  }\n}\n/**\n * @private\n */\n\n\nfunction doSingleEnterHover(el) {\n  if (el.__isHover) {\n    return;\n  }\n\n  cacheElementStl(el);\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.addHover(el, el.__hoverStl);\n  } else {\n    var style = el.style;\n    var insideRollbackOpt = style.insideRollbackOpt; // Consider case: only `position: 'top'` is set on emphasis, then text\n    // color should be returned to `autoColor`, rather than remain '#fff'.\n    // So we should rollback then apply again after style merging.\n\n    insideRollbackOpt && rollbackInsideStyle(style); // styles can be:\n    // {\n    //    label: {\n    //        show: false,\n    //        position: 'outside',\n    //        fontSize: 18\n    //    },\n    //    emphasis: {\n    //        label: {\n    //            show: true\n    //        }\n    //    }\n    // },\n    // where properties of `emphasis` may not appear in `normal`. We previously use\n    // module:echarts/util/model#defaultEmphasis to merge `normal` to `emphasis`.\n    // But consider rich text and setOption in merge mode, it is impossible to cover\n    // all properties in merge. So we use merge mode when setting style here, where\n    // only properties that is not `null/undefined` can be set. The disadventage:\n    // null/undefined can not be used to remove style any more in `emphasis`.\n\n    style.extendFrom(el.__hoverStl); // Do not save `insideRollback`.\n\n    if (insideRollbackOpt) {\n      applyInsideStyle(style, style.insideOriginalTextPosition, insideRollbackOpt); // textFill may be rollbacked to null.\n\n      if (style.textFill == null) {\n        style.textFill = insideRollbackOpt.autoColor;\n      }\n    }\n\n    el.dirty(false);\n    el.z2 += 1;\n  }\n\n  el.__isHover = true;\n}\n/**\n * @inner\n */\n\n\nfunction doSingleLeaveHover(el) {\n  if (!el.__isHover) {\n    return;\n  }\n\n  var normalStl = el.__normalStl;\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.removeHover(el);\n  } else {\n    // Consider null/undefined value, should use\n    // `setStyle` but not `extendFrom(stl, true)`.\n    normalStl && el.setStyle(normalStl);\n    el.z2 -= 1;\n  }\n\n  el.__isHover = false;\n}\n/**\n * @inner\n */\n\n\nfunction doEnterHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleEnterHover(child);\n    }\n  }) : doSingleEnterHover(el);\n}\n\nfunction doLeaveHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleLeaveHover(child);\n    }\n  }) : doSingleLeaveHover(el);\n}\n/**\n * @inner\n */\n\n\nfunction setElementHoverStl(el, hoverStl) {\n  // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n  // Often used when item group has a label element and it's hoverStyle is different\n  el.__hoverStl = el.hoverStyle || hoverStl || {};\n  el.__hoverStlDirty = true;\n\n  if (el.__isHover) {\n    cacheElementStl(el);\n  }\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOver(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOut(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doLeaveHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction enterEmphasis() {\n  this.__isEmphasis = true;\n  doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction leaveEmphasis() {\n  this.__isEmphasis = false;\n  doLeaveHover(this);\n}\n/**\n * Set hover style of element.\n * This method can be called repeatly without side-effects.\n * @param {module:zrender/Element} el\n * @param {Object} [hoverStyle]\n * @param {Object} [opt]\n * @param {boolean} [opt.hoverSilentOnTouch=false]\n *        In touch device, mouseover event will be trigger on touchstart event\n *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n *        conviniently use hoverStyle when tap on touch screen without additional\n *        code for compatibility.\n *        But if the chart/component has select feature, which usually also use\n *        hoverStyle, there might be conflict between 'select-highlight' and\n *        'hover-highlight' especially when roam is enabled (see geo for example).\n *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n *        on touch device.\n */\n\n\nfunction setHoverStyle(el, hoverStyle, opt) {\n  el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      setElementHoverStl(child, hoverStyle);\n    }\n  }) : setElementHoverStl(el, hoverStyle); // Duplicated function will be auto-ignored, see Eventful.js.\n\n  el.on('mouseover', onElementMouseOver).on('mouseout', onElementMouseOut); // Emphasis, normal can be triggered manually\n\n  el.on('emphasis', enterEmphasis).on('normal', leaveEmphasis);\n}\n/**\n * @param {Object|module:zrender/graphic/Style} normalStyle\n * @param {Object} emphasisStyle\n * @param {module:echarts/model/Model} normalModel\n * @param {module:echarts/model/Model} emphasisModel\n * @param {Object} opt Check `opt` of `setTextStyleCommon` to find other props.\n * @param {string|Function} [opt.defaultText]\n * @param {module:echarts/model/Model} [opt.labelFetcher] Fetch text by\n *      `opt.labelFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDataIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDimIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {Object} [normalSpecified]\n * @param {Object} [emphasisSpecified]\n */\n\n\nfunction setLabelStyle(normalStyle, emphasisStyle, normalModel, emphasisModel, opt, normalSpecified, emphasisSpecified) {\n  opt = opt || EMPTY_OBJ;\n  var labelFetcher = opt.labelFetcher;\n  var labelDataIndex = opt.labelDataIndex;\n  var labelDimIndex = opt.labelDimIndex; // This scenario, `label.normal.show = true; label.emphasis.show = false`,\n  // is not supported util someone requests.\n\n  var showNormal = normalModel.getShallow('show');\n  var showEmphasis = emphasisModel.getShallow('show'); // Consider performance, only fetch label when necessary.\n  // If `normal.show` is `false` and `emphasis.show` is `true` and `emphasis.formatter` is not set,\n  // label should be displayed, where text is fetched by `normal.formatter` or `opt.defaultText`.\n\n  var baseText;\n\n  if (showNormal || showEmphasis) {\n    if (labelFetcher) {\n      baseText = labelFetcher.getFormattedLabel(labelDataIndex, 'normal', null, labelDimIndex);\n    }\n\n    if (baseText == null) {\n      baseText = zrUtil.isFunction(opt.defaultText) ? opt.defaultText(labelDataIndex, opt) : opt.defaultText;\n    }\n  }\n\n  var normalStyleText = showNormal ? baseText : null;\n  var emphasisStyleText = showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'emphasis', null, labelDimIndex) : null, baseText) : null; // Optimize: If style.text is null, text will not be drawn.\n\n  if (normalStyleText != null || emphasisStyleText != null) {\n    // Always set `textStyle` even if `normalStyle.text` is null, because default\n    // values have to be set on `normalStyle`.\n    // If we set default values on `emphasisStyle`, consider case:\n    // Firstly, `setOption(... label: {normal: {text: null}, emphasis: {show: true}} ...);`\n    // Secondly, `setOption(... label: {noraml: {show: true, text: 'abc', color: 'red'} ...);`\n    // Then the 'red' will not work on emphasis.\n    setTextStyle(normalStyle, normalModel, normalSpecified, opt);\n    setTextStyle(emphasisStyle, emphasisModel, emphasisSpecified, opt, true);\n  }\n\n  normalStyle.text = normalStyleText;\n  emphasisStyle.text = emphasisStyleText;\n}\n/**\n * Set basic textStyle properties.\n * @param {Object|module:zrender/graphic/Style} textStyle\n * @param {module:echarts/model/Model} model\n * @param {Object} [specifiedTextStyle] Can be overrided by settings in model.\n * @param {Object} [opt] See `opt` of `setTextStyleCommon`.\n * @param {boolean} [isEmphasis]\n */\n\n\nfunction setTextStyle(textStyle, textStyleModel, specifiedTextStyle, opt, isEmphasis) {\n  setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis);\n  specifiedTextStyle && zrUtil.extend(textStyle, specifiedTextStyle);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n  return textStyle;\n}\n/**\n * Set text option in the style.\n * @deprecated\n * @param {Object} textStyle\n * @param {module:echarts/model/Model} labelModel\n * @param {string|boolean} defaultColor Default text color.\n *        If set as false, it will be processed as a emphasis style.\n */\n\n\nfunction setText(textStyle, labelModel, defaultColor) {\n  var opt = {\n    isRectText: true\n  };\n  var isEmphasis;\n\n  if (defaultColor === false) {\n    isEmphasis = true;\n  } else {\n    // Support setting color as 'auto' to get visual color.\n    opt.autoColor = defaultColor;\n  }\n\n  setTextStyleCommon(textStyle, labelModel, opt, isEmphasis);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n}\n/**\n * {\n *      disableBox: boolean, Whether diable drawing box of block (outer most).\n *      isRectText: boolean,\n *      autoColor: string, specify a color when color is 'auto',\n *              for textFill, textStroke, textBackgroundColor, and textBorderColor.\n *              If autoColor specified, it is used as default textFill.\n *      useInsideStyle:\n *              `true`: Use inside style (textFill, textStroke, textStrokeWidth)\n *                  if `textFill` is not specified.\n *              `false`: Do not use inside style.\n *              `null/undefined`: use inside style if `isRectText` is true and\n *                  `textFill` is not specified and textPosition contains `'inside'`.\n *      forceRich: boolean\n * }\n */\n\n\nfunction setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis) {\n  // Consider there will be abnormal when merge hover style to normal style if given default value.\n  opt = opt || EMPTY_OBJ;\n\n  if (opt.isRectText) {\n    var textPosition = textStyleModel.getShallow('position') || (isEmphasis ? null : 'inside'); // 'outside' is not a valid zr textPostion value, but used\n    // in bar series, and magric type should be considered.\n\n    textPosition === 'outside' && (textPosition = 'top');\n    textStyle.textPosition = textPosition;\n    textStyle.textOffset = textStyleModel.getShallow('offset');\n    var labelRotate = textStyleModel.getShallow('rotate');\n    labelRotate != null && (labelRotate *= Math.PI / 180);\n    textStyle.textRotation = labelRotate;\n    textStyle.textDistance = zrUtil.retrieve2(textStyleModel.getShallow('distance'), isEmphasis ? null : 5);\n  }\n\n  var ecModel = textStyleModel.ecModel;\n  var globalTextStyle = ecModel && ecModel.option.textStyle; // Consider case:\n  // {\n  //     data: [{\n  //         value: 12,\n  //         label: {\n  //             rich: {\n  //                 // no 'a' here but using parent 'a'.\n  //             }\n  //         }\n  //     }],\n  //     rich: {\n  //         a: { ... }\n  //     }\n  // }\n\n  var richItemNames = getRichItemNames(textStyleModel);\n  var richResult;\n\n  if (richItemNames) {\n    richResult = {};\n\n    for (var name in richItemNames) {\n      if (richItemNames.hasOwnProperty(name)) {\n        // Cascade is supported in rich.\n        var richTextStyle = textStyleModel.getModel(['rich', name]); // In rich, never `disableBox`.\n\n        setTokenTextStyle(richResult[name] = {}, richTextStyle, globalTextStyle, opt, isEmphasis);\n      }\n    }\n  }\n\n  textStyle.rich = richResult;\n  setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, true);\n\n  if (opt.forceRich && !opt.textStyle) {\n    opt.textStyle = {};\n  }\n\n  return textStyle;\n} // Consider case:\n// {\n//     data: [{\n//         value: 12,\n//         label: {\n//             rich: {\n//                 // no 'a' here but using parent 'a'.\n//             }\n//         }\n//     }],\n//     rich: {\n//         a: { ... }\n//     }\n// }\n\n\nfunction getRichItemNames(textStyleModel) {\n  // Use object to remove duplicated names.\n  var richItemNameMap;\n\n  while (textStyleModel && textStyleModel !== textStyleModel.ecModel) {\n    var rich = (textStyleModel.option || EMPTY_OBJ).rich;\n\n    if (rich) {\n      richItemNameMap = richItemNameMap || {};\n\n      for (var name in rich) {\n        if (rich.hasOwnProperty(name)) {\n          richItemNameMap[name] = 1;\n        }\n      }\n    }\n\n    textStyleModel = textStyleModel.parentModel;\n  }\n\n  return richItemNameMap;\n}\n\nfunction setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, isBlock) {\n  // In merge mode, default value should not be given.\n  globalTextStyle = !isEmphasis && globalTextStyle || EMPTY_OBJ;\n  textStyle.textFill = getAutoColor(textStyleModel.getShallow('color'), opt) || globalTextStyle.color;\n  textStyle.textStroke = getAutoColor(textStyleModel.getShallow('textBorderColor'), opt) || globalTextStyle.textBorderColor;\n  textStyle.textStrokeWidth = zrUtil.retrieve2(textStyleModel.getShallow('textBorderWidth'), globalTextStyle.textBorderWidth);\n\n  if (!isEmphasis) {\n    if (isBlock) {\n      // Always set `insideRollback`, for clearing previous.\n      var originalTextPosition = textStyle.textPosition;\n      textStyle.insideRollback = applyInsideStyle(textStyle, originalTextPosition, opt); // Save original textPosition, because style.textPosition will be repalced by\n      // real location (like [10, 30]) in zrender.\n\n      textStyle.insideOriginalTextPosition = originalTextPosition;\n      textStyle.insideRollbackOpt = opt;\n    } // Set default finally.\n\n\n    if (textStyle.textFill == null) {\n      textStyle.textFill = opt.autoColor;\n    }\n  } // Do not use `getFont` here, because merge should be supported, where\n  // part of these properties may be changed in emphasis style, and the\n  // others should remain their original value got from normal style.\n\n\n  textStyle.fontStyle = textStyleModel.getShallow('fontStyle') || globalTextStyle.fontStyle;\n  textStyle.fontWeight = textStyleModel.getShallow('fontWeight') || globalTextStyle.fontWeight;\n  textStyle.fontSize = textStyleModel.getShallow('fontSize') || globalTextStyle.fontSize;\n  textStyle.fontFamily = textStyleModel.getShallow('fontFamily') || globalTextStyle.fontFamily;\n  textStyle.textAlign = textStyleModel.getShallow('align');\n  textStyle.textVerticalAlign = textStyleModel.getShallow('verticalAlign') || textStyleModel.getShallow('baseline');\n  textStyle.textLineHeight = textStyleModel.getShallow('lineHeight');\n  textStyle.textWidth = textStyleModel.getShallow('width');\n  textStyle.textHeight = textStyleModel.getShallow('height');\n  textStyle.textTag = textStyleModel.getShallow('tag');\n\n  if (!isBlock || !opt.disableBox) {\n    textStyle.textBackgroundColor = getAutoColor(textStyleModel.getShallow('backgroundColor'), opt);\n    textStyle.textPadding = textStyleModel.getShallow('padding');\n    textStyle.textBorderColor = getAutoColor(textStyleModel.getShallow('borderColor'), opt);\n    textStyle.textBorderWidth = textStyleModel.getShallow('borderWidth');\n    textStyle.textBorderRadius = textStyleModel.getShallow('borderRadius');\n    textStyle.textBoxShadowColor = textStyleModel.getShallow('shadowColor');\n    textStyle.textBoxShadowBlur = textStyleModel.getShallow('shadowBlur');\n    textStyle.textBoxShadowOffsetX = textStyleModel.getShallow('shadowOffsetX');\n    textStyle.textBoxShadowOffsetY = textStyleModel.getShallow('shadowOffsetY');\n  }\n\n  textStyle.textShadowColor = textStyleModel.getShallow('textShadowColor') || globalTextStyle.textShadowColor;\n  textStyle.textShadowBlur = textStyleModel.getShallow('textShadowBlur') || globalTextStyle.textShadowBlur;\n  textStyle.textShadowOffsetX = textStyleModel.getShallow('textShadowOffsetX') || globalTextStyle.textShadowOffsetX;\n  textStyle.textShadowOffsetY = textStyleModel.getShallow('textShadowOffsetY') || globalTextStyle.textShadowOffsetY;\n}\n\nfunction getAutoColor(color, opt) {\n  return color !== 'auto' ? color : opt && opt.autoColor ? opt.autoColor : null;\n}\n\nfunction applyInsideStyle(textStyle, textPosition, opt) {\n  var useInsideStyle = opt.useInsideStyle;\n  var insideRollback;\n\n  if (textStyle.textFill == null && useInsideStyle !== false && (useInsideStyle === true || opt.isRectText && textPosition // textPosition can be [10, 30]\n  && typeof textPosition === 'string' && textPosition.indexOf('inside') >= 0)) {\n    insideRollback = {\n      textFill: null,\n      textStroke: textStyle.textStroke,\n      textStrokeWidth: textStyle.textStrokeWidth\n    };\n    textStyle.textFill = '#fff'; // Consider text with #fff overflow its container.\n\n    if (textStyle.textStroke == null) {\n      textStyle.textStroke = opt.autoColor;\n      textStyle.textStrokeWidth == null && (textStyle.textStrokeWidth = 2);\n    }\n  }\n\n  return insideRollback;\n}\n\nfunction rollbackInsideStyle(style) {\n  var insideRollback = style.insideRollback;\n\n  if (insideRollback) {\n    style.textFill = insideRollback.textFill;\n    style.textStroke = insideRollback.textStroke;\n    style.textStrokeWidth = insideRollback.textStrokeWidth;\n  }\n}\n\nfunction getFont(opt, ecModel) {\n  // ecModel or default text style model.\n  var gTextStyleModel = ecModel || ecModel.getModel('textStyle');\n  return zrUtil.trim([// FIXME in node-canvas fontWeight is before fontStyle\n  opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '', opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '', (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px', opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'].join(' '));\n}\n\nfunction animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n  if (typeof dataIndex === 'function') {\n    cb = dataIndex;\n    dataIndex = null;\n  } // Do not check 'animation' property directly here. Consider this case:\n  // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n  // but its parent model (`seriesModel`) does.\n\n\n  var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n  if (animationEnabled) {\n    var postfix = isUpdate ? 'Update' : '';\n    var duration = animatableModel.getShallow('animationDuration' + postfix);\n    var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n    var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n\n    if (typeof animationDelay === 'function') {\n      animationDelay = animationDelay(dataIndex, animatableModel.getAnimationDelayParams ? animatableModel.getAnimationDelayParams(el, dataIndex) : null);\n    }\n\n    if (typeof duration === 'function') {\n      duration = duration(dataIndex);\n    }\n\n    duration > 0 ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb, !!cb) : (el.stopAnimation(), el.attr(props), cb && cb());\n  } else {\n    el.stopAnimation();\n    el.attr(props);\n    cb && cb();\n  }\n}\n/**\n * Update graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} [cb]\n * @example\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n *     // Or\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, function () { console.log('Animation done!'); });\n */\n\n\nfunction updateProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Init graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} cb\n */\n\n\nfunction initProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Get transform matrix of target (param target),\n * in coordinate of its ancestor (param ancestor)\n *\n * @param {module:zrender/mixin/Transformable} target\n * @param {module:zrender/mixin/Transformable} [ancestor]\n */\n\n\nfunction getTransform(target, ancestor) {\n  var mat = matrix.identity([]);\n\n  while (target && target !== ancestor) {\n    matrix.mul(mat, target.getLocalTransform(), mat);\n    target = target.parent;\n  }\n\n  return mat;\n}\n/**\n * Apply transform to an vertex.\n * @param {Array.<number>} target [x, y]\n * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n * @param {boolean=} invert Whether use invert matrix.\n * @return {Array.<number>} [x, y]\n */\n\n\nfunction applyTransform(target, transform, invert) {\n  if (transform && !zrUtil.isArrayLike(transform)) {\n    transform = Transformable.getLocalTransform(transform);\n  }\n\n  if (invert) {\n    transform = matrix.invert([], transform);\n  }\n\n  return vector.applyTransform([], target, transform);\n}\n/**\n * @param {string} direction 'left' 'right' 'top' 'bottom'\n * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n * @param {boolean=} invert Whether use invert matrix.\n * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n */\n\n\nfunction transformDirection(direction, transform, invert) {\n  // Pick a base, ensure that transform result will not be (0, 0).\n  var hBase = transform[4] === 0 || transform[5] === 0 || transform[0] === 0 ? 1 : Math.abs(2 * transform[4] / transform[0]);\n  var vBase = transform[4] === 0 || transform[5] === 0 || transform[2] === 0 ? 1 : Math.abs(2 * transform[4] / transform[2]);\n  var vertex = [direction === 'left' ? -hBase : direction === 'right' ? hBase : 0, direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0];\n  vertex = applyTransform(vertex, transform, invert);\n  return Math.abs(vertex[0]) > Math.abs(vertex[1]) ? vertex[0] > 0 ? 'right' : 'left' : vertex[1] > 0 ? 'bottom' : 'top';\n}\n/**\n * Apply group transition animation from g1 to g2.\n * If no animatableModel, no animation.\n */\n\n\nfunction groupTransition(g1, g2, animatableModel, cb) {\n  if (!g1 || !g2) {\n    return;\n  }\n\n  function getElMap(g) {\n    var elMap = {};\n    g.traverse(function (el) {\n      if (!el.isGroup && el.anid) {\n        elMap[el.anid] = el;\n      }\n    });\n    return elMap;\n  }\n\n  function getAnimatableProps(el) {\n    var obj = {\n      position: vector.clone(el.position),\n      rotation: el.rotation\n    };\n\n    if (el.shape) {\n      obj.shape = zrUtil.extend({}, el.shape);\n    }\n\n    return obj;\n  }\n\n  var elMap1 = getElMap(g1);\n  g2.traverse(function (el) {\n    if (!el.isGroup && el.anid) {\n      var oldEl = elMap1[el.anid];\n\n      if (oldEl) {\n        var newProp = getAnimatableProps(el);\n        el.attr(getAnimatableProps(oldEl));\n        updateProps(el, newProp, animatableModel, el.dataIndex);\n      } // else {\n      //     if (el.previousProps) {\n      //         graphic.updateProps\n      //     }\n      // }\n\n    }\n  });\n}\n/**\n * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n * @param {Object} rect {x, y, width, height}\n * @return {Array.<Array.<number>>} A new clipped points.\n */\n\n\nfunction clipPointsByRect(points, rect) {\n  return zrUtil.map(points, function (point) {\n    var x = point[0];\n    x = mathMax(x, rect.x);\n    x = mathMin(x, rect.x + rect.width);\n    var y = point[1];\n    y = mathMax(y, rect.y);\n    y = mathMin(y, rect.y + rect.height);\n    return [x, y];\n  });\n}\n/**\n * @param {Object} targetRect {x, y, width, height}\n * @param {Object} rect {x, y, width, height}\n * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n */\n\n\nfunction clipRectByRect(targetRect, rect) {\n  var x = mathMax(targetRect.x, rect.x);\n  var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n  var y = mathMax(targetRect.y, rect.y);\n  var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height);\n\n  if (x2 >= x && y2 >= y) {\n    return {\n      x: x,\n      y: y,\n      width: x2 - x,\n      height: y2 - y\n    };\n  }\n}\n/**\n * @param {string} iconStr Support 'image://' or 'path://' or direct svg path.\n * @param {Object} [opt] Properties of `module:zrender/Element`, except `style`.\n * @param {Object} [rect] {x, y, width, height}\n * @return {module:zrender/Element} Icon path or image element.\n */\n\n\nfunction createIcon(iconStr, opt, rect) {\n  opt = zrUtil.extend({\n    rectHover: true\n  }, opt);\n  var style = opt.style = {\n    strokeNoScale: true\n  };\n  rect = rect || {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  };\n\n  if (iconStr) {\n    return iconStr.indexOf('image://') === 0 ? (style.image = iconStr.slice(8), zrUtil.defaults(style, rect), new ZImage(opt)) : makePath(iconStr.replace('path://', ''), opt, rect, 'center');\n  }\n}\n\nexports.extendShape = extendShape;\nexports.extendPath = extendPath;\nexports.makePath = makePath;\nexports.makeImage = makeImage;\nexports.mergePath = mergePath;\nexports.resizePath = resizePath;\nexports.subPixelOptimizeLine = subPixelOptimizeLine;\nexports.subPixelOptimizeRect = subPixelOptimizeRect;\nexports.subPixelOptimize = subPixelOptimize;\nexports.setHoverStyle = setHoverStyle;\nexports.setLabelStyle = setLabelStyle;\nexports.setTextStyle = setTextStyle;\nexports.setText = setText;\nexports.getFont = getFont;\nexports.updateProps = updateProps;\nexports.initProps = initProps;\nexports.getTransform = getTransform;\nexports.applyTransform = applyTransform;\nexports.transformDirection = transformDirection;\nexports.groupTransition = groupTransition;\nexports.clipPointsByRect = clipPointsByRect;\nexports.clipRectByRect = clipRectByRect;\nexports.createIcon = createIcon;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar throttle = require(\"../../util/throttle\");\n\nvar DataZoomView = require(\"./DataZoomView\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar layout = require(\"../../util/layout\");\n\nvar sliderMove = require(\"../helper/sliderMove\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar Rect = graphic.Rect;\nvar linearMap = numberUtil.linearMap;\nvar asc = numberUtil.asc;\nvar bind = zrUtil.bind;\nvar each = zrUtil.each; // Constants\n\nvar DEFAULT_LOCATION_EDGE_GAP = 7;\nvar DEFAULT_FRAME_BORDER_WIDTH = 1;\nvar DEFAULT_FILLER_SIZE = 30;\nvar HORIZONTAL = 'horizontal';\nvar VERTICAL = 'vertical';\nvar LABEL_GAP = 5;\nvar SHOW_DATA_SHADOW_SERIES_TYPE = ['line', 'bar', 'candlestick', 'scatter'];\nvar SliderZoomView = DataZoomView.extend({\n  type: 'dataZoom.slider',\n  init: function (ecModel, api) {\n    /**\n     * @private\n     * @type {Object}\n     */\n    this._displayables = {};\n    /**\n     * @private\n     * @type {string}\n     */\n\n    this._orient;\n    /**\n     * [0, 100]\n     * @private\n     */\n\n    this._range;\n    /**\n     * [coord of the first handle, coord of the second handle]\n     * @private\n     */\n\n    this._handleEnds;\n    /**\n     * [length, thick]\n     * @private\n     * @type {Array.<number>}\n     */\n\n    this._size;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this._handleWidth;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this._handleHeight;\n    /**\n     * @private\n     */\n\n    this._location;\n    /**\n     * @private\n     */\n\n    this._dragging;\n    /**\n     * @private\n     */\n\n    this._dataShadowInfo;\n    this.api = api;\n  },\n\n  /**\n   * @override\n   */\n  render: function (dataZoomModel, ecModel, api, payload) {\n    SliderZoomView.superApply(this, 'render', arguments);\n    throttle.createOrUpdate(this, '_dispatchZoomAction', this.dataZoomModel.get('throttle'), 'fixRate');\n    this._orient = dataZoomModel.get('orient');\n\n    if (this.dataZoomModel.get('show') === false) {\n      this.group.removeAll();\n      return;\n    } // Notice: this._resetInterval() should not be executed when payload.type\n    // is 'dataZoom', origin this._range should be maintained, otherwise 'pan'\n    // or 'zoom' info will be missed because of 'throttle' of this.dispatchAction,\n\n\n    if (!payload || payload.type !== 'dataZoom' || payload.from !== this.uid) {\n      this._buildView();\n    }\n\n    this._updateView();\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    SliderZoomView.superApply(this, 'remove', arguments);\n    throttle.clear(this, '_dispatchZoomAction');\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    SliderZoomView.superApply(this, 'dispose', arguments);\n    throttle.clear(this, '_dispatchZoomAction');\n  },\n  _buildView: function () {\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n\n    this._resetLocation();\n\n    this._resetInterval();\n\n    var barGroup = this._displayables.barGroup = new graphic.Group();\n\n    this._renderBackground();\n\n    this._renderHandle();\n\n    this._renderDataShadow();\n\n    thisGroup.add(barGroup);\n\n    this._positionGroup();\n  },\n\n  /**\n   * @private\n   */\n  _resetLocation: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var api = this.api; // If some of x/y/width/height are not specified,\n    // auto-adapt according to target grid.\n\n    var coordRect = this._findCoordRect();\n\n    var ecSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    }; // Default align by coordinate system rect.\n\n    var positionInfo = this._orient === HORIZONTAL ? {\n      // Why using 'right', because right should be used in vertical,\n      // and it is better to be consistent for dealing with position param merge.\n      right: ecSize.width - coordRect.x - coordRect.width,\n      top: ecSize.height - DEFAULT_FILLER_SIZE - DEFAULT_LOCATION_EDGE_GAP,\n      width: coordRect.width,\n      height: DEFAULT_FILLER_SIZE\n    } : {\n      // vertical\n      right: DEFAULT_LOCATION_EDGE_GAP,\n      top: coordRect.y,\n      width: DEFAULT_FILLER_SIZE,\n      height: coordRect.height\n    }; // Do not write back to option and replace value 'ph', because\n    // the 'ph' value should be recalculated when resize.\n\n    var layoutParams = layout.getLayoutParams(dataZoomModel.option); // Replace the placeholder value.\n\n    zrUtil.each(['right', 'top', 'width', 'height'], function (name) {\n      if (layoutParams[name] === 'ph') {\n        layoutParams[name] = positionInfo[name];\n      }\n    });\n    var layoutRect = layout.getLayoutRect(layoutParams, ecSize, dataZoomModel.padding);\n    this._location = {\n      x: layoutRect.x,\n      y: layoutRect.y\n    };\n    this._size = [layoutRect.width, layoutRect.height];\n    this._orient === VERTICAL && this._size.reverse();\n  },\n\n  /**\n   * @private\n   */\n  _positionGroup: function () {\n    var thisGroup = this.group;\n    var location = this._location;\n    var orient = this._orient; // Just use the first axis to determine mapping.\n\n    var targetAxisModel = this.dataZoomModel.getFirstTargetAxisModel();\n    var inverse = targetAxisModel && targetAxisModel.get('inverse');\n    var barGroup = this._displayables.barGroup;\n    var otherAxisInverse = (this._dataShadowInfo || {}).otherAxisInverse; // Transform barGroup.\n\n    barGroup.attr(orient === HORIZONTAL && !inverse ? {\n      scale: otherAxisInverse ? [1, 1] : [1, -1]\n    } : orient === HORIZONTAL && inverse ? {\n      scale: otherAxisInverse ? [-1, 1] : [-1, -1]\n    } : orient === VERTICAL && !inverse ? {\n      scale: otherAxisInverse ? [1, -1] : [1, 1],\n      rotation: Math.PI / 2 // Dont use Math.PI, considering shadow direction.\n\n    } : {\n      scale: otherAxisInverse ? [-1, -1] : [-1, 1],\n      rotation: Math.PI / 2\n    }); // Position barGroup\n\n    var rect = thisGroup.getBoundingRect([barGroup]);\n    thisGroup.attr('position', [location.x - rect.x, location.y - rect.y]);\n  },\n\n  /**\n   * @private\n   */\n  _getViewExtent: function () {\n    return [0, this._size[0]];\n  },\n  _renderBackground: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var size = this._size;\n    var barGroup = this._displayables.barGroup;\n    barGroup.add(new Rect({\n      silent: true,\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        fill: dataZoomModel.get('backgroundColor')\n      },\n      z2: -40\n    })); // Click panel, over shadow, below handles.\n\n    barGroup.add(new Rect({\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        fill: 'transparent'\n      },\n      z2: 0,\n      onclick: zrUtil.bind(this._onClickPanelClick, this)\n    }));\n  },\n  _renderDataShadow: function () {\n    var info = this._dataShadowInfo = this._prepareDataShadowInfo();\n\n    if (!info) {\n      return;\n    }\n\n    var size = this._size;\n    var seriesModel = info.series;\n    var data = seriesModel.getRawData();\n    var otherDim = seriesModel.getShadowDim ? seriesModel.getShadowDim() // @see candlestick\n    : info.otherDim;\n\n    if (otherDim == null) {\n      return;\n    }\n\n    var otherDataExtent = data.getDataExtent(otherDim); // Nice extent.\n\n    var otherOffset = (otherDataExtent[1] - otherDataExtent[0]) * 0.3;\n    otherDataExtent = [otherDataExtent[0] - otherOffset, otherDataExtent[1] + otherOffset];\n    var otherShadowExtent = [0, size[1]];\n    var thisShadowExtent = [0, size[0]];\n    var areaPoints = [[size[0], 0], [0, 0]];\n    var linePoints = [];\n    var step = thisShadowExtent[1] / (data.count() - 1);\n    var thisCoord = 0; // Optimize for large data shadow\n\n    var stride = Math.round(data.count() / size[0]);\n    var lastIsEmpty;\n    data.each([otherDim], function (value, index) {\n      if (stride > 0 && index % stride) {\n        thisCoord += step;\n        return;\n      } // FIXME\n      // Should consider axis.min/axis.max when drawing dataShadow.\n      // FIXME\n      // 应该使用统一的空判断？还是在list里进行空判断？\n\n\n      var isEmpty = value == null || isNaN(value) || value === ''; // See #4235.\n\n      var otherCoord = isEmpty ? 0 : linearMap(value, otherDataExtent, otherShadowExtent, true); // Attempt to draw data shadow precisely when there are empty value.\n\n      if (isEmpty && !lastIsEmpty && index) {\n        areaPoints.push([areaPoints[areaPoints.length - 1][0], 0]);\n        linePoints.push([linePoints[linePoints.length - 1][0], 0]);\n      } else if (!isEmpty && lastIsEmpty) {\n        areaPoints.push([thisCoord, 0]);\n        linePoints.push([thisCoord, 0]);\n      }\n\n      areaPoints.push([thisCoord, otherCoord]);\n      linePoints.push([thisCoord, otherCoord]);\n      thisCoord += step;\n      lastIsEmpty = isEmpty;\n    });\n    var dataZoomModel = this.dataZoomModel; // var dataBackgroundModel = dataZoomModel.getModel('dataBackground');\n\n    this._displayables.barGroup.add(new graphic.Polygon({\n      shape: {\n        points: areaPoints\n      },\n      style: zrUtil.defaults({\n        fill: dataZoomModel.get('dataBackgroundColor')\n      }, dataZoomModel.getModel('dataBackground.areaStyle').getAreaStyle()),\n      silent: true,\n      z2: -20\n    }));\n\n    this._displayables.barGroup.add(new graphic.Polyline({\n      shape: {\n        points: linePoints\n      },\n      style: dataZoomModel.getModel('dataBackground.lineStyle').getLineStyle(),\n      silent: true,\n      z2: -19\n    }));\n  },\n  _prepareDataShadowInfo: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var showDataShadow = dataZoomModel.get('showDataShadow');\n\n    if (showDataShadow === false) {\n      return;\n    } // Find a representative series.\n\n\n    var result;\n    var ecModel = this.ecModel;\n    dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n      var seriesModels = dataZoomModel.getAxisProxy(dimNames.name, axisIndex).getTargetSeriesModels();\n      zrUtil.each(seriesModels, function (seriesModel) {\n        if (result) {\n          return;\n        }\n\n        if (showDataShadow !== true && zrUtil.indexOf(SHOW_DATA_SHADOW_SERIES_TYPE, seriesModel.get('type')) < 0) {\n          return;\n        }\n\n        var thisAxis = ecModel.getComponent(dimNames.axis, axisIndex).axis;\n        var otherDim = getOtherDim(dimNames.name);\n        var otherAxisInverse;\n        var coordSys = seriesModel.coordinateSystem;\n\n        if (otherDim != null && coordSys.getOtherAxis) {\n          otherAxisInverse = coordSys.getOtherAxis(thisAxis).inverse;\n        }\n\n        otherDim = seriesModel.getData().mapDimension(otherDim);\n        result = {\n          thisAxis: thisAxis,\n          series: seriesModel,\n          thisDim: dimNames.name,\n          otherDim: otherDim,\n          otherAxisInverse: otherAxisInverse\n        };\n      }, this);\n    }, this);\n    return result;\n  },\n  _renderHandle: function () {\n    var displaybles = this._displayables;\n    var handles = displaybles.handles = [];\n    var handleLabels = displaybles.handleLabels = [];\n    var barGroup = this._displayables.barGroup;\n    var size = this._size;\n    var dataZoomModel = this.dataZoomModel;\n    barGroup.add(displaybles.filler = new Rect({\n      draggable: true,\n      cursor: getCursor(this._orient),\n      drift: bind(this._onDragMove, this, 'all'),\n      onmousemove: function (e) {\n        // Fot mobile devicem, prevent screen slider on the button.\n        eventTool.stop(e.event);\n      },\n      ondragstart: bind(this._showDataInfo, this, true),\n      ondragend: bind(this._onDragEnd, this),\n      onmouseover: bind(this._showDataInfo, this, true),\n      onmouseout: bind(this._showDataInfo, this, false),\n      style: {\n        fill: dataZoomModel.get('fillerColor'),\n        textPosition: 'inside'\n      }\n    })); // Frame border.\n\n    barGroup.add(new Rect(graphic.subPixelOptimizeRect({\n      silent: true,\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        stroke: dataZoomModel.get('dataBackgroundColor') || dataZoomModel.get('borderColor'),\n        lineWidth: DEFAULT_FRAME_BORDER_WIDTH,\n        fill: 'rgba(0,0,0,0)'\n      }\n    })));\n    each([0, 1], function (handleIndex) {\n      var path = graphic.createIcon(dataZoomModel.get('handleIcon'), {\n        cursor: getCursor(this._orient),\n        draggable: true,\n        drift: bind(this._onDragMove, this, handleIndex),\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        ondragend: bind(this._onDragEnd, this),\n        onmouseover: bind(this._showDataInfo, this, true),\n        onmouseout: bind(this._showDataInfo, this, false)\n      }, {\n        x: -1,\n        y: 0,\n        width: 2,\n        height: 2\n      });\n      var bRect = path.getBoundingRect();\n      this._handleHeight = numberUtil.parsePercent(dataZoomModel.get('handleSize'), this._size[1]);\n      this._handleWidth = bRect.width / bRect.height * this._handleHeight;\n      path.setStyle(dataZoomModel.getModel('handleStyle').getItemStyle());\n      var handleColor = dataZoomModel.get('handleColor'); // Compatitable with previous version\n\n      if (handleColor != null) {\n        path.style.fill = handleColor;\n      }\n\n      barGroup.add(handles[handleIndex] = path);\n      var textStyleModel = dataZoomModel.textStyleModel;\n      this.group.add(handleLabels[handleIndex] = new graphic.Text({\n        silent: true,\n        invisible: true,\n        style: {\n          x: 0,\n          y: 0,\n          text: '',\n          textVerticalAlign: 'middle',\n          textAlign: 'center',\n          textFill: textStyleModel.getTextColor(),\n          textFont: textStyleModel.getFont()\n        },\n        z2: 10\n      }));\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _resetInterval: function () {\n    var range = this._range = this.dataZoomModel.getPercentRange();\n\n    var viewExtent = this._getViewExtent();\n\n    this._handleEnds = [linearMap(range[0], [0, 100], viewExtent, true), linearMap(range[1], [0, 100], viewExtent, true)];\n  },\n\n  /**\n   * @private\n   * @param {(number|string)} handleIndex 0 or 1 or 'all'\n   * @param {number} delta\n   * @return {boolean} changed\n   */\n  _updateInterval: function (handleIndex, delta) {\n    var dataZoomModel = this.dataZoomModel;\n    var handleEnds = this._handleEnds;\n\n    var viewExtend = this._getViewExtent();\n\n    var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();\n    var percentExtent = [0, 100];\n    sliderMove(delta, handleEnds, viewExtend, dataZoomModel.get('zoomLock') ? 'all' : handleIndex, minMaxSpan.minSpan != null ? linearMap(minMaxSpan.minSpan, percentExtent, viewExtend, true) : null, minMaxSpan.maxSpan != null ? linearMap(minMaxSpan.maxSpan, percentExtent, viewExtend, true) : null);\n    var lastRange = this._range;\n    var range = this._range = asc([linearMap(handleEnds[0], viewExtend, percentExtent, true), linearMap(handleEnds[1], viewExtend, percentExtent, true)]);\n    return !lastRange || lastRange[0] !== range[0] || lastRange[1] !== range[1];\n  },\n\n  /**\n   * @private\n   */\n  _updateView: function (nonRealtime) {\n    var displaybles = this._displayables;\n    var handleEnds = this._handleEnds;\n    var handleInterval = asc(handleEnds.slice());\n    var size = this._size;\n    each([0, 1], function (handleIndex) {\n      // Handles\n      var handle = displaybles.handles[handleIndex];\n      var handleHeight = this._handleHeight;\n      handle.attr({\n        scale: [handleHeight / 2, handleHeight / 2],\n        position: [handleEnds[handleIndex], size[1] / 2 - handleHeight / 2]\n      });\n    }, this); // Filler\n\n    displaybles.filler.setShape({\n      x: handleInterval[0],\n      y: 0,\n      width: handleInterval[1] - handleInterval[0],\n      height: size[1]\n    });\n\n    this._updateDataInfo(nonRealtime);\n  },\n\n  /**\n   * @private\n   */\n  _updateDataInfo: function (nonRealtime) {\n    var dataZoomModel = this.dataZoomModel;\n    var displaybles = this._displayables;\n    var handleLabels = displaybles.handleLabels;\n    var orient = this._orient;\n    var labelTexts = ['', '']; // FIXME\n    // date型，支持formatter，autoformatter（ec2 date.getAutoFormatter）\n\n    if (dataZoomModel.get('showDetail')) {\n      var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n\n      if (axisProxy) {\n        var axis = axisProxy.getAxisModel().axis;\n        var range = this._range;\n        var dataInterval = nonRealtime // See #4434, data and axis are not processed and reset yet in non-realtime mode.\n        ? axisProxy.calculateDataWindow({\n          start: range[0],\n          end: range[1]\n        }).valueWindow : axisProxy.getDataValueWindow();\n        labelTexts = [this._formatLabel(dataInterval[0], axis), this._formatLabel(dataInterval[1], axis)];\n      }\n    }\n\n    var orderedHandleEnds = asc(this._handleEnds.slice());\n    setLabel.call(this, 0);\n    setLabel.call(this, 1);\n\n    function setLabel(handleIndex) {\n      // Label\n      // Text should not transform by barGroup.\n      // Ignore handlers transform\n      var barTransform = graphic.getTransform(displaybles.handles[handleIndex].parent, this.group);\n      var direction = graphic.transformDirection(handleIndex === 0 ? 'right' : 'left', barTransform);\n      var offset = this._handleWidth / 2 + LABEL_GAP;\n      var textPoint = graphic.applyTransform([orderedHandleEnds[handleIndex] + (handleIndex === 0 ? -offset : offset), this._size[1] / 2], barTransform);\n      handleLabels[handleIndex].setStyle({\n        x: textPoint[0],\n        y: textPoint[1],\n        textVerticalAlign: orient === HORIZONTAL ? 'middle' : direction,\n        textAlign: orient === HORIZONTAL ? direction : 'center',\n        text: labelTexts[handleIndex]\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _formatLabel: function (value, axis) {\n    var dataZoomModel = this.dataZoomModel;\n    var labelFormatter = dataZoomModel.get('labelFormatter');\n    var labelPrecision = dataZoomModel.get('labelPrecision');\n\n    if (labelPrecision == null || labelPrecision === 'auto') {\n      labelPrecision = axis.getPixelPrecision();\n    }\n\n    var valueStr = value == null || isNaN(value) ? '' // FIXME Glue code\n    : axis.type === 'category' || axis.type === 'time' ? axis.scale.getLabel(Math.round(value)) // param of toFixed should less then 20.\n    : value.toFixed(Math.min(labelPrecision, 20));\n    return zrUtil.isFunction(labelFormatter) ? labelFormatter(value, valueStr) : zrUtil.isString(labelFormatter) ? labelFormatter.replace('{value}', valueStr) : valueStr;\n  },\n\n  /**\n   * @private\n   * @param {boolean} showOrHide true: show, false: hide\n   */\n  _showDataInfo: function (showOrHide) {\n    // Always show when drgging.\n    showOrHide = this._dragging || showOrHide;\n    var handleLabels = this._displayables.handleLabels;\n    handleLabels[0].attr('invisible', !showOrHide);\n    handleLabels[1].attr('invisible', !showOrHide);\n  },\n  _onDragMove: function (handleIndex, dx, dy) {\n    this._dragging = true; // Transform dx, dy to bar coordination.\n\n    var barTransform = this._displayables.barGroup.getLocalTransform();\n\n    var vertex = graphic.applyTransform([dx, dy], barTransform, true);\n\n    var changed = this._updateInterval(handleIndex, vertex[0]);\n\n    var realtime = this.dataZoomModel.get('realtime');\n\n    this._updateView(!realtime); // Avoid dispatch dataZoom repeatly but range not changed,\n    // which cause bad visual effect when progressive enabled.\n\n\n    changed && realtime && this._dispatchZoomAction();\n  },\n  _onDragEnd: function () {\n    this._dragging = false;\n\n    this._showDataInfo(false); // While in realtime mode and stream mode, dispatch action when\n    // drag end will cause the whole view rerender, which is unnecessary.\n\n\n    var realtime = this.dataZoomModel.get('realtime');\n    !realtime && this._dispatchZoomAction();\n  },\n  _onClickPanelClick: function (e) {\n    var size = this._size;\n\n    var localPoint = this._displayables.barGroup.transformCoordToLocal(e.offsetX, e.offsetY);\n\n    if (localPoint[0] < 0 || localPoint[0] > size[0] || localPoint[1] < 0 || localPoint[1] > size[1]) {\n      return;\n    }\n\n    var handleEnds = this._handleEnds;\n    var center = (handleEnds[0] + handleEnds[1]) / 2;\n\n    var changed = this._updateInterval('all', localPoint[0] - center);\n\n    this._updateView();\n\n    changed && this._dispatchZoomAction();\n  },\n\n  /**\n   * This action will be throttled.\n   * @private\n   */\n  _dispatchZoomAction: function () {\n    var range = this._range;\n    this.api.dispatchAction({\n      type: 'dataZoom',\n      from: this.uid,\n      dataZoomId: this.dataZoomModel.id,\n      start: range[0],\n      end: range[1]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _findCoordRect: function () {\n    // Find the grid coresponding to the first axis referred by dataZoom.\n    var rect;\n    each(this.getTargetCoordInfo(), function (coordInfoList) {\n      if (!rect && coordInfoList.length) {\n        var coordSys = coordInfoList[0].model.coordinateSystem;\n        rect = coordSys.getRect && coordSys.getRect();\n      }\n    });\n\n    if (!rect) {\n      var width = this.api.getWidth();\n      var height = this.api.getHeight();\n      rect = {\n        x: width * 0.2,\n        y: height * 0.2,\n        width: width * 0.6,\n        height: height * 0.6\n      };\n    }\n\n    return rect;\n  }\n});\n\nfunction getOtherDim(thisDim) {\n  // FIXME\n  // 这个逻辑和getOtherAxis里一致，但是写在这里是否不好\n  var map = {\n    x: 'y',\n    y: 'x',\n    radius: 'angle',\n    angle: 'radius'\n  };\n  return map[thisDim];\n}\n\nfunction getCursor(orient) {\n  return orient === 'vertical' ? 'ns-resize' : 'ew-resize';\n}\n\nvar _default = SliderZoomView;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar dataFormatMixin = require(\"../../model/mixin/dataFormat\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar addCommas = formatUtil.addCommas;\nvar encodeHTML = formatUtil.encodeHTML;\n\nfunction fillLabel(opt) {\n  modelUtil.defaultEmphasis(opt, 'label', ['show']);\n}\n\nvar MarkerModel = echarts.extendComponentModel({\n  type: 'marker',\n  dependencies: ['series', 'grid', 'polar', 'geo'],\n\n  /**\n   * @overrite\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    this.mergeOption(option, ecModel, extraOpt.createdBySelf, true);\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function () {\n    if (env.node) {\n      return false;\n    }\n\n    var hostSeries = this.__hostSeries;\n    return this.getShallow('animation') && hostSeries && hostSeries.isAnimationEnabled();\n  },\n  mergeOption: function (newOpt, ecModel, createdBySelf, isInit) {\n    var MarkerModel = this.constructor;\n    var modelPropName = this.mainType + 'Model';\n\n    if (!createdBySelf) {\n      ecModel.eachSeries(function (seriesModel) {\n        var markerOpt = seriesModel.get(this.mainType, true);\n        var markerModel = seriesModel[modelPropName];\n\n        if (!markerOpt || !markerOpt.data) {\n          seriesModel[modelPropName] = null;\n          return;\n        }\n\n        if (!markerModel) {\n          if (isInit) {\n            // Default label emphasis `position` and `show`\n            fillLabel(markerOpt);\n          }\n\n          zrUtil.each(markerOpt.data, function (item) {\n            // FIXME Overwrite fillLabel method ?\n            if (item instanceof Array) {\n              fillLabel(item[0]);\n              fillLabel(item[1]);\n            } else {\n              fillLabel(item);\n            }\n          });\n          markerModel = new MarkerModel(markerOpt, this, ecModel);\n          zrUtil.extend(markerModel, {\n            mainType: this.mainType,\n            // Use the same series index and name\n            seriesIndex: seriesModel.seriesIndex,\n            name: seriesModel.name,\n            createdBySelf: true\n          });\n          markerModel.__hostSeries = seriesModel;\n        } else {\n          markerModel.mergeOption(markerOpt, ecModel, true);\n        }\n\n        seriesModel[modelPropName] = markerModel;\n      }, this);\n    }\n  },\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var value = this.getRawValue(dataIndex);\n    var formattedValue = zrUtil.isArray(value) ? zrUtil.map(value, addCommas).join(', ') : addCommas(value);\n    var name = data.getName(dataIndex);\n    var html = encodeHTML(this.name);\n\n    if (value != null || name) {\n      html += '<br />';\n    }\n\n    if (name) {\n      html += encodeHTML(name);\n\n      if (value != null) {\n        html += ' : ';\n      }\n    }\n\n    if (value != null) {\n      html += encodeHTML(formattedValue);\n    }\n\n    return html;\n  },\n  getData: function () {\n    return this._data;\n  },\n  setData: function (data) {\n    this._data = data;\n  }\n});\nzrUtil.mixin(MarkerModel, dataFormatMixin);\nvar _default = MarkerModel;\nmodule.exports = _default;","var layout = require(\"../../util/layout\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar linearMap = _number.linearMap;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction getSortedIndices(data, sort) {\n  var valueDim = data.mapDimension('value');\n  var valueArr = data.mapArray(valueDim, function (val) {\n    return val;\n  });\n  var indices = [];\n  var isAscending = sort === 'ascending';\n\n  for (var i = 0, len = data.count(); i < len; i++) {\n    indices[i] = i;\n  } // Add custom sortable function & none sortable opetion by \"options.sort\"\n\n\n  if (typeof sort === 'function') {\n    indices.sort(sort);\n  } else if (sort !== 'none') {\n    indices.sort(function (a, b) {\n      return isAscending ? valueArr[a] - valueArr[b] : valueArr[b] - valueArr[a];\n    });\n  }\n\n  return indices;\n}\n\nfunction labelLayout(data) {\n  data.each(function (idx) {\n    var itemModel = data.getItemModel(idx);\n    var labelModel = itemModel.getModel('label');\n    var labelPosition = labelModel.get('position');\n    var labelLineModel = itemModel.getModel('labelLine');\n    var layout = data.getItemLayout(idx);\n    var points = layout.points;\n    var isLabelInside = labelPosition === 'inner' || labelPosition === 'inside' || labelPosition === 'center';\n    var textAlign;\n    var textX;\n    var textY;\n    var linePoints;\n\n    if (isLabelInside) {\n      textX = (points[0][0] + points[1][0] + points[2][0] + points[3][0]) / 4;\n      textY = (points[0][1] + points[1][1] + points[2][1] + points[3][1]) / 4;\n      textAlign = 'center';\n      linePoints = [[textX, textY], [textX, textY]];\n    } else {\n      var x1;\n      var y1;\n      var x2;\n      var labelLineLen = labelLineModel.get('length');\n\n      if (labelPosition === 'left') {\n        // Left side\n        x1 = (points[3][0] + points[0][0]) / 2;\n        y1 = (points[3][1] + points[0][1]) / 2;\n        x2 = x1 - labelLineLen;\n        textX = x2 - 5;\n        textAlign = 'right';\n      } else {\n        // Right side\n        x1 = (points[1][0] + points[2][0]) / 2;\n        y1 = (points[1][1] + points[2][1]) / 2;\n        x2 = x1 + labelLineLen;\n        textX = x2 + 5;\n        textAlign = 'left';\n      }\n\n      var y2 = y1;\n      linePoints = [[x1, y1], [x2, y2]];\n      textY = y2;\n    }\n\n    layout.label = {\n      linePoints: linePoints,\n      x: textX,\n      y: textY,\n      verticalAlign: 'middle',\n      textAlign: textAlign,\n      inside: isLabelInside\n    };\n  });\n}\n\nfunction _default(ecModel, api, payload) {\n  ecModel.eachSeriesByType('funnel', function (seriesModel) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var sort = seriesModel.get('sort');\n    var viewRect = getViewRect(seriesModel, api);\n    var indices = getSortedIndices(data, sort);\n    var sizeExtent = [parsePercent(seriesModel.get('minSize'), viewRect.width), parsePercent(seriesModel.get('maxSize'), viewRect.width)];\n    var dataExtent = data.getDataExtent(valueDim);\n    var min = seriesModel.get('min');\n    var max = seriesModel.get('max');\n\n    if (min == null) {\n      min = Math.min(dataExtent[0], 0);\n    }\n\n    if (max == null) {\n      max = dataExtent[1];\n    }\n\n    var funnelAlign = seriesModel.get('funnelAlign');\n    var gap = seriesModel.get('gap');\n    var itemHeight = (viewRect.height - gap * (data.count() - 1)) / data.count();\n    var y = viewRect.y;\n\n    var getLinePoints = function (idx, offY) {\n      // End point index is data.count() and we assign it 0\n      var val = data.get(valueDim, idx) || 0;\n      var itemWidth = linearMap(val, [min, max], sizeExtent, true);\n      var x0;\n\n      switch (funnelAlign) {\n        case 'left':\n          x0 = viewRect.x;\n          break;\n\n        case 'center':\n          x0 = viewRect.x + (viewRect.width - itemWidth) / 2;\n          break;\n\n        case 'right':\n          x0 = viewRect.x + viewRect.width - itemWidth;\n          break;\n      }\n\n      return [[x0, offY], [x0 + itemWidth, offY]];\n    };\n\n    if (sort === 'ascending') {\n      // From bottom to top\n      itemHeight = -itemHeight;\n      gap = -gap;\n      y += viewRect.height;\n      indices = indices.reverse();\n    }\n\n    for (var i = 0; i < indices.length; i++) {\n      var idx = indices[i];\n      var nextIdx = indices[i + 1];\n      var itemModel = data.getItemModel(idx);\n      var height = itemModel.get('itemStyle.height');\n\n      if (height == null) {\n        height = itemHeight;\n      } else {\n        height = parsePercent(height, viewRect.height);\n\n        if (sort === 'ascending') {\n          height = -height;\n        }\n      }\n\n      var start = getLinePoints(idx, y);\n      var end = getLinePoints(nextIdx, y + height);\n      y += height + gap;\n      data.setItemLayout(idx, {\n        points: start.concat(end.slice().reverse())\n      });\n    }\n\n    labelLayout(data);\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar _poly = require(\"../line/poly\");\n\nvar Polygon = _poly.Polygon;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar bind = _util.bind;\nvar extend = _util.extend;\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file  The file used to draw themeRiver view\n * @author  Deqing Li(annong035@gmail.com)\n */\nvar _default = echarts.extendChartView({\n  type: 'themeRiver',\n  init: function () {\n    this._layers = [];\n  },\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var group = this.group;\n    var layerSeries = seriesModel.getLayerSeries();\n    var layoutInfo = data.getLayout('layoutInfo');\n    var rect = layoutInfo.rect;\n    var boundaryGap = layoutInfo.boundaryGap;\n    group.attr('position', [0, rect.y + boundaryGap[0]]);\n\n    function keyGetter(item) {\n      return item.name;\n    }\n\n    var dataDiffer = new DataDiffer(this._layersSeries || [], layerSeries, keyGetter, keyGetter);\n    var newLayersGroups = {};\n    dataDiffer.add(bind(process, this, 'add')).update(bind(process, this, 'update')).remove(bind(process, this, 'remove')).execute();\n\n    function process(status, idx, oldIdx) {\n      var oldLayersGroups = this._layers;\n\n      if (status === 'remove') {\n        group.remove(oldLayersGroups[idx]);\n        return;\n      }\n\n      var points0 = [];\n      var points1 = [];\n      var color;\n      var indices = layerSeries[idx].indices;\n\n      for (var j = 0; j < indices.length; j++) {\n        var layout = data.getItemLayout(indices[j]);\n        var x = layout.x;\n        var y0 = layout.y0;\n        var y = layout.y;\n        points0.push([x, y0]);\n        points1.push([x, y0 + y]);\n        color = data.getItemVisual(indices[j], 'color');\n      }\n\n      var polygon;\n      var text;\n      var textLayout = data.getItemLayout(indices[0]);\n      var itemModel = data.getItemModel(indices[j - 1]);\n      var labelModel = itemModel.getModel('label');\n      var margin = labelModel.get('margin');\n\n      if (status === 'add') {\n        var layerGroup = newLayersGroups[idx] = new graphic.Group();\n        polygon = new Polygon({\n          shape: {\n            points: points0,\n            stackedOnPoints: points1,\n            smooth: 0.4,\n            stackedOnSmooth: 0.4,\n            smoothConstraint: false\n          },\n          z2: 0\n        });\n        text = new graphic.Text({\n          style: {\n            x: textLayout.x - margin,\n            y: textLayout.y0 + textLayout.y / 2\n          }\n        });\n        layerGroup.add(polygon);\n        layerGroup.add(text);\n        group.add(layerGroup);\n        polygon.setClipPath(createGridClipShape(polygon.getBoundingRect(), seriesModel, function () {\n          polygon.removeClipPath();\n        }));\n      } else {\n        var layerGroup = oldLayersGroups[oldIdx];\n        polygon = layerGroup.childAt(0);\n        text = layerGroup.childAt(1);\n        group.add(layerGroup);\n        newLayersGroups[idx] = layerGroup;\n        graphic.updateProps(polygon, {\n          shape: {\n            points: points0,\n            stackedOnPoints: points1\n          }\n        }, seriesModel);\n        graphic.updateProps(text, {\n          style: {\n            x: textLayout.x - margin,\n            y: textLayout.y0 + textLayout.y / 2\n          }\n        }, seriesModel);\n      }\n\n      var hoverItemStyleModel = itemModel.getModel('emphasis.itemStyle');\n      var itemStyleModel = itemModel.getModel('itemStyle');\n      graphic.setTextStyle(text.style, labelModel, {\n        text: labelModel.get('show') ? seriesModel.getFormattedLabel(indices[j - 1], 'normal') || data.getName(indices[j - 1]) : null,\n        textVerticalAlign: 'middle'\n      });\n      polygon.setStyle(extend({\n        fill: color\n      }, itemStyleModel.getItemStyle(['color'])));\n      graphic.setHoverStyle(polygon, hoverItemStyleModel.getItemStyle());\n    }\n\n    this._layersSeries = layerSeries;\n    this._layers = newLayersGroups;\n  },\n  dispose: function () {}\n}); // add animation to the view\n\n\nfunction createGridClipShape(rect, seriesModel, cb) {\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x - 10,\n      y: rect.y - 10,\n      width: 0,\n      height: rect.height + 20\n    }\n  });\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width + 20,\n      height: rect.height + 20\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar POSSIBLE_STYLES = ['areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle', 'chordStyle', 'label', 'labelLine'];\n\nfunction compatEC2ItemStyle(opt) {\n  var itemStyleOpt = opt && opt.itemStyle;\n\n  if (!itemStyleOpt) {\n    return;\n  }\n\n  for (var i = 0, len = POSSIBLE_STYLES.length; i < len; i++) {\n    var styleName = POSSIBLE_STYLES[i];\n    var normalItemStyleOpt = itemStyleOpt.normal;\n    var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n\n    if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].normal) {\n        opt[styleName].normal = normalItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n      }\n\n      normalItemStyleOpt[styleName] = null;\n    }\n\n    if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].emphasis) {\n        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n      }\n\n      emphasisItemStyleOpt[styleName] = null;\n    }\n  }\n}\n\nfunction convertNormalEmphasis(opt, optType, useExtend) {\n  if (opt && opt[optType] && (opt[optType].normal || opt[optType].emphasis)) {\n    var normalOpt = opt[optType].normal;\n    var emphasisOpt = opt[optType].emphasis;\n\n    if (normalOpt) {\n      // Timeline controlStyle has other properties besides normal and emphasis\n      if (useExtend) {\n        opt[optType].normal = opt[optType].emphasis = null;\n        zrUtil.defaults(opt[optType], normalOpt);\n      } else {\n        opt[optType] = normalOpt;\n      }\n    }\n\n    if (emphasisOpt) {\n      opt.emphasis = opt.emphasis || {};\n      opt.emphasis[optType] = emphasisOpt;\n    }\n  }\n}\n\nfunction removeEC3NormalStatus(opt) {\n  convertNormalEmphasis(opt, 'itemStyle');\n  convertNormalEmphasis(opt, 'lineStyle');\n  convertNormalEmphasis(opt, 'areaStyle');\n  convertNormalEmphasis(opt, 'label');\n  convertNormalEmphasis(opt, 'labelLine'); // treemap\n\n  convertNormalEmphasis(opt, 'upperLabel'); // graph\n\n  convertNormalEmphasis(opt, 'edgeLabel');\n}\n\nfunction compatTextStyle(opt, propName) {\n  // Check whether is not object (string\\null\\undefined ...)\n  var labelOptSingle = isObject(opt) && opt[propName];\n  var textStyle = isObject(labelOptSingle) && labelOptSingle.textStyle;\n\n  if (textStyle) {\n    for (var i = 0, len = modelUtil.TEXT_STYLE_OPTIONS.length; i < len; i++) {\n      var propName = modelUtil.TEXT_STYLE_OPTIONS[i];\n\n      if (textStyle.hasOwnProperty(propName)) {\n        labelOptSingle[propName] = textStyle[propName];\n      }\n    }\n  }\n}\n\nfunction compatEC3CommonStyles(opt) {\n  if (opt) {\n    removeEC3NormalStatus(opt);\n    compatTextStyle(opt, 'label');\n    opt.emphasis && compatTextStyle(opt.emphasis, 'label');\n  }\n}\n\nfunction processSeries(seriesOpt) {\n  if (!isObject(seriesOpt)) {\n    return;\n  }\n\n  compatEC2ItemStyle(seriesOpt);\n  removeEC3NormalStatus(seriesOpt);\n  compatTextStyle(seriesOpt, 'label'); // treemap\n\n  compatTextStyle(seriesOpt, 'upperLabel'); // graph\n\n  compatTextStyle(seriesOpt, 'edgeLabel');\n\n  if (seriesOpt.emphasis) {\n    compatTextStyle(seriesOpt.emphasis, 'label'); // treemap\n\n    compatTextStyle(seriesOpt.emphasis, 'upperLabel'); // graph\n\n    compatTextStyle(seriesOpt.emphasis, 'edgeLabel');\n  }\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint) {\n    compatEC2ItemStyle(markPoint);\n    compatEC3CommonStyles(markPoint);\n  }\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine) {\n    compatEC2ItemStyle(markLine);\n    compatEC3CommonStyles(markLine);\n  }\n\n  var markArea = seriesOpt.markArea;\n\n  if (markArea) {\n    compatEC3CommonStyles(markArea);\n  }\n\n  var data = seriesOpt.data; // Break with ec3: if `setOption` again, there may be no `type` in option,\n  // then the backward compat based on option type will not be performed.\n\n  if (seriesOpt.type === 'graph') {\n    data = data || seriesOpt.nodes;\n    var edgeData = seriesOpt.links || seriesOpt.edges;\n\n    if (edgeData && !zrUtil.isTypedArray(edgeData)) {\n      for (var i = 0; i < edgeData.length; i++) {\n        compatEC3CommonStyles(edgeData[i]);\n      }\n    }\n\n    zrUtil.each(seriesOpt.categories, function (opt) {\n      removeEC3NormalStatus(opt);\n    });\n  }\n\n  if (data && !zrUtil.isTypedArray(data)) {\n    for (var i = 0; i < data.length; i++) {\n      compatEC3CommonStyles(data[i]);\n    }\n  } // mark point data\n\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint && markPoint.data) {\n    var mpData = markPoint.data;\n\n    for (var i = 0; i < mpData.length; i++) {\n      compatEC3CommonStyles(mpData[i]);\n    }\n  } // mark line data\n\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine && markLine.data) {\n    var mlData = markLine.data;\n\n    for (var i = 0; i < mlData.length; i++) {\n      if (zrUtil.isArray(mlData[i])) {\n        compatEC3CommonStyles(mlData[i][0]);\n        compatEC3CommonStyles(mlData[i][1]);\n      } else {\n        compatEC3CommonStyles(mlData[i]);\n      }\n    }\n  } // Series\n\n\n  if (seriesOpt.type === 'gauge') {\n    compatTextStyle(seriesOpt, 'axisLabel');\n    compatTextStyle(seriesOpt, 'title');\n    compatTextStyle(seriesOpt, 'detail');\n  } else if (seriesOpt.type === 'treemap') {\n    convertNormalEmphasis(seriesOpt.breadcrumb, 'itemStyle');\n    zrUtil.each(seriesOpt.levels, function (opt) {\n      removeEC3NormalStatus(opt);\n    });\n  } else if (seriesOpt.type === 'tree') {\n    removeEC3NormalStatus(seriesOpt.leaves);\n  } // sunburst starts from ec4, so it does not need to compat levels.\n\n}\n\nfunction toArr(o) {\n  return zrUtil.isArray(o) ? o : o ? [o] : [];\n}\n\nfunction toObj(o) {\n  return (zrUtil.isArray(o) ? o[0] : o) || {};\n}\n\nfunction _default(option, isTheme) {\n  each(toArr(option.series), function (seriesOpt) {\n    isObject(seriesOpt) && processSeries(seriesOpt);\n  });\n  var axes = ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'parallelAxis', 'radar'];\n  isTheme && axes.push('valueAxis', 'categoryAxis', 'logAxis', 'timeAxis');\n  each(axes, function (axisName) {\n    each(toArr(option[axisName]), function (axisOpt) {\n      if (axisOpt) {\n        compatTextStyle(axisOpt, 'axisLabel');\n        compatTextStyle(axisOpt.axisPointer, 'label');\n      }\n    });\n  });\n  each(toArr(option.parallel), function (parallelOpt) {\n    var parallelAxisDefault = parallelOpt && parallelOpt.parallelAxisDefault;\n    compatTextStyle(parallelAxisDefault, 'axisLabel');\n    compatTextStyle(parallelAxisDefault && parallelAxisDefault.axisPointer, 'label');\n  });\n  each(toArr(option.calendar), function (calendarOpt) {\n    convertNormalEmphasis(calendarOpt, 'itemStyle');\n    compatTextStyle(calendarOpt, 'dayLabel');\n    compatTextStyle(calendarOpt, 'monthLabel');\n    compatTextStyle(calendarOpt, 'yearLabel');\n  }); // radar.name.textStyle\n\n  each(toArr(option.radar), function (radarOpt) {\n    compatTextStyle(radarOpt, 'name');\n  });\n  each(toArr(option.geo), function (geoOpt) {\n    if (isObject(geoOpt)) {\n      compatEC3CommonStyles(geoOpt);\n      each(toArr(geoOpt.regions), function (regionObj) {\n        compatEC3CommonStyles(regionObj);\n      });\n    }\n  });\n  each(toArr(option.timeline), function (timelineOpt) {\n    compatEC3CommonStyles(timelineOpt);\n    convertNormalEmphasis(timelineOpt, 'label');\n    convertNormalEmphasis(timelineOpt, 'itemStyle');\n    convertNormalEmphasis(timelineOpt, 'controlStyle', true);\n    var data = timelineOpt.data;\n    zrUtil.isArray(data) && zrUtil.each(data, function (item) {\n      if (zrUtil.isObject(item)) {\n        convertNormalEmphasis(item, 'label');\n        convertNormalEmphasis(item, 'itemStyle');\n      }\n    });\n  });\n  each(toArr(option.toolbox), function (toolboxOpt) {\n    convertNormalEmphasis(toolboxOpt, 'iconStyle');\n    each(toolboxOpt.feature, function (featureOpt) {\n      convertNormalEmphasis(featureOpt, 'iconStyle');\n    });\n  });\n  compatTextStyle(toObj(option.axisPointer), 'label');\n  compatTextStyle(toObj(option.tooltip).axisPointer, 'label');\n}\n\nmodule.exports = _default;","var fixShadow = require(\"./helper/fixShadow\");\n\nvar STYLE_COMMON_PROPS = [['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'], ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]]; // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n// var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\nvar Style = function (opts, host) {\n  this.extendFrom(opts, false);\n  this.host = host;\n};\n\nfunction createLinearGradient(ctx, obj, rect) {\n  var x = obj.x == null ? 0 : obj.x;\n  var x2 = obj.x2 == null ? 1 : obj.x2;\n  var y = obj.y == null ? 0 : obj.y;\n  var y2 = obj.y2 == null ? 0 : obj.y2;\n\n  if (!obj.global) {\n    x = x * rect.width + rect.x;\n    x2 = x2 * rect.width + rect.x;\n    y = y * rect.height + rect.y;\n    y2 = y2 * rect.height + rect.y;\n  } // Fix NaN when rect is Infinity\n\n\n  x = isNaN(x) ? 0 : x;\n  x2 = isNaN(x2) ? 1 : x2;\n  y = isNaN(y) ? 0 : y;\n  y2 = isNaN(y2) ? 0 : y2;\n  var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n  return canvasGradient;\n}\n\nfunction createRadialGradient(ctx, obj, rect) {\n  var width = rect.width;\n  var height = rect.height;\n  var min = Math.min(width, height);\n  var x = obj.x == null ? 0.5 : obj.x;\n  var y = obj.y == null ? 0.5 : obj.y;\n  var r = obj.r == null ? 0.5 : obj.r;\n\n  if (!obj.global) {\n    x = x * width + rect.x;\n    y = y * height + rect.y;\n    r = r * min;\n  }\n\n  var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n  return canvasGradient;\n}\n\nStyle.prototype = {\n  constructor: Style,\n\n  /**\n   * @type {module:zrender/graphic/Displayable}\n   */\n  host: null,\n\n  /**\n   * @type {string}\n   */\n  fill: '#000',\n\n  /**\n   * @type {string}\n   */\n  stroke: null,\n\n  /**\n   * @type {number}\n   */\n  opacity: 1,\n\n  /**\n   * @type {Array.<number>}\n   */\n  lineDash: null,\n\n  /**\n   * @type {number}\n   */\n  lineDashOffset: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetY: 0,\n\n  /**\n   * @type {number}\n   */\n  lineWidth: 1,\n\n  /**\n   * If stroke ignore scale\n   * @type {Boolean}\n   */\n  strokeNoScale: false,\n  // Bounding rect text configuration\n  // Not affected by element transform\n\n  /**\n   * @type {string}\n   */\n  text: null,\n\n  /**\n   * If `fontSize` or `fontFamily` exists, `font` will be reset by\n   * `fontSize`, `fontStyle`, `fontWeight`, `fontFamily`.\n   * So do not visit it directly in upper application (like echarts),\n   * but use `contain/text#makeFont` instead.\n   * @type {string}\n   */\n  font: null,\n\n  /**\n   * The same as font. Use font please.\n   * @deprecated\n   * @type {string}\n   */\n  textFont: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontStyle: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontWeight: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * Should be 12 but not '12px'.\n   * @type {number}\n   */\n  fontSize: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontFamily: null,\n\n  /**\n   * Reserved for special functinality, like 'hr'.\n   * @type {string}\n   */\n  textTag: null,\n\n  /**\n   * @type {string}\n   */\n  textFill: '#000',\n\n  /**\n   * @type {string}\n   */\n  textStroke: null,\n\n  /**\n   * @type {number}\n   */\n  textWidth: null,\n\n  /**\n   * Only for textBackground.\n   * @type {number}\n   */\n  textHeight: null,\n\n  /**\n   * textStroke may be set as some color as a default\n   * value in upper applicaion, where the default value\n   * of textStrokeWidth should be 0 to make sure that\n   * user can choose to do not use text stroke.\n   * @type {number}\n   */\n  textStrokeWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textLineHeight: null,\n\n  /**\n   * 'inside', 'left', 'right', 'top', 'bottom'\n   * [x, y]\n   * Based on x, y of rect.\n   * @type {string|Array.<number>}\n   * @default 'inside'\n   */\n  textPosition: 'inside',\n\n  /**\n   * If not specified, use the boundingRect of a `displayable`.\n   * @type {Object}\n   */\n  textRect: null,\n\n  /**\n   * [x, y]\n   * @type {Array.<number>}\n   */\n  textOffset: null,\n\n  /**\n   * @type {string}\n   */\n  textAlign: null,\n\n  /**\n   * @type {string}\n   */\n  textVerticalAlign: null,\n\n  /**\n   * @type {number}\n   */\n  textDistance: 5,\n\n  /**\n   * @type {string}\n   */\n  textShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetY: 0,\n\n  /**\n   * @type {string}\n   */\n  textBoxShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetY: 0,\n\n  /**\n   * Whether transform text.\n   * Only useful in Path and Image element\n   * @type {boolean}\n   */\n  transformText: false,\n\n  /**\n   * Text rotate around position of Path or Image\n   * Only useful in Path and Image element and transformText is false.\n   */\n  textRotation: 0,\n\n  /**\n   * Text origin of text rotation, like [10, 40].\n   * Based on x, y of rect.\n   * Useful in label rotation of circular symbol.\n   * By default, this origin is textPosition.\n   * Can be 'center'.\n   * @type {string|Array.<number>}\n   */\n  textOrigin: null,\n\n  /**\n   * @type {string}\n   */\n  textBackgroundColor: null,\n\n  /**\n   * @type {string}\n   */\n  textBorderColor: null,\n\n  /**\n   * @type {number}\n   */\n  textBorderWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textBorderRadius: 0,\n\n  /**\n   * Can be `2` or `[2, 4]` or `[2, 3, 4, 5]`\n   * @type {number|Array.<number>}\n   */\n  textPadding: null,\n\n  /**\n   * Text styles for rich text.\n   * @type {Object}\n   */\n  rich: null,\n\n  /**\n   * {outerWidth, outerHeight, ellipsis, placeholder}\n   * @type {Object}\n   */\n  truncate: null,\n\n  /**\n   * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n   * @type {string}\n   */\n  blend: null,\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  bind: function (ctx, el, prevEl) {\n    var style = this;\n    var prevStyle = prevEl && prevEl.style;\n    var firstDraw = !prevStyle;\n\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n      var prop = STYLE_COMMON_PROPS[i];\n      var styleName = prop[0];\n\n      if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n        // FIXME Invalid property value will cause style leak from previous element.\n        ctx[styleName] = fixShadow(ctx, styleName, style[styleName] || prop[1]);\n      }\n    }\n\n    if (firstDraw || style.fill !== prevStyle.fill) {\n      ctx.fillStyle = style.fill;\n    }\n\n    if (firstDraw || style.stroke !== prevStyle.stroke) {\n      ctx.strokeStyle = style.stroke;\n    }\n\n    if (firstDraw || style.opacity !== prevStyle.opacity) {\n      ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n    }\n\n    if (firstDraw || style.blend !== prevStyle.blend) {\n      ctx.globalCompositeOperation = style.blend || 'source-over';\n    }\n\n    if (this.hasStroke()) {\n      var lineWidth = style.lineWidth;\n      ctx.lineWidth = lineWidth / (this.strokeNoScale && el && el.getLineScale ? el.getLineScale() : 1);\n    }\n  },\n  hasFill: function () {\n    var fill = this.fill;\n    return fill != null && fill !== 'none';\n  },\n  hasStroke: function () {\n    var stroke = this.stroke;\n    return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n  },\n\n  /**\n   * Extend from other style\n   * @param {zrender/graphic/Style} otherStyle\n   * @param {boolean} overwrite true: overwrirte any way.\n   *                            false: overwrite only when !target.hasOwnProperty\n   *                            others: overwrite when property is not null/undefined.\n   */\n  extendFrom: function (otherStyle, overwrite) {\n    if (otherStyle) {\n      for (var name in otherStyle) {\n        if (otherStyle.hasOwnProperty(name) && (overwrite === true || (overwrite === false ? !this.hasOwnProperty(name) : otherStyle[name] != null))) {\n          this[name] = otherStyle[name];\n        }\n      }\n    }\n  },\n\n  /**\n   * Batch setting style with a given object\n   * @param {Object|string} obj\n   * @param {*} [obj]\n   */\n  set: function (obj, value) {\n    if (typeof obj === 'string') {\n      this[obj] = value;\n    } else {\n      this.extendFrom(obj, true);\n    }\n  },\n\n  /**\n   * Clone\n   * @return {zrender/graphic/Style} [description]\n   */\n  clone: function () {\n    var newStyle = new this.constructor();\n    newStyle.extendFrom(this, true);\n    return newStyle;\n  },\n  getGradient: function (ctx, obj, rect) {\n    var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n    var canvasGradient = method(ctx, obj, rect);\n    var colorStops = obj.colorStops;\n\n    for (var i = 0; i < colorStops.length; i++) {\n      canvasGradient.addColorStop(colorStops[i].offset, colorStops[i].color);\n    }\n\n    return canvasGradient;\n  }\n};\nvar styleProto = Style.prototype;\n\nfor (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n  var prop = STYLE_COMMON_PROPS[i];\n\n  if (!(prop[0] in styleProto)) {\n    styleProto[prop[0]] = prop[1];\n  }\n} // Provide for others\n\n\nStyle.getGradient = styleProto.getGradient;\nvar _default = Style;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapping = require(\"./VisualMapping\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Visual solution, for consistent option specification.\n */\nvar each = zrUtil.each;\n\nfunction hasKeys(obj) {\n  if (obj) {\n    for (var name in obj) {\n      if (obj.hasOwnProperty(name)) {\n        return true;\n      }\n    }\n  }\n}\n/**\n * @param {Object} option\n * @param {Array.<string>} stateList\n * @param {Function} [supplementVisualOption]\n * @return {Object} visualMappings <state, <visualType, module:echarts/visual/VisualMapping>>\n */\n\n\nfunction createVisualMappings(option, stateList, supplementVisualOption) {\n  var visualMappings = {};\n  each(stateList, function (state) {\n    var mappings = visualMappings[state] = createMappings();\n    each(option[state], function (visualData, visualType) {\n      if (!VisualMapping.isValidType(visualType)) {\n        return;\n      }\n\n      var mappingOption = {\n        type: visualType,\n        visual: visualData\n      };\n      supplementVisualOption && supplementVisualOption(mappingOption, state);\n      mappings[visualType] = new VisualMapping(mappingOption); // Prepare a alpha for opacity, for some case that opacity\n      // is not supported, such as rendering using gradient color.\n\n      if (visualType === 'opacity') {\n        mappingOption = zrUtil.clone(mappingOption);\n        mappingOption.type = 'colorAlpha';\n        mappings.__hidden.__alphaForOpacity = new VisualMapping(mappingOption);\n      }\n    });\n  });\n  return visualMappings;\n\n  function createMappings() {\n    var Creater = function () {}; // Make sure hidden fields will not be visited by\n    // object iteration (with hasOwnProperty checking).\n\n\n    Creater.prototype.__hidden = Creater.prototype;\n    var obj = new Creater();\n    return obj;\n  }\n}\n/**\n * @param {Object} thisOption\n * @param {Object} newOption\n * @param {Array.<string>} keys\n */\n\n\nfunction replaceVisualOption(thisOption, newOption, keys) {\n  // Visual attributes merge is not supported, otherwise it\n  // brings overcomplicated merge logic. See #2853. So if\n  // newOption has anyone of these keys, all of these keys\n  // will be reset. Otherwise, all keys remain.\n  var has;\n  zrUtil.each(keys, function (key) {\n    if (newOption.hasOwnProperty(key) && hasKeys(newOption[key])) {\n      has = true;\n    }\n  });\n  has && zrUtil.each(keys, function (key) {\n    if (newOption.hasOwnProperty(key) && hasKeys(newOption[key])) {\n      thisOption[key] = zrUtil.clone(newOption[key]);\n    } else {\n      delete thisOption[key];\n    }\n  });\n}\n/**\n * @param {Array.<string>} stateList\n * @param {Object} visualMappings <state, Object.<visualType, module:echarts/visual/VisualMapping>>\n * @param {module:echarts/data/List} list\n * @param {Function} getValueState param: valueOrIndex, return: state.\n * @param {object} [scope] Scope for getValueState\n * @param {string} [dimension] Concrete dimension, if used.\n */\n// ???! handle brush?\n\n\nfunction applyVisual(stateList, visualMappings, data, getValueState, scope, dimension) {\n  var visualTypesMap = {};\n  zrUtil.each(stateList, function (state) {\n    var visualTypes = VisualMapping.prepareVisualTypes(visualMappings[state]);\n    visualTypesMap[state] = visualTypes;\n  });\n  var dataIndex;\n\n  function getVisual(key) {\n    return data.getItemVisual(dataIndex, key);\n  }\n\n  function setVisual(key, value) {\n    data.setItemVisual(dataIndex, key, value);\n  }\n\n  if (dimension == null) {\n    data.each(eachItem);\n  } else {\n    data.each([dimension], eachItem);\n  }\n\n  function eachItem(valueOrIndex, index) {\n    dataIndex = dimension == null ? valueOrIndex : index;\n    var rawDataItem = data.getRawDataItem(dataIndex); // Consider performance\n\n    if (rawDataItem && rawDataItem.visualMap === false) {\n      return;\n    }\n\n    var valueState = getValueState.call(scope, valueOrIndex);\n    var mappings = visualMappings[valueState];\n    var visualTypes = visualTypesMap[valueState];\n\n    for (var i = 0, len = visualTypes.length; i < len; i++) {\n      var type = visualTypes[i];\n      mappings[type] && mappings[type].applyVisual(valueOrIndex, getVisual, setVisual);\n    }\n  }\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {Array.<string>} stateList\n * @param {Object} visualMappings <state, Object.<visualType, module:echarts/visual/VisualMapping>>\n * @param {Function} getValueState param: valueOrIndex, return: state.\n * @param {number} [dim] dimension or dimension index.\n */\n\n\nfunction incrementalApplyVisual(stateList, visualMappings, getValueState, dim) {\n  var visualTypesMap = {};\n  zrUtil.each(stateList, function (state) {\n    var visualTypes = VisualMapping.prepareVisualTypes(visualMappings[state]);\n    visualTypesMap[state] = visualTypes;\n  });\n\n  function progress(params, data) {\n    if (dim != null) {\n      dim = data.getDimension(dim);\n    }\n\n    function getVisual(key) {\n      return data.getItemVisual(dataIndex, key);\n    }\n\n    function setVisual(key, value) {\n      data.setItemVisual(dataIndex, key, value);\n    }\n\n    var dataIndex;\n\n    while ((dataIndex = params.next()) != null) {\n      var rawDataItem = data.getRawDataItem(dataIndex); // Consider performance\n\n      if (rawDataItem && rawDataItem.visualMap === false) {\n        return;\n      }\n\n      var value = dim != null ? data.get(dim, dataIndex, true) : dataIndex;\n      var valueState = getValueState(value);\n      var mappings = visualMappings[valueState];\n      var visualTypes = visualTypesMap[valueState];\n\n      for (var i = 0, len = visualTypes.length; i < len; i++) {\n        var type = visualTypes[i];\n        mappings[type] && mappings[type].applyVisual(value, getVisual, setVisual);\n      }\n    }\n  }\n\n  return {\n    progress: progress\n  };\n}\n\nexports.createVisualMappings = createVisualMappings;\nexports.replaceVisualOption = replaceVisualOption;\nexports.applyVisual = applyVisual;\nexports.incrementalApplyVisual = incrementalApplyVisual;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO Parse shadow style\n// TODO Only shallow path support\nfunction _default(properties) {\n  // Normalize\n  for (var i = 0; i < properties.length; i++) {\n    if (!properties[i][1]) {\n      properties[i][1] = properties[i][0];\n    }\n  }\n\n  return function (model, excludes, includes) {\n    var style = {};\n\n    for (var i = 0; i < properties.length; i++) {\n      var propName = properties[i][1];\n\n      if (excludes && zrUtil.indexOf(excludes, propName) >= 0 || includes && zrUtil.indexOf(includes, propName) < 0) {\n        continue;\n      }\n\n      var val = model.getShallow(propName);\n\n      if (val != null) {\n        style[properties[i][0]] = val;\n      }\n    }\n\n    return style;\n  };\n}\n\nmodule.exports = _default;","var _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar linearMap = _number.linearMap;\n\nvar labelLayout = require(\"./labelLayout\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PI2 = Math.PI * 2;\nvar RADIAN = Math.PI / 180;\n\nfunction _default(seriesType, ecModel, api, payload) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var center = seriesModel.get('center');\n    var radius = seriesModel.get('radius');\n\n    if (!zrUtil.isArray(radius)) {\n      radius = [0, radius];\n    }\n\n    if (!zrUtil.isArray(center)) {\n      center = [center, center];\n    }\n\n    var width = api.getWidth();\n    var height = api.getHeight();\n    var size = Math.min(width, height);\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var r0 = parsePercent(radius[0], size / 2);\n    var r = parsePercent(radius[1], size / 2);\n    var startAngle = -seriesModel.get('startAngle') * RADIAN;\n    var minAngle = seriesModel.get('minAngle') * RADIAN;\n    var validDataCount = 0;\n    data.each(valueDim, function (value) {\n      !isNaN(value) && validDataCount++;\n    });\n    var sum = data.getSum(valueDim); // Sum may be 0\n\n    var unitRadian = Math.PI / (sum || validDataCount) * 2;\n    var clockwise = seriesModel.get('clockwise');\n    var roseType = seriesModel.get('roseType');\n    var stillShowZeroSum = seriesModel.get('stillShowZeroSum'); // [0...max]\n\n    var extent = data.getDataExtent(valueDim);\n    extent[0] = 0; // In the case some sector angle is smaller than minAngle\n\n    var restAngle = PI2;\n    var valueSumLargerThanMinAngle = 0;\n    var currentAngle = startAngle;\n    var dir = clockwise ? 1 : -1;\n    data.each(valueDim, function (value, idx) {\n      var angle;\n\n      if (isNaN(value)) {\n        data.setItemLayout(idx, {\n          angle: NaN,\n          startAngle: NaN,\n          endAngle: NaN,\n          clockwise: clockwise,\n          cx: cx,\n          cy: cy,\n          r0: r0,\n          r: roseType ? NaN : r\n        });\n        return;\n      } // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？\n\n\n      if (roseType !== 'area') {\n        angle = sum === 0 && stillShowZeroSum ? unitRadian : value * unitRadian;\n      } else {\n        angle = PI2 / validDataCount;\n      }\n\n      if (angle < minAngle) {\n        angle = minAngle;\n        restAngle -= minAngle;\n      } else {\n        valueSumLargerThanMinAngle += value;\n      }\n\n      var endAngle = currentAngle + dir * angle;\n      data.setItemLayout(idx, {\n        angle: angle,\n        startAngle: currentAngle,\n        endAngle: endAngle,\n        clockwise: clockwise,\n        cx: cx,\n        cy: cy,\n        r0: r0,\n        r: roseType ? linearMap(value, extent, [r0, r]) : r\n      });\n      currentAngle = endAngle;\n    }); // Some sector is constrained by minAngle\n    // Rest sectors needs recalculate angle\n\n    if (restAngle < PI2 && validDataCount) {\n      // Average the angle if rest angle is not enough after all angles is\n      // Constrained by minAngle\n      if (restAngle <= 1e-3) {\n        var angle = PI2 / validDataCount;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            layout.angle = angle;\n            layout.startAngle = startAngle + dir * idx * angle;\n            layout.endAngle = startAngle + dir * (idx + 1) * angle;\n          }\n        });\n      } else {\n        unitRadian = restAngle / valueSumLargerThanMinAngle;\n        currentAngle = startAngle;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            var angle = layout.angle === minAngle ? minAngle : value * unitRadian;\n            layout.startAngle = currentAngle;\n            layout.endAngle = currentAngle + dir * angle;\n            currentAngle += dir * angle;\n          }\n        });\n      }\n    }\n\n    labelLayout(seriesModel, r, width, height);\n  });\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  var paletteScope = {};\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var categoriesData = seriesModel.getCategoriesData();\n    var data = seriesModel.getData();\n    var categoryNameIdxMap = {};\n    categoriesData.each(function (idx) {\n      var name = categoriesData.getName(idx); // Add prefix to avoid conflict with Object.prototype.\n\n      categoryNameIdxMap['ec-' + name] = idx;\n      var itemModel = categoriesData.getItemModel(idx);\n      var color = itemModel.get('itemStyle.color') || seriesModel.getColorFromPalette(name, paletteScope);\n      categoriesData.setItemVisual(idx, 'color', color);\n    }); // Assign category color to visual\n\n    if (categoriesData.count()) {\n      data.each(function (idx) {\n        var model = data.getItemModel(idx);\n        var category = model.getShallow('category');\n\n        if (category != null) {\n          if (typeof category === 'string') {\n            category = categoryNameIdxMap['ec-' + category];\n          }\n\n          if (!data.getItemVisual(idx, 'color', true)) {\n            data.setItemVisual(idx, 'color', categoriesData.getItemVisual(category, 'color'));\n          }\n        }\n      });\n    }\n  });\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = {\n  toolbox: {\n    brush: {\n      title: {\n        rect: '矩形选择',\n        polygon: '圈选',\n        lineX: '横向选择',\n        lineY: '纵向选择',\n        keep: '保持选择',\n        clear: '清除选择'\n      }\n    },\n    dataView: {\n      title: '数据视图',\n      lang: ['数据视图', '关闭', '刷新']\n    },\n    dataZoom: {\n      title: {\n        zoom: '区域缩放',\n        back: '区域缩放还原'\n      }\n    },\n    magicType: {\n      title: {\n        line: '切换为折线图',\n        bar: '切换为柱状图',\n        stack: '切换为堆叠',\n        tiled: '切换为平铺'\n      }\n    },\n    restore: {\n      title: '还原'\n    },\n    saveAsImage: {\n      title: '保存为图片',\n      lang: ['右键另存为图片']\n    }\n  },\n  series: {\n    typeNames: {\n      pie: '饼图',\n      bar: '柱状图',\n      line: '折线图',\n      scatter: '散点图',\n      effectScatter: '涟漪散点图',\n      radar: '雷达图',\n      tree: '树图',\n      treemap: '矩形树图',\n      boxplot: '箱型图',\n      candlestick: 'K线图',\n      k: 'K线图',\n      heatmap: '热力图',\n      map: '地图',\n      parallel: '平行坐标图',\n      lines: '线图',\n      graph: '关系图',\n      sankey: '桑基图',\n      funnel: '漏斗图',\n      gauge: '仪表盘图',\n      pictorialBar: '象形柱图',\n      themeRiver: '主题河流图',\n      sunburst: '旭日图'\n    }\n  },\n  aria: {\n    general: {\n      withTitle: '这是一个关于“{title}”的图表。',\n      withoutTitle: '这是一个图表，'\n    },\n    series: {\n      single: {\n        prefix: '',\n        withName: '图表类型是{seriesType}，表示{seriesName}。',\n        withoutName: '图表类型是{seriesType}。'\n      },\n      multiple: {\n        prefix: '它由{seriesCount}个图表系列组成。',\n        withName: '第{seriesId}个系列是一个表示{seriesName}的{seriesType}，',\n        withoutName: '第{seriesId}个系列是一个{seriesType}，',\n        separator: {\n          middle: '；',\n          end: '。'\n        }\n      }\n    },\n    data: {\n      allData: '其数据是——',\n      partialData: '其中，前{displayCnt}项是——',\n      withName: '{name}的数据是{value}',\n      withoutName: '{value}',\n      separator: {\n        middle: '，',\n        end: ''\n      }\n    }\n  }\n};\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar preprocessor = require(\"./visualMap/preprocessor\");\n\nrequire(\"./visualMap/typeDefaulter\");\n\nrequire(\"./visualMap/visualEncoding\");\n\nrequire(\"./visualMap/PiecewiseModel\");\n\nrequire(\"./visualMap/PiecewiseView\");\n\nrequire(\"./visualMap/visualMapAction\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * DataZoom component entry\n */\necharts.registerPreprocessor(preprocessor);","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar isTypedArray = _util.isTypedArray;\nvar extend = _util.extend;\nvar assert = _util.assert;\nvar each = _util.each;\nvar isObject = _util.isObject;\n\nvar _model = require(\"../../util/model\");\n\nvar getDataItemValue = _model.getDataItemValue;\nvar isDataItemOption = _model.isDataItemOption;\n\nvar _number = require(\"../../util/number\");\n\nvar parseDate = _number.parseDate;\n\nvar Source = require(\"../Source\");\n\nvar _sourceType = require(\"./sourceType\");\n\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SOURCE_FORMAT_ARRAY_ROWS = _sourceType.SOURCE_FORMAT_ARRAY_ROWS;\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SOURCE_FORMAT_OBJECT_ROWS = _sourceType.SOURCE_FORMAT_OBJECT_ROWS;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO\n// ??? refactor? check the outer usage of data provider.\n// merge with defaultDimValueGetter?\n\n/**\n * If normal array used, mutable chunk size is supported.\n * If typed array used, chunk size must be fixed.\n */\nfunction DefaultDataProvider(source, dimSize) {\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  this._source = source;\n  var data = this._data = source.data;\n  var sourceFormat = source.sourceFormat; // Typed array. TODO IE10+?\n\n  if (sourceFormat === SOURCE_FORMAT_TYPED_ARRAY) {\n    this._offset = 0;\n    this._dimSize = dimSize;\n    this._data = data;\n  }\n\n  var methods = providerMethods[sourceFormat === SOURCE_FORMAT_ARRAY_ROWS ? sourceFormat + '_' + source.seriesLayoutBy : sourceFormat];\n  extend(this, methods);\n}\n\nvar providerProto = DefaultDataProvider.prototype; // If data is pure without style configuration\n\nproviderProto.pure = false; // If data is persistent and will not be released after use.\n\nproviderProto.persistent = true; // ???! FIXME legacy data provider do not has method getSource\n\nproviderProto.getSource = function () {\n  return this._source;\n};\n\nvar providerMethods = {\n  'arrayRows_column': {\n    pure: true,\n    count: function () {\n      return Math.max(0, this._data.length - this._source.startIndex);\n    },\n    getItem: function (idx) {\n      return this._data[idx + this._source.startIndex];\n    },\n    appendData: appendDataSimply\n  },\n  'arrayRows_row': {\n    pure: true,\n    count: function () {\n      var row = this._data[0];\n      return row ? Math.max(0, row.length - this._source.startIndex) : 0;\n    },\n    getItem: function (idx) {\n      idx += this._source.startIndex;\n      var item = [];\n      var data = this._data;\n\n      for (var i = 0; i < data.length; i++) {\n        var row = data[i];\n        item.push(row ? row[idx] : null);\n      }\n\n      return item;\n    },\n    appendData: function () {\n      throw new Error('Do not support appendData when set seriesLayoutBy: \"row\".');\n    }\n  },\n  'objectRows': {\n    pure: true,\n    count: countSimply,\n    getItem: getItemSimply,\n    appendData: appendDataSimply\n  },\n  'keyedColumns': {\n    pure: true,\n    count: function () {\n      var dimName = this._source.dimensionsDefine[0].name;\n      var col = this._data[dimName];\n      return col ? col.length : 0;\n    },\n    getItem: function (idx) {\n      var item = [];\n      var dims = this._source.dimensionsDefine;\n\n      for (var i = 0; i < dims.length; i++) {\n        var col = this._data[dims[i].name];\n        item.push(col ? col[idx] : null);\n      }\n\n      return item;\n    },\n    appendData: function (newData) {\n      var data = this._data;\n      each(newData, function (newCol, key) {\n        var oldCol = data[key] || (data[key] = []);\n\n        for (var i = 0; i < (newCol || []).length; i++) {\n          oldCol.push(newCol[i]);\n        }\n      });\n    }\n  },\n  'original': {\n    count: countSimply,\n    getItem: getItemSimply,\n    appendData: appendDataSimply\n  },\n  'typedArray': {\n    persistent: false,\n    pure: true,\n    count: function () {\n      return this._data ? this._data.length / this._dimSize : 0;\n    },\n    getItem: function (idx, out) {\n      idx = idx - this._offset;\n      out = out || [];\n      var offset = this._dimSize * idx;\n\n      for (var i = 0; i < this._dimSize; i++) {\n        out[i] = this._data[offset + i];\n      }\n\n      return out;\n    },\n    appendData: function (newData) {\n      this._data = newData;\n    },\n    // Clean self if data is already used.\n    clean: function () {\n      // PENDING\n      this._offset += this.count();\n      this._data = null;\n    }\n  }\n};\n\nfunction countSimply() {\n  return this._data.length;\n}\n\nfunction getItemSimply(idx) {\n  return this._data[idx];\n}\n\nfunction appendDataSimply(newData) {\n  for (var i = 0; i < newData.length; i++) {\n    this._data.push(newData[i]);\n  }\n}\n\nvar rawValueGetters = {\n  arrayRows: getRawValueSimply,\n  objectRows: function (dataItem, dataIndex, dimIndex, dimName) {\n    return dimIndex != null ? dataItem[dimName] : dataItem;\n  },\n  keyedColumns: getRawValueSimply,\n  original: function (dataItem, dataIndex, dimIndex, dimName) {\n    // FIXME\n    // In some case (markpoint in geo (geo-map.html)), dataItem\n    // is {coord: [...]}\n    var value = getDataItemValue(dataItem);\n    return dimIndex == null || !(value instanceof Array) ? value : value[dimIndex];\n  },\n  typedArray: getRawValueSimply\n};\n\nfunction getRawValueSimply(dataItem, dataIndex, dimIndex, dimName) {\n  return dimIndex != null ? dataItem[dimIndex] : dataItem;\n}\n\nvar defaultDimValueGetters = {\n  arrayRows: getDimValueSimply,\n  objectRows: function (dataItem, dimName, dataIndex, dimIndex) {\n    return converDataValue(dataItem[dimName], this._dimensionInfos[dimName]);\n  },\n  keyedColumns: getDimValueSimply,\n  original: function (dataItem, dimName, dataIndex, dimIndex) {\n    // Performance sensitive, do not use modelUtil.getDataItemValue.\n    // If dataItem is an plain object with no value field, the var `value`\n    // will be assigned with the object, but it will be tread correctly\n    // in the `convertDataValue`.\n    var value = dataItem && (dataItem.value == null ? dataItem : dataItem.value); // If any dataItem is like { value: 10 }\n\n    if (!this._rawData.pure && isDataItemOption(dataItem)) {\n      this.hasItemOption = true;\n    }\n\n    return converDataValue(value instanceof Array ? value[dimIndex] // If value is a single number or something else not array.\n    : value, this._dimensionInfos[dimName]);\n  },\n  typedArray: function (dataItem, dimName, dataIndex, dimIndex) {\n    return dataItem[dimIndex];\n  }\n};\n\nfunction getDimValueSimply(dataItem, dimName, dataIndex, dimIndex) {\n  return converDataValue(dataItem[dimIndex], this._dimensionInfos[dimName]);\n}\n/**\n * This helper method convert value in data.\n * @param {string|number|Date} value\n * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n *        If \"dimInfo.ordinalParseAndSave\", ordinal value can be parsed.\n */\n\n\nfunction converDataValue(value, dimInfo) {\n  // Performance sensitive.\n  var dimType = dimInfo && dimInfo.type;\n\n  if (dimType === 'ordinal') {\n    // If given value is a category string\n    var ordinalMeta = dimInfo && dimInfo.ordinalMeta;\n    return ordinalMeta ? ordinalMeta.parseAndCollect(value) : value;\n  }\n\n  if (dimType === 'time' // spead up when using timestamp\n  && typeof value !== 'number' && value != null && value !== '-') {\n    value = +parseDate(value);\n  } // dimType defaults 'number'.\n  // If dimType is not ordinal and value is null or undefined or NaN or '-',\n  // parse to NaN.\n\n\n  return value == null || value === '' ? NaN // If string (like '-'), using '+' parse to NaN\n  // If object, also parse to NaN\n  : +value;\n} // ??? FIXME can these logic be more neat: getRawValue, getRawDataItem,\n// Consider persistent.\n// Caution: why use raw value to display on label or tooltip?\n// A reason is to avoid format. For example time value we do not know\n// how to format is expected. More over, if stack is used, calculated\n// value may be 0.91000000001, which have brings trouble to display.\n// TODO: consider how to treat null/undefined/NaN when display?\n\n/**\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @param {string|number} [dim] dimName or dimIndex\n * @return {Array.<number>|string|number} can be null/undefined.\n */\n\n\nfunction retrieveRawValue(data, dataIndex, dim) {\n  if (!data) {\n    return;\n  } // Consider data may be not persistent.\n\n\n  var dataItem = data.getRawDataItem(dataIndex);\n\n  if (dataItem == null) {\n    return;\n  }\n\n  var sourceFormat = data.getProvider().getSource().sourceFormat;\n  var dimName;\n  var dimIndex;\n  var dimInfo = data.getDimensionInfo(dim);\n\n  if (dimInfo) {\n    dimName = dimInfo.name;\n    dimIndex = dimInfo.index;\n  }\n\n  return rawValueGetters[sourceFormat](dataItem, dataIndex, dimIndex, dimName);\n}\n/**\n * Compatible with some cases (in pie, map) like:\n * data: [{name: 'xx', value: 5, selected: true}, ...]\n * where only sourceFormat is 'original' and 'objectRows' supported.\n *\n * ??? TODO\n * Supported detail options in data item when using 'arrayRows'.\n *\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @param {string} attr like 'selected'\n */\n\n\nfunction retrieveRawAttr(data, dataIndex, attr) {\n  if (!data) {\n    return;\n  }\n\n  var sourceFormat = data.getProvider().getSource().sourceFormat;\n\n  if (sourceFormat !== SOURCE_FORMAT_ORIGINAL && sourceFormat !== SOURCE_FORMAT_OBJECT_ROWS) {\n    return;\n  }\n\n  var dataItem = data.getRawDataItem(dataIndex);\n\n  if (sourceFormat === SOURCE_FORMAT_ORIGINAL && !isObject(dataItem)) {\n    dataItem = null;\n  }\n\n  if (dataItem) {\n    return dataItem[attr];\n  }\n}\n\nexports.DefaultDataProvider = DefaultDataProvider;\nexports.defaultDimValueGetters = defaultDimValueGetters;\nexports.retrieveRawValue = retrieveRawValue;\nexports.retrieveRawAttr = retrieveRawAttr;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar createHashMap = _util.createHashMap;\nvar assert = _util.assert;\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar OTHER_DIMENSIONS = createHashMap(['tooltip', 'label', 'itemName', 'itemId', 'seriesName']);\n\nfunction summarizeDimensions(data) {\n  var summary = {};\n  var encode = summary.encode = {};\n  var notExtraCoordDimMap = createHashMap();\n  var defaultedLabel = [];\n  var defaultedTooltip = [];\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n    var coordDim = dimItem.coordDim;\n\n    if (coordDim) {\n      var coordDimArr = encode[coordDim];\n\n      if (!encode.hasOwnProperty(coordDim)) {\n        coordDimArr = encode[coordDim] = [];\n      }\n\n      coordDimArr[dimItem.coordDimIndex] = dimName;\n\n      if (!dimItem.isExtraCoord) {\n        notExtraCoordDimMap.set(coordDim, 1); // Use the last coord dim (and label friendly) as default label,\n        // because when dataset is used, it is hard to guess which dimension\n        // can be value dimension. If both show x, y on label is not look good,\n        // and conventionally y axis is focused more.\n\n        if (mayLabelDimType(dimItem.type)) {\n          defaultedLabel[0] = dimName;\n        }\n      }\n\n      if (dimItem.defaultTooltip) {\n        defaultedTooltip.push(dimName);\n      }\n    }\n\n    OTHER_DIMENSIONS.each(function (v, otherDim) {\n      var otherDimArr = encode[otherDim];\n\n      if (!encode.hasOwnProperty(otherDim)) {\n        otherDimArr = encode[otherDim] = [];\n      }\n\n      var dimIndex = dimItem.otherDims[otherDim];\n\n      if (dimIndex != null && dimIndex !== false) {\n        otherDimArr[dimIndex] = dimItem.name;\n      }\n    });\n  });\n  var dataDimsOnCoord = [];\n  var encodeFirstDimNotExtra = {};\n  notExtraCoordDimMap.each(function (v, coordDim) {\n    var dimArr = encode[coordDim]; // ??? FIXME extra coord should not be set in dataDimsOnCoord.\n    // But should fix the case that radar axes: simplify the logic\n    // of `completeDimension`, remove `extraPrefix`.\n\n    encodeFirstDimNotExtra[coordDim] = dimArr[0]; // Not necessary to remove duplicate, because a data\n    // dim canot on more than one coordDim.\n\n    dataDimsOnCoord = dataDimsOnCoord.concat(dimArr);\n  });\n  summary.dataDimsOnCoord = dataDimsOnCoord;\n  summary.encodeFirstDimNotExtra = encodeFirstDimNotExtra;\n  var encodeLabel = encode.label; // FIXME `encode.label` is not recommanded, because formatter can not be set\n  // in this way. Use label.formatter instead. May be remove this approach someday.\n\n  if (encodeLabel && encodeLabel.length) {\n    defaultedLabel = encodeLabel.slice();\n  }\n\n  var encodeTooltip = encode.tooltip;\n\n  if (encodeTooltip && encodeTooltip.length) {\n    defaultedTooltip = encodeTooltip.slice();\n  } else if (!defaultedTooltip.length) {\n    defaultedTooltip = defaultedLabel.slice();\n  }\n\n  encode.defaultedLabel = defaultedLabel;\n  encode.defaultedTooltip = defaultedTooltip;\n  return summary;\n}\n\nfunction getDimensionTypeByAxis(axisType) {\n  return axisType === 'category' ? 'ordinal' : axisType === 'time' ? 'time' : 'float';\n}\n\nfunction mayLabelDimType(dimType) {\n  // In most cases, ordinal and time do not suitable for label.\n  // Ordinal info can be displayed on axis. Time is too long.\n  return !(dimType === 'ordinal' || dimType === 'time');\n} // function findTheLastDimMayLabel(data) {\n//     // Get last value dim\n//     var dimensions = data.dimensions.slice();\n//     var valueType;\n//     var valueDim;\n//     while (dimensions.length && (\n//         valueDim = dimensions.pop(),\n//         valueType = data.getDimensionInfo(valueDim).type,\n//         valueType === 'ordinal' || valueType === 'time'\n//     )) {} // jshint ignore:line\n//     return valueDim;\n// }\n\n\nexports.OTHER_DIMENSIONS = OTHER_DIMENSIONS;\nexports.summarizeDimensions = summarizeDimensions;\nexports.getDimensionTypeByAxis = getDimensionTypeByAxis;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar barPolar = require(\"../layout/barPolar\");\n\nrequire(\"../coord/polar/polarCreator\");\n\nrequire(\"./angleAxis\");\n\nrequire(\"./radiusAxis\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./axisPointer/PolarAxisPointer\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// For reducing size of echarts.min, barLayoutPolar is required by polar.\necharts.registerLayout(zrUtil.curry(barPolar, 'bar')); // Polar view\n\necharts.extendComponentView({\n  type: 'polar'\n});","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar borderColorQuery = ['itemStyle', 'borderColor'];\n\nfunction _default(ecModel, api) {\n  var globalColors = ecModel.get('color');\n  ecModel.eachRawSeriesByType('boxplot', function (seriesModel) {\n    var defaulColor = globalColors[seriesModel.seriesIndex % globalColors.length];\n    var data = seriesModel.getData();\n    data.setVisual({\n      legendSymbol: 'roundRect',\n      // Use name 'color' but not 'borderColor' for legend usage and\n      // visual coding from other component like dataRange.\n      color: seriesModel.get(borderColorQuery) || defaulColor\n    }); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        data.setItemVisual(idx, {\n          color: itemModel.get(borderColorQuery, true)\n        });\n      });\n    }\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerProcessor({\n  // `dataZoomProcessor` will only be performed in needed series. Consider if\n  // there is a line series and a pie series, it is better not to update the\n  // line series if only pie series is needed to be updated.\n  getTargetSeries: function (ecModel) {\n    var seriesModelMap = createHashMap();\n    ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n      dataZoomModel.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel) {\n        var axisProxy = dataZoomModel.getAxisProxy(dimNames.name, axisIndex);\n        each(axisProxy.getTargetSeriesModels(), function (seriesModel) {\n          seriesModelMap.set(seriesModel.uid, seriesModel);\n        });\n      });\n    });\n    return seriesModelMap;\n  },\n  modifyOutputEnd: true,\n  // Consider appendData, where filter should be performed. Because data process is\n  // in block mode currently, it is not need to worry about that the overallProgress\n  // execute every frame.\n  overallReset: function (ecModel, api) {\n    ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n      // We calculate window and reset axis here but not in model\n      // init stage and not after action dispatch handler, because\n      // reset should be called after seriesData.restoreData.\n      dataZoomModel.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).reset(dataZoomModel, api);\n      }); // Caution: data zoom filtering is order sensitive when using\n      // percent range and no min/max/scale set on axis.\n      // For example, we have dataZoom definition:\n      // [\n      //      {xAxisIndex: 0, start: 30, end: 70},\n      //      {yAxisIndex: 0, start: 20, end: 80}\n      // ]\n      // In this case, [20, 80] of y-dataZoom should be based on data\n      // that have filtered by x-dataZoom using range of [30, 70],\n      // but should not be based on full raw data. Thus sliding\n      // x-dataZoom will change both ranges of xAxis and yAxis,\n      // while sliding y-dataZoom will only change the range of yAxis.\n      // So we should filter x-axis after reset x-axis immediately,\n      // and then reset y-axis and filter y-axis.\n\n      dataZoomModel.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).filterData(dataZoomModel, api);\n      });\n    });\n    ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n      // Fullfill all of the range props so that user\n      // is able to get them from chart.getOption().\n      var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n      var percentRange = axisProxy.getDataPercentWindow();\n      var valueRange = axisProxy.getDataValueWindow();\n      dataZoomModel.setRawRange({\n        start: percentRange[0],\n        end: percentRange[1],\n        startValue: valueRange[0],\n        endValue: valueRange[1]\n      }, true);\n    });\n  }\n});","var dpr = 1; // If in browser environment\n\nif (typeof window !== 'undefined') {\n  dpr = Math.max(window.devicePixelRatio || 1, 1);\n}\n/**\n * config默认配置项\n * @exports zrender/config\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n/**\n * debug日志选项：catchBrushException为true下有效\n * 0 : 不生成debug数据，发布用\n * 1 : 异常抛出，调试用\n * 2 : 控制台输出，调试用\n */\n\n\nvar debugMode = 0; // retina 屏幕优化\n\nvar devicePixelRatio = dpr;\nexports.debugMode = debugMode;\nexports.devicePixelRatio = devicePixelRatio;","var echarts = require(\"../echarts\");\n\nrequire(\"../coord/single/singleCreator\");\n\nrequire(\"./axis/SingleAxisView\");\n\nrequire(\"../coord/single/AxisModel\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./axisPointer/SingleAxisPointer\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.extendComponentView({\n  type: 'single'\n});","var echarts = require(\"../echarts\");\n\nvar preprocessor = require(\"./brush/preprocessor\");\n\nrequire(\"./brush/visualEncoding\");\n\nrequire(\"./brush/BrushModel\");\n\nrequire(\"./brush/BrushView\");\n\nrequire(\"./brush/brushAction\");\n\nrequire(\"./toolbox/feature/Brush\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Brush component entry\n */\necharts.registerPreprocessor(preprocessor);","var SeriesModel = require(\"../../model/Series\");\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.__base_bar__',\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  getMarkerPosition: function (value) {\n    var coordSys = this.coordinateSystem;\n\n    if (coordSys) {\n      // PENDING if clamp ?\n      var pt = coordSys.dataToPoint(coordSys.clampData(value));\n      var data = this.getData();\n      var offset = data.getLayout('offset');\n      var size = data.getLayout('size');\n      var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\n      pt[offsetIndex] += offset + size / 2;\n      return pt;\n    }\n\n    return [NaN, NaN];\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    // stack: null\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // 最小高度改为0\n    barMinHeight: 0,\n    // 最小角度为0，仅对极坐标系下的柱状图有效\n    barMinAngle: 0,\n    // cursor: null,\n    large: false,\n    largeThreshold: 400,\n    progressive: 5e3,\n    progressiveChunkMode: 'mod',\n    // barMaxWidth: null,\n    // 默认自适应\n    // barWidth: null,\n    // 柱间距离，默认为柱形宽度的30%，可设固定值\n    // barGap: '30%',\n    // 类目间柱形距离，默认为类目间距的20%，可设固定值\n    // barCategoryGap: '20%',\n    // label: {\n    //      show: false\n    // },\n    itemStyle: {},\n    emphasis: {}\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar markerHelper = require(\"./markerHelper\");\n\nvar LineDraw = require(\"../../chart/helper/LineDraw\");\n\nvar MarkerView = require(\"./MarkerView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar markLineTransform = function (seriesModel, coordSys, mlModel, item) {\n  var data = seriesModel.getData(); // Special type markLine like 'min', 'max', 'average', 'median'\n\n  var mlType = item.type;\n\n  if (!zrUtil.isArray(item) && (mlType === 'min' || mlType === 'max' || mlType === 'average' || mlType === 'median' // In case\n  // data: [{\n  //   yAxis: 10\n  // }]\n  || item.xAxis != null || item.yAxis != null)) {\n    var valueAxis;\n    var valueDataDim;\n    var value;\n\n    if (item.yAxis != null || item.xAxis != null) {\n      valueDataDim = item.yAxis != null ? 'y' : 'x';\n      valueAxis = coordSys.getAxis(valueDataDim);\n      value = zrUtil.retrieve(item.yAxis, item.xAxis);\n    } else {\n      var axisInfo = markerHelper.getAxisInfo(item, data, coordSys, seriesModel);\n      valueDataDim = axisInfo.valueDataDim;\n      valueAxis = axisInfo.valueAxis;\n      value = markerHelper.numCalculate(data, valueDataDim, mlType);\n    }\n\n    var valueIndex = valueDataDim === 'x' ? 0 : 1;\n    var baseIndex = 1 - valueIndex;\n    var mlFrom = zrUtil.clone(item);\n    var mlTo = {};\n    mlFrom.type = null;\n    mlFrom.coord = [];\n    mlTo.coord = [];\n    mlFrom.coord[baseIndex] = -Infinity;\n    mlTo.coord[baseIndex] = Infinity;\n    var precision = mlModel.get('precision');\n\n    if (precision >= 0 && typeof value === 'number') {\n      value = +value.toFixed(Math.min(precision, 20));\n    }\n\n    mlFrom.coord[valueIndex] = mlTo.coord[valueIndex] = value;\n    item = [mlFrom, mlTo, {\n      // Extra option for tooltip and label\n      type: mlType,\n      valueIndex: item.valueIndex,\n      // Force to use the value of calculated value.\n      value: value\n    }];\n  }\n\n  item = [markerHelper.dataTransform(seriesModel, item[0]), markerHelper.dataTransform(seriesModel, item[1]), zrUtil.extend({}, item[2])]; // Avoid line data type is extended by from(to) data type\n\n  item[2].type = item[2].type || ''; // Merge from option and to option into line option\n\n  zrUtil.merge(item[2], item[0]);\n  zrUtil.merge(item[2], item[1]);\n  return item;\n};\n\nfunction isInifinity(val) {\n  return !isNaN(val) && !isFinite(val);\n} // If a markLine has one dim\n\n\nfunction ifMarkLineHasOnlyDim(dimIndex, fromCoord, toCoord, coordSys) {\n  var otherDimIndex = 1 - dimIndex;\n  var dimName = coordSys.dimensions[dimIndex];\n  return isInifinity(fromCoord[otherDimIndex]) && isInifinity(toCoord[otherDimIndex]) && fromCoord[dimIndex] === toCoord[dimIndex] && coordSys.getAxis(dimName).containData(fromCoord[dimIndex]);\n}\n\nfunction markLineFilter(coordSys, item) {\n  if (coordSys.type === 'cartesian2d') {\n    var fromCoord = item[0].coord;\n    var toCoord = item[1].coord; // In case\n    // {\n    //  markLine: {\n    //    data: [{ yAxis: 2 }]\n    //  }\n    // }\n\n    if (fromCoord && toCoord && (ifMarkLineHasOnlyDim(1, fromCoord, toCoord, coordSys) || ifMarkLineHasOnlyDim(0, fromCoord, toCoord, coordSys))) {\n      return true;\n    }\n  }\n\n  return markerHelper.dataFilter(coordSys, item[0]) && markerHelper.dataFilter(coordSys, item[1]);\n}\n\nfunction updateSingleMarkerEndLayout(data, idx, isFrom, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  var itemModel = data.getItemModel(idx);\n  var point;\n  var xPx = numberUtil.parsePercent(itemModel.get('x'), api.getWidth());\n  var yPx = numberUtil.parsePercent(itemModel.get('y'), api.getHeight());\n\n  if (!isNaN(xPx) && !isNaN(yPx)) {\n    point = [xPx, yPx];\n  } else {\n    // Chart like bar may have there own marker positioning logic\n    if (seriesModel.getMarkerPosition) {\n      // Use the getMarkerPoisition\n      point = seriesModel.getMarkerPosition(data.getValues(data.dimensions, idx));\n    } else {\n      var dims = coordSys.dimensions;\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n      point = coordSys.dataToPoint([x, y]);\n    } // Expand line to the edge of grid if value on one axis is Inifnity\n    // In case\n    //  markLine: {\n    //    data: [{\n    //      yAxis: 2\n    //      // or\n    //      type: 'average'\n    //    }]\n    //  }\n\n\n    if (coordSys.type === 'cartesian2d') {\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      var dims = coordSys.dimensions;\n\n      if (isInifinity(data.get(dims[0], idx))) {\n        point[0] = xAxis.toGlobalCoord(xAxis.getExtent()[isFrom ? 0 : 1]);\n      } else if (isInifinity(data.get(dims[1], idx))) {\n        point[1] = yAxis.toGlobalCoord(yAxis.getExtent()[isFrom ? 0 : 1]);\n      }\n    } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n  }\n\n  data.setItemLayout(idx, point);\n}\n\nvar _default = MarkerView.extend({\n  type: 'markLine',\n  // updateLayout: function (markLineModel, ecModel, api) {\n  //     ecModel.eachSeries(function (seriesModel) {\n  //         var mlModel = seriesModel.markLineModel;\n  //         if (mlModel) {\n  //             var mlData = mlModel.getData();\n  //             var fromData = mlModel.__from;\n  //             var toData = mlModel.__to;\n  //             // Update visual and layout of from symbol and to symbol\n  //             fromData.each(function (idx) {\n  //                 updateSingleMarkerEndLayout(fromData, idx, true, seriesModel, api);\n  //                 updateSingleMarkerEndLayout(toData, idx, false, seriesModel, api);\n  //             });\n  //             // Update layout of line\n  //             mlData.each(function (idx) {\n  //                 mlData.setItemLayout(idx, [\n  //                     fromData.getItemLayout(idx),\n  //                     toData.getItemLayout(idx)\n  //                 ]);\n  //             });\n  //             this.markerGroupMap.get(seriesModel.id).updateLayout();\n  //         }\n  //     }, this);\n  // },\n  updateTransform: function (markLineModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var mlModel = seriesModel.markLineModel;\n\n      if (mlModel) {\n        var mlData = mlModel.getData();\n        var fromData = mlModel.__from;\n        var toData = mlModel.__to; // Update visual and layout of from symbol and to symbol\n\n        fromData.each(function (idx) {\n          updateSingleMarkerEndLayout(fromData, idx, true, seriesModel, api);\n          updateSingleMarkerEndLayout(toData, idx, false, seriesModel, api);\n        }); // Update layout of line\n\n        mlData.each(function (idx) {\n          mlData.setItemLayout(idx, [fromData.getItemLayout(idx), toData.getItemLayout(idx)]);\n        });\n        this.markerGroupMap.get(seriesModel.id).updateLayout();\n      }\n    }, this);\n  },\n  renderSeries: function (seriesModel, mlModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesId = seriesModel.id;\n    var seriesData = seriesModel.getData();\n    var lineDrawMap = this.markerGroupMap;\n    var lineDraw = lineDrawMap.get(seriesId) || lineDrawMap.set(seriesId, new LineDraw());\n    this.group.add(lineDraw.group);\n    var mlData = createList(coordSys, seriesModel, mlModel);\n    var fromData = mlData.from;\n    var toData = mlData.to;\n    var lineData = mlData.line;\n    mlModel.__from = fromData;\n    mlModel.__to = toData; // Line data for tooltip and formatter\n\n    mlModel.setData(lineData);\n    var symbolType = mlModel.get('symbol');\n    var symbolSize = mlModel.get('symbolSize');\n\n    if (!zrUtil.isArray(symbolType)) {\n      symbolType = [symbolType, symbolType];\n    }\n\n    if (typeof symbolSize === 'number') {\n      symbolSize = [symbolSize, symbolSize];\n    } // Update visual and layout of from symbol and to symbol\n\n\n    mlData.from.each(function (idx) {\n      updateDataVisualAndLayout(fromData, idx, true);\n      updateDataVisualAndLayout(toData, idx, false);\n    }); // Update visual and layout of line\n\n    lineData.each(function (idx) {\n      var lineColor = lineData.getItemModel(idx).get('lineStyle.color');\n      lineData.setItemVisual(idx, {\n        color: lineColor || fromData.getItemVisual(idx, 'color')\n      });\n      lineData.setItemLayout(idx, [fromData.getItemLayout(idx), toData.getItemLayout(idx)]);\n      lineData.setItemVisual(idx, {\n        'fromSymbolSize': fromData.getItemVisual(idx, 'symbolSize'),\n        'fromSymbol': fromData.getItemVisual(idx, 'symbol'),\n        'toSymbolSize': toData.getItemVisual(idx, 'symbolSize'),\n        'toSymbol': toData.getItemVisual(idx, 'symbol')\n      });\n    });\n    lineDraw.updateData(lineData); // Set host model for tooltip\n    // FIXME\n\n    mlData.line.eachItemGraphicEl(function (el, idx) {\n      el.traverse(function (child) {\n        child.dataModel = mlModel;\n      });\n    });\n\n    function updateDataVisualAndLayout(data, idx, isFrom) {\n      var itemModel = data.getItemModel(idx);\n      updateSingleMarkerEndLayout(data, idx, isFrom, seriesModel, api);\n      data.setItemVisual(idx, {\n        symbolSize: itemModel.get('symbolSize') || symbolSize[isFrom ? 0 : 1],\n        symbol: itemModel.get('symbol', true) || symbolType[isFrom ? 0 : 1],\n        color: itemModel.get('itemStyle.color') || seriesData.getVisual('color')\n      });\n    }\n\n    lineDraw.__keep = true;\n    lineDraw.group.silent = mlModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} coordSys\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\n\nfunction createList(coordSys, seriesModel, mlModel) {\n  var coordDimsInfos;\n\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var info = seriesModel.getData().getDimensionInfo(seriesModel.getData().mapDimension(coordDim)) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      return zrUtil.defaults({\n        name: coordDim\n      }, info);\n    });\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n  }\n\n  var fromData = new List(coordDimsInfos, mlModel);\n  var toData = new List(coordDimsInfos, mlModel); // No dimensions\n\n  var lineData = new List([], mlModel);\n  var optData = zrUtil.map(mlModel.get('data'), zrUtil.curry(markLineTransform, seriesModel, coordSys, mlModel));\n\n  if (coordSys) {\n    optData = zrUtil.filter(optData, zrUtil.curry(markLineFilter, coordSys));\n  }\n\n  var dimValueGetter = coordSys ? markerHelper.dimValueGetter : function (item) {\n    return item.value;\n  };\n  fromData.initData(zrUtil.map(optData, function (item) {\n    return item[0];\n  }), null, dimValueGetter);\n  toData.initData(zrUtil.map(optData, function (item) {\n    return item[1];\n  }), null, dimValueGetter);\n  lineData.initData(zrUtil.map(optData, function (item) {\n    return item[2];\n  }));\n  lineData.hasItemOption = true;\n  return {\n    from: fromData,\n    to: toData,\n    line: lineData\n  };\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapModel = require(\"./VisualMapModel\");\n\nvar numberUtil = require(\"../../util/number\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Constant\nvar DEFAULT_BAR_BOUND = [20, 140];\nvar ContinuousModel = VisualMapModel.extend({\n  type: 'visualMap.continuous',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    align: 'auto',\n    // 'auto', 'left', 'right', 'top', 'bottom'\n    calculable: false,\n    // This prop effect default component type determine,\n    // See echarts/component/visualMap/typeDefaulter.\n    range: null,\n    // selected range. In default case `range` is [min, max]\n    // and can auto change along with modification of min max,\n    // util use specifid a range.\n    realtime: true,\n    // Whether realtime update.\n    itemHeight: null,\n    // The length of the range control edge.\n    itemWidth: null,\n    // The length of the other side.\n    hoverLink: true,\n    // Enable hover highlight.\n    hoverLinkDataSize: null,\n    // The size of hovered data.\n    hoverLinkOnHandle: null // Whether trigger hoverLink when hover handle.\n    // If not specified, follow the value of `realtime`.\n\n  },\n\n  /**\n   * @override\n   */\n  optionUpdated: function (newOption, isInit) {\n    ContinuousModel.superApply(this, 'optionUpdated', arguments);\n    this.resetExtent();\n    this.resetVisual(function (mappingOption) {\n      mappingOption.mappingMethod = 'linear';\n      mappingOption.dataExtent = this.getExtent();\n    });\n\n    this._resetRange();\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  resetItemSize: function () {\n    ContinuousModel.superApply(this, 'resetItemSize', arguments);\n    var itemSize = this.itemSize;\n    this._orient === 'horizontal' && itemSize.reverse();\n    (itemSize[0] == null || isNaN(itemSize[0])) && (itemSize[0] = DEFAULT_BAR_BOUND[0]);\n    (itemSize[1] == null || isNaN(itemSize[1])) && (itemSize[1] = DEFAULT_BAR_BOUND[1]);\n  },\n\n  /**\n   * @private\n   */\n  _resetRange: function () {\n    var dataExtent = this.getExtent();\n    var range = this.option.range;\n\n    if (!range || range.auto) {\n      // `range` should always be array (so we dont use other\n      // value like 'auto') for user-friend. (consider getOption).\n      dataExtent.auto = 1;\n      this.option.range = dataExtent;\n    } else if (zrUtil.isArray(range)) {\n      if (range[0] > range[1]) {\n        range.reverse();\n      }\n\n      range[0] = Math.max(range[0], dataExtent[0]);\n      range[1] = Math.min(range[1], dataExtent[1]);\n    }\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  completeVisualOption: function () {\n    VisualMapModel.prototype.completeVisualOption.apply(this, arguments);\n    zrUtil.each(this.stateList, function (state) {\n      var symbolSize = this.option.controller[state].symbolSize;\n\n      if (symbolSize && symbolSize[0] !== symbolSize[1]) {\n        symbolSize[0] = 0; // For good looking.\n      }\n    }, this);\n  },\n\n  /**\n   * @override\n   */\n  setSelected: function (selected) {\n    this.option.range = selected.slice();\n\n    this._resetRange();\n  },\n\n  /**\n   * @public\n   */\n  getSelected: function () {\n    var dataExtent = this.getExtent();\n    var dataInterval = numberUtil.asc((this.get('range') || []).slice()); // Clamp\n\n    dataInterval[0] > dataExtent[1] && (dataInterval[0] = dataExtent[1]);\n    dataInterval[1] > dataExtent[1] && (dataInterval[1] = dataExtent[1]);\n    dataInterval[0] < dataExtent[0] && (dataInterval[0] = dataExtent[0]);\n    dataInterval[1] < dataExtent[0] && (dataInterval[1] = dataExtent[0]);\n    return dataInterval;\n  },\n\n  /**\n   * @override\n   */\n  getValueState: function (value) {\n    var range = this.option.range;\n    var dataExtent = this.getExtent(); // When range[0] === dataExtent[0], any value larger than dataExtent[0] maps to 'inRange'.\n    // range[1] is processed likewise.\n\n    return (range[0] <= dataExtent[0] || range[0] <= value) && (range[1] >= dataExtent[1] || value <= range[1]) ? 'inRange' : 'outOfRange';\n  },\n\n  /**\n   * @params {Array.<number>} range target value: range[0] <= value && value <= range[1]\n   * @return {Array.<Object>} [{seriesId, dataIndices: <Array.<number>>}, ...]\n   */\n  findTargetDataIndices: function (range) {\n    var result = [];\n    this.eachTargetSeries(function (seriesModel) {\n      var dataIndices = [];\n      var data = seriesModel.getData();\n      data.each(this.getDataDimension(data), function (value, dataIndex) {\n        range[0] <= value && value <= range[1] && dataIndices.push(dataIndex);\n      }, this);\n      result.push({\n        seriesId: seriesModel.id,\n        dataIndex: dataIndices\n      });\n    }, this);\n    return result;\n  },\n\n  /**\n   * @implement\n   */\n  getVisualMeta: function (getColorVisual) {\n    var oVals = getColorStopValues(this, 'outOfRange', this.getExtent());\n    var iVals = getColorStopValues(this, 'inRange', this.option.range.slice());\n    var stops = [];\n\n    function setStop(value, valueState) {\n      stops.push({\n        value: value,\n        color: getColorVisual(value, valueState)\n      });\n    } // Format to: outOfRange -- inRange -- outOfRange.\n\n\n    var iIdx = 0;\n    var oIdx = 0;\n    var iLen = iVals.length;\n    var oLen = oVals.length;\n\n    for (; oIdx < oLen && (!iVals.length || oVals[oIdx] <= iVals[0]); oIdx++) {\n      // If oVal[oIdx] === iVals[iIdx], oVal[oIdx] should be ignored.\n      if (oVals[oIdx] < iVals[iIdx]) {\n        setStop(oVals[oIdx], 'outOfRange');\n      }\n    }\n\n    for (var first = 1; iIdx < iLen; iIdx++, first = 0) {\n      // If range is full, value beyond min, max will be clamped.\n      // make a singularity\n      first && stops.length && setStop(iVals[iIdx], 'outOfRange');\n      setStop(iVals[iIdx], 'inRange');\n    }\n\n    for (var first = 1; oIdx < oLen; oIdx++) {\n      if (!iVals.length || iVals[iVals.length - 1] < oVals[oIdx]) {\n        // make a singularity\n        if (first) {\n          stops.length && setStop(stops[stops.length - 1].value, 'outOfRange');\n          first = 0;\n        }\n\n        setStop(oVals[oIdx], 'outOfRange');\n      }\n    }\n\n    var stopsLen = stops.length;\n    return {\n      stops: stops,\n      outerColors: [stopsLen ? stops[0].color : 'transparent', stopsLen ? stops[stopsLen - 1].color : 'transparent']\n    };\n  }\n});\n\nfunction getColorStopValues(visualMapModel, valueState, dataExtent) {\n  if (dataExtent[0] === dataExtent[1]) {\n    return dataExtent.slice();\n  } // When using colorHue mapping, it is not linear color any more.\n  // Moreover, canvas gradient seems not to be accurate linear.\n  // FIXME\n  // Should be arbitrary value 100? or based on pixel size?\n\n\n  var count = 200;\n  var step = (dataExtent[1] - dataExtent[0]) / count;\n  var value = dataExtent[0];\n  var stopValues = [];\n\n  for (var i = 0; i <= count && value < dataExtent[1]; i++) {\n    stopValues.push(value);\n    value += step;\n  }\n\n  stopValues.push(dataExtent[1]);\n  return stopValues;\n}\n\nvar _default = ContinuousModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction dataToCoordSize(dataSize, dataItem) {\n  // dataItem is necessary in log axis.\n  var axis = this.getAxis();\n  var val = dataItem instanceof Array ? dataItem[0] : dataItem;\n  var halfSize = (dataSize instanceof Array ? dataSize[0] : dataSize) / 2;\n  return axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis.dataToCoord(val - halfSize) - axis.dataToCoord(val + halfSize));\n}\n\nfunction _default(coordSys) {\n  var rect = coordSys.getRect();\n  return {\n    coordSys: {\n      type: 'singleAxis',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    api: {\n      coord: function (val) {\n        // do not provide \"out\" param\n        return coordSys.dataToPoint(val);\n      },\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;","var util = require(\"../core/util\");\n\nvar _event = require(\"../core/event\");\n\nvar Dispatcher = _event.Dispatcher;\n\nvar requestAnimationFrame = require(\"./requestAnimationFrame\");\n\nvar Animator = require(\"./Animator\");\n\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n/**\n * @typedef {Object} IZRenderStage\n * @property {Function} update\n */\n\n/**\n * @alias module:zrender/animation/Animation\n * @constructor\n * @param {Object} [options]\n * @param {Function} [options.onframe]\n * @param {IZRenderStage} [options.stage]\n * @example\n *     var animation = new Animation();\n *     var obj = {\n *         x: 100,\n *         y: 100\n *     };\n *     animation.animate(node.position)\n *         .when(1000, {\n *             x: 500,\n *             y: 500\n *         })\n *         .when(2000, {\n *             x: 100,\n *             y: 100\n *         })\n *         .start('spline');\n */\nvar Animation = function (options) {\n  options = options || {};\n  this.stage = options.stage || {};\n\n  this.onframe = options.onframe || function () {}; // private properties\n\n\n  this._clips = [];\n  this._running = false;\n  this._time;\n  this._pausedTime;\n  this._pauseStart;\n  this._paused = false;\n  Dispatcher.call(this);\n};\n\nAnimation.prototype = {\n  constructor: Animation,\n\n  /**\n   * 添加 clip\n   * @param {module:zrender/animation/Clip} clip\n   */\n  addClip: function (clip) {\n    this._clips.push(clip);\n  },\n\n  /**\n   * 添加 animator\n   * @param {module:zrender/animation/Animator} animator\n   */\n  addAnimator: function (animator) {\n    animator.animation = this;\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.addClip(clips[i]);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Clip} clip\n   */\n  removeClip: function (clip) {\n    var idx = util.indexOf(this._clips, clip);\n\n    if (idx >= 0) {\n      this._clips.splice(idx, 1);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Animator} animator\n   */\n  removeAnimator: function (animator) {\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.removeClip(clips[i]);\n    }\n\n    animator.animation = null;\n  },\n  _update: function () {\n    var time = new Date().getTime() - this._pausedTime;\n\n    var delta = time - this._time;\n    var clips = this._clips;\n    var len = clips.length;\n    var deferredEvents = [];\n    var deferredClips = [];\n\n    for (var i = 0; i < len; i++) {\n      var clip = clips[i];\n      var e = clip.step(time, delta); // Throw out the events need to be called after\n      // stage.update, like destroy\n\n      if (e) {\n        deferredEvents.push(e);\n        deferredClips.push(clip);\n      }\n    } // Remove the finished clip\n\n\n    for (var i = 0; i < len;) {\n      if (clips[i]._needsRemove) {\n        clips[i] = clips[len - 1];\n        clips.pop();\n        len--;\n      } else {\n        i++;\n      }\n    }\n\n    len = deferredEvents.length;\n\n    for (var i = 0; i < len; i++) {\n      deferredClips[i].fire(deferredEvents[i]);\n    }\n\n    this._time = time;\n    this.onframe(delta); // 'frame' should be triggered before stage, because upper application\n    // depends on the sequence (e.g., echarts-stream and finish\n    // event judge)\n\n    this.trigger('frame', delta);\n\n    if (this.stage.update) {\n      this.stage.update();\n    }\n  },\n  _startLoop: function () {\n    var self = this;\n    this._running = true;\n\n    function step() {\n      if (self._running) {\n        requestAnimationFrame(step);\n        !self._paused && self._update();\n      }\n    }\n\n    requestAnimationFrame(step);\n  },\n\n  /**\n   * Start animation.\n   */\n  start: function () {\n    this._time = new Date().getTime();\n    this._pausedTime = 0;\n\n    this._startLoop();\n  },\n\n  /**\n   * Stop animation.\n   */\n  stop: function () {\n    this._running = false;\n  },\n\n  /**\n   * Pause animation.\n   */\n  pause: function () {\n    if (!this._paused) {\n      this._pauseStart = new Date().getTime();\n      this._paused = true;\n    }\n  },\n\n  /**\n   * Resume animation.\n   */\n  resume: function () {\n    if (this._paused) {\n      this._pausedTime += new Date().getTime() - this._pauseStart;\n      this._paused = false;\n    }\n  },\n\n  /**\n   * Clear animation.\n   */\n  clear: function () {\n    this._clips = [];\n  },\n\n  /**\n   * Whether animation finished.\n   */\n  isFinished: function () {\n    return !this._clips.length;\n  },\n\n  /**\n   * Creat animator for a target, whose props can be animated.\n   *\n   * @param  {Object} target\n   * @param  {Object} options\n   * @param  {boolean} [options.loop=false] Whether loop animation.\n   * @param  {Function} [options.getter=null] Get value from target.\n   * @param  {Function} [options.setter=null] Set value to target.\n   * @return {module:zrender/animation/Animation~Animator}\n   */\n  // TODO Gap\n  animate: function (target, options) {\n    options = options || {};\n    var animator = new Animator(target, options.loop, options.getter, options.setter);\n    this.addAnimator(animator);\n    return animator;\n  }\n};\nutil.mixin(Animation, Dispatcher);\nvar _default = Animation;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./sankey/SankeySeries\");\n\nrequire(\"./sankey/SankeyView\");\n\nrequire(\"./sankey/sankeyAction\");\n\nvar sankeyLayout = require(\"./sankey/sankeyLayout\");\n\nvar sankeyVisual = require(\"./sankey/sankeyVisual\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerLayout(sankeyLayout);\necharts.registerVisual(sankeyVisual);","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _echarts = require(\"./lib/echarts\");\n\n(function () {\n  for (var key in _echarts) {\n    if (_echarts == null || !_echarts.hasOwnProperty(key) || key === 'default' || key === '__esModule') return;\n    exports[key] = _echarts[key];\n  }\n})();\n\nvar _export = require(\"./lib/export\");\n\n(function () {\n  for (var key in _export) {\n    if (_export == null || !_export.hasOwnProperty(key) || key === 'default' || key === '__esModule') return;\n    exports[key] = _export[key];\n  }\n})();\n\nrequire(\"./lib/component/dataset\");\n\nrequire(\"./lib/chart/line\");\n\nrequire(\"./lib/chart/bar\");\n\nrequire(\"./lib/chart/pie\");\n\nrequire(\"./lib/chart/scatter\");\n\nrequire(\"./lib/chart/radar\");\n\nrequire(\"./lib/chart/map\");\n\nrequire(\"./lib/chart/tree\");\n\nrequire(\"./lib/chart/treemap\");\n\nrequire(\"./lib/chart/graph\");\n\nrequire(\"./lib/chart/gauge\");\n\nrequire(\"./lib/chart/funnel\");\n\nrequire(\"./lib/chart/parallel\");\n\nrequire(\"./lib/chart/sankey\");\n\nrequire(\"./lib/chart/boxplot\");\n\nrequire(\"./lib/chart/candlestick\");\n\nrequire(\"./lib/chart/effectScatter\");\n\nrequire(\"./lib/chart/lines\");\n\nrequire(\"./lib/chart/heatmap\");\n\nrequire(\"./lib/chart/pictorialBar\");\n\nrequire(\"./lib/chart/themeRiver\");\n\nrequire(\"./lib/chart/sunburst\");\n\nrequire(\"./lib/chart/custom\");\n\nrequire(\"./lib/component/graphic\");\n\nrequire(\"./lib/component/grid\");\n\nrequire(\"./lib/component/legendScroll\");\n\nrequire(\"./lib/component/tooltip\");\n\nrequire(\"./lib/component/axisPointer\");\n\nrequire(\"./lib/component/polar\");\n\nrequire(\"./lib/component/geo\");\n\nrequire(\"./lib/component/parallel\");\n\nrequire(\"./lib/component/singleAxis\");\n\nrequire(\"./lib/component/brush\");\n\nrequire(\"./lib/component/calendar\");\n\nrequire(\"./lib/component/title\");\n\nrequire(\"./lib/component/dataZoom\");\n\nrequire(\"./lib/component/visualMap\");\n\nrequire(\"./lib/component/markPoint\");\n\nrequire(\"./lib/component/markLine\");\n\nrequire(\"./lib/component/markArea\");\n\nrequire(\"./lib/component/timeline\");\n\nrequire(\"./lib/component/toolbox\");\n\nrequire(\"zrender/lib/vml/vml\");\n\nrequire(\"zrender/lib/svg/svg\");","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Link lists and struct (graph or tree)\n */\nvar each = zrUtil.each;\nvar DATAS = '\\0__link_datas';\nvar MAIN_DATA = '\\0__link_mainData'; // Caution:\n// In most case, either list or its shallow clones (see list.cloneShallow)\n// is active in echarts process. So considering heap memory consumption,\n// we do not clone tree or graph, but share them among list and its shallow clones.\n// But in some rare case, we have to keep old list (like do animation in chart). So\n// please take care that both the old list and the new list share the same tree/graph.\n\n/**\n * @param {Object} opt\n * @param {module:echarts/data/List} opt.mainData\n * @param {Object} [opt.struct] For example, instance of Graph or Tree.\n * @param {string} [opt.structAttr] designation: list[structAttr] = struct;\n * @param {Object} [opt.datas] {dataType: data},\n *                 like: {node: nodeList, edge: edgeList}.\n *                 Should contain mainData.\n * @param {Object} [opt.datasAttr] {dataType: attr},\n *                 designation: struct[datasAttr[dataType]] = list;\n */\n\nfunction linkList(opt) {\n  var mainData = opt.mainData;\n  var datas = opt.datas;\n\n  if (!datas) {\n    datas = {\n      main: mainData\n    };\n    opt.datasAttr = {\n      main: 'data'\n    };\n  }\n\n  opt.datas = opt.mainData = null;\n  linkAll(mainData, datas, opt); // Porxy data original methods.\n\n  each(datas, function (data) {\n    each(mainData.TRANSFERABLE_METHODS, function (methodName) {\n      data.wrapMethod(methodName, zrUtil.curry(transferInjection, opt));\n    });\n  }); // Beyond transfer, additional features should be added to `cloneShallow`.\n\n  mainData.wrapMethod('cloneShallow', zrUtil.curry(cloneShallowInjection, opt)); // Only mainData trigger change, because struct.update may trigger\n  // another changable methods, which may bring about dead lock.\n\n  each(mainData.CHANGABLE_METHODS, function (methodName) {\n    mainData.wrapMethod(methodName, zrUtil.curry(changeInjection, opt));\n  }); // Make sure datas contains mainData.\n\n  zrUtil.assert(datas[mainData.dataType] === mainData);\n}\n\nfunction transferInjection(opt, res) {\n  if (isMainData(this)) {\n    // Transfer datas to new main data.\n    var datas = zrUtil.extend({}, this[DATAS]);\n    datas[this.dataType] = res;\n    linkAll(res, datas, opt);\n  } else {\n    // Modify the reference in main data to point newData.\n    linkSingle(res, this.dataType, this[MAIN_DATA], opt);\n  }\n\n  return res;\n}\n\nfunction changeInjection(opt, res) {\n  opt.struct && opt.struct.update(this);\n  return res;\n}\n\nfunction cloneShallowInjection(opt, res) {\n  // cloneShallow, which brings about some fragilities, may be inappropriate\n  // to be exposed as an API. So for implementation simplicity we can make\n  // the restriction that cloneShallow of not-mainData should not be invoked\n  // outside, but only be invoked here.\n  each(res[DATAS], function (data, dataType) {\n    data !== res && linkSingle(data.cloneShallow(), dataType, res, opt);\n  });\n  return res;\n}\n/**\n * Supplement method to List.\n *\n * @public\n * @param {string} [dataType] If not specified, return mainData.\n * @return {module:echarts/data/List}\n */\n\n\nfunction getLinkedData(dataType) {\n  var mainData = this[MAIN_DATA];\n  return dataType == null || mainData == null ? mainData : mainData[DATAS][dataType];\n}\n\nfunction isMainData(data) {\n  return data[MAIN_DATA] === data;\n}\n\nfunction linkAll(mainData, datas, opt) {\n  mainData[DATAS] = {};\n  each(datas, function (data, dataType) {\n    linkSingle(data, dataType, mainData, opt);\n  });\n}\n\nfunction linkSingle(data, dataType, mainData, opt) {\n  mainData[DATAS][dataType] = data;\n  data[MAIN_DATA] = mainData;\n  data.dataType = dataType;\n\n  if (opt.struct) {\n    data[opt.structAttr] = opt.struct;\n    opt.struct[opt.datasAttr[dataType]] = data;\n  } // Supplement method.\n\n\n  data.getLinkedData = getLinkedData;\n}\n\nvar _default = linkList;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Region = require(\"../Region\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Fix for 南海诸岛\nvar geoCoord = [126, 25];\nvar points = [[[0, 3.5], [7, 11.2], [15, 11.9], [30, 7], [42, 0.7], [52, 0.7], [56, 7.7], [59, 0.7], [64, 0.7], [64, 0], [5, 0], [0, 3.5]], [[13, 16.1], [19, 14.7], [16, 21.7], [11, 23.1], [13, 16.1]], [[12, 32.2], [14, 38.5], [15, 38.5], [13, 32.2], [12, 32.2]], [[16, 47.6], [12, 53.2], [13, 53.2], [18, 47.6], [16, 47.6]], [[6, 64.4], [8, 70], [9, 70], [8, 64.4], [6, 64.4]], [[23, 82.6], [29, 79.8], [30, 79.8], [25, 82.6], [23, 82.6]], [[37, 70.7], [43, 62.3], [44, 62.3], [39, 70.7], [37, 70.7]], [[48, 51.1], [51, 45.5], [53, 45.5], [50, 51.1], [48, 51.1]], [[51, 35], [51, 28.7], [53, 28.7], [53, 35], [51, 35]], [[52, 22.4], [55, 17.5], [56, 17.5], [53, 22.4], [52, 22.4]], [[58, 12.6], [62, 7], [63, 7], [60, 12.6], [58, 12.6]], [[0, 3.5], [0, 93.1], [64, 93.1], [64, 0], [63, 0], [63, 92.4], [1, 92.4], [1, 3.5], [0, 3.5]]];\n\nfor (var i = 0; i < points.length; i++) {\n  for (var k = 0; k < points[i].length; k++) {\n    points[i][k][0] /= 10.5;\n    points[i][k][1] /= -10.5 / 0.75;\n    points[i][k][0] += geoCoord[0];\n    points[i][k][1] += geoCoord[1];\n  }\n}\n\nfunction _default(geo) {\n  if (geo.map === 'china') {\n    geo.regions.push(new Region('南海诸岛', zrUtil.map(points, function (exterior) {\n      return {\n        type: 'polygon',\n        exterior: exterior\n      };\n    }), geoCoord));\n  }\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar DataZoomView = require(\"./DataZoomView\");\n\nvar sliderMove = require(\"../helper/sliderMove\");\n\nvar roams = require(\"./roams\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar bind = zrUtil.bind;\nvar InsideZoomView = DataZoomView.extend({\n  type: 'dataZoom.inside',\n\n  /**\n   * @override\n   */\n  init: function (ecModel, api) {\n    /**\n     * 'throttle' is used in this.dispatchAction, so we save range\n     * to avoid missing some 'pan' info.\n     * @private\n     * @type {Array.<number>}\n     */\n    this._range;\n  },\n\n  /**\n   * @override\n   */\n  render: function (dataZoomModel, ecModel, api, payload) {\n    InsideZoomView.superApply(this, 'render', arguments); // Hance the `throttle` util ensures to preserve command order,\n    // here simply updating range all the time will not cause missing\n    // any of the the roam change.\n\n    this._range = dataZoomModel.getPercentRange(); // Reset controllers.\n\n    zrUtil.each(this.getTargetCoordInfo(), function (coordInfoList, coordSysName) {\n      var allCoordIds = zrUtil.map(coordInfoList, function (coordInfo) {\n        return roams.generateCoordId(coordInfo.model);\n      });\n      zrUtil.each(coordInfoList, function (coordInfo) {\n        var coordModel = coordInfo.model;\n        var dataZoomOption = dataZoomModel.option;\n        roams.register(api, {\n          coordId: roams.generateCoordId(coordModel),\n          allCoordIds: allCoordIds,\n          containsPoint: function (e, x, y) {\n            return coordModel.coordinateSystem.containPoint([x, y]);\n          },\n          dataZoomId: dataZoomModel.id,\n          throttleRate: dataZoomModel.get('throttle', true),\n          panGetRange: bind(this._onPan, this, coordInfo, coordSysName),\n          zoomGetRange: bind(this._onZoom, this, coordInfo, coordSysName),\n          zoomLock: dataZoomOption.zoomLock,\n          disabled: dataZoomOption.disabled,\n          roamControllerOpt: {\n            zoomOnMouseWheel: dataZoomOption.zoomOnMouseWheel,\n            moveOnMouseMove: dataZoomOption.moveOnMouseMove,\n            preventDefaultMouseMove: dataZoomOption.preventDefaultMouseMove\n          }\n        });\n      }, this);\n    }, this);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    roams.unregister(this.api, this.dataZoomModel.id);\n    InsideZoomView.superApply(this, 'dispose', arguments);\n    this._range = null;\n  },\n\n  /**\n   * @private\n   */\n  _onPan: function (coordInfo, coordSysName, controller, dx, dy, oldX, oldY, newX, newY) {\n    var lastRange = this._range;\n    var range = lastRange.slice(); // Calculate transform by the first axis.\n\n    var axisModel = coordInfo.axisModels[0];\n\n    if (!axisModel) {\n      return;\n    }\n\n    var directionInfo = getDirectionInfo[coordSysName]([oldX, oldY], [newX, newY], axisModel, controller, coordInfo);\n    var percentDelta = directionInfo.signal * (range[1] - range[0]) * directionInfo.pixel / directionInfo.pixelLength;\n    sliderMove(percentDelta, range, [0, 100], 'all');\n    this._range = range;\n\n    if (lastRange[0] !== range[0] || lastRange[1] !== range[1]) {\n      return range;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _onZoom: function (coordInfo, coordSysName, controller, scale, mouseX, mouseY) {\n    var lastRange = this._range;\n    var range = lastRange.slice(); // Calculate transform by the first axis.\n\n    var axisModel = coordInfo.axisModels[0];\n\n    if (!axisModel) {\n      return;\n    }\n\n    var directionInfo = getDirectionInfo[coordSysName](null, [mouseX, mouseY], axisModel, controller, coordInfo);\n    var percentPoint = (directionInfo.signal > 0 ? directionInfo.pixelStart + directionInfo.pixelLength - directionInfo.pixel : directionInfo.pixel - directionInfo.pixelStart) / directionInfo.pixelLength * (range[1] - range[0]) + range[0];\n    scale = Math.max(1 / scale, 0);\n    range[0] = (range[0] - percentPoint) * scale + percentPoint;\n    range[1] = (range[1] - percentPoint) * scale + percentPoint; // Restrict range.\n\n    var minMaxSpan = this.dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();\n    sliderMove(0, range, [0, 100], 0, minMaxSpan.minSpan, minMaxSpan.maxSpan);\n    this._range = range;\n\n    if (lastRange[0] !== range[0] || lastRange[1] !== range[1]) {\n      return range;\n    }\n  }\n});\nvar getDirectionInfo = {\n  grid: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n    var axis = axisModel.axis;\n    var ret = {};\n    var rect = coordInfo.model.coordinateSystem.getRect();\n    oldPoint = oldPoint || [0, 0];\n\n    if (axis.dim === 'x') {\n      ret.pixel = newPoint[0] - oldPoint[0];\n      ret.pixelLength = rect.width;\n      ret.pixelStart = rect.x;\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // axis.dim === 'y'\n      ret.pixel = newPoint[1] - oldPoint[1];\n      ret.pixelLength = rect.height;\n      ret.pixelStart = rect.y;\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  },\n  polar: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n    var axis = axisModel.axis;\n    var ret = {};\n    var polar = coordInfo.model.coordinateSystem;\n    var radiusExtent = polar.getRadiusAxis().getExtent();\n    var angleExtent = polar.getAngleAxis().getExtent();\n    oldPoint = oldPoint ? polar.pointToCoord(oldPoint) : [0, 0];\n    newPoint = polar.pointToCoord(newPoint);\n\n    if (axisModel.mainType === 'radiusAxis') {\n      ret.pixel = newPoint[0] - oldPoint[0]; // ret.pixelLength = Math.abs(radiusExtent[1] - radiusExtent[0]);\n      // ret.pixelStart = Math.min(radiusExtent[0], radiusExtent[1]);\n\n      ret.pixelLength = radiusExtent[1] - radiusExtent[0];\n      ret.pixelStart = radiusExtent[0];\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // 'angleAxis'\n      ret.pixel = newPoint[1] - oldPoint[1]; // ret.pixelLength = Math.abs(angleExtent[1] - angleExtent[0]);\n      // ret.pixelStart = Math.min(angleExtent[0], angleExtent[1]);\n\n      ret.pixelLength = angleExtent[1] - angleExtent[0];\n      ret.pixelStart = angleExtent[0];\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  },\n  singleAxis: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n    var axis = axisModel.axis;\n    var rect = coordInfo.model.coordinateSystem.getRect();\n    var ret = {};\n    oldPoint = oldPoint || [0, 0];\n\n    if (axis.orient === 'horizontal') {\n      ret.pixel = newPoint[0] - oldPoint[0];\n      ret.pixelLength = rect.width;\n      ret.pixelStart = rect.x;\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // 'vertical'\n      ret.pixel = newPoint[1] - oldPoint[1];\n      ret.pixelLength = rect.height;\n      ret.pixelStart = rect.y;\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  }\n};\nvar _default = InsideZoomView;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar _sourceType = require(\"../../data/helper/sourceType\");\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\n\nvar _dimensionHelper = require(\"../../data/helper/dimensionHelper\");\n\nvar getDimensionTypeByAxis = _dimensionHelper.getDimensionTypeByAxis;\n\nvar _model = require(\"../../util/model\");\n\nvar getDataItemValue = _model.getDataItemValue;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar _referHelper = require(\"../../model/referHelper\");\n\nvar getCoordSysDefineBySeries = _referHelper.getCoordSysDefineBySeries;\n\nvar Source = require(\"../../data/Source\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar enableDataStack = _dataStackHelper.enableDataStack;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/data/Source|Array} source Or raw data.\n * @param {module:echarts/model/Series} seriesModel\n * @param {Object} [opt]\n * @param {string} [opt.generateCoord]\n */\nfunction createListFromArray(source, seriesModel, opt) {\n  opt = opt || {};\n\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var registeredCoordSys = CoordinateSystem.get(coordSysName);\n  var coordSysDefine = getCoordSysDefineBySeries(seriesModel);\n  var coordSysDimDefs;\n\n  if (coordSysDefine) {\n    coordSysDimDefs = zrUtil.map(coordSysDefine.coordSysDims, function (dim) {\n      var dimInfo = {\n        name: dim\n      };\n      var axisModel = coordSysDefine.axisMap.get(dim);\n\n      if (axisModel) {\n        var axisType = axisModel.get('type');\n        dimInfo.type = getDimensionTypeByAxis(axisType); // dimInfo.stackable = isStackable(axisType);\n      }\n\n      return dimInfo;\n    });\n  }\n\n  if (!coordSysDimDefs) {\n    // Get dimensions from registered coordinate system\n    coordSysDimDefs = registeredCoordSys && (registeredCoordSys.getDimensionsInfo ? registeredCoordSys.getDimensionsInfo() : registeredCoordSys.dimensions.slice()) || ['x', 'y'];\n  }\n\n  var dimInfoList = createDimensions(source, {\n    coordDimensions: coordSysDimDefs,\n    generateCoord: opt.generateCoord\n  });\n  var firstCategoryDimIndex;\n  var hasNameEncode;\n  coordSysDefine && zrUtil.each(dimInfoList, function (dimInfo, dimIndex) {\n    var coordDim = dimInfo.coordDim;\n    var categoryAxisModel = coordSysDefine.categoryAxisMap.get(coordDim);\n\n    if (categoryAxisModel) {\n      if (firstCategoryDimIndex == null) {\n        firstCategoryDimIndex = dimIndex;\n      }\n\n      dimInfo.ordinalMeta = categoryAxisModel.getOrdinalMeta();\n    }\n\n    if (dimInfo.otherDims.itemName != null) {\n      hasNameEncode = true;\n    }\n  });\n\n  if (!hasNameEncode && firstCategoryDimIndex != null) {\n    dimInfoList[firstCategoryDimIndex].otherDims.itemName = 0;\n  }\n\n  var stackCalculationInfo = enableDataStack(seriesModel, dimInfoList);\n  var list = new List(dimInfoList, seriesModel);\n  list.setCalculationInfo(stackCalculationInfo);\n  var dimValueGetter = firstCategoryDimIndex != null && isNeedCompleteOrdinalData(source) ? function (itemOpt, dimName, dataIndex, dimIndex) {\n    // Use dataIndex as ordinal value in categoryAxis\n    return dimIndex === firstCategoryDimIndex ? dataIndex : this.defaultDimValueGetter(itemOpt, dimName, dataIndex, dimIndex);\n  } : null;\n  list.hasItemOption = false;\n  list.initData(source, null, dimValueGetter);\n  return list;\n}\n\nfunction isNeedCompleteOrdinalData(source) {\n  if (source.sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    var sampleItem = firstDataNotNull(source.data || []);\n    return sampleItem != null && !zrUtil.isArray(getDataItemValue(sampleItem));\n  }\n}\n\nfunction firstDataNotNull(data) {\n  var i = 0;\n\n  while (i < data.length && data[i] == null) {\n    i++;\n  }\n\n  return data[i];\n}\n\nvar _default = createListFromArray;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar isNumeric = _number.isNumeric;\n\nvar _helper = require(\"./helper\");\n\nvar setLabel = _helper.setLabel;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'borderWidth']; // index: +isHorizontal\n\nvar LAYOUT_ATTRS = [{\n  xy: 'x',\n  wh: 'width',\n  index: 0,\n  posDesc: ['left', 'right']\n}, {\n  xy: 'y',\n  wh: 'height',\n  index: 1,\n  posDesc: ['top', 'bottom']\n}];\nvar pathForLineWidth = new graphic.Circle();\nvar BarView = echarts.extendChartView({\n  type: 'pictorialBar',\n  render: function (seriesModel, ecModel, api) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var isHorizontal = !!baseAxis.isHorizontal();\n    var coordSysRect = cartesian.grid.getRect();\n    var opt = {\n      ecSize: {\n        width: api.getWidth(),\n        height: api.getHeight()\n      },\n      seriesModel: seriesModel,\n      coordSys: cartesian,\n      coordSysExtent: [[coordSysRect.x, coordSysRect.x + coordSysRect.width], [coordSysRect.y, coordSysRect.y + coordSysRect.height]],\n      isHorizontal: isHorizontal,\n      valueDim: LAYOUT_ATTRS[+isHorizontal],\n      categoryDim: LAYOUT_ATTRS[1 - isHorizontal]\n    };\n    data.diff(oldData).add(function (dataIndex) {\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      var itemModel = getItemModel(data, dataIndex);\n      var symbolMeta = getSymbolMeta(data, dataIndex, itemModel, opt);\n      var bar = createBar(data, opt, symbolMeta);\n      data.setItemGraphicEl(dataIndex, bar);\n      group.add(bar);\n      updateCommon(bar, opt, symbolMeta);\n    }).update(function (newIndex, oldIndex) {\n      var bar = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(bar);\n        return;\n      }\n\n      var itemModel = getItemModel(data, newIndex);\n      var symbolMeta = getSymbolMeta(data, newIndex, itemModel, opt);\n      var pictorialShapeStr = getShapeStr(data, symbolMeta);\n\n      if (bar && pictorialShapeStr !== bar.__pictorialShapeStr) {\n        group.remove(bar);\n        data.setItemGraphicEl(newIndex, null);\n        bar = null;\n      }\n\n      if (bar) {\n        updateBar(bar, opt, symbolMeta);\n      } else {\n        bar = createBar(data, opt, symbolMeta, true);\n      }\n\n      data.setItemGraphicEl(newIndex, bar);\n      bar.__pictorialSymbolMeta = symbolMeta; // Add back\n\n      group.add(bar);\n      updateCommon(bar, opt, symbolMeta);\n    }).remove(function (dataIndex) {\n      var bar = oldData.getItemGraphicEl(dataIndex);\n      bar && removeBar(oldData, dataIndex, bar.__pictorialSymbolMeta.animationModel, bar);\n    }).execute();\n    this._data = data;\n    return this.group;\n  },\n  dispose: zrUtil.noop,\n  remove: function (ecModel, api) {\n    var group = this.group;\n    var data = this._data;\n\n    if (ecModel.get('animation')) {\n      if (data) {\n        data.eachItemGraphicEl(function (bar) {\n          removeBar(data, bar.dataIndex, ecModel, bar);\n        });\n      }\n    } else {\n      group.removeAll();\n    }\n  }\n}); // Set or calculate default value about symbol, and calculate layout info.\n\nfunction getSymbolMeta(data, dataIndex, itemModel, opt) {\n  var layout = data.getItemLayout(dataIndex);\n  var symbolRepeat = itemModel.get('symbolRepeat');\n  var symbolClip = itemModel.get('symbolClip');\n  var symbolPosition = itemModel.get('symbolPosition') || 'start';\n  var symbolRotate = itemModel.get('symbolRotate');\n  var rotation = (symbolRotate || 0) * Math.PI / 180 || 0;\n  var symbolPatternSize = itemModel.get('symbolPatternSize') || 2;\n  var isAnimationEnabled = itemModel.isAnimationEnabled();\n  var symbolMeta = {\n    dataIndex: dataIndex,\n    layout: layout,\n    itemModel: itemModel,\n    symbolType: data.getItemVisual(dataIndex, 'symbol') || 'circle',\n    color: data.getItemVisual(dataIndex, 'color'),\n    symbolClip: symbolClip,\n    symbolRepeat: symbolRepeat,\n    symbolRepeatDirection: itemModel.get('symbolRepeatDirection'),\n    symbolPatternSize: symbolPatternSize,\n    rotation: rotation,\n    animationModel: isAnimationEnabled ? itemModel : null,\n    hoverAnimation: isAnimationEnabled && itemModel.get('hoverAnimation'),\n    z2: itemModel.getShallow('z', true) || 0\n  };\n  prepareBarLength(itemModel, symbolRepeat, layout, opt, symbolMeta);\n  prepareSymbolSize(data, dataIndex, layout, symbolRepeat, symbolClip, symbolMeta.boundingLength, symbolMeta.pxSign, symbolPatternSize, opt, symbolMeta);\n  prepareLineWidth(itemModel, symbolMeta.symbolScale, rotation, opt, symbolMeta);\n  var symbolSize = symbolMeta.symbolSize;\n  var symbolOffset = itemModel.get('symbolOffset');\n\n  if (zrUtil.isArray(symbolOffset)) {\n    symbolOffset = [parsePercent(symbolOffset[0], symbolSize[0]), parsePercent(symbolOffset[1], symbolSize[1])];\n  }\n\n  prepareLayoutInfo(itemModel, symbolSize, layout, symbolRepeat, symbolClip, symbolOffset, symbolPosition, symbolMeta.valueLineWidth, symbolMeta.boundingLength, symbolMeta.repeatCutLength, opt, symbolMeta);\n  return symbolMeta;\n} // bar length can be negative.\n\n\nfunction prepareBarLength(itemModel, symbolRepeat, layout, opt, output) {\n  var valueDim = opt.valueDim;\n  var symbolBoundingData = itemModel.get('symbolBoundingData');\n  var valueAxis = opt.coordSys.getOtherAxis(opt.coordSys.getBaseAxis());\n  var zeroPx = valueAxis.toGlobalCoord(valueAxis.dataToCoord(0));\n  var pxSignIdx = 1 - +(layout[valueDim.wh] <= 0);\n  var boundingLength;\n\n  if (zrUtil.isArray(symbolBoundingData)) {\n    var symbolBoundingExtent = [convertToCoordOnAxis(valueAxis, symbolBoundingData[0]) - zeroPx, convertToCoordOnAxis(valueAxis, symbolBoundingData[1]) - zeroPx];\n    symbolBoundingExtent[1] < symbolBoundingExtent[0] && symbolBoundingExtent.reverse();\n    boundingLength = symbolBoundingExtent[pxSignIdx];\n  } else if (symbolBoundingData != null) {\n    boundingLength = convertToCoordOnAxis(valueAxis, symbolBoundingData) - zeroPx;\n  } else if (symbolRepeat) {\n    boundingLength = opt.coordSysExtent[valueDim.index][pxSignIdx] - zeroPx;\n  } else {\n    boundingLength = layout[valueDim.wh];\n  }\n\n  output.boundingLength = boundingLength;\n\n  if (symbolRepeat) {\n    output.repeatCutLength = layout[valueDim.wh];\n  }\n\n  output.pxSign = boundingLength > 0 ? 1 : boundingLength < 0 ? -1 : 0;\n}\n\nfunction convertToCoordOnAxis(axis, value) {\n  return axis.toGlobalCoord(axis.dataToCoord(axis.scale.parse(value)));\n} // Support ['100%', '100%']\n\n\nfunction prepareSymbolSize(data, dataIndex, layout, symbolRepeat, symbolClip, boundingLength, pxSign, symbolPatternSize, opt, output) {\n  var valueDim = opt.valueDim;\n  var categoryDim = opt.categoryDim;\n  var categorySize = Math.abs(layout[categoryDim.wh]);\n  var symbolSize = data.getItemVisual(dataIndex, 'symbolSize');\n\n  if (zrUtil.isArray(symbolSize)) {\n    symbolSize = symbolSize.slice();\n  } else {\n    if (symbolSize == null) {\n      symbolSize = '100%';\n    }\n\n    symbolSize = [symbolSize, symbolSize];\n  } // Note: percentage symbolSize (like '100%') do not consider lineWidth, because it is\n  // to complicated to calculate real percent value if considering scaled lineWidth.\n  // So the actual size will bigger than layout size if lineWidth is bigger than zero,\n  // which can be tolerated in pictorial chart.\n\n\n  symbolSize[categoryDim.index] = parsePercent(symbolSize[categoryDim.index], categorySize);\n  symbolSize[valueDim.index] = parsePercent(symbolSize[valueDim.index], symbolRepeat ? categorySize : Math.abs(boundingLength));\n  output.symbolSize = symbolSize; // If x or y is less than zero, show reversed shape.\n\n  var symbolScale = output.symbolScale = [symbolSize[0] / symbolPatternSize, symbolSize[1] / symbolPatternSize]; // Follow convention, 'right' and 'top' is the normal scale.\n\n  symbolScale[valueDim.index] *= (opt.isHorizontal ? -1 : 1) * pxSign;\n}\n\nfunction prepareLineWidth(itemModel, symbolScale, rotation, opt, output) {\n  // In symbols are drawn with scale, so do not need to care about the case that width\n  // or height are too small. But symbol use strokeNoScale, where acture lineWidth should\n  // be calculated.\n  var valueLineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n\n  if (valueLineWidth) {\n    pathForLineWidth.attr({\n      scale: symbolScale.slice(),\n      rotation: rotation\n    });\n    pathForLineWidth.updateTransform();\n    valueLineWidth /= pathForLineWidth.getLineScale();\n    valueLineWidth *= symbolScale[opt.valueDim.index];\n  }\n\n  output.valueLineWidth = valueLineWidth;\n}\n\nfunction prepareLayoutInfo(itemModel, symbolSize, layout, symbolRepeat, symbolClip, symbolOffset, symbolPosition, valueLineWidth, boundingLength, repeatCutLength, opt, output) {\n  var categoryDim = opt.categoryDim;\n  var valueDim = opt.valueDim;\n  var pxSign = output.pxSign;\n  var unitLength = Math.max(symbolSize[valueDim.index] + valueLineWidth, 0);\n  var pathLen = unitLength; // Note: rotation will not effect the layout of symbols, because user may\n  // want symbols to rotate on its center, which should not be translated\n  // when rotating.\n\n  if (symbolRepeat) {\n    var absBoundingLength = Math.abs(boundingLength);\n    var symbolMargin = zrUtil.retrieve(itemModel.get('symbolMargin'), '15%') + '';\n    var hasEndGap = false;\n\n    if (symbolMargin.lastIndexOf('!') === symbolMargin.length - 1) {\n      hasEndGap = true;\n      symbolMargin = symbolMargin.slice(0, symbolMargin.length - 1);\n    }\n\n    symbolMargin = parsePercent(symbolMargin, symbolSize[valueDim.index]);\n    var uLenWithMargin = Math.max(unitLength + symbolMargin * 2, 0); // When symbol margin is less than 0, margin at both ends will be subtracted\n    // to ensure that all of the symbols will not be overflow the given area.\n\n    var endFix = hasEndGap ? 0 : symbolMargin * 2; // Both final repeatTimes and final symbolMargin area calculated based on\n    // boundingLength.\n\n    var repeatSpecified = isNumeric(symbolRepeat);\n    var repeatTimes = repeatSpecified ? symbolRepeat : toIntTimes((absBoundingLength + endFix) / uLenWithMargin); // Adjust calculate margin, to ensure each symbol is displayed\n    // entirely in the given layout area.\n\n    var mDiff = absBoundingLength - repeatTimes * unitLength;\n    symbolMargin = mDiff / 2 / (hasEndGap ? repeatTimes : repeatTimes - 1);\n    uLenWithMargin = unitLength + symbolMargin * 2;\n    endFix = hasEndGap ? 0 : symbolMargin * 2; // Update repeatTimes when not all symbol will be shown.\n\n    if (!repeatSpecified && symbolRepeat !== 'fixed') {\n      repeatTimes = repeatCutLength ? toIntTimes((Math.abs(repeatCutLength) + endFix) / uLenWithMargin) : 0;\n    }\n\n    pathLen = repeatTimes * uLenWithMargin - endFix;\n    output.repeatTimes = repeatTimes;\n    output.symbolMargin = symbolMargin;\n  }\n\n  var sizeFix = pxSign * (pathLen / 2);\n  var pathPosition = output.pathPosition = [];\n  pathPosition[categoryDim.index] = layout[categoryDim.wh] / 2;\n  pathPosition[valueDim.index] = symbolPosition === 'start' ? sizeFix : symbolPosition === 'end' ? boundingLength - sizeFix : boundingLength / 2; // 'center'\n\n  if (symbolOffset) {\n    pathPosition[0] += symbolOffset[0];\n    pathPosition[1] += symbolOffset[1];\n  }\n\n  var bundlePosition = output.bundlePosition = [];\n  bundlePosition[categoryDim.index] = layout[categoryDim.xy];\n  bundlePosition[valueDim.index] = layout[valueDim.xy];\n  var barRectShape = output.barRectShape = zrUtil.extend({}, layout);\n  barRectShape[valueDim.wh] = pxSign * Math.max(Math.abs(layout[valueDim.wh]), Math.abs(pathPosition[valueDim.index] + sizeFix));\n  barRectShape[categoryDim.wh] = layout[categoryDim.wh];\n  var clipShape = output.clipShape = {}; // Consider that symbol may be overflow layout rect.\n\n  clipShape[categoryDim.xy] = -layout[categoryDim.xy];\n  clipShape[categoryDim.wh] = opt.ecSize[categoryDim.wh];\n  clipShape[valueDim.xy] = 0;\n  clipShape[valueDim.wh] = layout[valueDim.wh];\n}\n\nfunction createPath(symbolMeta) {\n  var symbolPatternSize = symbolMeta.symbolPatternSize;\n  var path = createSymbol( // Consider texture img, make a big size.\n  symbolMeta.symbolType, -symbolPatternSize / 2, -symbolPatternSize / 2, symbolPatternSize, symbolPatternSize, symbolMeta.color);\n  path.attr({\n    culling: true\n  });\n  path.type !== 'image' && path.setStyle({\n    strokeNoScale: true\n  });\n  return path;\n}\n\nfunction createOrUpdateRepeatSymbols(bar, opt, symbolMeta, isUpdate) {\n  var bundle = bar.__pictorialBundle;\n  var symbolSize = symbolMeta.symbolSize;\n  var valueLineWidth = symbolMeta.valueLineWidth;\n  var pathPosition = symbolMeta.pathPosition;\n  var valueDim = opt.valueDim;\n  var repeatTimes = symbolMeta.repeatTimes || 0;\n  var index = 0;\n  var unit = symbolSize[opt.valueDim.index] + valueLineWidth + symbolMeta.symbolMargin * 2;\n  eachPath(bar, function (path) {\n    path.__pictorialAnimationIndex = index;\n    path.__pictorialRepeatTimes = repeatTimes;\n\n    if (index < repeatTimes) {\n      updateAttr(path, null, makeTarget(index), symbolMeta, isUpdate);\n    } else {\n      updateAttr(path, null, {\n        scale: [0, 0]\n      }, symbolMeta, isUpdate, function () {\n        bundle.remove(path);\n      });\n    }\n\n    updateHoverAnimation(path, symbolMeta);\n    index++;\n  });\n\n  for (; index < repeatTimes; index++) {\n    var path = createPath(symbolMeta);\n    path.__pictorialAnimationIndex = index;\n    path.__pictorialRepeatTimes = repeatTimes;\n    bundle.add(path);\n    var target = makeTarget(index);\n    updateAttr(path, {\n      position: target.position,\n      scale: [0, 0]\n    }, {\n      scale: target.scale,\n      rotation: target.rotation\n    }, symbolMeta, isUpdate); // FIXME\n    // If all emphasis/normal through action.\n\n    path.on('mouseover', onMouseOver).on('mouseout', onMouseOut);\n    updateHoverAnimation(path, symbolMeta);\n  }\n\n  function makeTarget(index) {\n    var position = pathPosition.slice(); // (start && pxSign > 0) || (end && pxSign < 0): i = repeatTimes - index\n    // Otherwise: i = index;\n\n    var pxSign = symbolMeta.pxSign;\n    var i = index;\n\n    if (symbolMeta.symbolRepeatDirection === 'start' ? pxSign > 0 : pxSign < 0) {\n      i = repeatTimes - 1 - index;\n    }\n\n    position[valueDim.index] = unit * (i - repeatTimes / 2 + 0.5) + pathPosition[valueDim.index];\n    return {\n      position: position,\n      scale: symbolMeta.symbolScale.slice(),\n      rotation: symbolMeta.rotation\n    };\n  }\n\n  function onMouseOver() {\n    eachPath(bar, function (path) {\n      path.trigger('emphasis');\n    });\n  }\n\n  function onMouseOut() {\n    eachPath(bar, function (path) {\n      path.trigger('normal');\n    });\n  }\n}\n\nfunction createOrUpdateSingleSymbol(bar, opt, symbolMeta, isUpdate) {\n  var bundle = bar.__pictorialBundle;\n  var mainPath = bar.__pictorialMainPath;\n\n  if (!mainPath) {\n    mainPath = bar.__pictorialMainPath = createPath(symbolMeta);\n    bundle.add(mainPath);\n    updateAttr(mainPath, {\n      position: symbolMeta.pathPosition.slice(),\n      scale: [0, 0],\n      rotation: symbolMeta.rotation\n    }, {\n      scale: symbolMeta.symbolScale.slice()\n    }, symbolMeta, isUpdate);\n    mainPath.on('mouseover', onMouseOver).on('mouseout', onMouseOut);\n  } else {\n    updateAttr(mainPath, null, {\n      position: symbolMeta.pathPosition.slice(),\n      scale: symbolMeta.symbolScale.slice(),\n      rotation: symbolMeta.rotation\n    }, symbolMeta, isUpdate);\n  }\n\n  updateHoverAnimation(mainPath, symbolMeta);\n\n  function onMouseOver() {\n    this.trigger('emphasis');\n  }\n\n  function onMouseOut() {\n    this.trigger('normal');\n  }\n} // bar rect is used for label.\n\n\nfunction createOrUpdateBarRect(bar, symbolMeta, isUpdate) {\n  var rectShape = zrUtil.extend({}, symbolMeta.barRectShape);\n  var barRect = bar.__pictorialBarRect;\n\n  if (!barRect) {\n    barRect = bar.__pictorialBarRect = new graphic.Rect({\n      z2: 2,\n      shape: rectShape,\n      silent: true,\n      style: {\n        stroke: 'transparent',\n        fill: 'transparent',\n        lineWidth: 0\n      }\n    });\n    bar.add(barRect);\n  } else {\n    updateAttr(barRect, null, {\n      shape: rectShape\n    }, symbolMeta, isUpdate);\n  }\n}\n\nfunction createOrUpdateClip(bar, opt, symbolMeta, isUpdate) {\n  // If not clip, symbol will be remove and rebuilt.\n  if (symbolMeta.symbolClip) {\n    var clipPath = bar.__pictorialClipPath;\n    var clipShape = zrUtil.extend({}, symbolMeta.clipShape);\n    var valueDim = opt.valueDim;\n    var animationModel = symbolMeta.animationModel;\n    var dataIndex = symbolMeta.dataIndex;\n\n    if (clipPath) {\n      graphic.updateProps(clipPath, {\n        shape: clipShape\n      }, animationModel, dataIndex);\n    } else {\n      clipShape[valueDim.wh] = 0;\n      clipPath = new graphic.Rect({\n        shape: clipShape\n      });\n\n      bar.__pictorialBundle.setClipPath(clipPath);\n\n      bar.__pictorialClipPath = clipPath;\n      var target = {};\n      target[valueDim.wh] = symbolMeta.clipShape[valueDim.wh];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](clipPath, {\n        shape: target\n      }, animationModel, dataIndex);\n    }\n  }\n}\n\nfunction getItemModel(data, dataIndex) {\n  var itemModel = data.getItemModel(dataIndex);\n  itemModel.getAnimationDelayParams = getAnimationDelayParams;\n  itemModel.isAnimationEnabled = isAnimationEnabled;\n  return itemModel;\n}\n\nfunction getAnimationDelayParams(path) {\n  // The order is the same as the z-order, see `symbolRepeatDiretion`.\n  return {\n    index: path.__pictorialAnimationIndex,\n    count: path.__pictorialRepeatTimes\n  };\n}\n\nfunction isAnimationEnabled() {\n  // `animation` prop can be set on itemModel in pictorial bar chart.\n  return this.parentModel.isAnimationEnabled() && !!this.getShallow('animation');\n}\n\nfunction updateHoverAnimation(path, symbolMeta) {\n  path.off('emphasis').off('normal');\n  var scale = symbolMeta.symbolScale.slice();\n  symbolMeta.hoverAnimation && path.on('emphasis', function () {\n    this.animateTo({\n      scale: [scale[0] * 1.1, scale[1] * 1.1]\n    }, 400, 'elasticOut');\n  }).on('normal', function () {\n    this.animateTo({\n      scale: scale.slice()\n    }, 400, 'elasticOut');\n  });\n}\n\nfunction createBar(data, opt, symbolMeta, isUpdate) {\n  // bar is the main element for each data.\n  var bar = new graphic.Group(); // bundle is used for location and clip.\n\n  var bundle = new graphic.Group();\n  bar.add(bundle);\n  bar.__pictorialBundle = bundle;\n  bundle.attr('position', symbolMeta.bundlePosition.slice());\n\n  if (symbolMeta.symbolRepeat) {\n    createOrUpdateRepeatSymbols(bar, opt, symbolMeta);\n  } else {\n    createOrUpdateSingleSymbol(bar, opt, symbolMeta);\n  }\n\n  createOrUpdateBarRect(bar, symbolMeta, isUpdate);\n  createOrUpdateClip(bar, opt, symbolMeta, isUpdate);\n  bar.__pictorialShapeStr = getShapeStr(data, symbolMeta);\n  bar.__pictorialSymbolMeta = symbolMeta;\n  return bar;\n}\n\nfunction updateBar(bar, opt, symbolMeta) {\n  var animationModel = symbolMeta.animationModel;\n  var dataIndex = symbolMeta.dataIndex;\n  var bundle = bar.__pictorialBundle;\n  graphic.updateProps(bundle, {\n    position: symbolMeta.bundlePosition.slice()\n  }, animationModel, dataIndex);\n\n  if (symbolMeta.symbolRepeat) {\n    createOrUpdateRepeatSymbols(bar, opt, symbolMeta, true);\n  } else {\n    createOrUpdateSingleSymbol(bar, opt, symbolMeta, true);\n  }\n\n  createOrUpdateBarRect(bar, symbolMeta, true);\n  createOrUpdateClip(bar, opt, symbolMeta, true);\n}\n\nfunction removeBar(data, dataIndex, animationModel, bar) {\n  // Not show text when animating\n  var labelRect = bar.__pictorialBarRect;\n  labelRect && (labelRect.style.text = null);\n  var pathes = [];\n  eachPath(bar, function (path) {\n    pathes.push(path);\n  });\n  bar.__pictorialMainPath && pathes.push(bar.__pictorialMainPath); // I do not find proper remove animation for clip yet.\n\n  bar.__pictorialClipPath && (animationModel = null);\n  zrUtil.each(pathes, function (path) {\n    graphic.updateProps(path, {\n      scale: [0, 0]\n    }, animationModel, dataIndex, function () {\n      bar.parent && bar.parent.remove(bar);\n    });\n  });\n  data.setItemGraphicEl(dataIndex, null);\n}\n\nfunction getShapeStr(data, symbolMeta) {\n  return [data.getItemVisual(symbolMeta.dataIndex, 'symbol') || 'none', !!symbolMeta.symbolRepeat, !!symbolMeta.symbolClip].join(':');\n}\n\nfunction eachPath(bar, cb, context) {\n  // Do not use Group#eachChild, because it do not support remove.\n  zrUtil.each(bar.__pictorialBundle.children(), function (el) {\n    el !== bar.__pictorialBarRect && cb.call(context, el);\n  });\n}\n\nfunction updateAttr(el, immediateAttrs, animationAttrs, symbolMeta, isUpdate, cb) {\n  immediateAttrs && el.attr(immediateAttrs); // when symbolCip used, only clip path has init animation, otherwise it would be weird effect.\n\n  if (symbolMeta.symbolClip && !isUpdate) {\n    animationAttrs && el.attr(animationAttrs);\n  } else {\n    animationAttrs && graphic[isUpdate ? 'updateProps' : 'initProps'](el, animationAttrs, symbolMeta.animationModel, symbolMeta.dataIndex, cb);\n  }\n}\n\nfunction updateCommon(bar, opt, symbolMeta) {\n  var color = symbolMeta.color;\n  var dataIndex = symbolMeta.dataIndex;\n  var itemModel = symbolMeta.itemModel; // Color must be excluded.\n  // Because symbol provide setColor individually to set fill and stroke\n\n  var normalStyle = itemModel.getModel('itemStyle').getItemStyle(['color']);\n  var hoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n  var cursorStyle = itemModel.getShallow('cursor');\n  eachPath(bar, function (path) {\n    // PENDING setColor should be before setStyle!!!\n    path.setColor(color);\n    path.setStyle(zrUtil.defaults({\n      fill: color,\n      opacity: symbolMeta.opacity\n    }, normalStyle));\n    graphic.setHoverStyle(path, hoverStyle);\n    cursorStyle && (path.cursor = cursorStyle);\n    path.z2 = symbolMeta.z2;\n  });\n  var barRectHoverStyle = {};\n  var barPositionOutside = opt.valueDim.posDesc[+(symbolMeta.boundingLength > 0)];\n  var barRect = bar.__pictorialBarRect;\n  setLabel(barRect.style, barRectHoverStyle, itemModel, color, opt.seriesModel, dataIndex, barPositionOutside);\n  graphic.setHoverStyle(barRect, barRectHoverStyle);\n}\n\nfunction toIntTimes(times) {\n  var roundedTimes = Math.round(times); // Escapse accurate error\n\n  return Math.abs(times - roundedTimes) < 1e-4 ? roundedTimes : Math.ceil(times);\n}\n\nvar _default = BarView;\nmodule.exports = _default;","var DataZoomModel = require(\"./DataZoomModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar SliderZoomModel = DataZoomModel.extend({\n  type: 'dataZoom.slider',\n  layoutMode: 'box',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    show: true,\n    // ph => placeholder. Using placehoder here because\n    // deault value can only be drived in view stage.\n    right: 'ph',\n    // Default align to grid rect.\n    top: 'ph',\n    // Default align to grid rect.\n    width: 'ph',\n    // Default align to grid rect.\n    height: 'ph',\n    // Default align to grid rect.\n    left: null,\n    // Default align to grid rect.\n    bottom: null,\n    // Default align to grid rect.\n    backgroundColor: 'rgba(47,69,84,0)',\n    // Background of slider zoom component.\n    // dataBackgroundColor: '#ddd',         // Background coor of data shadow and border of box,\n    // highest priority, remain for compatibility of\n    // previous version, but not recommended any more.\n    dataBackground: {\n      lineStyle: {\n        color: '#2f4554',\n        width: 0.5,\n        opacity: 0.3\n      },\n      areaStyle: {\n        color: 'rgba(47,69,84,0.3)',\n        opacity: 0.3\n      }\n    },\n    borderColor: '#ddd',\n    // border color of the box. For compatibility,\n    // if dataBackgroundColor is set, borderColor\n    // is ignored.\n    fillerColor: 'rgba(167,183,204,0.4)',\n    // Color of selected area.\n    // handleColor: 'rgba(89,170,216,0.95)',     // Color of handle.\n    // handleIcon: 'path://M4.9,17.8c0-1.4,4.5-10.5,5.5-12.4c0-0.1,0.6-1.1,0.9-1.1c0.4,0,0.9,1,0.9,1.1c1.1,2.2,5.4,11,5.4,12.4v17.8c0,1.5-0.6,2.1-1.3,2.1H6.1c-0.7,0-1.3-0.6-1.3-2.1V17.8z',\n    handleIcon: 'M8.2,13.6V3.9H6.3v9.7H3.1v14.9h3.3v9.7h1.8v-9.7h3.3V13.6H8.2z M9.7,24.4H4.8v-1.4h4.9V24.4z M9.7,19.1H4.8v-1.4h4.9V19.1z',\n    // Percent of the slider height\n    handleSize: '100%',\n    handleStyle: {\n      color: '#a7b7cc'\n    },\n    labelPrecision: null,\n    labelFormatter: null,\n    showDetail: true,\n    showDataShadow: 'auto',\n    // Default auto decision.\n    realtime: true,\n    zoomLock: false,\n    // Whether disable zoom.\n    textStyle: {\n      color: '#333'\n    }\n  }\n});\nvar _default = SliderZoomModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar SunburstPiece = require(\"./SunburstPiece\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar ROOT_TO_NODE_ACTION = 'sunburstRootToNode';\nvar SunburstView = ChartView.extend({\n  type: 'sunburst',\n  init: function () {},\n  render: function (seriesModel, ecModel, api, payload) {\n    var that = this;\n    this.seriesModel = seriesModel;\n    this.api = api;\n    this.ecModel = ecModel;\n    var data = seriesModel.getData();\n    var virtualRoot = data.tree.root;\n    var newRoot = seriesModel.getViewRoot();\n    var group = this.group;\n    var renderLabelForZeroData = seriesModel.get('renderLabelForZeroData');\n    var newChildren = [];\n    newRoot.eachNode(function (node) {\n      newChildren.push(node);\n    });\n    var oldChildren = this._oldChildren || [];\n    dualTravel(newChildren, oldChildren);\n    renderRollUp(virtualRoot, newRoot);\n\n    if (payload && payload.highlight && payload.highlight.piece) {\n      var highlightPolicy = seriesModel.getShallow('highlightPolicy');\n      payload.highlight.piece.onEmphasis(highlightPolicy);\n    } else if (payload && payload.unhighlight) {\n      var piece = this.virtualPiece;\n\n      if (!piece && virtualRoot.children.length) {\n        piece = virtualRoot.children[0].piece;\n      }\n\n      if (piece) {\n        piece.onNormal();\n      }\n    }\n\n    this._initEvents();\n\n    this._oldChildren = newChildren;\n\n    function dualTravel(newChildren, oldChildren) {\n      if (newChildren.length === 0 && oldChildren.length === 0) {\n        return;\n      }\n\n      new DataDiffer(oldChildren, newChildren, getKey, getKey).add(processNode).update(processNode).remove(zrUtil.curry(processNode, null)).execute();\n\n      function getKey(node) {\n        return node.getId();\n      }\n\n      function processNode(newId, oldId) {\n        var newNode = newId == null ? null : newChildren[newId];\n        var oldNode = oldId == null ? null : oldChildren[oldId];\n        doRenderNode(newNode, oldNode);\n      }\n    }\n\n    function doRenderNode(newNode, oldNode) {\n      if (!renderLabelForZeroData && newNode && !newNode.getValue()) {\n        // Not render data with value 0\n        newNode = null;\n      }\n\n      if (newNode !== virtualRoot && oldNode !== virtualRoot) {\n        if (oldNode && oldNode.piece) {\n          if (newNode) {\n            // Update\n            oldNode.piece.updateData(false, newNode, 'normal', seriesModel, ecModel); // For tooltip\n\n            data.setItemGraphicEl(newNode.dataIndex, oldNode.piece);\n          } else {\n            // Remove\n            removeNode(oldNode);\n          }\n        } else if (newNode) {\n          // Add\n          var piece = new SunburstPiece(newNode, seriesModel, ecModel);\n          group.add(piece); // For tooltip\n\n          data.setItemGraphicEl(newNode.dataIndex, piece);\n        }\n      }\n    }\n\n    function removeNode(node) {\n      if (!node) {\n        return;\n      }\n\n      if (node.piece) {\n        group.remove(node.piece);\n        node.piece = null;\n      }\n    }\n\n    function renderRollUp(virtualRoot, viewRoot) {\n      if (viewRoot.depth > 0) {\n        // Render\n        if (that.virtualPiece) {\n          // Update\n          that.virtualPiece.updateData(false, virtualRoot, 'normal', seriesModel, ecModel);\n        } else {\n          // Add\n          that.virtualPiece = new SunburstPiece(virtualRoot, seriesModel, ecModel);\n          group.add(that.virtualPiece);\n        }\n\n        if (viewRoot.piece._onclickEvent) {\n          viewRoot.piece.off('click', viewRoot.piece._onclickEvent);\n        }\n\n        var event = function (e) {\n          that._rootToNode(viewRoot.parentNode);\n        };\n\n        viewRoot.piece._onclickEvent = event;\n        that.virtualPiece.on('click', event);\n      } else if (that.virtualPiece) {\n        // Remove\n        group.remove(that.virtualPiece);\n        that.virtualPiece = null;\n      }\n    }\n  },\n  dispose: function () {},\n\n  /**\n   * @private\n   */\n  _initEvents: function () {\n    var that = this;\n\n    var event = function (e) {\n      var targetFound = false;\n      var viewRoot = that.seriesModel.getViewRoot();\n      viewRoot.eachNode(function (node) {\n        if (!targetFound && node.piece && node.piece.childAt(0) === e.target) {\n          var nodeClick = node.getModel().get('nodeClick');\n\n          if (nodeClick === 'rootToNode') {\n            that._rootToNode(node);\n          } else if (nodeClick === 'link') {\n            var itemModel = node.getModel();\n            var link = itemModel.get('link');\n\n            if (link) {\n              var linkTarget = itemModel.get('target', true) || '_blank';\n              window.open(link, linkTarget);\n            }\n          }\n\n          targetFound = true;\n        }\n      });\n    };\n\n    if (this.group._onclickEvent) {\n      this.group.off('click', this.group._onclickEvent);\n    }\n\n    this.group.on('click', event);\n    this.group._onclickEvent = event;\n  },\n\n  /**\n   * @private\n   */\n  _rootToNode: function (node) {\n    if (node !== this.seriesModel.getViewRoot()) {\n      this.api.dispatchAction({\n        type: ROOT_TO_NODE_ACTION,\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        targetNode: node\n      });\n    }\n  },\n\n  /**\n   * @implement\n   */\n  containPoint: function (point, seriesModel) {\n    var treeRoot = seriesModel.getData();\n    var itemLayout = treeRoot.getItemLayout(0);\n\n    if (itemLayout) {\n      var dx = point[0] - itemLayout.cx;\n      var dy = point[1] - itemLayout.cy;\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\n    }\n  }\n});\nvar _default = SunburstView;\nmodule.exports = _default;","var Path = require(\"../graphic/Path\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar transformPath = require(\"./transformPath\");\n\n// command chars\nvar cc = ['m', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z', 'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'];\nvar mathSqrt = Math.sqrt;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\n\nvar vMag = function (v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n};\n\nvar vRatio = function (u, v) {\n  return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n};\n\nvar vAngle = function (u, v) {\n  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n};\n\nfunction processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n  var psi = psiDeg * (PI / 180.0);\n  var xp = mathCos(psi) * (x1 - x2) / 2.0 + mathSin(psi) * (y1 - y2) / 2.0;\n  var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0 + mathCos(psi) * (y1 - y2) / 2.0;\n  var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\n\n  if (lambda > 1) {\n    rx *= mathSqrt(lambda);\n    ry *= mathSqrt(lambda);\n  }\n\n  var f = (fa === fs ? -1 : 1) * mathSqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) / (rx * rx * (yp * yp) + ry * ry * (xp * xp))) || 0;\n  var cxp = f * rx * yp / ry;\n  var cyp = f * -ry * xp / rx;\n  var cx = (x1 + x2) / 2.0 + mathCos(psi) * cxp - mathSin(psi) * cyp;\n  var cy = (y1 + y2) / 2.0 + mathSin(psi) * cxp + mathCos(psi) * cyp;\n  var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n  var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n  var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n  var dTheta = vAngle(u, v);\n\n  if (vRatio(u, v) <= -1) {\n    dTheta = PI;\n  }\n\n  if (vRatio(u, v) >= 1) {\n    dTheta = 0;\n  }\n\n  if (fs === 0 && dTheta > 0) {\n    dTheta = dTheta - 2 * PI;\n  }\n\n  if (fs === 1 && dTheta < 0) {\n    dTheta = dTheta + 2 * PI;\n  }\n\n  path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n}\n\nfunction createPathProxyFromString(data) {\n  if (!data) {\n    return [];\n  } // command string\n\n\n  var cs = data.replace(/-/g, ' -').replace(/  /g, ' ').replace(/ /g, ',').replace(/,,/g, ',');\n  var n; // create pipes so that we can split the data\n\n  for (n = 0; n < cc.length; n++) {\n    cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n  } // create array\n\n\n  var arr = cs.split('|'); // init context point\n\n  var cpx = 0;\n  var cpy = 0;\n  var path = new PathProxy();\n  var CMD = PathProxy.CMD;\n  var prevCmd;\n\n  for (n = 1; n < arr.length; n++) {\n    var str = arr[n];\n    var c = str.charAt(0);\n    var off = 0;\n    var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n    var cmd;\n\n    if (p.length > 0 && p[0] === '') {\n      p.shift();\n    }\n\n    for (var i = 0; i < p.length; i++) {\n      p[i] = parseFloat(p[i]);\n    }\n\n    while (off < p.length && !isNaN(p[off])) {\n      if (isNaN(p[0])) {\n        break;\n      }\n\n      var ctlPtx;\n      var ctlPty;\n      var rx;\n      var ry;\n      var psi;\n      var fa;\n      var fs;\n      var x1 = cpx;\n      var y1 = cpy; // convert l, H, h, V, and v to L\n\n      switch (c) {\n        case 'l':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'L':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'm':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'l';\n          break;\n\n        case 'M':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'L';\n          break;\n\n        case 'h':\n          cpx += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'H':\n          cpx = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'v':\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'V':\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'C':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]);\n          cpx = p[off - 2];\n          cpy = p[off - 1];\n          break;\n\n        case 'c':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy);\n          cpx += p[off - 2];\n          cpy += p[off - 1];\n          break;\n\n        case 'S':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 's':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = cpx + p[off++];\n          y1 = cpy + p[off++];\n          cpx += p[off++];\n          cpy += p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 'Q':\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'q':\n          x1 = p[off++] + cpx;\n          y1 = p[off++] + cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'T':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 't':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 'A':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n\n        case 'a':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n      }\n    }\n\n    if (c === 'z' || c === 'Z') {\n      cmd = CMD.Z;\n      path.addData(cmd);\n    }\n\n    prevCmd = cmd;\n  }\n\n  path.toStatic();\n  return path;\n} // TODO Optimize double memory cost problem\n\n\nfunction createPathOptions(str, opts) {\n  var pathProxy = createPathProxyFromString(str);\n  opts = opts || {};\n\n  opts.buildPath = function (path) {\n    if (path.setData) {\n      path.setData(pathProxy.data); // Svg and vml renderer don't have context\n\n      var ctx = path.getContext();\n\n      if (ctx) {\n        path.rebuildPath(ctx);\n      }\n    } else {\n      var ctx = path;\n      pathProxy.rebuildPath(ctx);\n    }\n  };\n\n  opts.applyTransform = function (m) {\n    transformPath(pathProxy, m);\n    this.dirty(true);\n  };\n\n  return opts;\n}\n/**\n * Create a Path object from path string data\n * http://www.w3.org/TR/SVG/paths.html#PathData\n * @param  {Object} opts Other options\n */\n\n\nfunction createFromString(str, opts) {\n  return new Path(createPathOptions(str, opts));\n}\n/**\n * Create a Path class from path string data\n * @param  {string} str\n * @param  {Object} opts Other options\n */\n\n\nfunction extendFromString(str, opts) {\n  return Path.extend(createPathOptions(str, opts));\n}\n/**\n * Merge multiple paths\n */\n// TODO Apply transform\n// TODO stroke dash\n// TODO Optimize double memory cost problem\n\n\nfunction mergePath(pathEls, opts) {\n  var pathList = [];\n  var len = pathEls.length;\n\n  for (var i = 0; i < len; i++) {\n    var pathEl = pathEls[i];\n\n    if (!pathEl.path) {\n      pathEl.createPathProxy();\n    }\n\n    if (pathEl.__dirtyPath) {\n      pathEl.buildPath(pathEl.path, pathEl.shape, true);\n    }\n\n    pathList.push(pathEl.path);\n  }\n\n  var pathBundle = new Path(opts); // Need path proxy.\n\n  pathBundle.createPathProxy();\n\n  pathBundle.buildPath = function (path) {\n    path.appendPath(pathList); // Svg and vml renderer don't have context\n\n    var ctx = path.getContext();\n\n    if (ctx) {\n      path.rebuildPath(ctx);\n    }\n  };\n\n  return pathBundle;\n}\n\nexports.createFromString = createFromString;\nexports.extendFromString = extendFromString;\nexports.mergePath = mergePath;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar layout = require(\"../../util/layout\");\n\nvar TimelineView = require(\"./TimelineView\");\n\nvar TimelineAxis = require(\"./TimelineAxis\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar PI = Math.PI;\n\nvar _default = TimelineView.extend({\n  type: 'timeline.slider',\n  init: function (ecModel, api) {\n    this.api = api;\n    /**\n     * @private\n     * @type {module:echarts/component/timeline/TimelineAxis}\n     */\n\n    this._axis;\n    /**\n     * @private\n     * @type {module:zrender/core/BoundingRect}\n     */\n\n    this._viewRect;\n    /**\n     * @type {number}\n     */\n\n    this._timer;\n    /**\n     * @type {module:zrender/Element}\n     */\n\n    this._currentPointer;\n    /**\n     * @type {module:zrender/container/Group}\n     */\n\n    this._mainGroup;\n    /**\n     * @type {module:zrender/container/Group}\n     */\n\n    this._labelGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (timelineModel, ecModel, api, payload) {\n    this.model = timelineModel;\n    this.api = api;\n    this.ecModel = ecModel;\n    this.group.removeAll();\n\n    if (timelineModel.get('show', true)) {\n      var layoutInfo = this._layout(timelineModel, api);\n\n      var mainGroup = this._createGroup('mainGroup');\n\n      var labelGroup = this._createGroup('labelGroup');\n      /**\n       * @private\n       * @type {module:echarts/component/timeline/TimelineAxis}\n       */\n\n\n      var axis = this._axis = this._createAxis(layoutInfo, timelineModel);\n\n      timelineModel.formatTooltip = function (dataIndex) {\n        return encodeHTML(axis.scale.getLabel(dataIndex));\n      };\n\n      each(['AxisLine', 'AxisTick', 'Control', 'CurrentPointer'], function (name) {\n        this['_render' + name](layoutInfo, mainGroup, axis, timelineModel);\n      }, this);\n\n      this._renderAxisLabel(layoutInfo, labelGroup, axis, timelineModel);\n\n      this._position(layoutInfo, timelineModel);\n    }\n\n    this._doPlayStop();\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._clearTimer();\n\n    this.group.removeAll();\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._clearTimer();\n  },\n  _layout: function (timelineModel, api) {\n    var labelPosOpt = timelineModel.get('label.position');\n    var orient = timelineModel.get('orient');\n    var viewRect = getViewRect(timelineModel, api); // Auto label offset.\n\n    if (labelPosOpt == null || labelPosOpt === 'auto') {\n      labelPosOpt = orient === 'horizontal' ? viewRect.y + viewRect.height / 2 < api.getHeight() / 2 ? '-' : '+' : viewRect.x + viewRect.width / 2 < api.getWidth() / 2 ? '+' : '-';\n    } else if (isNaN(labelPosOpt)) {\n      labelPosOpt = {\n        horizontal: {\n          top: '-',\n          bottom: '+'\n        },\n        vertical: {\n          left: '-',\n          right: '+'\n        }\n      }[orient][labelPosOpt];\n    }\n\n    var labelAlignMap = {\n      horizontal: 'center',\n      vertical: labelPosOpt >= 0 || labelPosOpt === '+' ? 'left' : 'right'\n    };\n    var labelBaselineMap = {\n      horizontal: labelPosOpt >= 0 || labelPosOpt === '+' ? 'top' : 'bottom',\n      vertical: 'middle'\n    };\n    var rotationMap = {\n      horizontal: 0,\n      vertical: PI / 2\n    }; // Position\n\n    var mainLength = orient === 'vertical' ? viewRect.height : viewRect.width;\n    var controlModel = timelineModel.getModel('controlStyle');\n    var showControl = controlModel.get('show', true);\n    var controlSize = showControl ? controlModel.get('itemSize') : 0;\n    var controlGap = showControl ? controlModel.get('itemGap') : 0;\n    var sizePlusGap = controlSize + controlGap; // Special label rotate.\n\n    var labelRotation = timelineModel.get('label.rotate') || 0;\n    labelRotation = labelRotation * PI / 180; // To radian.\n\n    var playPosition;\n    var prevBtnPosition;\n    var nextBtnPosition;\n    var axisExtent;\n    var controlPosition = controlModel.get('position', true);\n    var showPlayBtn = showControl && controlModel.get('showPlayBtn', true);\n    var showPrevBtn = showControl && controlModel.get('showPrevBtn', true);\n    var showNextBtn = showControl && controlModel.get('showNextBtn', true);\n    var xLeft = 0;\n    var xRight = mainLength; // position[0] means left, position[1] means middle.\n\n    if (controlPosition === 'left' || controlPosition === 'bottom') {\n      showPlayBtn && (playPosition = [0, 0], xLeft += sizePlusGap);\n      showPrevBtn && (prevBtnPosition = [xLeft, 0], xLeft += sizePlusGap);\n      showNextBtn && (nextBtnPosition = [xRight - controlSize, 0], xRight -= sizePlusGap);\n    } else {\n      // 'top' 'right'\n      showPlayBtn && (playPosition = [xRight - controlSize, 0], xRight -= sizePlusGap);\n      showPrevBtn && (prevBtnPosition = [0, 0], xLeft += sizePlusGap);\n      showNextBtn && (nextBtnPosition = [xRight - controlSize, 0], xRight -= sizePlusGap);\n    }\n\n    axisExtent = [xLeft, xRight];\n\n    if (timelineModel.get('inverse')) {\n      axisExtent.reverse();\n    }\n\n    return {\n      viewRect: viewRect,\n      mainLength: mainLength,\n      orient: orient,\n      rotation: rotationMap[orient],\n      labelRotation: labelRotation,\n      labelPosOpt: labelPosOpt,\n      labelAlign: timelineModel.get('label.align') || labelAlignMap[orient],\n      labelBaseline: timelineModel.get('label.verticalAlign') || timelineModel.get('label.baseline') || labelBaselineMap[orient],\n      // Based on mainGroup.\n      playPosition: playPosition,\n      prevBtnPosition: prevBtnPosition,\n      nextBtnPosition: nextBtnPosition,\n      axisExtent: axisExtent,\n      controlSize: controlSize,\n      controlGap: controlGap\n    };\n  },\n  _position: function (layoutInfo, timelineModel) {\n    // Position is be called finally, because bounding rect is needed for\n    // adapt content to fill viewRect (auto adapt offset).\n    // Timeline may be not all in the viewRect when 'offset' is specified\n    // as a number, because it is more appropriate that label aligns at\n    // 'offset' but not the other edge defined by viewRect.\n    var mainGroup = this._mainGroup;\n    var labelGroup = this._labelGroup;\n    var viewRect = layoutInfo.viewRect;\n\n    if (layoutInfo.orient === 'vertical') {\n      // transform to horizontal, inverse rotate by left-top point.\n      var m = matrix.create();\n      var rotateOriginX = viewRect.x;\n      var rotateOriginY = viewRect.y + viewRect.height;\n      matrix.translate(m, m, [-rotateOriginX, -rotateOriginY]);\n      matrix.rotate(m, m, -PI / 2);\n      matrix.translate(m, m, [rotateOriginX, rotateOriginY]);\n      viewRect = viewRect.clone();\n      viewRect.applyTransform(m);\n    }\n\n    var viewBound = getBound(viewRect);\n    var mainBound = getBound(mainGroup.getBoundingRect());\n    var labelBound = getBound(labelGroup.getBoundingRect());\n    var mainPosition = mainGroup.position;\n    var labelsPosition = labelGroup.position;\n    labelsPosition[0] = mainPosition[0] = viewBound[0][0];\n    var labelPosOpt = layoutInfo.labelPosOpt;\n\n    if (isNaN(labelPosOpt)) {\n      // '+' or '-'\n      var mainBoundIdx = labelPosOpt === '+' ? 0 : 1;\n      toBound(mainPosition, mainBound, viewBound, 1, mainBoundIdx);\n      toBound(labelsPosition, labelBound, viewBound, 1, 1 - mainBoundIdx);\n    } else {\n      var mainBoundIdx = labelPosOpt >= 0 ? 0 : 1;\n      toBound(mainPosition, mainBound, viewBound, 1, mainBoundIdx);\n      labelsPosition[1] = mainPosition[1] + labelPosOpt;\n    }\n\n    mainGroup.attr('position', mainPosition);\n    labelGroup.attr('position', labelsPosition);\n    mainGroup.rotation = labelGroup.rotation = layoutInfo.rotation;\n    setOrigin(mainGroup);\n    setOrigin(labelGroup);\n\n    function setOrigin(targetGroup) {\n      var pos = targetGroup.position;\n      targetGroup.origin = [viewBound[0][0] - pos[0], viewBound[1][0] - pos[1]];\n    }\n\n    function getBound(rect) {\n      // [[xmin, xmax], [ymin, ymax]]\n      return [[rect.x, rect.x + rect.width], [rect.y, rect.y + rect.height]];\n    }\n\n    function toBound(fromPos, from, to, dimIdx, boundIdx) {\n      fromPos[dimIdx] += to[dimIdx][boundIdx] - from[dimIdx][boundIdx];\n    }\n  },\n  _createAxis: function (layoutInfo, timelineModel) {\n    var data = timelineModel.getData();\n    var axisType = timelineModel.get('axisType');\n    var scale = axisHelper.createScaleByModel(timelineModel, axisType); // Customize scale. The `tickValue` is `dataIndex`.\n\n    scale.getTicks = function () {\n      return data.mapArray(['value'], function (value) {\n        return value;\n      });\n    };\n\n    var dataExtent = data.getDataExtent('value');\n    scale.setExtent(dataExtent[0], dataExtent[1]);\n    scale.niceTicks();\n    var axis = new TimelineAxis('value', scale, layoutInfo.axisExtent, axisType);\n    axis.model = timelineModel;\n    return axis;\n  },\n  _createGroup: function (name) {\n    var newGroup = this['_' + name] = new graphic.Group();\n    this.group.add(newGroup);\n    return newGroup;\n  },\n  _renderAxisLine: function (layoutInfo, group, axis, timelineModel) {\n    var axisExtent = axis.getExtent();\n\n    if (!timelineModel.get('lineStyle.show')) {\n      return;\n    }\n\n    group.add(new graphic.Line({\n      shape: {\n        x1: axisExtent[0],\n        y1: 0,\n        x2: axisExtent[1],\n        y2: 0\n      },\n      style: zrUtil.extend({\n        lineCap: 'round'\n      }, timelineModel.getModel('lineStyle').getLineStyle()),\n      silent: true,\n      z2: 1\n    }));\n  },\n\n  /**\n   * @private\n   */\n  _renderAxisTick: function (layoutInfo, group, axis, timelineModel) {\n    var data = timelineModel.getData(); // Show all ticks, despite ignoring strategy.\n\n    var ticks = axis.scale.getTicks(); // The value is dataIndex, see the costomized scale.\n\n    each(ticks, function (value) {\n      var tickCoord = axis.dataToCoord(value);\n      var itemModel = data.getItemModel(value);\n      var itemStyleModel = itemModel.getModel('itemStyle');\n      var hoverStyleModel = itemModel.getModel('emphasis.itemStyle');\n      var symbolOpt = {\n        position: [tickCoord, 0],\n        onclick: bind(this._changeTimeline, this, value)\n      };\n      var el = giveSymbol(itemModel, itemStyleModel, group, symbolOpt);\n      graphic.setHoverStyle(el, hoverStyleModel.getItemStyle());\n\n      if (itemModel.get('tooltip')) {\n        el.dataIndex = value;\n        el.dataModel = timelineModel;\n      } else {\n        el.dataIndex = el.dataModel = null;\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _renderAxisLabel: function (layoutInfo, group, axis, timelineModel) {\n    var labelModel = axis.getLabelModel();\n\n    if (!labelModel.get('show')) {\n      return;\n    }\n\n    var data = timelineModel.getData();\n    var labels = axis.getViewLabels();\n    each(labels, function (labelItem) {\n      // The tickValue is dataIndex, see the costomized scale.\n      var dataIndex = labelItem.tickValue;\n      var itemModel = data.getItemModel(dataIndex);\n      var normalLabelModel = itemModel.getModel('label');\n      var hoverLabelModel = itemModel.getModel('emphasis.label');\n      var tickCoord = axis.dataToCoord(labelItem.tickValue);\n      var textEl = new graphic.Text({\n        position: [tickCoord, 0],\n        rotation: layoutInfo.labelRotation - layoutInfo.rotation,\n        onclick: bind(this._changeTimeline, this, dataIndex),\n        silent: false\n      });\n      graphic.setTextStyle(textEl.style, normalLabelModel, {\n        text: labelItem.formattedLabel,\n        textAlign: layoutInfo.labelAlign,\n        textVerticalAlign: layoutInfo.labelBaseline\n      });\n      group.add(textEl);\n      graphic.setHoverStyle(textEl, graphic.setTextStyle({}, hoverLabelModel));\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _renderControl: function (layoutInfo, group, axis, timelineModel) {\n    var controlSize = layoutInfo.controlSize;\n    var rotation = layoutInfo.rotation;\n    var itemStyle = timelineModel.getModel('controlStyle').getItemStyle();\n    var hoverStyle = timelineModel.getModel('emphasis.controlStyle').getItemStyle();\n    var rect = [0, -controlSize / 2, controlSize, controlSize];\n    var playState = timelineModel.getPlayState();\n    var inverse = timelineModel.get('inverse', true);\n    makeBtn(layoutInfo.nextBtnPosition, 'controlStyle.nextIcon', bind(this._changeTimeline, this, inverse ? '-' : '+'));\n    makeBtn(layoutInfo.prevBtnPosition, 'controlStyle.prevIcon', bind(this._changeTimeline, this, inverse ? '+' : '-'));\n    makeBtn(layoutInfo.playPosition, 'controlStyle.' + (playState ? 'stopIcon' : 'playIcon'), bind(this._handlePlayClick, this, !playState), true);\n\n    function makeBtn(position, iconPath, onclick, willRotate) {\n      if (!position) {\n        return;\n      }\n\n      var opt = {\n        position: position,\n        origin: [controlSize / 2, 0],\n        rotation: willRotate ? -rotation : 0,\n        rectHover: true,\n        style: itemStyle,\n        onclick: onclick\n      };\n      var btn = makeIcon(timelineModel, iconPath, rect, opt);\n      group.add(btn);\n      graphic.setHoverStyle(btn, hoverStyle);\n    }\n  },\n  _renderCurrentPointer: function (layoutInfo, group, axis, timelineModel) {\n    var data = timelineModel.getData();\n    var currentIndex = timelineModel.getCurrentIndex();\n    var pointerModel = data.getItemModel(currentIndex).getModel('checkpointStyle');\n    var me = this;\n    var callback = {\n      onCreate: function (pointer) {\n        pointer.draggable = true;\n        pointer.drift = bind(me._handlePointerDrag, me);\n        pointer.ondragend = bind(me._handlePointerDragend, me);\n        pointerMoveTo(pointer, currentIndex, axis, timelineModel, true);\n      },\n      onUpdate: function (pointer) {\n        pointerMoveTo(pointer, currentIndex, axis, timelineModel);\n      }\n    }; // Reuse when exists, for animation and drag.\n\n    this._currentPointer = giveSymbol(pointerModel, pointerModel, this._mainGroup, {}, this._currentPointer, callback);\n  },\n  _handlePlayClick: function (nextState) {\n    this._clearTimer();\n\n    this.api.dispatchAction({\n      type: 'timelinePlayChange',\n      playState: nextState,\n      from: this.uid\n    });\n  },\n  _handlePointerDrag: function (dx, dy, e) {\n    this._clearTimer();\n\n    this._pointerChangeTimeline([e.offsetX, e.offsetY]);\n  },\n  _handlePointerDragend: function (e) {\n    this._pointerChangeTimeline([e.offsetX, e.offsetY], true);\n  },\n  _pointerChangeTimeline: function (mousePos, trigger) {\n    var toCoord = this._toAxisCoord(mousePos)[0];\n\n    var axis = this._axis;\n    var axisExtent = numberUtil.asc(axis.getExtent().slice());\n    toCoord > axisExtent[1] && (toCoord = axisExtent[1]);\n    toCoord < axisExtent[0] && (toCoord = axisExtent[0]);\n    this._currentPointer.position[0] = toCoord;\n\n    this._currentPointer.dirty();\n\n    var targetDataIndex = this._findNearestTick(toCoord);\n\n    var timelineModel = this.model;\n\n    if (trigger || targetDataIndex !== timelineModel.getCurrentIndex() && timelineModel.get('realtime')) {\n      this._changeTimeline(targetDataIndex);\n    }\n  },\n  _doPlayStop: function () {\n    this._clearTimer();\n\n    if (this.model.getPlayState()) {\n      this._timer = setTimeout(bind(handleFrame, this), this.model.get('playInterval'));\n    }\n\n    function handleFrame() {\n      // Do not cache\n      var timelineModel = this.model;\n\n      this._changeTimeline(timelineModel.getCurrentIndex() + (timelineModel.get('rewind', true) ? -1 : 1));\n    }\n  },\n  _toAxisCoord: function (vertex) {\n    var trans = this._mainGroup.getLocalTransform();\n\n    return graphic.applyTransform(vertex, trans, true);\n  },\n  _findNearestTick: function (axisCoord) {\n    var data = this.model.getData();\n    var dist = Infinity;\n    var targetDataIndex;\n    var axis = this._axis;\n    data.each(['value'], function (value, dataIndex) {\n      var coord = axis.dataToCoord(value);\n      var d = Math.abs(coord - axisCoord);\n\n      if (d < dist) {\n        dist = d;\n        targetDataIndex = dataIndex;\n      }\n    });\n    return targetDataIndex;\n  },\n  _clearTimer: function () {\n    if (this._timer) {\n      clearTimeout(this._timer);\n      this._timer = null;\n    }\n  },\n  _changeTimeline: function (nextIndex) {\n    var currentIndex = this.model.getCurrentIndex();\n\n    if (nextIndex === '+') {\n      nextIndex = currentIndex + 1;\n    } else if (nextIndex === '-') {\n      nextIndex = currentIndex - 1;\n    }\n\n    this.api.dispatchAction({\n      type: 'timelineChange',\n      currentIndex: nextIndex,\n      from: this.uid\n    });\n  }\n});\n\nfunction getViewRect(model, api) {\n  return layout.getLayoutRect(model.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  }, model.get('padding'));\n}\n\nfunction makeIcon(timelineModel, objPath, rect, opts) {\n  var icon = graphic.makePath(timelineModel.get(objPath).replace(/^path:\\/\\//, ''), zrUtil.clone(opts || {}), new BoundingRect(rect[0], rect[1], rect[2], rect[3]), 'center');\n  return icon;\n}\n/**\n * Create symbol or update symbol\n * opt: basic position and event handlers\n */\n\n\nfunction giveSymbol(hostModel, itemStyleModel, group, opt, symbol, callback) {\n  var color = itemStyleModel.get('color');\n\n  if (!symbol) {\n    var symbolType = hostModel.get('symbol');\n    symbol = createSymbol(symbolType, -1, -1, 2, 2, color);\n    symbol.setStyle('strokeNoScale', true);\n    group.add(symbol);\n    callback && callback.onCreate(symbol);\n  } else {\n    symbol.setColor(color);\n    group.add(symbol); // Group may be new, also need to add.\n\n    callback && callback.onUpdate(symbol);\n  } // Style\n\n\n  var itemStyle = itemStyleModel.getItemStyle(['color', 'symbol', 'symbolSize']);\n  symbol.setStyle(itemStyle); // Transform and events.\n\n  opt = zrUtil.merge({\n    rectHover: true,\n    z2: 100\n  }, opt, true);\n  var symbolSize = hostModel.get('symbolSize');\n  symbolSize = symbolSize instanceof Array ? symbolSize.slice() : [+symbolSize, +symbolSize];\n  symbolSize[0] /= 2;\n  symbolSize[1] /= 2;\n  opt.scale = symbolSize;\n  var symbolOffset = hostModel.get('symbolOffset');\n\n  if (symbolOffset) {\n    var pos = opt.position = opt.position || [0, 0];\n    pos[0] += numberUtil.parsePercent(symbolOffset[0], symbolSize[0]);\n    pos[1] += numberUtil.parsePercent(symbolOffset[1], symbolSize[1]);\n  }\n\n  var symbolRotate = hostModel.get('symbolRotate');\n  opt.rotation = (symbolRotate || 0) * Math.PI / 180 || 0;\n  symbol.attr(opt); // FIXME\n  // (1) When symbol.style.strokeNoScale is true and updateTransform is not performed,\n  // getBoundingRect will return wrong result.\n  // (This is supposed to be resolved in zrender, but it is a little difficult to\n  // leverage performance and auto updateTransform)\n  // (2) All of ancesters of symbol do not scale, so we can just updateTransform symbol.\n\n  symbol.updateTransform();\n  return symbol;\n}\n\nfunction pointerMoveTo(pointer, dataIndex, axis, timelineModel, noAnimation) {\n  if (pointer.dragging) {\n    return;\n  }\n\n  var pointerModel = timelineModel.getModel('checkpointStyle');\n  var toCoord = axis.dataToCoord(timelineModel.getData().get(['value'], dataIndex));\n\n  if (noAnimation || !pointerModel.get('animation', true)) {\n    pointer.attr({\n      position: [toCoord, 0]\n    });\n  } else {\n    pointer.stopAnimation(true);\n    pointer.animateTo({\n      position: [toCoord, 0]\n    }, pointerModel.get('animationDuration', true), pointerModel.get('animationEasing', true));\n  }\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar RADIAN_EPSILON = 1e-4;\n\nfunction _trim(str) {\n  return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n}\n/**\n * Linear mapping a value from domain to range\n * @memberOf module:echarts/util/number\n * @param  {(number|Array.<number>)} val\n * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n * @param  {boolean} clamp\n * @return {(number|Array.<number>}\n */\n\n\nfunction linearMap(val, domain, range, clamp) {\n  var subDomain = domain[1] - domain[0];\n  var subRange = range[1] - range[0];\n\n  if (subDomain === 0) {\n    return subRange === 0 ? range[0] : (range[0] + range[1]) / 2;\n  } // Avoid accuracy problem in edge, such as\n  // 146.39 - 62.83 === 83.55999999999999.\n  // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n  // It is a little verbose for efficiency considering this method\n  // is a hotspot.\n\n\n  if (clamp) {\n    if (subDomain > 0) {\n      if (val <= domain[0]) {\n        return range[0];\n      } else if (val >= domain[1]) {\n        return range[1];\n      }\n    } else {\n      if (val >= domain[0]) {\n        return range[0];\n      } else if (val <= domain[1]) {\n        return range[1];\n      }\n    }\n  } else {\n    if (val === domain[0]) {\n      return range[0];\n    }\n\n    if (val === domain[1]) {\n      return range[1];\n    }\n  }\n\n  return (val - domain[0]) / subDomain * subRange + range[0];\n}\n/**\n * Convert a percent string to absolute number.\n * Returns NaN if percent is not a valid string or number\n * @memberOf module:echarts/util/number\n * @param {string|number} percent\n * @param {number} all\n * @return {number}\n */\n\n\nfunction parsePercent(percent, all) {\n  switch (percent) {\n    case 'center':\n    case 'middle':\n      percent = '50%';\n      break;\n\n    case 'left':\n    case 'top':\n      percent = '0%';\n      break;\n\n    case 'right':\n    case 'bottom':\n      percent = '100%';\n      break;\n  }\n\n  if (typeof percent === 'string') {\n    if (_trim(percent).match(/%$/)) {\n      return parseFloat(percent) / 100 * all;\n    }\n\n    return parseFloat(percent);\n  }\n\n  return percent == null ? NaN : +percent;\n}\n/**\n * (1) Fix rounding error of float numbers.\n * (2) Support return string to avoid scientific notation like '3.5e-7'.\n *\n * @param {number} x\n * @param {number} [precision]\n * @param {boolean} [returnStr]\n * @return {number|string}\n */\n\n\nfunction round(x, precision, returnStr) {\n  if (precision == null) {\n    precision = 10;\n  } // Avoid range error\n\n\n  precision = Math.min(Math.max(0, precision), 20);\n  x = (+x).toFixed(precision);\n  return returnStr ? x : +x;\n}\n\nfunction asc(arr) {\n  arr.sort(function (a, b) {\n    return a - b;\n  });\n  return arr;\n}\n/**\n * Get precision\n * @param {number} val\n */\n\n\nfunction getPrecision(val) {\n  val = +val;\n\n  if (isNaN(val)) {\n    return 0;\n  } // It is much faster than methods converting number to string as follows\n  //      var tmp = val.toString();\n  //      return tmp.length - 1 - tmp.indexOf('.');\n  // especially when precision is low\n\n\n  var e = 1;\n  var count = 0;\n\n  while (Math.round(val * e) / e !== val) {\n    e *= 10;\n    count++;\n  }\n\n  return count;\n}\n/**\n * @param {string|number} val\n * @return {number}\n */\n\n\nfunction getPrecisionSafe(val) {\n  var str = val.toString(); // Consider scientific notation: '3.4e-12' '3.4e+12'\n\n  var eIndex = str.indexOf('e');\n\n  if (eIndex > 0) {\n    var precision = +str.slice(eIndex + 1);\n    return precision < 0 ? -precision : 0;\n  } else {\n    var dotIndex = str.indexOf('.');\n    return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n  }\n}\n/**\n * Minimal dicernible data precisioin according to a single pixel.\n *\n * @param {Array.<number>} dataExtent\n * @param {Array.<number>} pixelExtent\n * @return {number} precision\n */\n\n\nfunction getPixelPrecision(dataExtent, pixelExtent) {\n  var log = Math.log;\n  var LN10 = Math.LN10;\n  var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n  var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10); // toFixed() digits argument must be between 0 and 20.\n\n  var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n  return !isFinite(precision) ? 20 : precision;\n}\n/**\n * Get a data of given precision, assuring the sum of percentages\n * in valueList is 1.\n * The largest remainer method is used.\n * https://en.wikipedia.org/wiki/Largest_remainder_method\n *\n * @param {Array.<number>} valueList a list of all data\n * @param {number} idx index of the data to be processed in valueList\n * @param {number} precision integer number showing digits of precision\n * @return {number} percent ranging from 0 to 100\n */\n\n\nfunction getPercentWithPrecision(valueList, idx, precision) {\n  if (!valueList[idx]) {\n    return 0;\n  }\n\n  var sum = zrUtil.reduce(valueList, function (acc, val) {\n    return acc + (isNaN(val) ? 0 : val);\n  }, 0);\n\n  if (sum === 0) {\n    return 0;\n  }\n\n  var digits = Math.pow(10, precision);\n  var votesPerQuota = zrUtil.map(valueList, function (val) {\n    return (isNaN(val) ? 0 : val) / sum * digits * 100;\n  });\n  var targetSeats = digits * 100;\n  var seats = zrUtil.map(votesPerQuota, function (votes) {\n    // Assign automatic seats.\n    return Math.floor(votes);\n  });\n  var currentSum = zrUtil.reduce(seats, function (acc, val) {\n    return acc + val;\n  }, 0);\n  var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n    return votes - seats[idx];\n  }); // Has remainding votes.\n\n  while (currentSum < targetSeats) {\n    // Find next largest remainder.\n    var max = Number.NEGATIVE_INFINITY;\n    var maxId = null;\n\n    for (var i = 0, len = remainder.length; i < len; ++i) {\n      if (remainder[i] > max) {\n        max = remainder[i];\n        maxId = i;\n      }\n    } // Add a vote to max remainder.\n\n\n    ++seats[maxId];\n    remainder[maxId] = 0;\n    ++currentSum;\n  }\n\n  return seats[idx] / digits;\n} // Number.MAX_SAFE_INTEGER, ie do not support.\n\n\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * To 0 - 2 * PI, considering negative radian.\n * @param {number} radian\n * @return {number}\n */\n\nfunction remRadian(radian) {\n  var pi2 = Math.PI * 2;\n  return (radian % pi2 + pi2) % pi2;\n}\n/**\n * @param {type} radian\n * @return {boolean}\n */\n\n\nfunction isRadianAroundZero(val) {\n  return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n}\n\nvar TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n/**\n * @param {string|Date|number} value These values can be accepted:\n *   + An instance of Date, represent a time in its own time zone.\n *   + Or string in a subset of ISO 8601, only including:\n *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n *     all of which will be treated as local time if time zone is not specified\n *     (see <https://momentjs.com/>).\n *   + Or other string format, including (all of which will be treated as loacal time):\n *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n *   + a timestamp, which represent a time in UTC.\n * @return {Date} date\n */\n\nfunction parseDate(value) {\n  if (value instanceof Date) {\n    return value;\n  } else if (typeof value === 'string') {\n    // Different browsers parse date in different way, so we parse it manually.\n    // Some other issues:\n    // new Date('1970-01-01') is UTC,\n    // new Date('1970/01/01') and new Date('1970-1-01') is local.\n    // See issue #3623\n    var match = TIME_REG.exec(value);\n\n    if (!match) {\n      // return Invalid Date.\n      return new Date(NaN);\n    } // Use local time when no timezone offset specifed.\n\n\n    if (!match[8]) {\n      // match[n] can only be string or undefined.\n      // But take care of '12' + 1 => '121'.\n      return new Date(+match[1], +(match[2] || 1) - 1, +match[3] || 1, +match[4] || 0, +(match[5] || 0), +match[6] || 0, +match[7] || 0);\n    } // Timezoneoffset of Javascript Date has considered DST (Daylight Saving Time,\n    // https://tc39.github.io/ecma262/#sec-daylight-saving-time-adjustment).\n    // For example, system timezone is set as \"Time Zone: America/Toronto\",\n    // then these code will get different result:\n    // `new Date(1478411999999).getTimezoneOffset();  // get 240`\n    // `new Date(1478412000000).getTimezoneOffset();  // get 300`\n    // So we should not use `new Date`, but use `Date.UTC`.\n    else {\n        var hour = +match[4] || 0;\n\n        if (match[8].toUpperCase() !== 'Z') {\n          hour -= match[8].slice(0, 3);\n        }\n\n        return new Date(Date.UTC(+match[1], +(match[2] || 1) - 1, +match[3] || 1, hour, +(match[5] || 0), +match[6] || 0, +match[7] || 0));\n      }\n  } else if (value == null) {\n    return new Date(NaN);\n  }\n\n  return new Date(Math.round(value));\n}\n/**\n * Quantity of a number. e.g. 0.1, 1, 10, 100\n *\n * @param  {number} val\n * @return {number}\n */\n\n\nfunction quantity(val) {\n  return Math.pow(10, quantityExponent(val));\n}\n\nfunction quantityExponent(val) {\n  return Math.floor(Math.log(val) / Math.LN10);\n}\n/**\n * find a “nice” number approximately equal to x. Round the number if round = true,\n * take ceiling if round = false. The primary observation is that the “nicest”\n * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n *\n * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n *\n * @param  {number} val Non-negative value.\n * @param  {boolean} round\n * @return {number}\n */\n\n\nfunction nice(val, round) {\n  var exponent = quantityExponent(val);\n  var exp10 = Math.pow(10, exponent);\n  var f = val / exp10; // 1 <= f < 10\n\n  var nf;\n\n  if (round) {\n    if (f < 1.5) {\n      nf = 1;\n    } else if (f < 2.5) {\n      nf = 2;\n    } else if (f < 4) {\n      nf = 3;\n    } else if (f < 7) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  } else {\n    if (f < 1) {\n      nf = 1;\n    } else if (f < 2) {\n      nf = 2;\n    } else if (f < 3) {\n      nf = 3;\n    } else if (f < 5) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  }\n\n  val = nf * exp10; // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n  // 20 is the uppper bound of toFixed.\n\n  return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n}\n/**\n * Order intervals asc, and split them when overlap.\n * expect(numberUtil.reformIntervals([\n *     {interval: [18, 62], close: [1, 1]},\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [1, 1]},\n *     {interval: [62, 150], close: [1, 1]},\n *     {interval: [106, 150], close: [1, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ])).toEqual([\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [0, 1]},\n *     {interval: [18, 62], close: [0, 1]},\n *     {interval: [62, 150], close: [0, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ]);\n * @param {Array.<Object>} list, where `close` mean open or close\n *        of the interval, and Infinity can be used.\n * @return {Array.<Object>} The origin list, which has been reformed.\n */\n\n\nfunction reformIntervals(list) {\n  list.sort(function (a, b) {\n    return littleThan(a, b, 0) ? -1 : 1;\n  });\n  var curr = -Infinity;\n  var currClose = 1;\n\n  for (var i = 0; i < list.length;) {\n    var interval = list[i].interval;\n    var close = list[i].close;\n\n    for (var lg = 0; lg < 2; lg++) {\n      if (interval[lg] <= curr) {\n        interval[lg] = curr;\n        close[lg] = !lg ? 1 - currClose : 1;\n      }\n\n      curr = interval[lg];\n      currClose = close[lg];\n    }\n\n    if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n      list.splice(i, 1);\n    } else {\n      i++;\n    }\n  }\n\n  return list;\n\n  function littleThan(a, b, lg) {\n    return a.interval[lg] < b.interval[lg] || a.interval[lg] === b.interval[lg] && (a.close[lg] - b.close[lg] === (!lg ? 1 : -1) || !lg && littleThan(a, b, 1));\n  }\n}\n/**\n * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n * subtraction forces infinities to NaN\n *\n * @param {*} v\n * @return {boolean}\n */\n\n\nfunction isNumeric(v) {\n  return v - parseFloat(v) >= 0;\n}\n\nexports.linearMap = linearMap;\nexports.parsePercent = parsePercent;\nexports.round = round;\nexports.asc = asc;\nexports.getPrecision = getPrecision;\nexports.getPrecisionSafe = getPrecisionSafe;\nexports.getPixelPrecision = getPixelPrecision;\nexports.getPercentWithPrecision = getPercentWithPrecision;\nexports.MAX_SAFE_INTEGER = MAX_SAFE_INTEGER;\nexports.remRadian = remRadian;\nexports.isRadianAroundZero = isRadianAroundZero;\nexports.parseDate = parseDate;\nexports.quantity = quantity;\nexports.nice = nice;\nexports.reformIntervals = reformIntervals;\nexports.isNumeric = isNumeric;","var _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\nvar _format = require(\"../../util/format\");\n\nvar getTooltipMarker = _format.getTooltipMarker;\nvar formatTpl = _format.formatTpl;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar DIMENSION_LABEL_REG = /\\{@(.+?)\\}/g; // PENDING A little ugly\n\nvar _default = {\n  /**\n   * Get params for formatter\n   * @param {number} dataIndex\n   * @param {string} [dataType]\n   * @return {Object}\n   */\n  getDataParams: function (dataIndex, dataType) {\n    var data = this.getData(dataType);\n    var rawValue = this.getRawValue(dataIndex, dataType);\n    var rawDataIndex = data.getRawIndex(dataIndex);\n    var name = data.getName(dataIndex);\n    var itemOpt = data.getRawDataItem(dataIndex);\n    var color = data.getItemVisual(dataIndex, 'color');\n    return {\n      componentType: this.mainType,\n      componentSubType: this.subType,\n      seriesType: this.mainType === 'series' ? this.subType : null,\n      seriesIndex: this.seriesIndex,\n      seriesId: this.id,\n      seriesName: this.name,\n      name: name,\n      dataIndex: rawDataIndex,\n      data: itemOpt,\n      dataType: dataType,\n      value: rawValue,\n      color: color,\n      marker: getTooltipMarker(color),\n      // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n      $vars: ['seriesName', 'name', 'value']\n    };\n  },\n\n  /**\n   * Format label\n   * @param {number} dataIndex\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\n   * @param {string} [dataType]\n   * @param {number} [dimIndex]\n   * @param {string} [labelProp='label']\n   * @return {string} If not formatter, return null/undefined\n   */\n  getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\n    status = status || 'normal';\n    var data = this.getData(dataType);\n    var itemModel = data.getItemModel(dataIndex);\n    var params = this.getDataParams(dataIndex, dataType);\n\n    if (dimIndex != null && params.value instanceof Array) {\n      params.value = params.value[dimIndex];\n    }\n\n    var formatter = itemModel.get(status === 'normal' ? [labelProp || 'label', 'formatter'] : [status, labelProp || 'label', 'formatter']);\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      var str = formatTpl(formatter, params); // Support 'aaa{@[3]}bbb{@product}ccc'.\n      // Do not support '}' in dim name util have to.\n\n      return str.replace(DIMENSION_LABEL_REG, function (origin, dim) {\n        var len = dim.length;\n\n        if (dim.charAt(0) === '[' && dim.charAt(len - 1) === ']') {\n          dim = +dim.slice(1, len - 1); // Also: '[]' => 0\n        }\n\n        return retrieveRawValue(data, dataIndex, dim);\n      });\n    }\n  },\n\n  /**\n   * Get raw value in option\n   * @param {number} idx\n   * @param {string} [dataType]\n   * @return {Array|number|string}\n   */\n  getRawValue: function (idx, dataType) {\n    return retrieveRawValue(this.getData(dataType), idx);\n  },\n\n  /**\n   * Should be implemented.\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   * @return {string} tooltip string\n   */\n  formatTooltip: function () {// Empty function\n  }\n};\nmodule.exports = _default;","var makeStyleMapper = require(\"./makeStyleMapper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar getLineStyle = makeStyleMapper([['lineWidth', 'width'], ['stroke', 'color'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getLineStyle: function (excludes) {\n    var style = getLineStyle(this, excludes);\n    var lineDash = this.getLineDash(style.lineWidth);\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getLineDash: function (lineWidth) {\n    if (lineWidth == null) {\n      lineWidth = 1;\n    }\n\n    var lineType = this.get('type');\n    var dotSize = Math.max(lineWidth, 2);\n    var dashSize = lineWidth * 4;\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize];\n  }\n};\nmodule.exports = _default;","var _util = require(\"../core/util\");\n\nvar inherits = _util.inherits;\n\nvar Displayble = require(\"./Displayable\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\n/**\n * Displayable for incremental rendering. It will be rendered in a separate layer\n * IncrementalDisplay have too main methods. `clearDisplayables` and `addDisplayables`\n * addDisplayables will render the added displayables incremetally.\n *\n * It use a not clearFlag to tell the painter don't clear the layer if it's the first element.\n */\n// TODO Style override ?\nfunction IncrementalDisplayble(opts) {\n  Displayble.call(this, opts);\n  this._displayables = [];\n  this._temporaryDisplayables = [];\n  this._cursor = 0;\n  this.notClear = true;\n}\n\nIncrementalDisplayble.prototype.incremental = true;\n\nIncrementalDisplayble.prototype.clearDisplaybles = function () {\n  this._displayables = [];\n  this._temporaryDisplayables = [];\n  this._cursor = 0;\n  this.dirty();\n  this.notClear = false;\n};\n\nIncrementalDisplayble.prototype.addDisplayable = function (displayable, notPersistent) {\n  if (notPersistent) {\n    this._temporaryDisplayables.push(displayable);\n  } else {\n    this._displayables.push(displayable);\n  }\n\n  this.dirty();\n};\n\nIncrementalDisplayble.prototype.addDisplayables = function (displayables, notPersistent) {\n  notPersistent = notPersistent || false;\n\n  for (var i = 0; i < displayables.length; i++) {\n    this.addDisplayable(displayables[i], notPersistent);\n  }\n};\n\nIncrementalDisplayble.prototype.eachPendingDisplayable = function (cb) {\n  for (var i = this._cursor; i < this._displayables.length; i++) {\n    cb && cb(this._displayables[i]);\n  }\n\n  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\n    cb && cb(this._temporaryDisplayables[i]);\n  }\n};\n\nIncrementalDisplayble.prototype.update = function () {\n  this.updateTransform();\n\n  for (var i = this._cursor; i < this._displayables.length; i++) {\n    var displayable = this._displayables[i]; // PENDING\n\n    displayable.parent = this;\n    displayable.update();\n    displayable.parent = null;\n  }\n\n  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\n    var displayable = this._temporaryDisplayables[i]; // PENDING\n\n    displayable.parent = this;\n    displayable.update();\n    displayable.parent = null;\n  }\n};\n\nIncrementalDisplayble.prototype.brush = function (ctx, prevEl) {\n  // Render persistant displayables.\n  for (var i = this._cursor; i < this._displayables.length; i++) {\n    var displayable = this._displayables[i];\n    displayable.beforeBrush && displayable.beforeBrush(ctx);\n    displayable.brush(ctx, i === this._cursor ? null : this._displayables[i - 1]);\n    displayable.afterBrush && displayable.afterBrush(ctx);\n  }\n\n  this._cursor = i; // Render temporary displayables.\n\n  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\n    var displayable = this._temporaryDisplayables[i];\n    displayable.beforeBrush && displayable.beforeBrush(ctx);\n    displayable.brush(ctx, i === 0 ? null : this._temporaryDisplayables[i - 1]);\n    displayable.afterBrush && displayable.afterBrush(ctx);\n  }\n\n  this._temporaryDisplayables = [];\n  this.notClear = true;\n};\n\nvar m = [];\n\nIncrementalDisplayble.prototype.getBoundingRect = function () {\n  if (!this._rect) {\n    var rect = new BoundingRect(Infinity, Infinity, -Infinity, -Infinity);\n\n    for (var i = 0; i < this._displayables.length; i++) {\n      var displayable = this._displayables[i];\n      var childRect = displayable.getBoundingRect().clone();\n\n      if (displayable.needLocalTransform()) {\n        childRect.applyTransform(displayable.getLocalTransform(m));\n      }\n\n      rect.union(childRect);\n    }\n\n    this._rect = rect;\n  }\n\n  return this._rect;\n};\n\nIncrementalDisplayble.prototype.contain = function (x, y) {\n  var localPos = this.transformCoordToLocal(x, y);\n  var rect = this.getBoundingRect();\n\n  if (rect.contain(localPos[0], localPos[1])) {\n    for (var i = 0; i < this._displayables.length; i++) {\n      var displayable = this._displayables[i];\n\n      if (displayable.contain(x, y)) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n\ninherits(IncrementalDisplayble, Displayble);\nvar _default = IncrementalDisplayble;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerAction({\n  type: 'timelineChange',\n  event: 'timelineChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  var timelineModel = ecModel.getComponent('timeline');\n\n  if (timelineModel && payload.currentIndex != null) {\n    timelineModel.setCurrentIndex(payload.currentIndex);\n\n    if (!timelineModel.get('loop', true) && timelineModel.isIndexMax()) {\n      timelineModel.setPlayState(false);\n    }\n  } // Set normalized currentIndex to payload.\n\n\n  ecModel.resetOption('timeline');\n  return zrUtil.defaults({\n    currentIndex: timelineModel.option.currentIndex\n  }, payload);\n});\necharts.registerAction({\n  type: 'timelinePlayChange',\n  event: 'timelinePlayChanged',\n  update: 'update'\n}, function (payload, ecModel) {\n  var timelineModel = ecModel.getComponent('timeline');\n\n  if (timelineModel && payload.playState != null) {\n    timelineModel.setPlayState(payload.playState);\n  }\n});","var SeriesModel = require(\"../../model/Series\");\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.heatmap',\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this, {\n      generateCoord: 'value'\n    });\n  },\n  preventIncremental: function () {\n    var coordSysCreator = CoordinateSystem.get(this.get('coordinateSystem'));\n\n    if (coordSysCreator && coordSysCreator.dimensions) {\n      return coordSysCreator.dimensions[0] === 'lng' && coordSysCreator.dimensions[1] === 'lat';\n    }\n  },\n  defaultOption: {\n    // Cartesian2D or geo\n    coordinateSystem: 'cartesian2d',\n    zlevel: 0,\n    z: 2,\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Geo coordinate system\n    geoIndex: 0,\n    blurSize: 30,\n    pointSize: 20,\n    maxOpacity: 1,\n    minOpacity: 0\n  }\n});\n\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar helper = require(\"./helper\");\n\nvar AxisProxy = require(\"./AxisProxy\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar eachAxisDim = helper.eachAxisDim;\nvar DataZoomModel = echarts.extendComponentModel({\n  type: 'dataZoom',\n  dependencies: ['xAxis', 'yAxis', 'zAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'series'],\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    zlevel: 0,\n    z: 4,\n    // Higher than normal component (z: 2).\n    orient: null,\n    // Default auto by axisIndex. Possible value: 'horizontal', 'vertical'.\n    xAxisIndex: null,\n    // Default the first horizontal category axis.\n    yAxisIndex: null,\n    // Default the first vertical category axis.\n    filterMode: 'filter',\n    // Possible values: 'filter' or 'empty' or 'weakFilter'.\n    // 'filter': data items which are out of window will be removed. This option is\n    //          applicable when filtering outliers. For each data item, it will be\n    //          filtered if one of the relevant dimensions is out of the window.\n    // 'weakFilter': data items which are out of window will be removed. This option\n    //          is applicable when filtering outliers. For each data item, it will be\n    //          filtered only if all  of the relevant dimensions are out of the same\n    //          side of the window.\n    // 'empty': data items which are out of window will be set to empty.\n    //          This option is applicable when user should not neglect\n    //          that there are some data items out of window.\n    // 'none': Do not filter.\n    // Taking line chart as an example, line will be broken in\n    // the filtered points when filterModel is set to 'empty', but\n    // be connected when set to 'filter'.\n    throttle: null,\n    // Dispatch action by the fixed rate, avoid frequency.\n    // default 100. Do not throttle when use null/undefined.\n    // If animation === true and animationDurationUpdate > 0,\n    // default value is 100, otherwise 20.\n    start: 0,\n    // Start percent. 0 ~ 100\n    end: 100,\n    // End percent. 0 ~ 100\n    startValue: null,\n    // Start value. If startValue specified, start is ignored.\n    endValue: null,\n    // End value. If endValue specified, end is ignored.\n    minSpan: null,\n    // 0 ~ 100\n    maxSpan: null,\n    // 0 ~ 100\n    minValueSpan: null,\n    // The range of dataZoom can not be smaller than that.\n    maxValueSpan: null,\n    // The range of dataZoom can not be larger than that.\n    rangeMode: null // Array, can be 'value' or 'percent'.\n\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel) {\n    /**\n     * key like x_0, y_1\n     * @private\n     * @type {Object}\n     */\n    this._dataIntervalByAxis = {};\n    /**\n     * @private\n     */\n\n    this._dataInfo = {};\n    /**\n     * key like x_0, y_1\n     * @private\n     */\n\n    this._axisProxies = {};\n    /**\n     * @readOnly\n     */\n\n    this.textStyleModel;\n    /**\n     * @private\n     */\n\n    this._autoThrottle = true;\n    /**\n     * 'percent' or 'value'\n     * @private\n     */\n\n    this._rangePropMode = ['percent', 'percent'];\n    var rawOption = retrieveRaw(option);\n    this.mergeDefaultAndTheme(option, ecModel);\n    this.doInit(rawOption);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (newOption) {\n    var rawOption = retrieveRaw(newOption); //FIX #2591\n\n    zrUtil.merge(this.option, newOption, true);\n    this.doInit(rawOption);\n  },\n\n  /**\n   * @protected\n   */\n  doInit: function (rawOption) {\n    var thisOption = this.option; // Disable realtime view update if canvas is not supported.\n\n    if (!env.canvasSupported) {\n      thisOption.realtime = false;\n    }\n\n    this._setDefaultThrottle(rawOption);\n\n    updateRangeUse(this, rawOption);\n    each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n      // start/end has higher priority over startValue/endValue if they\n      // both set, but we should make chart.setOption({endValue: 1000})\n      // effective, rather than chart.setOption({endValue: 1000, end: null}).\n      if (this._rangePropMode[index] === 'value') {\n        thisOption[names[0]] = null;\n      } // Otherwise do nothing and use the merge result.\n\n    }, this);\n    this.textStyleModel = this.getModel('textStyle');\n\n    this._resetTarget();\n\n    this._giveAxisProxies();\n  },\n\n  /**\n   * @private\n   */\n  _giveAxisProxies: function () {\n    var axisProxies = this._axisProxies;\n    this.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel, ecModel) {\n      var axisModel = this.dependentModels[dimNames.axis][axisIndex]; // If exists, share axisProxy with other dataZoomModels.\n\n      var axisProxy = axisModel.__dzAxisProxy || ( // Use the first dataZoomModel as the main model of axisProxy.\n      axisModel.__dzAxisProxy = new AxisProxy(dimNames.name, axisIndex, this, ecModel)); // FIXME\n      // dispose __dzAxisProxy\n\n      axisProxies[dimNames.name + '_' + axisIndex] = axisProxy;\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _resetTarget: function () {\n    var thisOption = this.option;\n\n    var autoMode = this._judgeAutoMode();\n\n    eachAxisDim(function (dimNames) {\n      var axisIndexName = dimNames.axisIndex;\n      thisOption[axisIndexName] = modelUtil.normalizeToArray(thisOption[axisIndexName]);\n    }, this);\n\n    if (autoMode === 'axisIndex') {\n      this._autoSetAxisIndex();\n    } else if (autoMode === 'orient') {\n      this._autoSetOrient();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _judgeAutoMode: function () {\n    // Auto set only works for setOption at the first time.\n    // The following is user's reponsibility. So using merged\n    // option is OK.\n    var thisOption = this.option;\n    var hasIndexSpecified = false;\n    eachAxisDim(function (dimNames) {\n      // When user set axisIndex as a empty array, we think that user specify axisIndex\n      // but do not want use auto mode. Because empty array may be encountered when\n      // some error occured.\n      if (thisOption[dimNames.axisIndex] != null) {\n        hasIndexSpecified = true;\n      }\n    }, this);\n    var orient = thisOption.orient;\n\n    if (orient == null && hasIndexSpecified) {\n      return 'orient';\n    } else if (!hasIndexSpecified) {\n      if (orient == null) {\n        thisOption.orient = 'horizontal';\n      }\n\n      return 'axisIndex';\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetAxisIndex: function () {\n    var autoAxisIndex = true;\n    var orient = this.get('orient', true);\n    var thisOption = this.option;\n    var dependentModels = this.dependentModels;\n\n    if (autoAxisIndex) {\n      // Find axis that parallel to dataZoom as default.\n      var dimName = orient === 'vertical' ? 'y' : 'x';\n\n      if (dependentModels[dimName + 'Axis'].length) {\n        thisOption[dimName + 'AxisIndex'] = [0];\n        autoAxisIndex = false;\n      } else {\n        each(dependentModels.singleAxis, function (singleAxisModel) {\n          if (autoAxisIndex && singleAxisModel.get('orient', true) === orient) {\n            thisOption.singleAxisIndex = [singleAxisModel.componentIndex];\n            autoAxisIndex = false;\n          }\n        });\n      }\n    }\n\n    if (autoAxisIndex) {\n      // Find the first category axis as default. (consider polar)\n      eachAxisDim(function (dimNames) {\n        if (!autoAxisIndex) {\n          return;\n        }\n\n        var axisIndices = [];\n        var axisModels = this.dependentModels[dimNames.axis];\n\n        if (axisModels.length && !axisIndices.length) {\n          for (var i = 0, len = axisModels.length; i < len; i++) {\n            if (axisModels[i].get('type') === 'category') {\n              axisIndices.push(i);\n            }\n          }\n        }\n\n        thisOption[dimNames.axisIndex] = axisIndices;\n\n        if (axisIndices.length) {\n          autoAxisIndex = false;\n        }\n      }, this);\n    }\n\n    if (autoAxisIndex) {\n      // FIXME\n      // 这里是兼容ec2的写法（没指定xAxisIndex和yAxisIndex时把scatter和双数值轴折柱纳入dataZoom控制），\n      // 但是实际是否需要Grid.js#getScaleByOption来判断（考虑time，log等axis type）？\n      // If both dataZoom.xAxisIndex and dataZoom.yAxisIndex is not specified,\n      // dataZoom component auto adopts series that reference to\n      // both xAxis and yAxis which type is 'value'.\n      this.ecModel.eachSeries(function (seriesModel) {\n        if (this._isSeriesHasAllAxesTypeOf(seriesModel, 'value')) {\n          eachAxisDim(function (dimNames) {\n            var axisIndices = thisOption[dimNames.axisIndex];\n            var axisIndex = seriesModel.get(dimNames.axisIndex);\n            var axisId = seriesModel.get(dimNames.axisId);\n            var axisModel = seriesModel.ecModel.queryComponents({\n              mainType: dimNames.axis,\n              index: axisIndex,\n              id: axisId\n            })[0];\n            axisIndex = axisModel.componentIndex;\n\n            if (zrUtil.indexOf(axisIndices, axisIndex) < 0) {\n              axisIndices.push(axisIndex);\n            }\n          });\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetOrient: function () {\n    var dim; // Find the first axis\n\n    this.eachTargetAxis(function (dimNames) {\n      !dim && (dim = dimNames.name);\n    }, this);\n    this.option.orient = dim === 'y' ? 'vertical' : 'horizontal';\n  },\n\n  /**\n   * @private\n   */\n  _isSeriesHasAllAxesTypeOf: function (seriesModel, axisType) {\n    // FIXME\n    // 需要series的xAxisIndex和yAxisIndex都首先自动设置上。\n    // 例如series.type === scatter时。\n    var is = true;\n    eachAxisDim(function (dimNames) {\n      var seriesAxisIndex = seriesModel.get(dimNames.axisIndex);\n      var axisModel = this.dependentModels[dimNames.axis][seriesAxisIndex];\n\n      if (!axisModel || axisModel.get('type') !== axisType) {\n        is = false;\n      }\n    }, this);\n    return is;\n  },\n\n  /**\n   * @private\n   */\n  _setDefaultThrottle: function (rawOption) {\n    // When first time user set throttle, auto throttle ends.\n    if (rawOption.hasOwnProperty('throttle')) {\n      this._autoThrottle = false;\n    }\n\n    if (this._autoThrottle) {\n      var globalOption = this.ecModel.option;\n      this.option.throttle = globalOption.animation && globalOption.animationDurationUpdate > 0 ? 100 : 20;\n    }\n  },\n\n  /**\n   * @public\n   */\n  getFirstTargetAxisModel: function () {\n    var firstAxisModel;\n    eachAxisDim(function (dimNames) {\n      if (firstAxisModel == null) {\n        var indices = this.get(dimNames.axisIndex);\n\n        if (indices.length) {\n          firstAxisModel = this.dependentModels[dimNames.axis][indices[0]];\n        }\n      }\n    }, this);\n    return firstAxisModel;\n  },\n\n  /**\n   * @public\n   * @param {Function} callback param: axisModel, dimNames, axisIndex, dataZoomModel, ecModel\n   */\n  eachTargetAxis: function (callback, context) {\n    var ecModel = this.ecModel;\n    eachAxisDim(function (dimNames) {\n      each(this.get(dimNames.axisIndex), function (axisIndex) {\n        callback.call(context, dimNames, axisIndex, this, ecModel);\n      }, this);\n    }, this);\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/component/dataZoom/AxisProxy} If not found, return null/undefined.\n   */\n  getAxisProxy: function (dimName, axisIndex) {\n    return this._axisProxies[dimName + '_' + axisIndex];\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/model/Model} If not found, return null/undefined.\n   */\n  getAxisModel: function (dimName, axisIndex) {\n    var axisProxy = this.getAxisProxy(dimName, axisIndex);\n    return axisProxy && axisProxy.getAxisModel();\n  },\n\n  /**\n   * If not specified, set to undefined.\n   *\n   * @public\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   * @param {boolean} [ignoreUpdateRangeUsg=false]\n   */\n  setRawRange: function (opt, ignoreUpdateRangeUsg) {\n    var option = this.option;\n    each([['start', 'startValue'], ['end', 'endValue']], function (names) {\n      // If only one of 'start' and 'startValue' is not null/undefined, the other\n      // should be cleared, which enable clear the option.\n      // If both of them are not set, keep option with the original value, which\n      // enable use only set start but not set end when calling `dispatchAction`.\n      // The same as 'end' and 'endValue'.\n      if (opt[names[0]] != null || opt[names[1]] != null) {\n        option[names[0]] = opt[names[0]];\n        option[names[1]] = opt[names[1]];\n      }\n    }, this);\n    !ignoreUpdateRangeUsg && updateRangeUse(this, opt);\n  },\n\n  /**\n   * @public\n   * @return {Array.<number>} [startPercent, endPercent]\n   */\n  getPercentRange: function () {\n    var axisProxy = this.findRepresentativeAxisProxy();\n\n    if (axisProxy) {\n      return axisProxy.getDataPercentWindow();\n    }\n  },\n\n  /**\n   * @public\n   * For example, chart.getModel().getComponent('dataZoom').getValueRange('y', 0);\n   *\n   * @param {string} [axisDimName]\n   * @param {number} [axisIndex]\n   * @return {Array.<number>} [startValue, endValue] value can only be '-' or finite number.\n   */\n  getValueRange: function (axisDimName, axisIndex) {\n    if (axisDimName == null && axisIndex == null) {\n      var axisProxy = this.findRepresentativeAxisProxy();\n\n      if (axisProxy) {\n        return axisProxy.getDataValueWindow();\n      }\n    } else {\n      return this.getAxisProxy(axisDimName, axisIndex).getDataValueWindow();\n    }\n  },\n\n  /**\n   * @public\n   * @param {module:echarts/model/Model} [axisModel] If axisModel given, find axisProxy\n   *      corresponding to the axisModel\n   * @return {module:echarts/component/dataZoom/AxisProxy}\n   */\n  findRepresentativeAxisProxy: function (axisModel) {\n    if (axisModel) {\n      return axisModel.__dzAxisProxy;\n    } // Find the first hosted axisProxy\n\n\n    var axisProxies = this._axisProxies;\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    } // If no hosted axis find not hosted axisProxy.\n    // Consider this case: dataZoomModel1 and dataZoomModel2 control the same axis,\n    // and the option.start or option.end settings are different. The percentRange\n    // should follow axisProxy.\n    // (We encounter this problem in toolbox data zoom.)\n\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && !axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    }\n  },\n\n  /**\n   * @return {Array.<string>}\n   */\n  getRangePropMode: function () {\n    return this._rangePropMode.slice();\n  }\n});\n\nfunction retrieveRaw(option) {\n  var ret = {};\n  each(['start', 'end', 'startValue', 'endValue', 'throttle'], function (name) {\n    option.hasOwnProperty(name) && (ret[name] = option[name]);\n  });\n  return ret;\n}\n\nfunction updateRangeUse(dataZoomModel, rawOption) {\n  var rangePropMode = dataZoomModel._rangePropMode;\n  var rangeModeInOption = dataZoomModel.get('rangeMode');\n  each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n    var percentSpecified = rawOption[names[0]] != null;\n    var valueSpecified = rawOption[names[1]] != null;\n\n    if (percentSpecified && !valueSpecified) {\n      rangePropMode[index] = 'percent';\n    } else if (!percentSpecified && valueSpecified) {\n      rangePropMode[index] = 'value';\n    } else if (rangeModeInOption) {\n      rangePropMode[index] = rangeModeInOption[index];\n    } else if (percentSpecified) {\n      // percentSpecified && valueSpecified\n      rangePropMode[index] = 'percent';\n    } // else remain its original setting.\n\n  });\n}\n\nvar _default = DataZoomModel;\nmodule.exports = _default;","var _core = require(\"./core\");\n\nvar createElement = _core.createElement;\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\nvar matrix = require(\"../core/matrix\");\n\nvar textContain = require(\"../contain/text\");\n\nvar textHelper = require(\"../graphic/helper/text\");\n\nvar Text = require(\"../graphic/Text\");\n\n// TODO\n// 1. shadow\n// 2. Image: sx, sy, sw, sh\nvar CMD = PathProxy.CMD;\nvar arrayJoin = Array.prototype.join;\nvar NONE = 'none';\nvar mathRound = Math.round;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\nvar PI2 = Math.PI * 2;\nvar degree = 180 / PI;\nvar EPSILON = 1e-4;\n\nfunction round4(val) {\n  return mathRound(val * 1e4) / 1e4;\n}\n\nfunction isAroundZero(val) {\n  return val < EPSILON && val > -EPSILON;\n}\n\nfunction pathHasFill(style, isText) {\n  var fill = isText ? style.textFill : style.fill;\n  return fill != null && fill !== NONE;\n}\n\nfunction pathHasStroke(style, isText) {\n  var stroke = isText ? style.textStroke : style.stroke;\n  return stroke != null && stroke !== NONE;\n}\n\nfunction setTransform(svgEl, m) {\n  if (m) {\n    attr(svgEl, 'transform', 'matrix(' + arrayJoin.call(m, ',') + ')');\n  }\n}\n\nfunction attr(el, key, val) {\n  if (!val || val.type !== 'linear' && val.type !== 'radial') {\n    // Don't set attribute for gradient, since it need new dom nodes\n    if (typeof val === 'string' && val.indexOf('NaN') > -1) {\n      console.log(val);\n    }\n\n    el.setAttribute(key, val);\n  }\n}\n\nfunction attrXLink(el, key, val) {\n  el.setAttributeNS('http://www.w3.org/1999/xlink', key, val);\n}\n\nfunction bindStyle(svgEl, style, isText) {\n  if (pathHasFill(style, isText)) {\n    var fill = isText ? style.textFill : style.fill;\n    fill = fill === 'transparent' ? NONE : fill;\n    /**\n     * FIXME:\n     * This is a temporary fix for Chrome's clipping bug\n     * that happens when a clip-path is referring another one.\n     * This fix should be used before Chrome's bug is fixed.\n     * For an element that has clip-path, and fill is none,\n     * set it to be \"rgba(0, 0, 0, 0.002)\" will hide the element.\n     * Otherwise, it will show black fill color.\n     * 0.002 is used because this won't work for alpha values smaller\n     * than 0.002.\n     *\n     * See\n     * https://bugs.chromium.org/p/chromium/issues/detail?id=659790\n     * for more information.\n     */\n\n    if (svgEl.getAttribute('clip-path') !== 'none' && fill === NONE) {\n      fill = 'rgba(0, 0, 0, 0.002)';\n    }\n\n    attr(svgEl, 'fill', fill);\n    attr(svgEl, 'fill-opacity', style.opacity);\n  } else {\n    attr(svgEl, 'fill', NONE);\n  }\n\n  if (pathHasStroke(style, isText)) {\n    var stroke = isText ? style.textStroke : style.stroke;\n    stroke = stroke === 'transparent' ? NONE : stroke;\n    attr(svgEl, 'stroke', stroke);\n    var strokeWidth = isText ? style.textStrokeWidth : style.lineWidth;\n    var strokeScale = !isText && style.strokeNoScale ? style.host.getLineScale() : 1;\n    attr(svgEl, 'stroke-width', strokeWidth / strokeScale); // stroke then fill for text; fill then stroke for others\n\n    attr(svgEl, 'paint-order', isText ? 'stroke' : 'fill');\n    attr(svgEl, 'stroke-opacity', style.opacity);\n    var lineDash = style.lineDash;\n\n    if (lineDash) {\n      attr(svgEl, 'stroke-dasharray', style.lineDash.join(','));\n      attr(svgEl, 'stroke-dashoffset', mathRound(style.lineDashOffset || 0));\n    } else {\n      attr(svgEl, 'stroke-dasharray', '');\n    } // PENDING\n\n\n    style.lineCap && attr(svgEl, 'stroke-linecap', style.lineCap);\n    style.lineJoin && attr(svgEl, 'stroke-linejoin', style.lineJoin);\n    style.miterLimit && attr(svgEl, 'stroke-miterlimit', style.miterLimit);\n  } else {\n    attr(svgEl, 'stroke', NONE);\n  }\n}\n/***************************************************\n * PATH\n **************************************************/\n\n\nfunction pathDataToString(path) {\n  var str = [];\n  var data = path.data;\n  var dataLength = path.len();\n\n  for (var i = 0; i < dataLength;) {\n    var cmd = data[i++];\n    var cmdStr = '';\n    var nData = 0;\n\n    switch (cmd) {\n      case CMD.M:\n        cmdStr = 'M';\n        nData = 2;\n        break;\n\n      case CMD.L:\n        cmdStr = 'L';\n        nData = 2;\n        break;\n\n      case CMD.Q:\n        cmdStr = 'Q';\n        nData = 4;\n        break;\n\n      case CMD.C:\n        cmdStr = 'C';\n        nData = 6;\n        break;\n\n      case CMD.A:\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++];\n        var psi = data[i++];\n        var clockwise = data[i++];\n        var dThetaPositive = Math.abs(dTheta);\n        var isCircle = isAroundZero(dThetaPositive - PI2) && !isAroundZero(dThetaPositive);\n        var large = false;\n\n        if (dThetaPositive >= PI2) {\n          large = true;\n        } else if (isAroundZero(dThetaPositive)) {\n          large = false;\n        } else {\n          large = (dTheta > -PI && dTheta < 0 || dTheta > PI) === !!clockwise;\n        }\n\n        var x0 = round4(cx + rx * mathCos(theta));\n        var y0 = round4(cy + ry * mathSin(theta)); // It will not draw if start point and end point are exactly the same\n        // We need to shift the end point with a small value\n        // FIXME A better way to draw circle ?\n\n        if (isCircle) {\n          if (clockwise) {\n            dTheta = PI2 - 1e-4;\n          } else {\n            dTheta = -PI2 + 1e-4;\n          }\n\n          large = true;\n\n          if (i === 9) {\n            // Move to (x0, y0) only when CMD.A comes at the\n            // first position of a shape.\n            // For instance, when drawing a ring, CMD.A comes\n            // after CMD.M, so it's unnecessary to move to\n            // (x0, y0).\n            str.push('M', x0, y0);\n          }\n        }\n\n        var x = round4(cx + rx * mathCos(theta + dTheta));\n        var y = round4(cy + ry * mathSin(theta + dTheta)); // FIXME Ellipse\n\n        str.push('A', round4(rx), round4(ry), mathRound(psi * degree), +large, +clockwise, x, y);\n        break;\n\n      case CMD.Z:\n        cmdStr = 'Z';\n        break;\n\n      case CMD.R:\n        var x = round4(data[i++]);\n        var y = round4(data[i++]);\n        var w = round4(data[i++]);\n        var h = round4(data[i++]);\n        str.push('M', x, y, 'L', x + w, y, 'L', x + w, y + h, 'L', x, y + h, 'L', x, y);\n        break;\n    }\n\n    cmdStr && str.push(cmdStr);\n\n    for (var j = 0; j < nData; j++) {\n      // PENDING With scale\n      str.push(round4(data[i++]));\n    }\n  }\n\n  return str.join(' ');\n}\n\nvar svgPath = {};\n\nsvgPath.brush = function (el) {\n  var style = el.style;\n  var svgEl = el.__svgEl;\n\n  if (!svgEl) {\n    svgEl = createElement('path');\n    el.__svgEl = svgEl;\n  }\n\n  if (!el.path) {\n    el.createPathProxy();\n  }\n\n  var path = el.path;\n\n  if (el.__dirtyPath) {\n    path.beginPath();\n    el.buildPath(path, el.shape);\n    el.__dirtyPath = false;\n    var pathStr = pathDataToString(path);\n\n    if (pathStr.indexOf('NaN') < 0) {\n      // Ignore illegal path, which may happen such in out-of-range\n      // data in Calendar series.\n      attr(svgEl, 'd', pathStr);\n    }\n  }\n\n  bindStyle(svgEl, style);\n  setTransform(svgEl, el.transform);\n\n  if (style.text != null) {\n    svgTextDrawRectText(el, el.getBoundingRect());\n  }\n};\n/***************************************************\n * IMAGE\n **************************************************/\n\n\nvar svgImage = {};\n\nsvgImage.brush = function (el) {\n  var style = el.style;\n  var image = style.image;\n\n  if (image instanceof HTMLImageElement) {\n    var src = image.src;\n    image = src;\n  }\n\n  if (!image) {\n    return;\n  }\n\n  var x = style.x || 0;\n  var y = style.y || 0;\n  var dw = style.width;\n  var dh = style.height;\n  var svgEl = el.__svgEl;\n\n  if (!svgEl) {\n    svgEl = createElement('image');\n    el.__svgEl = svgEl;\n  }\n\n  if (image !== el.__imageSrc) {\n    attrXLink(svgEl, 'href', image); // Caching image src\n\n    el.__imageSrc = image;\n  }\n\n  attr(svgEl, 'width', dw);\n  attr(svgEl, 'height', dh);\n  attr(svgEl, 'x', x);\n  attr(svgEl, 'y', y);\n  setTransform(svgEl, el.transform);\n\n  if (style.text != null) {\n    svgTextDrawRectText(el, el.getBoundingRect());\n  }\n};\n/***************************************************\n * TEXT\n **************************************************/\n\n\nvar svgText = {};\nvar tmpRect = new BoundingRect();\n\nvar svgTextDrawRectText = function (el, rect, textRect) {\n  var style = el.style;\n  el.__dirty && textHelper.normalizeTextStyle(style, true);\n  var text = style.text; // Convert to string\n\n  if (text == null) {\n    // Draw no text only when text is set to null, but not ''\n    return;\n  } else {\n    text += '';\n  }\n\n  var textSvgEl = el.__textSvgEl;\n\n  if (!textSvgEl) {\n    textSvgEl = createElement('text');\n    el.__textSvgEl = textSvgEl;\n  }\n\n  var x;\n  var y;\n  var textPosition = style.textPosition;\n  var distance = style.textDistance;\n  var align = style.textAlign || 'left';\n\n  if (typeof style.fontSize === 'number') {\n    style.fontSize += 'px';\n  }\n\n  var font = style.font || [style.fontStyle || '', style.fontWeight || '', style.fontSize || '', style.fontFamily || ''].join(' ') || textContain.DEFAULT_FONT;\n  var verticalAlign = getVerticalAlignForSvg(style.textVerticalAlign);\n  textRect = textContain.getBoundingRect(text, font, align, verticalAlign);\n  var lineHeight = textRect.lineHeight; // Text position represented by coord\n\n  if (textPosition instanceof Array) {\n    x = rect.x + textPosition[0];\n    y = rect.y + textPosition[1];\n  } else {\n    var newPos = textContain.adjustTextPositionOnRect(textPosition, rect, distance);\n    x = newPos.x;\n    y = newPos.y;\n    verticalAlign = getVerticalAlignForSvg(newPos.textVerticalAlign);\n    align = newPos.textAlign;\n  }\n\n  attr(textSvgEl, 'alignment-baseline', verticalAlign);\n\n  if (font) {\n    textSvgEl.style.font = font;\n  }\n\n  var textPadding = style.textPadding; // Make baseline top\n\n  attr(textSvgEl, 'x', x);\n  attr(textSvgEl, 'y', y);\n  bindStyle(textSvgEl, style, true);\n\n  if (el instanceof Text || el.style.transformText) {\n    // Transform text with element\n    setTransform(textSvgEl, el.transform);\n  } else {\n    if (el.transform) {\n      tmpRect.copy(rect);\n      tmpRect.applyTransform(el.transform);\n      rect = tmpRect;\n    } else {\n      var pos = el.transformCoordToGlobal(rect.x, rect.y);\n      rect.x = pos[0];\n      rect.y = pos[1];\n    } // Text rotation, but no element transform\n\n\n    var origin = style.textOrigin;\n\n    if (origin === 'center') {\n      x = textRect.width / 2 + x;\n      y = textRect.height / 2 + y;\n    } else if (origin) {\n      x = origin[0] + x;\n      y = origin[1] + y;\n    }\n\n    var rotate = -style.textRotation || 0;\n    var transform = matrix.create(); // Apply textRotate to element matrix\n\n    matrix.rotate(transform, el.transform, rotate);\n    setTransform(textSvgEl, transform);\n  }\n\n  var textLines = text.split('\\n');\n  var nTextLines = textLines.length;\n  var textAnchor = align; // PENDING\n\n  if (textAnchor === 'left') {\n    textAnchor = 'start';\n    textPadding && (x += textPadding[3]);\n  } else if (textAnchor === 'right') {\n    textAnchor = 'end';\n    textPadding && (x -= textPadding[1]);\n  } else if (textAnchor === 'center') {\n    textAnchor = 'middle';\n    textPadding && (x += (textPadding[3] - textPadding[1]) / 2);\n  }\n\n  var dy = 0;\n\n  if (verticalAlign === 'baseline') {\n    dy = -textRect.height + lineHeight;\n    textPadding && (dy -= textPadding[2]);\n  } else if (verticalAlign === 'middle') {\n    dy = (-textRect.height + lineHeight) / 2;\n    textPadding && (y += (textPadding[0] - textPadding[2]) / 2);\n  } else {\n    textPadding && (dy += textPadding[0]);\n  } // Font may affect position of each tspan elements\n\n\n  if (el.__text !== text || el.__textFont !== font) {\n    var tspanList = el.__tspanList || [];\n    el.__tspanList = tspanList;\n\n    for (var i = 0; i < nTextLines; i++) {\n      // Using cached tspan elements\n      var tspan = tspanList[i];\n\n      if (!tspan) {\n        tspan = tspanList[i] = createElement('tspan');\n        textSvgEl.appendChild(tspan);\n        attr(tspan, 'alignment-baseline', verticalAlign);\n        attr(tspan, 'text-anchor', textAnchor);\n      } else {\n        tspan.innerHTML = '';\n      }\n\n      attr(tspan, 'x', x);\n      attr(tspan, 'y', y + i * lineHeight + dy);\n      tspan.appendChild(document.createTextNode(textLines[i]));\n    } // Remove unsed tspan elements\n\n\n    for (; i < tspanList.length; i++) {\n      textSvgEl.removeChild(tspanList[i]);\n    }\n\n    tspanList.length = nTextLines;\n    el.__text = text;\n    el.__textFont = font;\n  } else if (el.__tspanList.length) {\n    // Update span x and y\n    var len = el.__tspanList.length;\n\n    for (var i = 0; i < len; ++i) {\n      var tspan = el.__tspanList[i];\n\n      if (tspan) {\n        attr(tspan, 'x', x);\n        attr(tspan, 'y', y + i * lineHeight + dy);\n      }\n    }\n  }\n};\n\nfunction getVerticalAlignForSvg(verticalAlign) {\n  if (verticalAlign === 'middle') {\n    return 'middle';\n  } else if (verticalAlign === 'bottom') {\n    return 'baseline';\n  } else {\n    return 'hanging';\n  }\n}\n\nsvgText.drawRectText = svgTextDrawRectText;\n\nsvgText.brush = function (el) {\n  var style = el.style;\n\n  if (style.text != null) {\n    // 强制设置 textPosition\n    style.textPosition = [0, 0];\n    svgTextDrawRectText(el, {\n      x: style.x || 0,\n      y: style.y || 0,\n      width: 0,\n      height: 0\n    }, el.getBoundingRect());\n  }\n};\n\nexports.path = svgPath;\nexports.image = svgImage;\nexports.text = svgText;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar LinearGradient = require(\"zrender/lib/graphic/LinearGradient\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar VisualMapView = require(\"./VisualMapView\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar sliderMove = require(\"../helper/sliderMove\");\n\nvar helper = require(\"./helper\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar linearMap = numberUtil.linearMap;\nvar each = zrUtil.each;\nvar mathMin = Math.min;\nvar mathMax = Math.max; // Arbitrary value\n\nvar HOVER_LINK_SIZE = 12;\nvar HOVER_LINK_OUT = 6; // Notice:\n// Any \"interval\" should be by the order of [low, high].\n// \"handle0\" (handleIndex === 0) maps to\n// low data value: this._dataInterval[0] and has low coord.\n// \"handle1\" (handleIndex === 1) maps to\n// high data value: this._dataInterval[1] and has high coord.\n// The logic of transform is implemented in this._createBarGroup.\n\nvar ContinuousView = VisualMapView.extend({\n  type: 'visualMap.continuous',\n\n  /**\n   * @override\n   */\n  init: function () {\n    ContinuousView.superApply(this, 'init', arguments);\n    /**\n     * @private\n     */\n\n    this._shapes = {};\n    /**\n     * @private\n     */\n\n    this._dataInterval = [];\n    /**\n     * @private\n     */\n\n    this._handleEnds = [];\n    /**\n     * @private\n     */\n\n    this._orient;\n    /**\n     * @private\n     */\n\n    this._useHandle;\n    /**\n     * @private\n     */\n\n    this._hoverLinkDataIndices = [];\n    /**\n     * @private\n     */\n\n    this._dragging;\n    /**\n     * @private\n     */\n\n    this._hovering;\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  doRender: function (visualMapModel, ecModel, api, payload) {\n    if (!payload || payload.type !== 'selectDataRange' || payload.from !== this.uid) {\n      this._buildView();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _buildView: function () {\n    this.group.removeAll();\n    var visualMapModel = this.visualMapModel;\n    var thisGroup = this.group;\n    this._orient = visualMapModel.get('orient');\n    this._useHandle = visualMapModel.get('calculable');\n\n    this._resetInterval();\n\n    this._renderBar(thisGroup);\n\n    var dataRangeText = visualMapModel.get('text');\n\n    this._renderEndsText(thisGroup, dataRangeText, 0);\n\n    this._renderEndsText(thisGroup, dataRangeText, 1); // Do this for background size calculation.\n\n\n    this._updateView(true); // After updating view, inner shapes is built completely,\n    // and then background can be rendered.\n\n\n    this.renderBackground(thisGroup); // Real update view\n\n    this._updateView();\n\n    this._enableHoverLinkToSeries();\n\n    this._enableHoverLinkFromSeries();\n\n    this.positionGroup(thisGroup);\n  },\n\n  /**\n   * @private\n   */\n  _renderEndsText: function (group, dataRangeText, endsIndex) {\n    if (!dataRangeText) {\n      return;\n    } // Compatible with ec2, text[0] map to high value, text[1] map low value.\n\n\n    var text = dataRangeText[1 - endsIndex];\n    text = text != null ? text + '' : '';\n    var visualMapModel = this.visualMapModel;\n    var textGap = visualMapModel.get('textGap');\n    var itemSize = visualMapModel.itemSize;\n    var barGroup = this._shapes.barGroup;\n\n    var position = this._applyTransform([itemSize[0] / 2, endsIndex === 0 ? -textGap : itemSize[1] + textGap], barGroup);\n\n    var align = this._applyTransform(endsIndex === 0 ? 'bottom' : 'top', barGroup);\n\n    var orient = this._orient;\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    this.group.add(new graphic.Text({\n      style: {\n        x: position[0],\n        y: position[1],\n        textVerticalAlign: orient === 'horizontal' ? 'middle' : align,\n        textAlign: orient === 'horizontal' ? align : 'center',\n        text: text,\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    }));\n  },\n\n  /**\n   * @private\n   */\n  _renderBar: function (targetGroup) {\n    var visualMapModel = this.visualMapModel;\n    var shapes = this._shapes;\n    var itemSize = visualMapModel.itemSize;\n    var orient = this._orient;\n    var useHandle = this._useHandle;\n    var itemAlign = helper.getItemAlign(visualMapModel, this.api, itemSize);\n\n    var barGroup = shapes.barGroup = this._createBarGroup(itemAlign); // Bar\n\n\n    barGroup.add(shapes.outOfRange = createPolygon());\n    barGroup.add(shapes.inRange = createPolygon(null, useHandle ? getCursor(this._orient) : null, zrUtil.bind(this._dragHandle, this, 'all', false), zrUtil.bind(this._dragHandle, this, 'all', true)));\n    var textRect = visualMapModel.textStyleModel.getTextRect('国');\n    var textSize = mathMax(textRect.width, textRect.height); // Handle\n\n    if (useHandle) {\n      shapes.handleThumbs = [];\n      shapes.handleLabels = [];\n      shapes.handleLabelPoints = [];\n\n      this._createHandle(barGroup, 0, itemSize, textSize, orient, itemAlign);\n\n      this._createHandle(barGroup, 1, itemSize, textSize, orient, itemAlign);\n    }\n\n    this._createIndicator(barGroup, itemSize, textSize, orient);\n\n    targetGroup.add(barGroup);\n  },\n\n  /**\n   * @private\n   */\n  _createHandle: function (barGroup, handleIndex, itemSize, textSize, orient) {\n    var onDrift = zrUtil.bind(this._dragHandle, this, handleIndex, false);\n    var onDragEnd = zrUtil.bind(this._dragHandle, this, handleIndex, true);\n    var handleThumb = createPolygon(createHandlePoints(handleIndex, textSize), getCursor(this._orient), onDrift, onDragEnd);\n    handleThumb.position[0] = itemSize[0];\n    barGroup.add(handleThumb); // Text is always horizontal layout but should not be effected by\n    // transform (orient/inverse). So label is built separately but not\n    // use zrender/graphic/helper/RectText, and is located based on view\n    // group (according to handleLabelPoint) but not barGroup.\n\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    var handleLabel = new graphic.Text({\n      draggable: true,\n      drift: onDrift,\n      onmousemove: function (e) {\n        // Fot mobile devicem, prevent screen slider on the button.\n        eventTool.stop(e.event);\n      },\n      ondragend: onDragEnd,\n      style: {\n        x: 0,\n        y: 0,\n        text: '',\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    });\n    this.group.add(handleLabel);\n    var handleLabelPoint = [orient === 'horizontal' ? textSize / 2 : textSize * 1.5, orient === 'horizontal' ? handleIndex === 0 ? -(textSize * 1.5) : textSize * 1.5 : handleIndex === 0 ? -textSize / 2 : textSize / 2];\n    var shapes = this._shapes;\n    shapes.handleThumbs[handleIndex] = handleThumb;\n    shapes.handleLabelPoints[handleIndex] = handleLabelPoint;\n    shapes.handleLabels[handleIndex] = handleLabel;\n  },\n\n  /**\n   * @private\n   */\n  _createIndicator: function (barGroup, itemSize, textSize, orient) {\n    var indicator = createPolygon([[0, 0]], 'move');\n    indicator.position[0] = itemSize[0];\n    indicator.attr({\n      invisible: true,\n      silent: true\n    });\n    barGroup.add(indicator);\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    var indicatorLabel = new graphic.Text({\n      silent: true,\n      invisible: true,\n      style: {\n        x: 0,\n        y: 0,\n        text: '',\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    });\n    this.group.add(indicatorLabel);\n    var indicatorLabelPoint = [orient === 'horizontal' ? textSize / 2 : HOVER_LINK_OUT + 3, 0];\n    var shapes = this._shapes;\n    shapes.indicator = indicator;\n    shapes.indicatorLabel = indicatorLabel;\n    shapes.indicatorLabelPoint = indicatorLabelPoint;\n  },\n\n  /**\n   * @private\n   */\n  _dragHandle: function (handleIndex, isEnd, dx, dy) {\n    if (!this._useHandle) {\n      return;\n    }\n\n    this._dragging = !isEnd;\n\n    if (!isEnd) {\n      // Transform dx, dy to bar coordination.\n      var vertex = this._applyTransform([dx, dy], this._shapes.barGroup, true);\n\n      this._updateInterval(handleIndex, vertex[1]); // Considering realtime, update view should be executed\n      // before dispatch action.\n\n\n      this._updateView();\n    } // dragEnd do not dispatch action when realtime.\n\n\n    if (isEnd === !this.visualMapModel.get('realtime')) {\n      // jshint ignore:line\n      this.api.dispatchAction({\n        type: 'selectDataRange',\n        from: this.uid,\n        visualMapId: this.visualMapModel.id,\n        selected: this._dataInterval.slice()\n      });\n    }\n\n    if (isEnd) {\n      !this._hovering && this._clearHoverLinkToSeries();\n    } else if (useHoverLinkOnHandle(this.visualMapModel)) {\n      this._doHoverLinkToSeries(this._handleEnds[handleIndex], false);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _resetInterval: function () {\n    var visualMapModel = this.visualMapModel;\n    var dataInterval = this._dataInterval = visualMapModel.getSelected();\n    var dataExtent = visualMapModel.getExtent();\n    var sizeExtent = [0, visualMapModel.itemSize[1]];\n    this._handleEnds = [linearMap(dataInterval[0], dataExtent, sizeExtent, true), linearMap(dataInterval[1], dataExtent, sizeExtent, true)];\n  },\n\n  /**\n   * @private\n   * @param {(number|string)} handleIndex 0 or 1 or 'all'\n   * @param {number} dx\n   * @param {number} dy\n   */\n  _updateInterval: function (handleIndex, delta) {\n    delta = delta || 0;\n    var visualMapModel = this.visualMapModel;\n    var handleEnds = this._handleEnds;\n    var sizeExtent = [0, visualMapModel.itemSize[1]];\n    sliderMove(delta, handleEnds, sizeExtent, handleIndex, // cross is forbiden\n    0);\n    var dataExtent = visualMapModel.getExtent(); // Update data interval.\n\n    this._dataInterval = [linearMap(handleEnds[0], sizeExtent, dataExtent, true), linearMap(handleEnds[1], sizeExtent, dataExtent, true)];\n  },\n\n  /**\n   * @private\n   */\n  _updateView: function (forSketch) {\n    var visualMapModel = this.visualMapModel;\n    var dataExtent = visualMapModel.getExtent();\n    var shapes = this._shapes;\n    var outOfRangeHandleEnds = [0, visualMapModel.itemSize[1]];\n    var inRangeHandleEnds = forSketch ? outOfRangeHandleEnds : this._handleEnds;\n\n    var visualInRange = this._createBarVisual(this._dataInterval, dataExtent, inRangeHandleEnds, 'inRange');\n\n    var visualOutOfRange = this._createBarVisual(dataExtent, dataExtent, outOfRangeHandleEnds, 'outOfRange');\n\n    shapes.inRange.setStyle({\n      fill: visualInRange.barColor,\n      opacity: visualInRange.opacity\n    }).setShape('points', visualInRange.barPoints);\n    shapes.outOfRange.setStyle({\n      fill: visualOutOfRange.barColor,\n      opacity: visualOutOfRange.opacity\n    }).setShape('points', visualOutOfRange.barPoints);\n\n    this._updateHandle(inRangeHandleEnds, visualInRange);\n  },\n\n  /**\n   * @private\n   */\n  _createBarVisual: function (dataInterval, dataExtent, handleEnds, forceState) {\n    var opts = {\n      forceState: forceState,\n      convertOpacityToAlpha: true\n    };\n\n    var colorStops = this._makeColorGradient(dataInterval, opts);\n\n    var symbolSizes = [this.getControllerVisual(dataInterval[0], 'symbolSize', opts), this.getControllerVisual(dataInterval[1], 'symbolSize', opts)];\n\n    var barPoints = this._createBarPoints(handleEnds, symbolSizes);\n\n    return {\n      barColor: new LinearGradient(0, 0, 0, 1, colorStops),\n      barPoints: barPoints,\n      handlesColor: [colorStops[0].color, colorStops[colorStops.length - 1].color]\n    };\n  },\n\n  /**\n   * @private\n   */\n  _makeColorGradient: function (dataInterval, opts) {\n    // Considering colorHue, which is not linear, so we have to sample\n    // to calculate gradient color stops, but not only caculate head\n    // and tail.\n    var sampleNumber = 100; // Arbitrary value.\n\n    var colorStops = [];\n    var step = (dataInterval[1] - dataInterval[0]) / sampleNumber;\n    colorStops.push({\n      color: this.getControllerVisual(dataInterval[0], 'color', opts),\n      offset: 0\n    });\n\n    for (var i = 1; i < sampleNumber; i++) {\n      var currValue = dataInterval[0] + step * i;\n\n      if (currValue > dataInterval[1]) {\n        break;\n      }\n\n      colorStops.push({\n        color: this.getControllerVisual(currValue, 'color', opts),\n        offset: i / sampleNumber\n      });\n    }\n\n    colorStops.push({\n      color: this.getControllerVisual(dataInterval[1], 'color', opts),\n      offset: 1\n    });\n    return colorStops;\n  },\n\n  /**\n   * @private\n   */\n  _createBarPoints: function (handleEnds, symbolSizes) {\n    var itemSize = this.visualMapModel.itemSize;\n    return [[itemSize[0] - symbolSizes[0], handleEnds[0]], [itemSize[0], handleEnds[0]], [itemSize[0], handleEnds[1]], [itemSize[0] - symbolSizes[1], handleEnds[1]]];\n  },\n\n  /**\n   * @private\n   */\n  _createBarGroup: function (itemAlign) {\n    var orient = this._orient;\n    var inverse = this.visualMapModel.get('inverse');\n    return new graphic.Group(orient === 'horizontal' && !inverse ? {\n      scale: itemAlign === 'bottom' ? [1, 1] : [-1, 1],\n      rotation: Math.PI / 2\n    } : orient === 'horizontal' && inverse ? {\n      scale: itemAlign === 'bottom' ? [-1, 1] : [1, 1],\n      rotation: -Math.PI / 2\n    } : orient === 'vertical' && !inverse ? {\n      scale: itemAlign === 'left' ? [1, -1] : [-1, -1]\n    } : {\n      scale: itemAlign === 'left' ? [1, 1] : [-1, 1]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _updateHandle: function (handleEnds, visualInRange) {\n    if (!this._useHandle) {\n      return;\n    }\n\n    var shapes = this._shapes;\n    var visualMapModel = this.visualMapModel;\n    var handleThumbs = shapes.handleThumbs;\n    var handleLabels = shapes.handleLabels;\n    each([0, 1], function (handleIndex) {\n      var handleThumb = handleThumbs[handleIndex];\n      handleThumb.setStyle('fill', visualInRange.handlesColor[handleIndex]);\n      handleThumb.position[1] = handleEnds[handleIndex]; // Update handle label position.\n\n      var textPoint = graphic.applyTransform(shapes.handleLabelPoints[handleIndex], graphic.getTransform(handleThumb, this.group));\n      handleLabels[handleIndex].setStyle({\n        x: textPoint[0],\n        y: textPoint[1],\n        text: visualMapModel.formatValueText(this._dataInterval[handleIndex]),\n        textVerticalAlign: 'middle',\n        textAlign: this._applyTransform(this._orient === 'horizontal' ? handleIndex === 0 ? 'bottom' : 'top' : 'left', shapes.barGroup)\n      });\n    }, this);\n  },\n\n  /**\n   * @private\n   * @param {number} cursorValue\n   * @param {number} textValue\n   * @param {string} [rangeSymbol]\n   * @param {number} [halfHoverLinkSize]\n   */\n  _showIndicator: function (cursorValue, textValue, rangeSymbol, halfHoverLinkSize) {\n    var visualMapModel = this.visualMapModel;\n    var dataExtent = visualMapModel.getExtent();\n    var itemSize = visualMapModel.itemSize;\n    var sizeExtent = [0, itemSize[1]];\n    var pos = linearMap(cursorValue, dataExtent, sizeExtent, true);\n    var shapes = this._shapes;\n    var indicator = shapes.indicator;\n\n    if (!indicator) {\n      return;\n    }\n\n    indicator.position[1] = pos;\n    indicator.attr('invisible', false);\n    indicator.setShape('points', createIndicatorPoints(!!rangeSymbol, halfHoverLinkSize, pos, itemSize[1]));\n    var opts = {\n      convertOpacityToAlpha: true\n    };\n    var color = this.getControllerVisual(cursorValue, 'color', opts);\n    indicator.setStyle('fill', color); // Update handle label position.\n\n    var textPoint = graphic.applyTransform(shapes.indicatorLabelPoint, graphic.getTransform(indicator, this.group));\n    var indicatorLabel = shapes.indicatorLabel;\n    indicatorLabel.attr('invisible', false);\n\n    var align = this._applyTransform('left', shapes.barGroup);\n\n    var orient = this._orient;\n    indicatorLabel.setStyle({\n      text: (rangeSymbol ? rangeSymbol : '') + visualMapModel.formatValueText(textValue),\n      textVerticalAlign: orient === 'horizontal' ? align : 'middle',\n      textAlign: orient === 'horizontal' ? 'center' : align,\n      x: textPoint[0],\n      y: textPoint[1]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _enableHoverLinkToSeries: function () {\n    var self = this;\n\n    this._shapes.barGroup.on('mousemove', function (e) {\n      self._hovering = true;\n\n      if (!self._dragging) {\n        var itemSize = self.visualMapModel.itemSize;\n\n        var pos = self._applyTransform([e.offsetX, e.offsetY], self._shapes.barGroup, true, true); // For hover link show when hover handle, which might be\n        // below or upper than sizeExtent.\n\n\n        pos[1] = mathMin(mathMax(0, pos[1]), itemSize[1]);\n\n        self._doHoverLinkToSeries(pos[1], 0 <= pos[0] && pos[0] <= itemSize[0]);\n      }\n    }).on('mouseout', function () {\n      // When mouse is out of handle, hoverLink still need\n      // to be displayed when realtime is set as false.\n      self._hovering = false;\n      !self._dragging && self._clearHoverLinkToSeries();\n    });\n  },\n\n  /**\n   * @private\n   */\n  _enableHoverLinkFromSeries: function () {\n    var zr = this.api.getZr();\n\n    if (this.visualMapModel.option.hoverLink) {\n      zr.on('mouseover', this._hoverLinkFromSeriesMouseOver, this);\n      zr.on('mouseout', this._hideIndicator, this);\n    } else {\n      this._clearHoverLinkFromSeries();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _doHoverLinkToSeries: function (cursorPos, hoverOnBar) {\n    var visualMapModel = this.visualMapModel;\n    var itemSize = visualMapModel.itemSize;\n\n    if (!visualMapModel.option.hoverLink) {\n      return;\n    }\n\n    var sizeExtent = [0, itemSize[1]];\n    var dataExtent = visualMapModel.getExtent(); // For hover link show when hover handle, which might be below or upper than sizeExtent.\n\n    cursorPos = mathMin(mathMax(sizeExtent[0], cursorPos), sizeExtent[1]);\n    var halfHoverLinkSize = getHalfHoverLinkSize(visualMapModel, dataExtent, sizeExtent);\n    var hoverRange = [cursorPos - halfHoverLinkSize, cursorPos + halfHoverLinkSize];\n    var cursorValue = linearMap(cursorPos, sizeExtent, dataExtent, true);\n    var valueRange = [linearMap(hoverRange[0], sizeExtent, dataExtent, true), linearMap(hoverRange[1], sizeExtent, dataExtent, true)]; // Consider data range is out of visualMap range, see test/visualMap-continuous.html,\n    // where china and india has very large population.\n\n    hoverRange[0] < sizeExtent[0] && (valueRange[0] = -Infinity);\n    hoverRange[1] > sizeExtent[1] && (valueRange[1] = Infinity); // Do not show indicator when mouse is over handle,\n    // otherwise labels overlap, especially when dragging.\n\n    if (hoverOnBar) {\n      if (valueRange[0] === -Infinity) {\n        this._showIndicator(cursorValue, valueRange[1], '< ', halfHoverLinkSize);\n      } else if (valueRange[1] === Infinity) {\n        this._showIndicator(cursorValue, valueRange[0], '> ', halfHoverLinkSize);\n      } else {\n        this._showIndicator(cursorValue, cursorValue, '≈ ', halfHoverLinkSize);\n      }\n    } // When realtime is set as false, handles, which are in barGroup,\n    // also trigger hoverLink, which help user to realize where they\n    // focus on when dragging. (see test/heatmap-large.html)\n    // When realtime is set as true, highlight will not show when hover\n    // handle, because the label on handle, which displays a exact value\n    // but not range, might mislead users.\n\n\n    var oldBatch = this._hoverLinkDataIndices;\n    var newBatch = [];\n\n    if (hoverOnBar || useHoverLinkOnHandle(visualMapModel)) {\n      newBatch = this._hoverLinkDataIndices = visualMapModel.findTargetDataIndices(valueRange);\n    }\n\n    var resultBatches = modelUtil.compressBatches(oldBatch, newBatch);\n\n    this._dispatchHighDown('downplay', helper.convertDataIndex(resultBatches[0]));\n\n    this._dispatchHighDown('highlight', helper.convertDataIndex(resultBatches[1]));\n  },\n\n  /**\n   * @private\n   */\n  _hoverLinkFromSeriesMouseOver: function (e) {\n    var el = e.target;\n    var visualMapModel = this.visualMapModel;\n\n    if (!el || el.dataIndex == null) {\n      return;\n    }\n\n    var dataModel = this.ecModel.getSeriesByIndex(el.seriesIndex);\n\n    if (!visualMapModel.isTargetSeries(dataModel)) {\n      return;\n    }\n\n    var data = dataModel.getData(el.dataType);\n    var value = data.get(visualMapModel.getDataDimension(data), el.dataIndex, true);\n\n    if (!isNaN(value)) {\n      this._showIndicator(value, value);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _hideIndicator: function () {\n    var shapes = this._shapes;\n    shapes.indicator && shapes.indicator.attr('invisible', true);\n    shapes.indicatorLabel && shapes.indicatorLabel.attr('invisible', true);\n  },\n\n  /**\n   * @private\n   */\n  _clearHoverLinkToSeries: function () {\n    this._hideIndicator();\n\n    var indices = this._hoverLinkDataIndices;\n\n    this._dispatchHighDown('downplay', helper.convertDataIndex(indices));\n\n    indices.length = 0;\n  },\n\n  /**\n   * @private\n   */\n  _clearHoverLinkFromSeries: function () {\n    this._hideIndicator();\n\n    var zr = this.api.getZr();\n    zr.off('mouseover', this._hoverLinkFromSeriesMouseOver);\n    zr.off('mouseout', this._hideIndicator);\n  },\n\n  /**\n   * @private\n   */\n  _applyTransform: function (vertex, element, inverse, global) {\n    var transform = graphic.getTransform(element, global ? null : this.group);\n    return graphic[zrUtil.isArray(vertex) ? 'applyTransform' : 'transformDirection'](vertex, transform, inverse);\n  },\n\n  /**\n   * @private\n   */\n  _dispatchHighDown: function (type, batch) {\n    batch && batch.length && this.api.dispatchAction({\n      type: type,\n      batch: batch\n    });\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._clearHoverLinkFromSeries();\n\n    this._clearHoverLinkToSeries();\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._clearHoverLinkFromSeries();\n\n    this._clearHoverLinkToSeries();\n  }\n});\n\nfunction createPolygon(points, cursor, onDrift, onDragEnd) {\n  return new graphic.Polygon({\n    shape: {\n      points: points\n    },\n    draggable: !!onDrift,\n    cursor: cursor,\n    drift: onDrift,\n    onmousemove: function (e) {\n      // Fot mobile devicem, prevent screen slider on the button.\n      eventTool.stop(e.event);\n    },\n    ondragend: onDragEnd\n  });\n}\n\nfunction createHandlePoints(handleIndex, textSize) {\n  return handleIndex === 0 ? [[0, 0], [textSize, 0], [textSize, -textSize]] : [[0, 0], [textSize, 0], [textSize, textSize]];\n}\n\nfunction createIndicatorPoints(isRange, halfHoverLinkSize, pos, extentMax) {\n  return isRange ? [// indicate range\n  [0, -mathMin(halfHoverLinkSize, mathMax(pos, 0))], [HOVER_LINK_OUT, 0], [0, mathMin(halfHoverLinkSize, mathMax(extentMax - pos, 0))]] : [// indicate single value\n  [0, 0], [5, -5], [5, 5]];\n}\n\nfunction getHalfHoverLinkSize(visualMapModel, dataExtent, sizeExtent) {\n  var halfHoverLinkSize = HOVER_LINK_SIZE / 2;\n  var hoverLinkDataSize = visualMapModel.get('hoverLinkDataSize');\n\n  if (hoverLinkDataSize) {\n    halfHoverLinkSize = linearMap(hoverLinkDataSize, dataExtent, sizeExtent, true) / 2;\n  }\n\n  return halfHoverLinkSize;\n}\n\nfunction useHoverLinkOnHandle(visualMapModel) {\n  var hoverLinkOnHandle = visualMapModel.get('hoverLinkOnHandle');\n  return !!(hoverLinkOnHandle == null ? visualMapModel.get('realtime') : hoverLinkOnHandle);\n}\n\nfunction getCursor(orient) {\n  return orient === 'vertical' ? 'ns-resize' : 'ew-resize';\n}\n\nvar _default = ContinuousView;\nmodule.exports = _default;","var _config = require(\"./config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrender = require(\"zrender/lib/zrender\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar timsort = require(\"zrender/lib/core/timsort\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar GlobalModel = require(\"./model/Global\");\n\nvar ExtensionAPI = require(\"./ExtensionAPI\");\n\nvar CoordinateSystemManager = require(\"./CoordinateSystem\");\n\nvar OptionManager = require(\"./model/OptionManager\");\n\nvar backwardCompat = require(\"./preprocessor/backwardCompat\");\n\nvar dataStack = require(\"./processor/dataStack\");\n\nvar ComponentModel = require(\"./model/Component\");\n\nvar SeriesModel = require(\"./model/Series\");\n\nvar ComponentView = require(\"./view/Component\");\n\nvar ChartView = require(\"./view/Chart\");\n\nvar graphic = require(\"./util/graphic\");\n\nvar modelUtil = require(\"./util/model\");\n\nvar _throttle = require(\"./util/throttle\");\n\nvar throttle = _throttle.throttle;\n\nvar seriesColor = require(\"./visual/seriesColor\");\n\nvar aria = require(\"./visual/aria\");\n\nvar loadingDefault = require(\"./loading/default\");\n\nvar Scheduler = require(\"./stream/Scheduler\");\n\nvar lightTheme = require(\"./theme/light\");\n\nvar darkTheme = require(\"./theme/dark\");\n\nrequire(\"./component/dataset\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar assert = zrUtil.assert;\nvar each = zrUtil.each;\nvar isFunction = zrUtil.isFunction;\nvar isObject = zrUtil.isObject;\nvar parseClassType = ComponentModel.parseClassType;\nvar version = '4.1.0';\nvar dependencies = {\n  zrender: '4.0.4'\n};\nvar TEST_FRAME_REMAIN_TIME = 1;\nvar PRIORITY_PROCESSOR_FILTER = 1000;\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\nvar PRIORITY_VISUAL_LAYOUT = 1000;\nvar PRIORITY_VISUAL_GLOBAL = 2000;\nvar PRIORITY_VISUAL_CHART = 3000;\nvar PRIORITY_VISUAL_COMPONENT = 4000; // FIXME\n// necessary?\n\nvar PRIORITY_VISUAL_BRUSH = 5000;\nvar PRIORITY = {\n  PROCESSOR: {\n    FILTER: PRIORITY_PROCESSOR_FILTER,\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n  },\n  VISUAL: {\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\n    CHART: PRIORITY_VISUAL_CHART,\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\n    BRUSH: PRIORITY_VISUAL_BRUSH\n  }\n}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n// where they must not be invoked nestedly, except the only case: invoke\n// dispatchAction with updateMethod \"none\" in main process.\n// This flag is used to carry out this rule.\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n\nvar IN_MAIN_PROCESS = '__flagInMainProcess';\nvar OPTION_UPDATED = '__optionUpdated';\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\nfunction createRegisterEventWithLowercaseName(method) {\n  return function (eventName, handler, context) {\n    // Event name is all lowercase\n    eventName = eventName && eventName.toLowerCase();\n    Eventful.prototype[method].call(this, eventName, handler, context);\n  };\n}\n/**\n * @module echarts~MessageCenter\n */\n\n\nfunction MessageCenter() {\n  Eventful.call(this);\n}\n\nMessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\nMessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\nMessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\nzrUtil.mixin(MessageCenter, Eventful);\n/**\n * @module echarts~ECharts\n */\n\nfunction ECharts(dom, theme, opts) {\n  opts = opts || {}; // Get theme by name\n\n  if (typeof theme === 'string') {\n    theme = themeStorage[theme];\n  }\n  /**\n   * @type {string}\n   */\n\n\n  this.id;\n  /**\n   * Group id\n   * @type {string}\n   */\n\n  this.group;\n  /**\n   * @type {HTMLElement}\n   * @private\n   */\n\n  this._dom = dom;\n  var defaultRenderer = 'canvas';\n\n  /**\n   * @type {module:zrender/ZRender}\n   * @private\n   */\n  var zr = this._zr = zrender.init(dom, {\n    renderer: opts.renderer || defaultRenderer,\n    devicePixelRatio: opts.devicePixelRatio,\n    width: opts.width,\n    height: opts.height\n  });\n  /**\n   * Expect 60 pfs.\n   * @type {Function}\n   * @private\n   */\n\n  this._throttledZrFlush = throttle(zrUtil.bind(zr.flush, zr), 17);\n  var theme = zrUtil.clone(theme);\n  theme && backwardCompat(theme, true);\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._theme = theme;\n  /**\n   * @type {Array.<module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsMap = {};\n  /**\n   * @type {Array.<module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsMap = {};\n  /**\n   * @type {module:echarts/CoordinateSystem}\n   * @private\n   */\n\n  this._coordSysMgr = new CoordinateSystemManager();\n  /**\n   * @type {module:echarts/ExtensionAPI}\n   * @private\n   */\n\n  var api = this._api = createExtensionAPI(this); // Sort on demand\n\n  function prioritySortFunc(a, b) {\n    return a.__prio - b.__prio;\n  }\n\n  timsort(visualFuncs, prioritySortFunc);\n  timsort(dataProcessorFuncs, prioritySortFunc);\n  /**\n   * @type {module:echarts/stream/Scheduler}\n   */\n\n  this._scheduler = new Scheduler(this, api, dataProcessorFuncs, visualFuncs);\n  Eventful.call(this);\n  /**\n   * @type {module:echarts~MessageCenter}\n   * @private\n   */\n\n  this._messageCenter = new MessageCenter(); // Init mouse events\n\n  this._initEvents(); // In case some people write `window.onresize = chart.resize`\n\n\n  this.resize = zrUtil.bind(this.resize, this); // Can't dispatch action during rendering procedure\n\n  this._pendingActions = [];\n  zr.animation.on('frame', this._onframe, this);\n  bindRenderedEvent(zr, this); // ECharts instance can be used as value.\n\n  zrUtil.setAsPrimitive(this);\n}\n\nvar echartsProto = ECharts.prototype;\n\nechartsProto._onframe = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  var scheduler = this._scheduler; // Lazy update\n\n  if (this[OPTION_UPDATED]) {\n    var silent = this[OPTION_UPDATED].silent;\n    this[IN_MAIN_PROCESS] = true;\n    prepare(this);\n    updateMethods.update.call(this);\n    this[IN_MAIN_PROCESS] = false;\n    this[OPTION_UPDATED] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  } // Avoid do both lazy update and progress in one frame.\n  else if (scheduler.unfinished) {\n      // Stream progress.\n      var remainTime = TEST_FRAME_REMAIN_TIME;\n      var ecModel = this._model;\n      var api = this._api;\n      scheduler.unfinished = false;\n\n      do {\n        var startTime = +new Date();\n        scheduler.performSeriesTasks(ecModel); // Currently dataProcessorFuncs do not check threshold.\n\n        scheduler.performDataProcessorTasks(ecModel);\n        updateStreamModes(this, ecModel); // Do not update coordinate system here. Because that coord system update in\n        // each frame is not a good user experience. So we follow the rule that\n        // the extent of the coordinate system is determin in the first frame (the\n        // frame is executed immedietely after task reset.\n        // this._coordSysMgr.update(ecModel, api);\n        // console.log('--- ec frame visual ---', remainTime);\n\n        scheduler.performVisualTasks(ecModel);\n        renderSeries(this, this._model, api, 'remain');\n        remainTime -= +new Date() - startTime;\n      } while (remainTime > 0 && scheduler.unfinished); // Call flush explicitly for trigger finished event.\n\n\n      if (!scheduler.unfinished) {\n        this._zr.flush();\n      } // Else, zr flushing be ensue within the same frame,\n      // because zr flushing is after onframe event.\n\n    }\n};\n/**\n * @return {HTMLElement}\n */\n\n\nechartsProto.getDom = function () {\n  return this._dom;\n};\n/**\n * @return {module:zrender~ZRender}\n */\n\n\nechartsProto.getZr = function () {\n  return this._zr;\n};\n/**\n * Usage:\n * chart.setOption(option, notMerge, lazyUpdate);\n * chart.setOption(option, {\n *     notMerge: ...,\n *     lazyUpdate: ...,\n *     silent: ...\n * });\n *\n * @param {Object} option\n * @param {Object|boolean} [opts] opts or notMerge.\n * @param {boolean} [opts.notMerge=false]\n * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n */\n\n\nechartsProto.setOption = function (option, notMerge, lazyUpdate) {\n  var silent;\n\n  if (isObject(notMerge)) {\n    lazyUpdate = notMerge.lazyUpdate;\n    silent = notMerge.silent;\n    notMerge = notMerge.notMerge;\n  }\n\n  this[IN_MAIN_PROCESS] = true;\n\n  if (!this._model || notMerge) {\n    var optionManager = new OptionManager(this._api);\n    var theme = this._theme;\n    var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n    ecModel.scheduler = this._scheduler;\n    ecModel.init(null, null, theme, optionManager);\n  }\n\n  this._model.setOption(option, optionPreprocessorFuncs);\n\n  if (lazyUpdate) {\n    this[OPTION_UPDATED] = {\n      silent: silent\n    };\n    this[IN_MAIN_PROCESS] = false;\n  } else {\n    prepare(this);\n    updateMethods.update.call(this); // Ensure zr refresh sychronously, and then pixel in canvas can be\n    // fetched after `setOption`.\n\n    this._zr.flush();\n\n    this[OPTION_UPDATED] = false;\n    this[IN_MAIN_PROCESS] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @DEPRECATED\n */\n\n\nechartsProto.setTheme = function () {\n  console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n};\n/**\n * @return {module:echarts/model/Global}\n */\n\n\nechartsProto.getModel = function () {\n  return this._model;\n};\n/**\n * @return {Object}\n */\n\n\nechartsProto.getOption = function () {\n  return this._model && this._model.getOption();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getWidth = function () {\n  return this._zr.getWidth();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getHeight = function () {\n  return this._zr.getHeight();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getDevicePixelRatio = function () {\n  return this._zr.painter.dpr || window.devicePixelRatio || 1;\n};\n/**\n * Get canvas which has all thing rendered\n * @param {Object} opts\n * @param {string} [opts.backgroundColor]\n * @return {string}\n */\n\n\nechartsProto.getRenderedCanvas = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  opts = opts || {};\n  opts.pixelRatio = opts.pixelRatio || 1;\n  opts.backgroundColor = opts.backgroundColor || this._model.get('backgroundColor');\n  var zr = this._zr; // var list = zr.storage.getDisplayList();\n  // Stop animations\n  // Never works before in init animation, so remove it.\n  // zrUtil.each(list, function (el) {\n  //     el.stopAnimation(true);\n  // });\n\n  return zr.painter.getRenderedCanvas(opts);\n};\n/**\n * Get svg data url\n * @return {string}\n */\n\n\nechartsProto.getSvgDataUrl = function () {\n  if (!env.svgSupported) {\n    return;\n  }\n\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.pathToDataUrl();\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n * @param {string} [opts.excludeComponents]\n */\n\n\nechartsProto.getDataURL = function (opts) {\n  opts = opts || {};\n  var excludeComponents = opts.excludeComponents;\n  var ecModel = this._model;\n  var excludesComponentViews = [];\n  var self = this;\n  each(excludeComponents, function (componentType) {\n    ecModel.eachComponent({\n      mainType: componentType\n    }, function (component) {\n      var view = self._componentsMap[component.__viewId];\n\n      if (!view.group.ignore) {\n        excludesComponentViews.push(view);\n        view.group.ignore = true;\n      }\n    });\n  });\n  var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataUrl() : this.getRenderedCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\n  each(excludesComponentViews, function (view) {\n    view.group.ignore = false;\n  });\n  return url;\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n */\n\n\nechartsProto.getConnectedDataURL = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  var groupId = this.group;\n  var mathMin = Math.min;\n  var mathMax = Math.max;\n  var MAX_NUMBER = Infinity;\n\n  if (connectedGroups[groupId]) {\n    var left = MAX_NUMBER;\n    var top = MAX_NUMBER;\n    var right = -MAX_NUMBER;\n    var bottom = -MAX_NUMBER;\n    var canvasList = [];\n    var dpr = opts && opts.pixelRatio || 1;\n    zrUtil.each(instances, function (chart, id) {\n      if (chart.group === groupId) {\n        var canvas = chart.getRenderedCanvas(zrUtil.clone(opts));\n        var boundingRect = chart.getDom().getBoundingClientRect();\n        left = mathMin(boundingRect.left, left);\n        top = mathMin(boundingRect.top, top);\n        right = mathMax(boundingRect.right, right);\n        bottom = mathMax(boundingRect.bottom, bottom);\n        canvasList.push({\n          dom: canvas,\n          left: boundingRect.left,\n          top: boundingRect.top\n        });\n      }\n    });\n    left *= dpr;\n    top *= dpr;\n    right *= dpr;\n    bottom *= dpr;\n    var width = right - left;\n    var height = bottom - top;\n    var targetCanvas = zrUtil.createCanvas();\n    targetCanvas.width = width;\n    targetCanvas.height = height;\n    var zr = zrender.init(targetCanvas);\n    each(canvasList, function (item) {\n      var img = new graphic.Image({\n        style: {\n          x: item.left * dpr - left,\n          y: item.top * dpr - top,\n          image: item.dom\n        }\n      });\n      zr.add(img);\n    });\n    zr.refreshImmediately();\n    return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n  } else {\n    return this.getDataURL(opts);\n  }\n};\n/**\n * Convert from logical coordinate system to pixel coordinate system.\n * See CoordinateSystem#convertToPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId, geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\n\nechartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n/**\n * Convert from pixel coordinate system to logical coordinate system.\n * See CoordinateSystem#convertFromPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\nechartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\nfunction doConvertPixel(methodName, finder, value) {\n  var ecModel = this._model;\n\n  var coordSysList = this._coordSysMgr.getCoordinateSystems();\n\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n\n  for (var i = 0; i < coordSysList.length; i++) {\n    var coordSys = coordSysList[i];\n\n    if (coordSys[methodName] && (result = coordSys[methodName](ecModel, finder, value)) != null) {\n      return result;\n    }\n  }\n}\n/**\n * Is the specified coordinate systems or components contain the given pixel point.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {boolean} result\n */\n\n\nechartsProto.containPixel = function (finder, value) {\n  var ecModel = this._model;\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n  zrUtil.each(finder, function (models, key) {\n    key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n      var coordSys = model.coordinateSystem;\n\n      if (coordSys && coordSys.containPoint) {\n        result |= !!coordSys.containPoint(value);\n      } else if (key === 'seriesModels') {\n        var view = this._chartsMap[model.__viewId];\n\n        if (view && view.containPoint) {\n          result |= view.containPoint(value, model);\n        } else {}\n      } else {}\n    }, this);\n  }, this);\n  return !!result;\n};\n/**\n * Get visual from series or data.\n * @param {string|Object} finder\n *        If string, e.g., 'series', means {seriesIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            dataIndex / dataIndexInside\n *        }\n *        If dataIndex is not specified, series visual will be fetched,\n *        but not data item visual.\n *        If all of seriesIndex, seriesId, seriesName are not specified,\n *        visual will be fetched from first series.\n * @param {string} visualType 'color', 'symbol', 'symbolSize'\n */\n\n\nechartsProto.getVisual = function (finder, visualType) {\n  var ecModel = this._model;\n  finder = modelUtil.parseFinder(ecModel, finder, {\n    defaultMainType: 'series'\n  });\n  var seriesModel = finder.seriesModel;\n  var data = seriesModel.getData();\n  var dataIndexInside = finder.hasOwnProperty('dataIndexInside') ? finder.dataIndexInside : finder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(finder.dataIndex) : null;\n  return dataIndexInside != null ? data.getItemVisual(dataIndexInside, visualType) : data.getVisual(visualType);\n};\n/**\n * Get view of corresponding component model\n * @param  {module:echarts/model/Component} componentModel\n * @return {module:echarts/view/Component}\n */\n\n\nechartsProto.getViewOfComponentModel = function (componentModel) {\n  return this._componentsMap[componentModel.__viewId];\n};\n/**\n * Get view of corresponding series model\n * @param  {module:echarts/model/Series} seriesModel\n * @return {module:echarts/view/Chart}\n */\n\n\nechartsProto.getViewOfSeriesModel = function (seriesModel) {\n  return this._chartsMap[seriesModel.__viewId];\n};\n\nvar updateMethods = {\n  prepareAndUpdate: function (payload) {\n    prepare(this);\n    updateMethods.update.call(this, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  update: function (payload) {\n    // console.profile && console.profile('update');\n    var ecModel = this._model;\n    var api = this._api;\n    var zr = this._zr;\n    var coordSysMgr = this._coordSysMgr;\n    var scheduler = this._scheduler; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    scheduler.restoreData(ecModel, payload);\n    scheduler.performSeriesTasks(ecModel); // TODO\n    // Save total ecModel here for undo/redo (after restoring data and before processing data).\n    // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n    // Create new coordinate system each update\n    // In LineView may save the old coordinate system and use it to get the orignal point\n\n    coordSysMgr.create(ecModel, api);\n    scheduler.performDataProcessorTasks(ecModel, payload); // Current stream render is not supported in data process. So we can update\n    // stream modes after data processing, where the filtered data is used to\n    // deteming whether use progressive rendering.\n\n    updateStreamModes(this, ecModel); // We update stream modes before coordinate system updated, then the modes info\n    // can be fetched when coord sys updating (consider the barGrid extent fix). But\n    // the drawback is the full coord info can not be fetched. Fortunately this full\n    // coord is not requied in stream mode updater currently.\n\n    coordSysMgr.update(ecModel, api);\n    clearColorPalette(ecModel);\n    scheduler.performVisualTasks(ecModel, payload);\n    render(this, ecModel, api, payload); // Set background\n\n    var backgroundColor = ecModel.get('backgroundColor') || 'transparent'; // In IE8\n\n    if (!env.canvasSupported) {\n      var colorArr = colorTool.parse(backgroundColor);\n      backgroundColor = colorTool.stringify(colorArr, 'rgb');\n\n      if (colorArr[3] === 0) {\n        backgroundColor = 'transparent';\n      }\n    } else {\n      zr.setBackgroundColor(backgroundColor);\n    }\n\n    performPostUpdateFuncs(ecModel, api); // console.profile && console.profileEnd('update');\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateTransform: function (payload) {\n    var ecModel = this._model;\n    var ecIns = this;\n    var api = this._api; // update before setOption\n\n    if (!ecModel) {\n      return;\n    } // ChartView.markUpdateMethod(payload, 'updateTransform');\n\n\n    var componentDirtyList = [];\n    ecModel.eachComponent(function (componentType, componentModel) {\n      var componentView = ecIns.getViewOfComponentModel(componentModel);\n\n      if (componentView && componentView.__alive) {\n        if (componentView.updateTransform) {\n          var result = componentView.updateTransform(componentModel, ecModel, api, payload);\n          result && result.update && componentDirtyList.push(componentView);\n        } else {\n          componentDirtyList.push(componentView);\n        }\n      }\n    });\n    var seriesDirtyMap = zrUtil.createHashMap();\n    ecModel.eachSeries(function (seriesModel) {\n      var chartView = ecIns._chartsMap[seriesModel.__viewId];\n\n      if (chartView.updateTransform) {\n        var result = chartView.updateTransform(seriesModel, ecModel, api, payload);\n        result && result.update && seriesDirtyMap.set(seriesModel.uid, 1);\n      } else {\n        seriesDirtyMap.set(seriesModel.uid, 1);\n      }\n    });\n    clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // this._scheduler.performVisualTasks(ecModel, payload, 'layout', true);\n\n    this._scheduler.performVisualTasks(ecModel, payload, {\n      setDirty: true,\n      dirtyMap: seriesDirtyMap\n    }); // Currently, not call render of components. Geo render cost a lot.\n    // renderComponents(ecIns, ecModel, api, payload, componentDirtyList);\n\n\n    renderSeries(ecIns, ecModel, api, payload, seriesDirtyMap);\n    performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateView: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ChartView.markUpdateMethod(payload, 'updateView');\n    clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n\n    this._scheduler.performVisualTasks(ecModel, payload, {\n      setDirty: true\n    });\n\n    render(this, this._model, this._api, payload);\n    performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateVisual: function (payload) {\n    updateMethods.update.call(this, payload); // var ecModel = this._model;\n    // // update before setOption\n    // if (!ecModel) {\n    //     return;\n    // }\n    // ChartView.markUpdateMethod(payload, 'updateVisual');\n    // clearColorPalette(ecModel);\n    // // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // this._scheduler.performVisualTasks(ecModel, payload, {visualType: 'visual', setDirty: true});\n    // render(this, this._model, this._api, payload);\n    // performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateLayout: function (payload) {\n    updateMethods.update.call(this, payload); // var ecModel = this._model;\n    // // update before setOption\n    // if (!ecModel) {\n    //     return;\n    // }\n    // ChartView.markUpdateMethod(payload, 'updateLayout');\n    // // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // // this._scheduler.performVisualTasks(ecModel, payload, 'layout', true);\n    // this._scheduler.performVisualTasks(ecModel, payload, {setDirty: true});\n    // render(this, this._model, this._api, payload);\n    // performPostUpdateFuncs(ecModel, this._api);\n  }\n};\n\nfunction prepare(ecIns) {\n  var ecModel = ecIns._model;\n  var scheduler = ecIns._scheduler;\n  scheduler.restorePipelines(ecModel);\n  scheduler.prepareStageTasks();\n  prepareView(ecIns, 'component', ecModel, scheduler);\n  prepareView(ecIns, 'chart', ecModel, scheduler);\n  scheduler.plan();\n}\n/**\n * @private\n */\n\n\nfunction updateDirectly(ecIns, method, payload, mainType, subType) {\n  var ecModel = ecIns._model; // broadcast\n\n  if (!mainType) {\n    // FIXME\n    // Chart will not be update directly here, except set dirty.\n    // But there is no such scenario now.\n    each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n    return;\n  }\n\n  var query = {};\n  query[mainType + 'Id'] = payload[mainType + 'Id'];\n  query[mainType + 'Index'] = payload[mainType + 'Index'];\n  query[mainType + 'Name'] = payload[mainType + 'Name'];\n  var condition = {\n    mainType: mainType,\n    query: query\n  };\n  subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n  var excludeSeriesId = payload.excludeSeriesId;\n\n  if (excludeSeriesId != null) {\n    excludeSeriesId = zrUtil.createHashMap(modelUtil.normalizeToArray(excludeSeriesId));\n  } // If dispatchAction before setOption, do nothing.\n\n\n  ecModel && ecModel.eachComponent(condition, function (model) {\n    if (!excludeSeriesId || excludeSeriesId.get(model.id) == null) {\n      callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\n    }\n  }, ecIns);\n\n  function callView(view) {\n    view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\n  }\n}\n/**\n * Resize the chart\n * @param {Object} opts\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n * @param {boolean} [opts.silent=false]\n */\n\n\nechartsProto.resize = function (opts) {\n  this._zr.resize(opts);\n\n  var ecModel = this._model; // Resize loading effect\n\n  this._loadingFX && this._loadingFX.resize();\n\n  if (!ecModel) {\n    return;\n  }\n\n  var optionChanged = ecModel.resetOption('media');\n  var silent = opts && opts.silent;\n  this[IN_MAIN_PROCESS] = true;\n  optionChanged && prepare(this);\n  updateMethods.update.call(this);\n  this[IN_MAIN_PROCESS] = false;\n  flushPendingActions.call(this, silent);\n  triggerUpdatedEvent.call(this, silent);\n};\n\nfunction updateStreamModes(ecIns, ecModel) {\n  var chartsMap = ecIns._chartsMap;\n  var scheduler = ecIns._scheduler;\n  ecModel.eachSeries(function (seriesModel) {\n    scheduler.updateStreamModes(seriesModel, chartsMap[seriesModel.__viewId]);\n  });\n}\n/**\n * Show loading effect\n * @param  {string} [name='default']\n * @param  {Object} [cfg]\n */\n\n\nechartsProto.showLoading = function (name, cfg) {\n  if (isObject(name)) {\n    cfg = name;\n    name = '';\n  }\n\n  name = name || 'default';\n  this.hideLoading();\n\n  if (!loadingEffects[name]) {\n    return;\n  }\n\n  var el = loadingEffects[name](this._api, cfg);\n  var zr = this._zr;\n  this._loadingFX = el;\n  zr.add(el);\n};\n/**\n * Hide loading effect\n */\n\n\nechartsProto.hideLoading = function () {\n  this._loadingFX && this._zr.remove(this._loadingFX);\n  this._loadingFX = null;\n};\n/**\n * @param {Object} eventObj\n * @return {Object}\n */\n\n\nechartsProto.makeActionFromEvent = function (eventObj) {\n  var payload = zrUtil.extend({}, eventObj);\n  payload.type = eventActionMap[eventObj.type];\n  return payload;\n};\n/**\n * @pubilc\n * @param {Object} payload\n * @param {string} [payload.type] Action type\n * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n * @param {boolean} [opt.silent=false] Whether trigger events.\n * @param {boolean} [opt.flush=undefined]\n *                  true: Flush immediately, and then pixel in canvas can be fetched\n *                      immediately. Caution: it might affect performance.\n *                  false: Not not flush.\n *                  undefined: Auto decide whether perform flush.\n */\n\n\nechartsProto.dispatchAction = function (payload, opt) {\n  if (!isObject(opt)) {\n    opt = {\n      silent: !!opt\n    };\n  }\n\n  if (!actions[payload.type]) {\n    return;\n  } // Avoid dispatch action before setOption. Especially in `connect`.\n\n\n  if (!this._model) {\n    return;\n  } // May dispatchAction in rendering procedure\n\n\n  if (this[IN_MAIN_PROCESS]) {\n    this._pendingActions.push(payload);\n\n    return;\n  }\n\n  doDispatchAction.call(this, payload, opt.silent);\n\n  if (opt.flush) {\n    this._zr.flush(true);\n  } else if (opt.flush !== false && env.browser.weChat) {\n    // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n    // hang when sliding page (on touch event), which cause that zr does not\n    // refresh util user interaction finished, which is not expected.\n    // But `dispatchAction` may be called too frequently when pan on touch\n    // screen, which impacts performance if do not throttle them.\n    this._throttledZrFlush();\n  }\n\n  flushPendingActions.call(this, opt.silent);\n  triggerUpdatedEvent.call(this, opt.silent);\n};\n\nfunction doDispatchAction(payload, silent) {\n  var payloadType = payload.type;\n  var escapeConnect = payload.escapeConnect;\n  var actionWrap = actions[payloadType];\n  var actionInfo = actionWrap.actionInfo;\n  var cptType = (actionInfo.update || 'update').split(':');\n  var updateMethod = cptType.pop();\n  cptType = cptType[0] != null && parseClassType(cptType[0]);\n  this[IN_MAIN_PROCESS] = true;\n  var payloads = [payload];\n  var batched = false; // Batch action\n\n  if (payload.batch) {\n    batched = true;\n    payloads = zrUtil.map(payload.batch, function (item) {\n      item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n      item.batch = null;\n      return item;\n    });\n  }\n\n  var eventObjBatch = [];\n  var eventObj;\n  var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n  each(payloads, function (batchItem) {\n    // Action can specify the event by return it.\n    eventObj = actionWrap.action(batchItem, this._model, this._api); // Emit event outside\n\n    eventObj = eventObj || zrUtil.extend({}, batchItem); // Convert type to eventType\n\n    eventObj.type = actionInfo.event || eventObj.type;\n    eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\n\n    if (isHighDown) {\n      // method, payload, mainType, subType\n      updateDirectly(this, updateMethod, batchItem, 'series');\n    } else if (cptType) {\n      updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n    }\n  }, this);\n\n  if (updateMethod !== 'none' && !isHighDown && !cptType) {\n    // Still dirty\n    if (this[OPTION_UPDATED]) {\n      // FIXME Pass payload ?\n      prepare(this);\n      updateMethods.update.call(this, payload);\n      this[OPTION_UPDATED] = false;\n    } else {\n      updateMethods[updateMethod].call(this, payload);\n    }\n  } // Follow the rule of action batch\n\n\n  if (batched) {\n    eventObj = {\n      type: actionInfo.event || payloadType,\n      escapeConnect: escapeConnect,\n      batch: eventObjBatch\n    };\n  } else {\n    eventObj = eventObjBatch[0];\n  }\n\n  this[IN_MAIN_PROCESS] = false;\n  !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n}\n\nfunction flushPendingActions(silent) {\n  var pendingActions = this._pendingActions;\n\n  while (pendingActions.length) {\n    var payload = pendingActions.shift();\n    doDispatchAction.call(this, payload, silent);\n  }\n}\n\nfunction triggerUpdatedEvent(silent) {\n  !silent && this.trigger('updated');\n}\n/**\n * Event `rendered` is triggered when zr\n * rendered. It is useful for realtime\n * snapshot (reflect animation).\n *\n * Event `finished` is triggered when:\n * (1) zrender rendering finished.\n * (2) initial animation finished.\n * (3) progressive rendering finished.\n * (4) no pending action.\n * (5) no delayed setOption needs to be processed.\n */\n\n\nfunction bindRenderedEvent(zr, ecIns) {\n  zr.on('rendered', function () {\n    ecIns.trigger('rendered'); // The `finished` event should not be triggered repeatly,\n    // so it should only be triggered when rendering indeed happend\n    // in zrender. (Consider the case that dipatchAction is keep\n    // triggering when mouse move).\n\n    if ( // Although zr is dirty if initial animation is not finished\n    // and this checking is called on frame, we also check\n    // animation finished for robustness.\n    zr.animation.isFinished() && !ecIns[OPTION_UPDATED] && !ecIns._scheduler.unfinished && !ecIns._pendingActions.length) {\n      ecIns.trigger('finished');\n    }\n  });\n}\n/**\n * @param {Object} params\n * @param {number} params.seriesIndex\n * @param {Array|TypedArray} params.data\n */\n\n\nechartsProto.appendData = function (params) {\n  var seriesIndex = params.seriesIndex;\n  var ecModel = this.getModel();\n  var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n  seriesModel.appendData(params); // Note: `appendData` does not support that update extent of coordinate\n  // system, util some scenario require that. In the expected usage of\n  // `appendData`, the initial extent of coordinate system should better\n  // be fixed by axis `min`/`max` setting or initial data, otherwise if\n  // the extent changed while `appendData`, the location of the painted\n  // graphic elements have to be changed, which make the usage of\n  // `appendData` meaningless.\n\n  this._scheduler.unfinished = true;\n};\n/**\n * Register event\n * @method\n */\n\n\nechartsProto.on = createRegisterEventWithLowercaseName('on');\nechartsProto.off = createRegisterEventWithLowercaseName('off');\nechartsProto.one = createRegisterEventWithLowercaseName('one');\n/**\n * Prepare view instances of charts and components\n * @param  {module:echarts/model/Global} ecModel\n * @private\n */\n\nfunction prepareView(ecIns, type, ecModel, scheduler) {\n  var isComponent = type === 'component';\n  var viewList = isComponent ? ecIns._componentsViews : ecIns._chartsViews;\n  var viewMap = isComponent ? ecIns._componentsMap : ecIns._chartsMap;\n  var zr = ecIns._zr;\n  var api = ecIns._api;\n\n  for (var i = 0; i < viewList.length; i++) {\n    viewList[i].__alive = false;\n  }\n\n  isComponent ? ecModel.eachComponent(function (componentType, model) {\n    componentType !== 'series' && doPrepare(model);\n  }) : ecModel.eachSeries(doPrepare);\n\n  function doPrepare(model) {\n    // Consider: id same and type changed.\n    var viewId = '_ec_' + model.id + '_' + model.type;\n    var view = viewMap[viewId];\n\n    if (!view) {\n      var classType = parseClassType(model.type);\n      var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) : ChartView.getClass(classType.sub);\n      view = new Clazz();\n      view.init(ecModel, api);\n      viewMap[viewId] = view;\n      viewList.push(view);\n      zr.add(view.group);\n    }\n\n    model.__viewId = view.__id = viewId;\n    view.__alive = true;\n    view.__model = model;\n    view.group.__ecComponentInfo = {\n      mainType: model.mainType,\n      index: model.componentIndex\n    };\n    !isComponent && scheduler.prepareView(view, model, ecModel, api);\n  }\n\n  for (var i = 0; i < viewList.length;) {\n    var view = viewList[i];\n\n    if (!view.__alive) {\n      !isComponent && view.renderTask.dispose();\n      zr.remove(view.group);\n      view.dispose(ecModel, api);\n      viewList.splice(i, 1);\n      delete viewMap[view.__id];\n      view.__id = view.group.__ecComponentInfo = null;\n    } else {\n      i++;\n    }\n  }\n} // /**\n//  * Encode visual infomation from data after data processing\n//  *\n//  * @param {module:echarts/model/Global} ecModel\n//  * @param {object} layout\n//  * @param {boolean} [layoutFilter] `true`: only layout,\n//  *                                 `false`: only not layout,\n//  *                                 `null`/`undefined`: all.\n//  * @param {string} taskBaseTag\n//  * @private\n//  */\n// function startVisualEncoding(ecIns, ecModel, api, payload, layoutFilter) {\n//     each(visualFuncs, function (visual, index) {\n//         var isLayout = visual.isLayout;\n//         if (layoutFilter == null\n//             || (layoutFilter === false && !isLayout)\n//             || (layoutFilter === true && isLayout)\n//         ) {\n//             visual.func(ecModel, api, payload);\n//         }\n//     });\n// }\n\n\nfunction clearColorPalette(ecModel) {\n  ecModel.clearColorPalette();\n  ecModel.eachSeries(function (seriesModel) {\n    seriesModel.clearColorPalette();\n  });\n}\n\nfunction render(ecIns, ecModel, api, payload) {\n  renderComponents(ecIns, ecModel, api, payload);\n  each(ecIns._chartsViews, function (chart) {\n    chart.__alive = false;\n  });\n  renderSeries(ecIns, ecModel, api, payload); // Remove groups of unrendered charts\n\n  each(ecIns._chartsViews, function (chart) {\n    if (!chart.__alive) {\n      chart.remove(ecModel, api);\n    }\n  });\n}\n\nfunction renderComponents(ecIns, ecModel, api, payload, dirtyList) {\n  each(dirtyList || ecIns._componentsViews, function (componentView) {\n    var componentModel = componentView.__model;\n    componentView.render(componentModel, ecModel, api, payload);\n    updateZ(componentModel, componentView);\n  });\n}\n/**\n * Render each chart and component\n * @private\n */\n\n\nfunction renderSeries(ecIns, ecModel, api, payload, dirtyMap) {\n  // Render all charts\n  var scheduler = ecIns._scheduler;\n  var unfinished;\n  ecModel.eachSeries(function (seriesModel) {\n    var chartView = ecIns._chartsMap[seriesModel.__viewId];\n    chartView.__alive = true;\n    var renderTask = chartView.renderTask;\n    scheduler.updatePayload(renderTask, payload);\n\n    if (dirtyMap && dirtyMap.get(seriesModel.uid)) {\n      renderTask.dirty();\n    }\n\n    unfinished |= renderTask.perform(scheduler.getPerformArgs(renderTask));\n    chartView.group.silent = !!seriesModel.get('silent');\n    updateZ(seriesModel, chartView);\n    updateBlend(seriesModel, chartView);\n  });\n  scheduler.unfinished |= unfinished; // If use hover layer\n\n  updateHoverLayerStatus(ecIns._zr, ecModel); // Add aria\n\n  aria(ecIns._zr.dom, ecModel);\n}\n\nfunction performPostUpdateFuncs(ecModel, api) {\n  each(postUpdateFuncs, function (func) {\n    func(ecModel, api);\n  });\n}\n\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\n/**\n * @private\n */\n\nechartsProto._initEvents = function () {\n  each(MOUSE_EVENT_NAMES, function (eveName) {\n    this._zr.on(eveName, function (e) {\n      var ecModel = this.getModel();\n      var el = e.target;\n      var params; // no e.target when 'globalout'.\n\n      if (eveName === 'globalout') {\n        params = {};\n      } else if (el && el.dataIndex != null) {\n        var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n        params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n      } // If element has custom eventData of components\n      else if (el && el.eventData) {\n          params = zrUtil.extend({}, el.eventData);\n        }\n\n      if (params) {\n        params.event = e;\n        params.type = eveName;\n        this.trigger(eveName, params);\n      }\n    }, this);\n  }, this);\n  each(eventActionMap, function (actionType, eventType) {\n    this._messageCenter.on(eventType, function (event) {\n      this.trigger(eventType, event);\n    }, this);\n  }, this);\n};\n/**\n * @return {boolean}\n */\n\n\nechartsProto.isDisposed = function () {\n  return this._disposed;\n};\n/**\n * Clear\n */\n\n\nechartsProto.clear = function () {\n  this.setOption({\n    series: []\n  }, true);\n};\n/**\n * Dispose instance\n */\n\n\nechartsProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._disposed = true;\n  modelUtil.setAttribute(this.getDom(), DOM_ATTRIBUTE_KEY, '');\n  var api = this._api;\n  var ecModel = this._model;\n  each(this._componentsViews, function (component) {\n    component.dispose(ecModel, api);\n  });\n  each(this._chartsViews, function (chart) {\n    chart.dispose(ecModel, api);\n  }); // Dispose after all views disposed\n\n  this._zr.dispose();\n\n  delete instances[this.id];\n};\n\nzrUtil.mixin(ECharts, Eventful);\n\nfunction updateHoverLayerStatus(zr, ecModel) {\n  var storage = zr.storage;\n  var elCount = 0;\n  storage.traverse(function (el) {\n    if (!el.isGroup) {\n      elCount++;\n    }\n  });\n\n  if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n    storage.traverse(function (el) {\n      if (!el.isGroup) {\n        // Don't switch back.\n        el.useHoverLayer = true;\n      }\n    });\n  }\n}\n/**\n * Update chart progressive and blend.\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateBlend(seriesModel, chartView) {\n  var blendMode = seriesModel.get('blendMode') || null;\n  chartView.group.traverse(function (el) {\n    // FIXME marker and other components\n    if (!el.isGroup) {\n      // Only set if blendMode is changed. In case element is incremental and don't wan't to rerender.\n      if (el.style.blend !== blendMode) {\n        el.setStyle('blend', blendMode);\n      }\n    }\n\n    if (el.eachPendingDisplayable) {\n      el.eachPendingDisplayable(function (displayable) {\n        displayable.setStyle('blend', blendMode);\n      });\n    }\n  });\n}\n/**\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateZ(model, view) {\n  var z = model.get('z');\n  var zlevel = model.get('zlevel'); // Set z and zlevel\n\n  view.group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n    }\n  });\n}\n\nfunction createExtensionAPI(ecInstance) {\n  var coordSysMgr = ecInstance._coordSysMgr;\n  return zrUtil.extend(new ExtensionAPI(ecInstance), {\n    // Inject methods\n    getCoordinateSystems: zrUtil.bind(coordSysMgr.getCoordinateSystems, coordSysMgr),\n    getComponentByElement: function (el) {\n      while (el) {\n        var modelInfo = el.__ecComponentInfo;\n\n        if (modelInfo != null) {\n          return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n        }\n\n        el = el.parent;\n      }\n    }\n  });\n}\n/**\n * @type {Object} key: actionType.\n * @inner\n */\n\n\nvar actions = {};\n/**\n * Map eventType to actionType\n * @type {Object}\n */\n\nvar eventActionMap = {};\n/**\n * Data processor functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar dataProcessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar optionPreprocessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar postUpdateFuncs = [];\n/**\n * Visual encoding functions of each stage\n * @type {Array.<Object.<string, Function>>}\n */\n\nvar visualFuncs = [];\n/**\n * Theme storage\n * @type {Object.<key, Object>}\n */\n\nvar themeStorage = {};\n/**\n * Loading effects\n */\n\nvar loadingEffects = {};\nvar instances = {};\nvar connectedGroups = {};\nvar idBase = new Date() - 0;\nvar groupIdBase = new Date() - 0;\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\nvar mapDataStores = {};\n\nfunction enableConnect(chart) {\n  var STATUS_PENDING = 0;\n  var STATUS_UPDATING = 1;\n  var STATUS_UPDATED = 2;\n  var STATUS_KEY = '__connectUpdateStatus';\n\n  function updateConnectedChartsStatus(charts, status) {\n    for (var i = 0; i < charts.length; i++) {\n      var otherChart = charts[i];\n      otherChart[STATUS_KEY] = status;\n    }\n  }\n\n  each(eventActionMap, function (actionType, eventType) {\n    chart._messageCenter.on(eventType, function (event) {\n      if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n        if (event && event.escapeConnect) {\n          return;\n        }\n\n        var action = chart.makeActionFromEvent(event);\n        var otherCharts = [];\n        each(instances, function (otherChart) {\n          if (otherChart !== chart && otherChart.group === chart.group) {\n            otherCharts.push(otherChart);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n        each(otherCharts, function (otherChart) {\n          if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n            otherChart.dispatchAction(action);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n      }\n    });\n  });\n}\n/**\n * @param {HTMLElement} dom\n * @param {Object} [theme]\n * @param {Object} opts\n * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n *                              Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n *                               Can be 'auto' (the same as null/undefined)\n */\n\n\nfunction init(dom, theme, opts) {\n  var existInstance = getInstanceByDom(dom);\n\n  if (existInstance) {\n    return existInstance;\n  }\n\n  var chart = new ECharts(dom, theme, opts);\n  chart.id = 'ec_' + idBase++;\n  instances[chart.id] = chart;\n  modelUtil.setAttribute(dom, DOM_ATTRIBUTE_KEY, chart.id);\n  enableConnect(chart);\n  return chart;\n}\n/**\n * @return {string|Array.<module:echarts~ECharts>} groupId\n */\n\n\nfunction connect(groupId) {\n  // Is array of charts\n  if (zrUtil.isArray(groupId)) {\n    var charts = groupId;\n    groupId = null; // If any chart has group\n\n    each(charts, function (chart) {\n      if (chart.group != null) {\n        groupId = chart.group;\n      }\n    });\n    groupId = groupId || 'g_' + groupIdBase++;\n    each(charts, function (chart) {\n      chart.group = groupId;\n    });\n  }\n\n  connectedGroups[groupId] = true;\n  return groupId;\n}\n/**\n * @DEPRECATED\n * @return {string} groupId\n */\n\n\nfunction disConnect(groupId) {\n  connectedGroups[groupId] = false;\n}\n/**\n * @return {string} groupId\n */\n\n\nvar disconnect = disConnect;\n/**\n * Dispose a chart instance\n * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n */\n\nfunction dispose(chart) {\n  if (typeof chart === 'string') {\n    chart = instances[chart];\n  } else if (!(chart instanceof ECharts)) {\n    // Try to treat as dom\n    chart = getInstanceByDom(chart);\n  }\n\n  if (chart instanceof ECharts && !chart.isDisposed()) {\n    chart.dispose();\n  }\n}\n/**\n * @param  {HTMLElement} dom\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceByDom(dom) {\n  return instances[modelUtil.getAttribute(dom, DOM_ATTRIBUTE_KEY)];\n}\n/**\n * @param {string} key\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceById(key) {\n  return instances[key];\n}\n/**\n * Register theme\n */\n\n\nfunction registerTheme(name, theme) {\n  themeStorage[name] = theme;\n}\n/**\n * Register option preprocessor\n * @param {Function} preprocessorFunc\n */\n\n\nfunction registerPreprocessor(preprocessorFunc) {\n  optionPreprocessorFuncs.push(preprocessorFunc);\n}\n/**\n * @param {number} [priority=1000]\n * @param {Object|Function} processor\n */\n\n\nfunction registerProcessor(priority, processor) {\n  normalizeRegister(dataProcessorFuncs, priority, processor, PRIORITY_PROCESSOR_FILTER);\n}\n/**\n * Register postUpdater\n * @param {Function} postUpdateFunc\n */\n\n\nfunction registerPostUpdate(postUpdateFunc) {\n  postUpdateFuncs.push(postUpdateFunc);\n}\n/**\n * Usage:\n * registerAction('someAction', 'someEvent', function () { ... });\n * registerAction('someAction', function () { ... });\n * registerAction(\n *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n *     function () { ... }\n * );\n *\n * @param {(string|Object)} actionInfo\n * @param {string} actionInfo.type\n * @param {string} [actionInfo.event]\n * @param {string} [actionInfo.update]\n * @param {string} [eventName]\n * @param {Function} action\n */\n\n\nfunction registerAction(actionInfo, eventName, action) {\n  if (typeof eventName === 'function') {\n    action = eventName;\n    eventName = '';\n  }\n\n  var actionType = isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\n    event: eventName\n  }][0]; // Event name is all lowercase\n\n  actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n  eventName = actionInfo.event; // Validate action type and event name.\n\n  assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n  if (!actions[actionType]) {\n    actions[actionType] = {\n      action: action,\n      actionInfo: actionInfo\n    };\n  }\n\n  eventActionMap[eventName] = actionType;\n}\n/**\n * @param {string} type\n * @param {*} CoordinateSystem\n */\n\n\nfunction registerCoordinateSystem(type, CoordinateSystem) {\n  CoordinateSystemManager.register(type, CoordinateSystem);\n}\n/**\n * Get dimensions of specified coordinate system.\n * @param {string} type\n * @return {Array.<string|Object>}\n */\n\n\nfunction getCoordinateSystemDimensions(type) {\n  var coordSysCreator = CoordinateSystemManager.get(type);\n\n  if (coordSysCreator) {\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\n  }\n}\n/**\n * Layout is a special stage of visual encoding\n * Most visual encoding like color are common for different chart\n * But each chart has it's own layout algorithm\n *\n * @param {number} [priority=1000]\n * @param {Function} layoutTask\n */\n\n\nfunction registerLayout(priority, layoutTask) {\n  normalizeRegister(visualFuncs, priority, layoutTask, PRIORITY_VISUAL_LAYOUT, 'layout');\n}\n/**\n * @param {number} [priority=3000]\n * @param {module:echarts/stream/Task} visualTask\n */\n\n\nfunction registerVisual(priority, visualTask) {\n  normalizeRegister(visualFuncs, priority, visualTask, PRIORITY_VISUAL_CHART, 'visual');\n}\n/**\n * @param {Object|Function} fn: {seriesType, createOnAllSeries, performRawSeries, reset}\n */\n\n\nfunction normalizeRegister(targetList, priority, fn, defaultPriority, visualType) {\n  if (isFunction(priority) || isObject(priority)) {\n    fn = priority;\n    priority = defaultPriority;\n  }\n\n  var stageHandler = Scheduler.wrapStageHandler(fn, visualType);\n  stageHandler.__prio = priority;\n  stageHandler.__raw = fn;\n  targetList.push(stageHandler);\n  return stageHandler;\n}\n/**\n * @param {string} name\n */\n\n\nfunction registerLoading(name, loadingFx) {\n  loadingEffects[name] = loadingFx;\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentModel(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentModel;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentView(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentView;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentView.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendSeriesModel(opts\n/*, superClass*/\n) {\n  // var Clazz = SeriesModel;\n  // if (superClass) {\n  //     superClass = 'series.' + superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return SeriesModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendChartView(opts\n/*, superClass*/\n) {\n  // var Clazz = ChartView;\n  // if (superClass) {\n  //     superClass = superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ChartView.getClass(classType.main, true);\n  // }\n  return ChartView.extend(opts);\n}\n/**\n * ZRender need a canvas context to do measureText.\n * But in node environment canvas may be created by node-canvas.\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n *\n * Be careful of using it in the browser.\n *\n * @param {Function} creator\n * @example\n *     var Canvas = require('canvas');\n *     var echarts = require('echarts');\n *     echarts.setCanvasCreator(function () {\n *         // Small size is enough.\n *         return new Canvas(32, 32);\n *     });\n */\n\n\nfunction setCanvasCreator(creator) {\n  zrUtil.$override('createCanvas', creator);\n}\n/**\n * @param {string} mapName\n * @param {Object|string} geoJson\n * @param {Object} [specialAreas]\n *\n * @example\n *     $.get('USA.json', function (geoJson) {\n *         echarts.registerMap('USA', geoJson);\n *         // Or\n *         echarts.registerMap('USA', {\n *             geoJson: geoJson,\n *             specialAreas: {}\n *         })\n *     });\n */\n\n\nfunction registerMap(mapName, geoJson, specialAreas) {\n  if (geoJson.geoJson && !geoJson.features) {\n    specialAreas = geoJson.specialAreas;\n    geoJson = geoJson.geoJson;\n  }\n\n  if (typeof geoJson === 'string') {\n    geoJson = typeof JSON !== 'undefined' && JSON.parse ? JSON.parse(geoJson) : new Function('return (' + geoJson + ');')();\n  }\n\n  mapDataStores[mapName] = {\n    geoJson: geoJson,\n    specialAreas: specialAreas\n  };\n}\n/**\n * @param {string} mapName\n * @return {Object}\n */\n\n\nfunction getMap(mapName) {\n  return mapDataStores[mapName];\n}\n\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesColor);\nregisterPreprocessor(backwardCompat);\nregisterProcessor(PRIORITY_PROCESSOR_STATISTIC, dataStack);\nregisterLoading('default', loadingDefault); // Default actions\n\nregisterAction({\n  type: 'highlight',\n  event: 'highlight',\n  update: 'highlight'\n}, zrUtil.noop);\nregisterAction({\n  type: 'downplay',\n  event: 'downplay',\n  update: 'downplay'\n}, zrUtil.noop); // Default theme\n\nregisterTheme('light', lightTheme);\nregisterTheme('dark', darkTheme); // For backward compatibility, where the namespace `dataTool` will\n// be mounted on `echarts` is the extension `dataTool` is imported.\n\nvar dataTool = {};\nexports.version = version;\nexports.dependencies = dependencies;\nexports.PRIORITY = PRIORITY;\nexports.init = init;\nexports.connect = connect;\nexports.disConnect = disConnect;\nexports.disconnect = disconnect;\nexports.dispose = dispose;\nexports.getInstanceByDom = getInstanceByDom;\nexports.getInstanceById = getInstanceById;\nexports.registerTheme = registerTheme;\nexports.registerPreprocessor = registerPreprocessor;\nexports.registerProcessor = registerProcessor;\nexports.registerPostUpdate = registerPostUpdate;\nexports.registerAction = registerAction;\nexports.registerCoordinateSystem = registerCoordinateSystem;\nexports.getCoordinateSystemDimensions = getCoordinateSystemDimensions;\nexports.registerLayout = registerLayout;\nexports.registerVisual = registerVisual;\nexports.registerLoading = registerLoading;\nexports.extendComponentModel = extendComponentModel;\nexports.extendComponentView = extendComponentView;\nexports.extendSeriesModel = extendSeriesModel;\nexports.extendChartView = extendChartView;\nexports.setCanvasCreator = setCanvasCreator;\nexports.registerMap = registerMap;\nexports.getMap = getMap;\nexports.dataTool = dataTool;\nvar ___ec_export = require(\"./export\");\n(function () {\n    for (var key in ___ec_export) {\n        if (___ec_export.hasOwnProperty(key)) {\n            exports[key] = ___ec_export[key];\n        }\n    }\n})();","var MarkerModel = require(\"./MarkerModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = MarkerModel.extend({\n  type: 'markArea',\n  defaultOption: {\n    zlevel: 0,\n    // PENDING\n    z: 1,\n    tooltip: {\n      trigger: 'item'\n    },\n    // markArea should fixed on the coordinate system\n    animation: false,\n    label: {\n      show: true,\n      position: 'top'\n    },\n    itemStyle: {\n      // color and borderColor default to use color from series\n      // color: 'auto'\n      // borderColor: 'auto'\n      borderWidth: 0\n    },\n    emphasis: {\n      label: {\n        show: true,\n        position: 'top'\n      }\n    }\n  }\n});\n\nmodule.exports = _default;","var ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个向量\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @return {Vector2}\n */\n\nfunction create(x, y) {\n  var out = new ArrayCtor(2);\n\n  if (x == null) {\n    x = 0;\n  }\n\n  if (y == null) {\n    y = 0;\n  }\n\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * 复制向量数据\n * @param {Vector2} out\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction copy(out, v) {\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 克隆一个向量\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction clone(v) {\n  var out = new ArrayCtor(2);\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 设置向量的两个项\n * @param {Vector2} out\n * @param {number} a\n * @param {number} b\n * @return {Vector2} 结果\n */\n\n\nfunction set(out, a, b) {\n  out[0] = a;\n  out[1] = b;\n  return out;\n}\n/**\n * 向量相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction add(out, v1, v2) {\n  out[0] = v1[0] + v2[0];\n  out[1] = v1[1] + v2[1];\n  return out;\n}\n/**\n * 向量缩放后相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} a\n */\n\n\nfunction scaleAndAdd(out, v1, v2, a) {\n  out[0] = v1[0] + v2[0] * a;\n  out[1] = v1[1] + v2[1] * a;\n  return out;\n}\n/**\n * 向量相减\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction sub(out, v1, v2) {\n  out[0] = v1[0] - v2[0];\n  out[1] = v1[1] - v2[1];\n  return out;\n}\n/**\n * 向量长度\n * @param {Vector2} v\n * @return {number}\n */\n\n\nfunction len(v) {\n  return Math.sqrt(lenSquare(v));\n}\n\nvar length = len; // jshint ignore:line\n\n/**\n * 向量长度平方\n * @param {Vector2} v\n * @return {number}\n */\n\nfunction lenSquare(v) {\n  return v[0] * v[0] + v[1] * v[1];\n}\n\nvar lengthSquare = lenSquare;\n/**\n * 向量乘法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\nfunction mul(out, v1, v2) {\n  out[0] = v1[0] * v2[0];\n  out[1] = v1[1] * v2[1];\n  return out;\n}\n/**\n * 向量除法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction div(out, v1, v2) {\n  out[0] = v1[0] / v2[0];\n  out[1] = v1[1] / v2[1];\n  return out;\n}\n/**\n * 向量点乘\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction dot(v1, v2) {\n  return v1[0] * v2[0] + v1[1] * v2[1];\n}\n/**\n * 向量缩放\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {number} s\n */\n\n\nfunction scale(out, v, s) {\n  out[0] = v[0] * s;\n  out[1] = v[1] * s;\n  return out;\n}\n/**\n * 向量归一化\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\n\nfunction normalize(out, v) {\n  var d = len(v);\n\n  if (d === 0) {\n    out[0] = 0;\n    out[1] = 0;\n  } else {\n    out[0] = v[0] / d;\n    out[1] = v[1] / d;\n  }\n\n  return out;\n}\n/**\n * 计算向量间距离\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction distance(v1, v2) {\n  return Math.sqrt((v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]));\n}\n\nvar dist = distance;\n/**\n * 向量距离平方\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\nfunction distanceSquare(v1, v2) {\n  return (v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n}\n\nvar distSquare = distanceSquare;\n/**\n * 求负向量\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\nfunction negate(out, v) {\n  out[0] = -v[0];\n  out[1] = -v[1];\n  return out;\n}\n/**\n * 插值两个点\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} t\n */\n\n\nfunction lerp(out, v1, v2, t) {\n  out[0] = v1[0] + t * (v2[0] - v1[0]);\n  out[1] = v1[1] + t * (v2[1] - v1[1]);\n  return out;\n}\n/**\n * 矩阵左乘向量\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {Vector2} m\n */\n\n\nfunction applyTransform(out, v, m) {\n  var x = v[0];\n  var y = v[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * 求两个向量最小值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction min(out, v1, v2) {\n  out[0] = Math.min(v1[0], v2[0]);\n  out[1] = Math.min(v1[1], v2[1]);\n  return out;\n}\n/**\n * 求两个向量最大值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction max(out, v1, v2) {\n  out[0] = Math.max(v1[0], v2[0]);\n  out[1] = Math.max(v1[1], v2[1]);\n  return out;\n}\n\nexports.create = create;\nexports.copy = copy;\nexports.clone = clone;\nexports.set = set;\nexports.add = add;\nexports.scaleAndAdd = scaleAndAdd;\nexports.sub = sub;\nexports.len = len;\nexports.length = length;\nexports.lenSquare = lenSquare;\nexports.lengthSquare = lengthSquare;\nexports.mul = mul;\nexports.div = div;\nexports.dot = dot;\nexports.scale = scale;\nexports.normalize = normalize;\nexports.distance = distance;\nexports.dist = dist;\nexports.distanceSquare = distanceSquare;\nexports.distSquare = distSquare;\nexports.negate = negate;\nexports.lerp = lerp;\nexports.applyTransform = applyTransform;\nexports.min = min;\nexports.max = max;","var DataZoomModel = require(\"./DataZoomModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = DataZoomModel.extend({\n  type: 'dataZoom.select'\n});\n\nmodule.exports = _default;","var LRU = require(\"../core/LRU\");\n\nvar kCSSColorTable = {\n  'transparent': [0, 0, 0, 0],\n  'aliceblue': [240, 248, 255, 1],\n  'antiquewhite': [250, 235, 215, 1],\n  'aqua': [0, 255, 255, 1],\n  'aquamarine': [127, 255, 212, 1],\n  'azure': [240, 255, 255, 1],\n  'beige': [245, 245, 220, 1],\n  'bisque': [255, 228, 196, 1],\n  'black': [0, 0, 0, 1],\n  'blanchedalmond': [255, 235, 205, 1],\n  'blue': [0, 0, 255, 1],\n  'blueviolet': [138, 43, 226, 1],\n  'brown': [165, 42, 42, 1],\n  'burlywood': [222, 184, 135, 1],\n  'cadetblue': [95, 158, 160, 1],\n  'chartreuse': [127, 255, 0, 1],\n  'chocolate': [210, 105, 30, 1],\n  'coral': [255, 127, 80, 1],\n  'cornflowerblue': [100, 149, 237, 1],\n  'cornsilk': [255, 248, 220, 1],\n  'crimson': [220, 20, 60, 1],\n  'cyan': [0, 255, 255, 1],\n  'darkblue': [0, 0, 139, 1],\n  'darkcyan': [0, 139, 139, 1],\n  'darkgoldenrod': [184, 134, 11, 1],\n  'darkgray': [169, 169, 169, 1],\n  'darkgreen': [0, 100, 0, 1],\n  'darkgrey': [169, 169, 169, 1],\n  'darkkhaki': [189, 183, 107, 1],\n  'darkmagenta': [139, 0, 139, 1],\n  'darkolivegreen': [85, 107, 47, 1],\n  'darkorange': [255, 140, 0, 1],\n  'darkorchid': [153, 50, 204, 1],\n  'darkred': [139, 0, 0, 1],\n  'darksalmon': [233, 150, 122, 1],\n  'darkseagreen': [143, 188, 143, 1],\n  'darkslateblue': [72, 61, 139, 1],\n  'darkslategray': [47, 79, 79, 1],\n  'darkslategrey': [47, 79, 79, 1],\n  'darkturquoise': [0, 206, 209, 1],\n  'darkviolet': [148, 0, 211, 1],\n  'deeppink': [255, 20, 147, 1],\n  'deepskyblue': [0, 191, 255, 1],\n  'dimgray': [105, 105, 105, 1],\n  'dimgrey': [105, 105, 105, 1],\n  'dodgerblue': [30, 144, 255, 1],\n  'firebrick': [178, 34, 34, 1],\n  'floralwhite': [255, 250, 240, 1],\n  'forestgreen': [34, 139, 34, 1],\n  'fuchsia': [255, 0, 255, 1],\n  'gainsboro': [220, 220, 220, 1],\n  'ghostwhite': [248, 248, 255, 1],\n  'gold': [255, 215, 0, 1],\n  'goldenrod': [218, 165, 32, 1],\n  'gray': [128, 128, 128, 1],\n  'green': [0, 128, 0, 1],\n  'greenyellow': [173, 255, 47, 1],\n  'grey': [128, 128, 128, 1],\n  'honeydew': [240, 255, 240, 1],\n  'hotpink': [255, 105, 180, 1],\n  'indianred': [205, 92, 92, 1],\n  'indigo': [75, 0, 130, 1],\n  'ivory': [255, 255, 240, 1],\n  'khaki': [240, 230, 140, 1],\n  'lavender': [230, 230, 250, 1],\n  'lavenderblush': [255, 240, 245, 1],\n  'lawngreen': [124, 252, 0, 1],\n  'lemonchiffon': [255, 250, 205, 1],\n  'lightblue': [173, 216, 230, 1],\n  'lightcoral': [240, 128, 128, 1],\n  'lightcyan': [224, 255, 255, 1],\n  'lightgoldenrodyellow': [250, 250, 210, 1],\n  'lightgray': [211, 211, 211, 1],\n  'lightgreen': [144, 238, 144, 1],\n  'lightgrey': [211, 211, 211, 1],\n  'lightpink': [255, 182, 193, 1],\n  'lightsalmon': [255, 160, 122, 1],\n  'lightseagreen': [32, 178, 170, 1],\n  'lightskyblue': [135, 206, 250, 1],\n  'lightslategray': [119, 136, 153, 1],\n  'lightslategrey': [119, 136, 153, 1],\n  'lightsteelblue': [176, 196, 222, 1],\n  'lightyellow': [255, 255, 224, 1],\n  'lime': [0, 255, 0, 1],\n  'limegreen': [50, 205, 50, 1],\n  'linen': [250, 240, 230, 1],\n  'magenta': [255, 0, 255, 1],\n  'maroon': [128, 0, 0, 1],\n  'mediumaquamarine': [102, 205, 170, 1],\n  'mediumblue': [0, 0, 205, 1],\n  'mediumorchid': [186, 85, 211, 1],\n  'mediumpurple': [147, 112, 219, 1],\n  'mediumseagreen': [60, 179, 113, 1],\n  'mediumslateblue': [123, 104, 238, 1],\n  'mediumspringgreen': [0, 250, 154, 1],\n  'mediumturquoise': [72, 209, 204, 1],\n  'mediumvioletred': [199, 21, 133, 1],\n  'midnightblue': [25, 25, 112, 1],\n  'mintcream': [245, 255, 250, 1],\n  'mistyrose': [255, 228, 225, 1],\n  'moccasin': [255, 228, 181, 1],\n  'navajowhite': [255, 222, 173, 1],\n  'navy': [0, 0, 128, 1],\n  'oldlace': [253, 245, 230, 1],\n  'olive': [128, 128, 0, 1],\n  'olivedrab': [107, 142, 35, 1],\n  'orange': [255, 165, 0, 1],\n  'orangered': [255, 69, 0, 1],\n  'orchid': [218, 112, 214, 1],\n  'palegoldenrod': [238, 232, 170, 1],\n  'palegreen': [152, 251, 152, 1],\n  'paleturquoise': [175, 238, 238, 1],\n  'palevioletred': [219, 112, 147, 1],\n  'papayawhip': [255, 239, 213, 1],\n  'peachpuff': [255, 218, 185, 1],\n  'peru': [205, 133, 63, 1],\n  'pink': [255, 192, 203, 1],\n  'plum': [221, 160, 221, 1],\n  'powderblue': [176, 224, 230, 1],\n  'purple': [128, 0, 128, 1],\n  'red': [255, 0, 0, 1],\n  'rosybrown': [188, 143, 143, 1],\n  'royalblue': [65, 105, 225, 1],\n  'saddlebrown': [139, 69, 19, 1],\n  'salmon': [250, 128, 114, 1],\n  'sandybrown': [244, 164, 96, 1],\n  'seagreen': [46, 139, 87, 1],\n  'seashell': [255, 245, 238, 1],\n  'sienna': [160, 82, 45, 1],\n  'silver': [192, 192, 192, 1],\n  'skyblue': [135, 206, 235, 1],\n  'slateblue': [106, 90, 205, 1],\n  'slategray': [112, 128, 144, 1],\n  'slategrey': [112, 128, 144, 1],\n  'snow': [255, 250, 250, 1],\n  'springgreen': [0, 255, 127, 1],\n  'steelblue': [70, 130, 180, 1],\n  'tan': [210, 180, 140, 1],\n  'teal': [0, 128, 128, 1],\n  'thistle': [216, 191, 216, 1],\n  'tomato': [255, 99, 71, 1],\n  'turquoise': [64, 224, 208, 1],\n  'violet': [238, 130, 238, 1],\n  'wheat': [245, 222, 179, 1],\n  'white': [255, 255, 255, 1],\n  'whitesmoke': [245, 245, 245, 1],\n  'yellow': [255, 255, 0, 1],\n  'yellowgreen': [154, 205, 50, 1]\n};\n\nfunction clampCssByte(i) {\n  // Clamp to integer 0 .. 255.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clampCssAngle(i) {\n  // Clamp to integer 0 .. 360.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 360 ? 360 : i;\n}\n\nfunction clampCssFloat(f) {\n  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parseCssInt(str) {\n  // int or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssByte(parseFloat(str) / 100 * 255);\n  }\n\n  return clampCssByte(parseInt(str, 10));\n}\n\nfunction parseCssFloat(str) {\n  // float or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssFloat(parseFloat(str) / 100);\n  }\n\n  return clampCssFloat(parseFloat(str));\n}\n\nfunction cssHueToRgb(m1, m2, h) {\n  if (h < 0) {\n    h += 1;\n  } else if (h > 1) {\n    h -= 1;\n  }\n\n  if (h * 6 < 1) {\n    return m1 + (m2 - m1) * h * 6;\n  }\n\n  if (h * 2 < 1) {\n    return m2;\n  }\n\n  if (h * 3 < 2) {\n    return m1 + (m2 - m1) * (2 / 3 - h) * 6;\n  }\n\n  return m1;\n}\n\nfunction lerpNumber(a, b, p) {\n  return a + (b - a) * p;\n}\n\nfunction setRgba(out, r, g, b, a) {\n  out[0] = r;\n  out[1] = g;\n  out[2] = b;\n  out[3] = a;\n  return out;\n}\n\nfunction copyRgba(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\nvar colorCache = new LRU(20);\nvar lastRemovedArr = null;\n\nfunction putToCache(colorStr, rgbaArr) {\n  // Reuse removed array\n  if (lastRemovedArr) {\n    copyRgba(lastRemovedArr, rgbaArr);\n  }\n\n  lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || rgbaArr.slice());\n}\n/**\n * @param {string} colorStr\n * @param {Array.<number>} out\n * @return {Array.<number>}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction parse(colorStr, rgbaArr) {\n  if (!colorStr) {\n    return;\n  }\n\n  rgbaArr = rgbaArr || [];\n  var cached = colorCache.get(colorStr);\n\n  if (cached) {\n    return copyRgba(rgbaArr, cached);\n  } // colorStr may be not string\n\n\n  colorStr = colorStr + ''; // Remove all whitespace, not compliant, but should just be more accepting.\n\n  var str = colorStr.replace(/ /g, '').toLowerCase(); // Color keywords (and transparent) lookup.\n\n  if (str in kCSSColorTable) {\n    copyRgba(rgbaArr, kCSSColorTable[str]);\n    putToCache(colorStr, rgbaArr);\n    return rgbaArr;\n  } // #abc and #abc123 syntax.\n\n\n  if (str.charAt(0) === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xfff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xf00) >> 4 | (iv & 0xf00) >> 8, iv & 0xf0 | (iv & 0xf0) >> 4, iv & 0xf | (iv & 0xf) << 4, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xffffff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xff0000) >> 16, (iv & 0xff00) >> 8, iv & 0xff, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    }\n\n    return;\n  }\n\n  var op = str.indexOf('('),\n      ep = str.indexOf(')');\n\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op + 1, ep - (op + 1)).split(',');\n    var alpha = 1; // To allow case fallthrough.\n\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        alpha = parseCssFloat(params.pop());\n      // jshint ignore:line\n      // Fall through.\n\n      case 'rgb':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        setRgba(rgbaArr, parseCssInt(params[0]), parseCssInt(params[1]), parseCssInt(params[2]), alpha);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsla':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        params[3] = parseCssFloat(params[3]);\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsl':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      default:\n        return;\n    }\n  }\n\n  setRgba(rgbaArr, 0, 0, 0, 1);\n  return;\n}\n/**\n * @param {Array.<number>} hsla\n * @param {Array.<number>} rgba\n * @return {Array.<number>} rgba\n */\n\n\nfunction hsla2rgba(hsla, rgba) {\n  var h = (parseFloat(hsla[0]) % 360 + 360) % 360 / 360; // 0 .. 1\n  // NOTE(deanm): According to the CSS spec s/l should only be\n  // percentages, but we don't bother and let float or percentage.\n\n  var s = parseCssFloat(hsla[1]);\n  var l = parseCssFloat(hsla[2]);\n  var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n  var m1 = l * 2 - m2;\n  rgba = rgba || [];\n  setRgba(rgba, clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255), clampCssByte(cssHueToRgb(m1, m2, h) * 255), clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255), 1);\n\n  if (hsla.length === 4) {\n    rgba[3] = hsla[3];\n  }\n\n  return rgba;\n}\n/**\n * @param {Array.<number>} rgba\n * @return {Array.<number>} hsla\n */\n\n\nfunction rgba2hsla(rgba) {\n  if (!rgba) {\n    return;\n  } // RGB from 0 to 255\n\n\n  var R = rgba[0] / 255;\n  var G = rgba[1] / 255;\n  var B = rgba[2] / 255;\n  var vMin = Math.min(R, G, B); // Min. value of RGB\n\n  var vMax = Math.max(R, G, B); // Max. value of RGB\n\n  var delta = vMax - vMin; // Delta RGB value\n\n  var L = (vMax + vMin) / 2;\n  var H;\n  var S; // HSL results from 0 to 1\n\n  if (delta === 0) {\n    H = 0;\n    S = 0;\n  } else {\n    if (L < 0.5) {\n      S = delta / (vMax + vMin);\n    } else {\n      S = delta / (2 - vMax - vMin);\n    }\n\n    var deltaR = ((vMax - R) / 6 + delta / 2) / delta;\n    var deltaG = ((vMax - G) / 6 + delta / 2) / delta;\n    var deltaB = ((vMax - B) / 6 + delta / 2) / delta;\n\n    if (R === vMax) {\n      H = deltaB - deltaG;\n    } else if (G === vMax) {\n      H = 1 / 3 + deltaR - deltaB;\n    } else if (B === vMax) {\n      H = 2 / 3 + deltaG - deltaR;\n    }\n\n    if (H < 0) {\n      H += 1;\n    }\n\n    if (H > 1) {\n      H -= 1;\n    }\n  }\n\n  var hsla = [H * 360, S, L];\n\n  if (rgba[3] != null) {\n    hsla.push(rgba[3]);\n  }\n\n  return hsla;\n}\n/**\n * @param {string} color\n * @param {number} level\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction lift(color, level) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    for (var i = 0; i < 3; i++) {\n      if (level < 0) {\n        colorArr[i] = colorArr[i] * (1 - level) | 0;\n      } else {\n        colorArr[i] = (255 - colorArr[i]) * level + colorArr[i] | 0;\n      }\n\n      if (colorArr[i] > 255) {\n        colorArr[i] = 255;\n      } else if (color[i] < 0) {\n        colorArr[i] = 0;\n      }\n    }\n\n    return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n  }\n}\n/**\n * @param {string} color\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction toHex(color) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + +colorArr[2]).toString(16).slice(1);\n  }\n}\n/**\n * Map value to color. Faster than lerp methods because color is represented by rgba array.\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<Array.<number>>} colors List of rgba color array\n * @param {Array.<number>} [out] Mapped gba color array\n * @return {Array.<number>} will be null/undefined if input illegal.\n */\n\n\nfunction fastLerp(normalizedValue, colors, out) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  out = out || [];\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = colors[leftIndex];\n  var rightColor = colors[rightIndex];\n  var dv = value - leftIndex;\n  out[0] = clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv));\n  out[1] = clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv));\n  out[2] = clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv));\n  out[3] = clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv));\n  return out;\n}\n/**\n * @deprecated\n */\n\n\nvar fastMapToColor = fastLerp;\n/**\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<string>} colors Color list.\n * @param {boolean=} fullOutput Default false.\n * @return {(string|Object)} Result color. If fullOutput,\n *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n * @memberOf module:zrender/util/color\n */\n\nfunction lerp(normalizedValue, colors, fullOutput) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = parse(colors[leftIndex]);\n  var rightColor = parse(colors[rightIndex]);\n  var dv = value - leftIndex;\n  var color = stringify([clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv)), clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv)), clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv)), clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv))], 'rgba');\n  return fullOutput ? {\n    color: color,\n    leftIndex: leftIndex,\n    rightIndex: rightIndex,\n    value: value\n  } : color;\n}\n/**\n * @deprecated\n */\n\n\nvar mapToColor = lerp;\n/**\n * @param {string} color\n * @param {number=} h 0 ~ 360, ignore when null.\n * @param {number=} s 0 ~ 1, ignore when null.\n * @param {number=} l 0 ~ 1, ignore when null.\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\nfunction modifyHSL(color, h, s, l) {\n  color = parse(color);\n\n  if (color) {\n    color = rgba2hsla(color);\n    h != null && (color[0] = clampCssAngle(h));\n    s != null && (color[1] = parseCssFloat(s));\n    l != null && (color[2] = parseCssFloat(l));\n    return stringify(hsla2rgba(color), 'rgba');\n  }\n}\n/**\n * @param {string} color\n * @param {number=} alpha 0 ~ 1\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\n\nfunction modifyAlpha(color, alpha) {\n  color = parse(color);\n\n  if (color && alpha != null) {\n    color[3] = clampCssFloat(alpha);\n    return stringify(color, 'rgba');\n  }\n}\n/**\n * @param {Array.<number>} arrColor like [12,33,44,0.4]\n * @param {string} type 'rgba', 'hsva', ...\n * @return {string} Result color. (If input illegal, return undefined).\n */\n\n\nfunction stringify(arrColor, type) {\n  if (!arrColor || !arrColor.length) {\n    return;\n  }\n\n  var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n\n  if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n    colorStr += ',' + arrColor[3];\n  }\n\n  return type + '(' + colorStr + ')';\n}\n\nexports.parse = parse;\nexports.lift = lift;\nexports.toHex = toHex;\nexports.fastLerp = fastLerp;\nexports.fastMapToColor = fastMapToColor;\nexports.lerp = lerp;\nexports.mapToColor = mapToColor;\nexports.modifyHSL = modifyHSL;\nexports.modifyAlpha = modifyAlpha;\nexports.stringify = stringify;","/**\n * @param {Array.<Object>} colorStops\n */\nvar Gradient = function (colorStops) {\n  this.colorStops = colorStops || [];\n};\n\nGradient.prototype = {\n  constructor: Gradient,\n  addColorStop: function (offset, color) {\n    this.colorStops.push({\n      offset: offset,\n      color: color\n    });\n  }\n};\nvar _default = Gradient;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar TooltipContent = require(\"./TooltipContent\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar findPointFromSeries = require(\"../axisPointer/findPointFromSeries\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar Model = require(\"../../model/Model\");\n\nvar globalListener = require(\"../axisPointer/globalListener\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar axisPointerViewHelper = require(\"../axisPointer/viewHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar parsePercent = numberUtil.parsePercent;\nvar proxyRect = new graphic.Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar _default = echarts.extendComponentView({\n  type: 'tooltip',\n  init: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    var tooltipContent = new TooltipContent(api.getDom(), api);\n    this._tooltipContent = tooltipContent;\n  },\n  render: function (tooltipModel, ecModel, api) {\n    if (env.node || env.wxa) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    /**\n     * @private\n     * @type {module:echarts/component/tooltip/TooltipModel}\n     */\n\n    this._tooltipModel = tooltipModel;\n    /**\n     * @private\n     * @type {module:echarts/model/Global}\n     */\n\n    this._ecModel = ecModel;\n    /**\n     * @private\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this._api = api;\n    /**\n     * Should be cleaned when render.\n     * @private\n     * @type {Array.<Array.<Object>>}\n     */\n\n    this._lastDataByCoordSys = null;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update();\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow();\n  },\n  _initGlobalListener: function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  },\n  _keepShow: function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api; // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && tooltipModel.get('triggerOn') !== 'none') {\n      var self = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        self.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self._lastX,\n          y: self._lastY\n        });\n      });\n    }\n  },\n\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n  manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n\n    if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.position = [payload.x, payload.y];\n      el.update();\n      el.tooltip = payload.tooltip; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        event: {},\n        dataByCoordSys: payload.dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          position: payload.position,\n          target: pointInfo.el,\n          event: {}\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target,\n        event: {}\n      }, dispatchAction);\n    }\n  },\n  manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent && this._tooltipModel) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  },\n  // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n  _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex;\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model, tooltipModel]);\n\n    if (tooltipModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  },\n  _tryShow: function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } // Always show item tooltip if mouse is on the element with dataIndex\n    else if (el && el.dataIndex != null) {\n        this._lastDataByCoordSys = null;\n\n        this._showSeriesItemTooltip(e, el, dispatchAction);\n      } // Tooltip provided directly. Like legend.\n      else if (el && el.tooltip) {\n          this._lastDataByCoordSys = null;\n\n          this._showComponentItemTooltip(e, el, dispatchAction);\n        } else {\n          this._lastDataByCoordSys = null;\n\n          this._hide(dispatchAction);\n        }\n  },\n  _showOrMove: function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easyer to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = zrUtil.bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  },\n  _showAxisTooltip: function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleDefaultHTML = [];\n    var singleParamsList = [];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption, globalTooltipModel]);\n    each(dataByCoordSys, function (itemCoordSys) {\n      // var coordParamList = [];\n      // var coordDefaultHTML = [];\n      // var coordTooltipModel = buildTooltipModel([\n      //     e.tooltipOption,\n      //     itemCoordSys.tooltipOption,\n      //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n      //     globalTooltipModel\n      // ]);\n      // var displayMode = coordTooltipModel.get('displayMode');\n      // var paramsList = displayMode === 'single' ? singleParamsList : [];\n      each(itemCoordSys.dataByAxis, function (item) {\n        var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n        var axisValue = item.value;\n        var seriesDefaultHTML = [];\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var valueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, item.seriesDataIndices, item.valueLabelOpt);\n        zrUtil.each(item.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var dataParams = series && series.getDataParams(dataIndex);\n          dataParams.axisDim = item.axisDim;\n          dataParams.axisIndex = item.axisIndex;\n          dataParams.axisType = item.axisType;\n          dataParams.axisId = item.axisId;\n          dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n          dataParams.axisValueLabel = valueLabel;\n\n          if (dataParams) {\n            singleParamsList.push(dataParams);\n            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n          }\n        }); // Default tooltip content\n        // FIXME\n        // (1) shold be the first data which has name?\n        // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n\n        var firstLine = valueLabel;\n        singleDefaultHTML.push((firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '') + seriesDefaultHTML.join('<br />'));\n      });\n    }, this); // In most case, the second axis is shown upper than the first one.\n\n    singleDefaultHTML.reverse();\n    singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n    var positionExpr = e.position;\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, singleParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(), point[0], point[1], positionExpr);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  },\n  _showSeriesItemTooltip: function (e, el, dispatchAction) {\n    var ecModel = this._ecModel; // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = el.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = el.dataModel || seriesModel;\n    var dataIndex = el.dataIndex;\n    var dataType = el.dataType;\n    var data = dataModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model, this._tooltipModel]);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, defaultHtml, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  },\n  _showComponentItemTooltip: function (e, el, dispatchAction) {\n    var tooltipOpt = el.tooltip;\n\n    if (typeof tooltipOpt === 'string') {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on cooridinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      this._showTooltipContent(subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {}, asyncTicket, e.offsetX, e.offsetY, e.position, el);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  },\n  _showTooltipContent: function (tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    if (formatter && typeof formatter === 'string') {\n      html = formatUtil.formatTpl(formatter, params, true);\n    } else if (typeof formatter === 'function') {\n      var callback = bind(function (cbTicket, html) {\n        if (cbTicket === this._ticket) {\n          tooltipContent.setContent(html);\n\n          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n        }\n      }, this);\n      this._ticket = asyncTicket;\n      html = formatter(params, asyncTicket, callback);\n    }\n\n    tooltipContent.setContent(html);\n    tooltipContent.show(tooltipModel);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  },\n\n  /**\n   * @param  {string|Function|Array.<number>|Object} positionExpr\n   * @param  {number} x Mouse x\n   * @param  {number} y Mouse y\n   * @param  {boolean} confine Whether confine tooltip content in view rect.\n   * @param  {Object|<Array.<Object>} params\n   * @param  {module:zrender/Element} el target element\n   * @param  {module:echarts/ExtensionAPI} api\n   * @return {Array.<number>}\n   */\n  _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (typeof positionExpr === 'function') {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (zrUtil.isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (zrUtil.isObject(positionExpr)) {\n      positionExpr.width = contentSize[0];\n      positionExpr.height = contentSize[1];\n      var layoutRect = layoutUtil.getLayoutRect(positionExpr, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (typeof positionExpr === 'string' && el) {\n        var pos = calcTooltipPosition(positionExpr, rect, contentSize);\n        x = pos[0];\n        y = pos[1];\n      } else {\n        var pos = refixTooltipPosition(x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n        x = pos[0];\n        y = pos[1];\n      }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (tooltipModel.get('confine')) {\n      var pos = confineTooltipPosition(x, y, content.el, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  },\n  // FIXME\n  // Should we remove this but leave this to user?\n  _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged &= lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged &= lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    return !!contentNotChanged;\n  },\n  _hide: function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  },\n  dispose: function (ecModel, api) {\n    if (env.node || env.wxa) {\n      return;\n    }\n\n    this._tooltipContent.hide();\n\n    globalListener.unregister('itemTooltip', api);\n  }\n});\n/**\n * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade) {\n  var resultModel = modelCascade.pop();\n\n  while (modelCascade.length) {\n    var tooltipOpt = modelCascade.pop();\n\n    if (tooltipOpt) {\n      if (Model.isInstance(tooltipOpt)) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (typeof tooltipOpt === 'string') {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n\n  if (gapH != null) {\n    if (x + width + gapH > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction getOuterSize(el) {\n  var width = el.clientWidth;\n  var height = el.clientHeight; // Consider browser compatibility.\n  // IE8 does not support getComputedStyle.\n\n  if (document.defaultView && document.defaultView.getComputedStyle) {\n    var stl = document.defaultView.getComputedStyle(el);\n\n    if (stl) {\n      width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10) + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n      height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10) + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n    }\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n\nfunction calcTooltipPosition(position, rect, contentSize) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var gap = 5;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - gap;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + gap;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _model = require(\"../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassExtend = _clazz.enableClassExtend;\nvar enableClassCheck = _clazz.enableClassCheck;\n\nvar lineStyleMixin = require(\"./mixin/lineStyle\");\n\nvar areaStyleMixin = require(\"./mixin/areaStyle\");\n\nvar textStyleMixin = require(\"./mixin/textStyle\");\n\nvar itemStyleMixin = require(\"./mixin/itemStyle\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/model/Model\n */\nvar mixin = zrUtil.mixin;\nvar inner = makeInner();\n/**\n * @alias module:echarts/model/Model\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} [parentModel]\n * @param {module:echarts/model/Global} [ecModel]\n */\n\nfunction Model(option, parentModel, ecModel) {\n  /**\n   * @type {module:echarts/model/Model}\n   * @readOnly\n   */\n  this.parentModel = parentModel;\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @type {Object}\n   * @protected\n   */\n\n  this.option = option; // Simple optimization\n  // if (this.init) {\n  //     if (arguments.length <= 4) {\n  //         this.init(option, parentModel, ecModel, extraOpt);\n  //     }\n  //     else {\n  //         this.init.apply(this, arguments);\n  //     }\n  // }\n}\n\nModel.prototype = {\n  constructor: Model,\n\n  /**\n   * Model 的初始化函数\n   * @param {Object} option\n   */\n  init: null,\n\n  /**\n   * 从新的 Option merge\n   */\n  mergeOption: function (option) {\n    zrUtil.merge(this.option, option, true);\n  },\n\n  /**\n   * @param {string|Array.<string>} path\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  get: function (path, ignoreParent) {\n    if (path == null) {\n      return this.option;\n    }\n\n    return doGet(this.option, this.parsePath(path), !ignoreParent && getParent(this, path));\n  },\n\n  /**\n   * @param {string} key\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  getShallow: function (key, ignoreParent) {\n    var option = this.option;\n    var val = option == null ? option : option[key];\n    var parentModel = !ignoreParent && getParent(this, key);\n\n    if (val == null && parentModel) {\n      val = parentModel.getShallow(key);\n    }\n\n    return val;\n  },\n\n  /**\n   * @param {string|Array.<string>} [path]\n   * @param {module:echarts/model/Model} [parentModel]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path, parentModel) {\n    var obj = path == null ? this.option : doGet(this.option, path = this.parsePath(path));\n    var thisParentModel;\n    parentModel = parentModel || (thisParentModel = getParent(this, path)) && thisParentModel.getModel(path);\n    return new Model(obj, parentModel, this.ecModel);\n  },\n\n  /**\n   * If model has option\n   */\n  isEmpty: function () {\n    return this.option == null;\n  },\n  restoreData: function () {},\n  // Pending\n  clone: function () {\n    var Ctor = this.constructor;\n    return new Ctor(zrUtil.clone(this.option));\n  },\n  setReadOnly: function (properties) {// clazzUtil.setReadOnly(this, properties);\n  },\n  // If path is null/undefined, return null/undefined.\n  parsePath: function (path) {\n    if (typeof path === 'string') {\n      path = path.split('.');\n    }\n\n    return path;\n  },\n\n  /**\n   * @param {Function} getParentMethod\n   *        param {Array.<string>|string} path\n   *        return {module:echarts/model/Model}\n   */\n  customizeGetParent: function (getParentMethod) {\n    inner(this).getParent = getParentMethod;\n  },\n  isAnimationEnabled: function () {\n    if (!env.node) {\n      if (this.option.animation != null) {\n        return !!this.option.animation;\n      } else if (this.parentModel) {\n        return this.parentModel.isAnimationEnabled();\n      }\n    }\n  }\n};\n\nfunction doGet(obj, pathArr, parentModel) {\n  for (var i = 0; i < pathArr.length; i++) {\n    // Ignore empty\n    if (!pathArr[i]) {\n      continue;\n    } // obj could be number/string/... (like 0)\n\n\n    obj = obj && typeof obj === 'object' ? obj[pathArr[i]] : null;\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  if (obj == null && parentModel) {\n    obj = parentModel.get(pathArr);\n  }\n\n  return obj;\n} // `path` can be null/undefined\n\n\nfunction getParent(model, path) {\n  var getParentMethod = inner(model).getParent;\n  return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n} // Enable Model.extend.\n\n\nenableClassExtend(Model);\nenableClassCheck(Model);\nmixin(Model, lineStyleMixin);\nmixin(Model, areaStyleMixin);\nmixin(Model, textStyleMixin);\nmixin(Model, itemStyleMixin);\nvar _default = Model;\nmodule.exports = _default;","var Single = require(\"./Single\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Single coordinate system creator.\n */\n\n/**\n * Create single coordinate system and inject it into seriesModel.\n *\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Array.<module:echarts/coord/single/Single>}\n */\nfunction create(ecModel, api) {\n  var singles = [];\n  ecModel.eachComponent('singleAxis', function (axisModel, idx) {\n    var single = new Single(axisModel, ecModel, api);\n    single.name = 'single_' + idx;\n    single.resize(axisModel, api);\n    axisModel.coordinateSystem = single;\n    singles.push(single);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.get('coordinateSystem') === 'singleAxis') {\n      var singleAxisModel = ecModel.queryComponents({\n        mainType: 'singleAxis',\n        index: seriesModel.get('singleAxisIndex'),\n        id: seriesModel.get('singleAxisId')\n      })[0];\n      seriesModel.coordinateSystem = singleAxisModel && singleAxisModel.coordinateSystem;\n    }\n  });\n  return singles;\n}\n\nCoordinateSystem.register('single', {\n  create: create,\n  dimensions: Single.prototype.dimensions\n});","var echarts = require(\"../../echarts\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar EffectSymbol = require(\"../helper/EffectSymbol\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar pointsLayout = require(\"../../layout/points\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendChartView({\n  type: 'effectScatter',\n  init: function () {\n    this._symbolDraw = new SymbolDraw(EffectSymbol);\n  },\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var effectSymbolDraw = this._symbolDraw;\n    effectSymbolDraw.updateData(data);\n    this.group.add(effectSymbolDraw.group);\n  },\n  updateTransform: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    this.group.dirty();\n    var res = pointsLayout().reset(seriesModel);\n\n    if (res.progress) {\n      res.progress({\n        start: 0,\n        end: data.count()\n      }, data);\n    }\n\n    this._symbolDraw.updateLayout(data);\n  },\n  _updateGroupTransform: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.getRoamTransform) {\n      this.group.transform = matrix.clone(coordSys.getRoamTransform());\n      this.group.decomposeTransform();\n    }\n  },\n  remove: function (ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove(api);\n  },\n  dispose: function () {}\n});\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar helper = require(\"../helper/treeHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Treemap action\n */\nvar noop = function () {};\n\nvar actionTypes = ['treemapZoomToNode', 'treemapRender', 'treemapMove'];\n\nfor (var i = 0; i < actionTypes.length; i++) {\n  echarts.registerAction({\n    type: actionTypes[i],\n    update: 'updateView'\n  }, noop);\n}\n\necharts.registerAction({\n  type: 'treemapRootToNode',\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'treemap',\n    query: payload\n  }, handleRootToNode);\n\n  function handleRootToNode(model, index) {\n    var types = ['treemapZoomToNode', 'treemapRootToNode'];\n    var targetInfo = helper.retrieveTargetInfo(payload, types, model);\n\n    if (targetInfo) {\n      var originViewRoot = model.getViewRoot();\n\n      if (originViewRoot) {\n        payload.direction = helper.aboveViewRoot(originViewRoot, targetInfo.node) ? 'rollUp' : 'drillDown';\n      }\n\n      model.resetViewRoot(targetInfo.node);\n    }\n  }\n});","var easingFuncs = require(\"./easing\");\n\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\nfunction Clip(options) {\n  this._target = options.target; // 生命周期\n\n  this._life = options.life || 1000; // 延时\n\n  this._delay = options.delay || 0; // 开始时间\n  // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n\n  this._initialized = false; // 是否循环\n\n  this.loop = options.loop == null ? false : options.loop;\n  this.gap = options.gap || 0;\n  this.easing = options.easing || 'Linear';\n  this.onframe = options.onframe;\n  this.ondestroy = options.ondestroy;\n  this.onrestart = options.onrestart;\n  this._pausedTime = 0;\n  this._paused = false;\n}\n\nClip.prototype = {\n  constructor: Clip,\n  step: function (globalTime, deltaTime) {\n    // Set startTime on first step, or _startTime may has milleseconds different between clips\n    // PENDING\n    if (!this._initialized) {\n      this._startTime = globalTime + this._delay;\n      this._initialized = true;\n    }\n\n    if (this._paused) {\n      this._pausedTime += deltaTime;\n      return;\n    }\n\n    var percent = (globalTime - this._startTime - this._pausedTime) / this._life; // 还没开始\n\n    if (percent < 0) {\n      return;\n    }\n\n    percent = Math.min(percent, 1);\n    var easing = this.easing;\n    var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n    var schedule = typeof easingFunc === 'function' ? easingFunc(percent) : percent;\n    this.fire('frame', schedule); // 结束\n\n    if (percent == 1) {\n      if (this.loop) {\n        this.restart(globalTime); // 重新开始周期\n        // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n\n        return 'restart';\n      } // 动画完成将这个控制器标识为待删除\n      // 在Animation.update中进行批量删除\n\n\n      this._needsRemove = true;\n      return 'destroy';\n    }\n\n    return null;\n  },\n  restart: function (globalTime) {\n    var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n    this._startTime = globalTime - remainder + this.gap;\n    this._pausedTime = 0;\n    this._needsRemove = false;\n  },\n  fire: function (eventType, arg) {\n    eventType = 'on' + eventType;\n\n    if (this[eventType]) {\n      this[eventType](this._target, arg);\n    }\n  },\n  pause: function () {\n    this._paused = true;\n  },\n  resume: function () {\n    this._paused = false;\n  }\n};\nvar _default = Clip;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar helper = require(\"../helper/treeHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Sunburst action\n */\nvar ROOT_TO_NODE_ACTION = 'sunburstRootToNode';\necharts.registerAction({\n  type: ROOT_TO_NODE_ACTION,\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'sunburst',\n    query: payload\n  }, handleRootToNode);\n\n  function handleRootToNode(model, index) {\n    var targetInfo = helper.retrieveTargetInfo(payload, [ROOT_TO_NODE_ACTION], model);\n\n    if (targetInfo) {\n      var originViewRoot = model.getViewRoot();\n\n      if (originViewRoot) {\n        payload.direction = helper.aboveViewRoot(originViewRoot, targetInfo.node) ? 'rollUp' : 'drillDown';\n      }\n\n      model.resetViewRoot(targetInfo.node);\n    }\n  }\n});\nvar HIGHLIGHT_ACTION = 'sunburstHighlight';\necharts.registerAction({\n  type: HIGHLIGHT_ACTION,\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'sunburst',\n    query: payload\n  }, handleHighlight);\n\n  function handleHighlight(model, index) {\n    var targetInfo = helper.retrieveTargetInfo(payload, [HIGHLIGHT_ACTION], model);\n\n    if (targetInfo) {\n      payload.highlight = targetInfo.node;\n    }\n  }\n});\nvar UNHIGHLIGHT_ACTION = 'sunburstUnhighlight';\necharts.registerAction({\n  type: UNHIGHLIGHT_ACTION,\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'sunburst',\n    query: payload\n  }, handleUnhighlight);\n\n  function handleUnhighlight(model, index) {\n    payload.unhighlight = true;\n  }\n});","var graphic = require(\"../../util/graphic\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/Line\n */\n\n/**\n * @constructor\n * @extends {module:zrender/graphic/Group}\n * @alias {module:echarts/chart/helper/Polyline}\n */\nfunction Polyline(lineData, idx, seriesScope) {\n  graphic.Group.call(this);\n\n  this._createPolyline(lineData, idx, seriesScope);\n}\n\nvar polylineProto = Polyline.prototype;\n\npolylineProto._createPolyline = function (lineData, idx, seriesScope) {\n  // var seriesModel = lineData.hostModel;\n  var points = lineData.getItemLayout(idx);\n  var line = new graphic.Polyline({\n    shape: {\n      points: points\n    }\n  });\n  this.add(line);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\npolylineProto.updateData = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childAt(0);\n  var target = {\n    shape: {\n      points: lineData.getItemLayout(idx)\n    }\n  };\n  graphic.updateProps(line, target, seriesModel, idx);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\npolylineProto._updateCommonStl = function (lineData, idx, seriesScope) {\n  var line = this.childAt(0);\n  var itemModel = lineData.getItemModel(idx);\n  var visualColor = lineData.getItemVisual(idx, 'color');\n  var lineStyle = seriesScope && seriesScope.lineStyle;\n  var hoverLineStyle = seriesScope && seriesScope.hoverLineStyle;\n\n  if (!seriesScope || lineData.hasItemOption) {\n    lineStyle = itemModel.getModel('lineStyle').getLineStyle();\n    hoverLineStyle = itemModel.getModel('emphasis.lineStyle').getLineStyle();\n  }\n\n  line.useStyle(zrUtil.defaults({\n    strokeNoScale: true,\n    fill: 'none',\n    stroke: visualColor\n  }, lineStyle));\n  line.hoverStyle = hoverLineStyle;\n  graphic.setHoverStyle(this);\n};\n\npolylineProto.updateLayout = function (lineData, idx) {\n  var polyline = this.childAt(0);\n  polyline.setShape('points', lineData.getItemLayout(idx));\n};\n\nzrUtil.inherits(Polyline, graphic.Group);\nvar _default = Polyline;\nmodule.exports = _default;","var Path = require(\"../Path\");\n\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\nvar _default = Path.extend({\n  type: 'ring',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    r0: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var PI2 = Math.PI * 2;\n    ctx.moveTo(x + shape.r, y);\n    ctx.arc(x, y, shape.r, 0, PI2, false);\n    ctx.moveTo(x + shape.r0, y);\n    ctx.arc(x, y, shape.r0, 0, PI2, true);\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\n  var selectedMap = {};\n  var isToggleSelect = methodName === 'toggleSelected';\n  var isSelected; // Update all legend components\n\n  ecModel.eachComponent('legend', function (legendModel) {\n    if (isToggleSelect && isSelected != null) {\n      // Force other legend has same selected status\n      // Or the first is toggled to true and other are toggled to false\n      // In the case one legend has some item unSelected in option. And if other legend\n      // doesn't has the item, they will assume it is selected.\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n    } else {\n      legendModel[methodName](payload.name);\n      isSelected = legendModel.isSelected(payload.name);\n    }\n\n    var legendData = legendModel.getData();\n    zrUtil.each(legendData, function (model) {\n      var name = model.get('name'); // Wrap element\n\n      if (name === '\\n' || name === '') {\n        return;\n      }\n\n      var isItemSelected = legendModel.isSelected(name);\n\n      if (selectedMap.hasOwnProperty(name)) {\n        // Unselected if any legend is unselected\n        selectedMap[name] = selectedMap[name] && isItemSelected;\n      } else {\n        selectedMap[name] = isItemSelected;\n      }\n    });\n  }); // Return the event explicitly\n\n  return {\n    name: payload.name,\n    selected: selectedMap\n  };\n}\n/**\n * @event legendToggleSelect\n * @type {Object}\n * @property {string} type 'legendToggleSelect'\n * @property {string} [from]\n * @property {string} name Series name or data item name\n */\n\n\necharts.registerAction('legendToggleSelect', 'legendselectchanged', zrUtil.curry(legendSelectActionHandler, 'toggleSelected'));\n/**\n * @event legendSelect\n * @type {Object}\n * @property {string} type 'legendSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendSelect', 'legendselected', zrUtil.curry(legendSelectActionHandler, 'select'));\n/**\n * @event legendUnSelect\n * @type {Object}\n * @property {string} type 'legendUnSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendUnSelect', 'legendunselected', zrUtil.curry(legendSelectActionHandler, 'unSelect'));","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(coordSys) {\n  var rect = coordSys.getRect();\n  var rangeInfo = coordSys.getRangeInfo();\n  return {\n    coordSys: {\n      type: 'calendar',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height,\n      cellWidth: coordSys.getCellWidth(),\n      cellHeight: coordSys.getCellHeight(),\n      rangeInfo: {\n        start: rangeInfo.start,\n        end: rangeInfo.end,\n        weeks: rangeInfo.weeks,\n        dayCount: rangeInfo.allDay\n      }\n    },\n    api: {\n      coord: function (data, clamp) {\n        return coordSys.dataToPoint(data, clamp);\n      }\n    }\n  };\n}\n\nmodule.exports = _default;","var SingleAxis = require(\"./SingleAxis\");\n\nvar axisHelper = require(\"../axisHelper\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Single coordinates system.\n */\n\n/**\n * Create a single coordinates system.\n *\n * @param {module:echarts/coord/single/AxisModel} axisModel\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n */\nfunction Single(axisModel, ecModel, api) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.dimension = 'single';\n  /**\n   * Add it just for draw tooltip.\n   *\n   * @type {Array.<string>}\n   * @readOnly\n   */\n\n  this.dimensions = ['single'];\n  /**\n   * @private\n   * @type {module:echarts/coord/single/SingleAxis}.\n   */\n\n  this._axis = null;\n  /**\n   * @private\n   * @type {module:zrender/core/BoundingRect}\n   */\n\n  this._rect;\n\n  this._init(axisModel, ecModel, api);\n  /**\n   * @type {module:echarts/coord/single/AxisModel}\n   */\n\n\n  this.model = axisModel;\n}\n\nSingle.prototype = {\n  type: 'singleAxis',\n  axisPointerEnabled: true,\n  constructor: Single,\n\n  /**\n   * Initialize single coordinate system.\n   *\n   * @param  {module:echarts/coord/single/AxisModel} axisModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @private\n   */\n  _init: function (axisModel, ecModel, api) {\n    var dim = this.dimension;\n    var axis = new SingleAxis(dim, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisModel.get('position'));\n    var isCategory = axis.type === 'category';\n    axis.onBand = isCategory && axisModel.get('boundaryGap');\n    axis.inverse = axisModel.get('inverse');\n    axis.orient = axisModel.get('orient');\n    axisModel.axis = axis;\n    axis.model = axisModel;\n    axis.coordinateSystem = this;\n    this._axis = axis;\n  },\n\n  /**\n   * Update axis scale after data processed\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  update: function (ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.coordinateSystem === this) {\n        var data = seriesModel.getData();\n        each(data.mapDimension(this.dimension, true), function (dim) {\n          this._axis.scale.unionExtentFromData(data, dim);\n        }, this);\n        axisHelper.niceScaleExtent(this._axis.scale, this._axis.model);\n      }\n    }, this);\n  },\n\n  /**\n   * Resize the single coordinate system.\n   *\n   * @param  {module:echarts/coord/single/AxisModel} axisModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  resize: function (axisModel, api) {\n    this._rect = getLayoutRect({\n      left: axisModel.get('left'),\n      top: axisModel.get('top'),\n      right: axisModel.get('right'),\n      bottom: axisModel.get('bottom'),\n      width: axisModel.get('width'),\n      height: axisModel.get('height')\n    }, {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n\n    this._adjustAxis();\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getRect: function () {\n    return this._rect;\n  },\n\n  /**\n   * @private\n   */\n  _adjustAxis: function () {\n    var rect = this._rect;\n    var axis = this._axis;\n    var isHorizontal = axis.isHorizontal();\n    var extent = isHorizontal ? [0, rect.width] : [0, rect.height];\n    var idx = axis.reverse ? 1 : 0;\n    axis.setExtent(extent[idx], extent[1 - idx]);\n\n    this._updateAxisTransform(axis, isHorizontal ? rect.x : rect.y);\n  },\n\n  /**\n   * @param  {module:echarts/coord/single/SingleAxis} axis\n   * @param  {number} coordBase\n   */\n  _updateAxisTransform: function (axis, coordBase) {\n    var axisExtent = axis.getExtent();\n    var extentSum = axisExtent[0] + axisExtent[1];\n    var isHorizontal = axis.isHorizontal();\n    axis.toGlobalCoord = isHorizontal ? function (coord) {\n      return coord + coordBase;\n    } : function (coord) {\n      return extentSum - coord + coordBase;\n    };\n    axis.toLocalCoord = isHorizontal ? function (coord) {\n      return coord - coordBase;\n    } : function (coord) {\n      return extentSum - coord + coordBase;\n    };\n  },\n\n  /**\n   * Get axis.\n   *\n   * @return {module:echarts/coord/single/SingleAxis}\n   */\n  getAxis: function () {\n    return this._axis;\n  },\n\n  /**\n   * Get axis, add it just for draw tooltip.\n   *\n   * @return {[type]} [description]\n   */\n  getBaseAxis: function () {\n    return this._axis;\n  },\n\n  /**\n   * @return {Array.<module:echarts/coord/Axis>}\n   */\n  getAxes: function () {\n    return [this._axis];\n  },\n\n  /**\n   * @return {Object} {baseAxes: [], otherAxes: []}\n   */\n  getTooltipAxes: function () {\n    return {\n      baseAxes: [this.getAxis()]\n    };\n  },\n\n  /**\n   * If contain point.\n   *\n   * @param  {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var rect = this.getRect();\n    var axis = this.getAxis();\n    var orient = axis.orient;\n\n    if (orient === 'horizontal') {\n      return axis.contain(axis.toLocalCoord(point[0])) && point[1] >= rect.y && point[1] <= rect.y + rect.height;\n    } else {\n      return axis.contain(axis.toLocalCoord(point[1])) && point[0] >= rect.y && point[0] <= rect.y + rect.height;\n    }\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @return {Array.<number>}\n   */\n  pointToData: function (point) {\n    var axis = this.getAxis();\n    return [axis.coordToData(axis.toLocalCoord(point[axis.orient === 'horizontal' ? 0 : 1]))];\n  },\n\n  /**\n   * Convert the series data to concrete point.\n   *\n   * @param  {number|Array.<number>} val\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (val) {\n    var axis = this.getAxis();\n    var rect = this.getRect();\n    var pt = [];\n    var idx = axis.orient === 'horizontal' ? 0 : 1;\n\n    if (val instanceof Array) {\n      val = val[0];\n    }\n\n    pt[idx] = axis.toGlobalCoord(axis.dataToCoord(+val));\n    pt[1 - idx] = idx === 0 ? rect.y + rect.height / 2 : rect.x + rect.width / 2;\n    return pt;\n  }\n};\nvar _default = Single;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar HeatmapLayer = require(\"./HeatmapLayer\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction getIsInPiecewiseRange(dataExtent, pieceList, selected) {\n  var dataSpan = dataExtent[1] - dataExtent[0];\n  pieceList = zrUtil.map(pieceList, function (piece) {\n    return {\n      interval: [(piece.interval[0] - dataExtent[0]) / dataSpan, (piece.interval[1] - dataExtent[0]) / dataSpan]\n    };\n  });\n  var len = pieceList.length;\n  var lastIndex = 0;\n  return function (val) {\n    // Try to find in the location of the last found\n    for (var i = lastIndex; i < len; i++) {\n      var interval = pieceList[i].interval;\n\n      if (interval[0] <= val && val <= interval[1]) {\n        lastIndex = i;\n        break;\n      }\n    }\n\n    if (i === len) {\n      // Not found, back interation\n      for (var i = lastIndex - 1; i >= 0; i--) {\n        var interval = pieceList[i].interval;\n\n        if (interval[0] <= val && val <= interval[1]) {\n          lastIndex = i;\n          break;\n        }\n      }\n    }\n\n    return i >= 0 && i < len && selected[i];\n  };\n}\n\nfunction getIsInContinuousRange(dataExtent, range) {\n  var dataSpan = dataExtent[1] - dataExtent[0];\n  range = [(range[0] - dataExtent[0]) / dataSpan, (range[1] - dataExtent[0]) / dataSpan];\n  return function (val) {\n    return val >= range[0] && val <= range[1];\n  };\n}\n\nfunction isGeoCoordSys(coordSys) {\n  var dimensions = coordSys.dimensions; // Not use coorSys.type === 'geo' because coordSys maybe extended\n\n  return dimensions[0] === 'lng' && dimensions[1] === 'lat';\n}\n\nvar _default = echarts.extendChartView({\n  type: 'heatmap',\n  render: function (seriesModel, ecModel, api) {\n    var visualMapOfThisSeries;\n    ecModel.eachComponent('visualMap', function (visualMap) {\n      visualMap.eachTargetSeries(function (targetSeries) {\n        if (targetSeries === seriesModel) {\n          visualMapOfThisSeries = visualMap;\n        }\n      });\n    });\n    this.group.removeAll();\n    this._incrementalDisplayable = null;\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys.type === 'cartesian2d' || coordSys.type === 'calendar') {\n      this._renderOnCartesianAndCalendar(seriesModel, api, 0, seriesModel.getData().count());\n    } else if (isGeoCoordSys(coordSys)) {\n      this._renderOnGeo(coordSys, seriesModel, visualMapOfThisSeries, api);\n    }\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    this.group.removeAll();\n  },\n  incrementalRender: function (params, seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys) {\n      this._renderOnCartesianAndCalendar(seriesModel, api, params.start, params.end, true);\n    }\n  },\n  _renderOnCartesianAndCalendar: function (seriesModel, api, start, end, incremental) {\n    var coordSys = seriesModel.coordinateSystem;\n    var width;\n    var height;\n\n    if (coordSys.type === 'cartesian2d') {\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      width = xAxis.getBandWidth();\n      height = yAxis.getBandWidth();\n    }\n\n    var group = this.group;\n    var data = seriesModel.getData();\n    var itemStyleQuery = 'itemStyle';\n    var hoverItemStyleQuery = 'emphasis.itemStyle';\n    var labelQuery = 'label';\n    var hoverLabelQuery = 'emphasis.label';\n    var style = seriesModel.getModel(itemStyleQuery).getItemStyle(['color']);\n    var hoverStl = seriesModel.getModel(hoverItemStyleQuery).getItemStyle();\n    var labelModel = seriesModel.getModel(labelQuery);\n    var hoverLabelModel = seriesModel.getModel(hoverLabelQuery);\n    var coordSysType = coordSys.type;\n    var dataDims = coordSysType === 'cartesian2d' ? [data.mapDimension('x'), data.mapDimension('y'), data.mapDimension('value')] : [data.mapDimension('time'), data.mapDimension('value')];\n\n    for (var idx = start; idx < end; idx++) {\n      var rect;\n\n      if (coordSysType === 'cartesian2d') {\n        // Ignore empty data\n        if (isNaN(data.get(dataDims[2], idx))) {\n          continue;\n        }\n\n        var point = coordSys.dataToPoint([data.get(dataDims[0], idx), data.get(dataDims[1], idx)]);\n        rect = new graphic.Rect({\n          shape: {\n            x: point[0] - width / 2,\n            y: point[1] - height / 2,\n            width: width,\n            height: height\n          },\n          style: {\n            fill: data.getItemVisual(idx, 'color'),\n            opacity: data.getItemVisual(idx, 'opacity')\n          }\n        });\n      } else {\n        // Ignore empty data\n        if (isNaN(data.get(dataDims[1], idx))) {\n          continue;\n        }\n\n        rect = new graphic.Rect({\n          z2: 1,\n          shape: coordSys.dataToRect([data.get(dataDims[0], idx)]).contentShape,\n          style: {\n            fill: data.getItemVisual(idx, 'color'),\n            opacity: data.getItemVisual(idx, 'opacity')\n          }\n        });\n      }\n\n      var itemModel = data.getItemModel(idx); // Optimization for large datset\n\n      if (data.hasItemOption) {\n        style = itemModel.getModel(itemStyleQuery).getItemStyle(['color']);\n        hoverStl = itemModel.getModel(hoverItemStyleQuery).getItemStyle();\n        labelModel = itemModel.getModel(labelQuery);\n        hoverLabelModel = itemModel.getModel(hoverLabelQuery);\n      }\n\n      var rawValue = seriesModel.getRawValue(idx);\n      var defaultText = '-';\n\n      if (rawValue && rawValue[2] != null) {\n        defaultText = rawValue[2];\n      }\n\n      graphic.setLabelStyle(style, hoverStl, labelModel, hoverLabelModel, {\n        labelFetcher: seriesModel,\n        labelDataIndex: idx,\n        defaultText: defaultText,\n        isRectText: true\n      });\n      rect.setStyle(style);\n      graphic.setHoverStyle(rect, data.hasItemOption ? hoverStl : zrUtil.extend({}, hoverStl));\n      rect.incremental = incremental; // PENDING\n\n      if (incremental) {\n        // Rect must use hover layer if it's incremental.\n        rect.useHoverLayer = true;\n      }\n\n      group.add(rect);\n      data.setItemGraphicEl(idx, rect);\n    }\n  },\n  _renderOnGeo: function (geo, seriesModel, visualMapModel, api) {\n    var inRangeVisuals = visualMapModel.targetVisuals.inRange;\n    var outOfRangeVisuals = visualMapModel.targetVisuals.outOfRange; // if (!visualMapping) {\n    //     throw new Error('Data range must have color visuals');\n    // }\n\n    var data = seriesModel.getData();\n    var hmLayer = this._hmLayer || this._hmLayer || new HeatmapLayer();\n    hmLayer.blurSize = seriesModel.get('blurSize');\n    hmLayer.pointSize = seriesModel.get('pointSize');\n    hmLayer.minOpacity = seriesModel.get('minOpacity');\n    hmLayer.maxOpacity = seriesModel.get('maxOpacity');\n    var rect = geo.getViewRect().clone();\n    var roamTransform = geo.getRoamTransform();\n    rect.applyTransform(roamTransform); // Clamp on viewport\n\n    var x = Math.max(rect.x, 0);\n    var y = Math.max(rect.y, 0);\n    var x2 = Math.min(rect.width + rect.x, api.getWidth());\n    var y2 = Math.min(rect.height + rect.y, api.getHeight());\n    var width = x2 - x;\n    var height = y2 - y;\n    var dims = [data.mapDimension('lng'), data.mapDimension('lat'), data.mapDimension('value')];\n    var points = data.mapArray(dims, function (lng, lat, value) {\n      var pt = geo.dataToPoint([lng, lat]);\n      pt[0] -= x;\n      pt[1] -= y;\n      pt.push(value);\n      return pt;\n    });\n    var dataExtent = visualMapModel.getExtent();\n    var isInRange = visualMapModel.type === 'visualMap.continuous' ? getIsInContinuousRange(dataExtent, visualMapModel.option.range) : getIsInPiecewiseRange(dataExtent, visualMapModel.getPieceList(), visualMapModel.option.selected);\n    hmLayer.update(points, width, height, inRangeVisuals.color.getNormalizer(), {\n      inRange: inRangeVisuals.color.getColorMapper(),\n      outOfRange: outOfRangeVisuals.color.getColorMapper()\n    }, isInRange);\n    var img = new graphic.Image({\n      style: {\n        width: width,\n        height: height,\n        x: x,\n        y: y,\n        image: hmLayer.canvas\n      },\n      silent: true\n    });\n    this.group.add(img);\n  },\n  dispose: function () {}\n});\n\nmodule.exports = _default;","var curveTool = require(\"zrender/lib/core/curve\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar v1 = [];\nvar v2 = [];\nvar v3 = [];\nvar quadraticAt = curveTool.quadraticAt;\nvar v2DistSquare = vec2.distSquare;\nvar mathAbs = Math.abs;\n\nfunction intersectCurveCircle(curvePoints, center, radius) {\n  var p0 = curvePoints[0];\n  var p1 = curvePoints[1];\n  var p2 = curvePoints[2];\n  var d = Infinity;\n  var t;\n  var radiusSquare = radius * radius;\n  var interval = 0.1;\n\n  for (var _t = 0.1; _t <= 0.9; _t += 0.1) {\n    v1[0] = quadraticAt(p0[0], p1[0], p2[0], _t);\n    v1[1] = quadraticAt(p0[1], p1[1], p2[1], _t);\n    var diff = mathAbs(v2DistSquare(v1, center) - radiusSquare);\n\n    if (diff < d) {\n      d = diff;\n      t = _t;\n    }\n  } // Assume the segment is monotone，Find root through Bisection method\n  // At most 32 iteration\n\n\n  for (var i = 0; i < 32; i++) {\n    // var prev = t - interval;\n    var next = t + interval; // v1[0] = quadraticAt(p0[0], p1[0], p2[0], prev);\n    // v1[1] = quadraticAt(p0[1], p1[1], p2[1], prev);\n\n    v2[0] = quadraticAt(p0[0], p1[0], p2[0], t);\n    v2[1] = quadraticAt(p0[1], p1[1], p2[1], t);\n    v3[0] = quadraticAt(p0[0], p1[0], p2[0], next);\n    v3[1] = quadraticAt(p0[1], p1[1], p2[1], next);\n    var diff = v2DistSquare(v2, center) - radiusSquare;\n\n    if (mathAbs(diff) < 1e-2) {\n      break;\n    } // var prevDiff = v2DistSquare(v1, center) - radiusSquare;\n\n\n    var nextDiff = v2DistSquare(v3, center) - radiusSquare;\n    interval /= 2;\n\n    if (diff < 0) {\n      if (nextDiff >= 0) {\n        t = t + interval;\n      } else {\n        t = t - interval;\n      }\n    } else {\n      if (nextDiff >= 0) {\n        t = t - interval;\n      } else {\n        t = t + interval;\n      }\n    }\n  }\n\n  return t;\n} // Adjust edge to avoid\n\n\nfunction _default(graph, scale) {\n  var tmp0 = [];\n  var quadraticSubdivide = curveTool.quadraticSubdivide;\n  var pts = [[], [], []];\n  var pts2 = [[], []];\n  var v = [];\n  scale /= 2;\n\n  function getSymbolSize(node) {\n    var symbolSize = node.getVisual('symbolSize');\n\n    if (symbolSize instanceof Array) {\n      symbolSize = (symbolSize[0] + symbolSize[1]) / 2;\n    }\n\n    return symbolSize;\n  }\n\n  graph.eachEdge(function (edge, idx) {\n    var linePoints = edge.getLayout();\n    var fromSymbol = edge.getVisual('fromSymbol');\n    var toSymbol = edge.getVisual('toSymbol');\n\n    if (!linePoints.__original) {\n      linePoints.__original = [vec2.clone(linePoints[0]), vec2.clone(linePoints[1])];\n\n      if (linePoints[2]) {\n        linePoints.__original.push(vec2.clone(linePoints[2]));\n      }\n    }\n\n    var originalPoints = linePoints.__original; // Quadratic curve\n\n    if (linePoints[2] != null) {\n      vec2.copy(pts[0], originalPoints[0]);\n      vec2.copy(pts[1], originalPoints[2]);\n      vec2.copy(pts[2], originalPoints[1]);\n\n      if (fromSymbol && fromSymbol != 'none') {\n        var symbolSize = getSymbolSize(edge.node1);\n        var t = intersectCurveCircle(pts, originalPoints[0], symbolSize * scale); // Subdivide and get the second\n\n        quadraticSubdivide(pts[0][0], pts[1][0], pts[2][0], t, tmp0);\n        pts[0][0] = tmp0[3];\n        pts[1][0] = tmp0[4];\n        quadraticSubdivide(pts[0][1], pts[1][1], pts[2][1], t, tmp0);\n        pts[0][1] = tmp0[3];\n        pts[1][1] = tmp0[4];\n      }\n\n      if (toSymbol && toSymbol != 'none') {\n        var symbolSize = getSymbolSize(edge.node2);\n        var t = intersectCurveCircle(pts, originalPoints[1], symbolSize * scale); // Subdivide and get the first\n\n        quadraticSubdivide(pts[0][0], pts[1][0], pts[2][0], t, tmp0);\n        pts[1][0] = tmp0[1];\n        pts[2][0] = tmp0[2];\n        quadraticSubdivide(pts[0][1], pts[1][1], pts[2][1], t, tmp0);\n        pts[1][1] = tmp0[1];\n        pts[2][1] = tmp0[2];\n      } // Copy back to layout\n\n\n      vec2.copy(linePoints[0], pts[0]);\n      vec2.copy(linePoints[1], pts[2]);\n      vec2.copy(linePoints[2], pts[1]);\n    } // Line\n    else {\n        vec2.copy(pts2[0], originalPoints[0]);\n        vec2.copy(pts2[1], originalPoints[1]);\n        vec2.sub(v, pts2[1], pts2[0]);\n        vec2.normalize(v, v);\n\n        if (fromSymbol && fromSymbol != 'none') {\n          var symbolSize = getSymbolSize(edge.node1);\n          vec2.scaleAndAdd(pts2[0], pts2[0], v, symbolSize * scale);\n        }\n\n        if (toSymbol && toSymbol != 'none') {\n          var symbolSize = getSymbolSize(edge.node2);\n          vec2.scaleAndAdd(pts2[1], pts2[1], v, -symbolSize * scale);\n        }\n\n        vec2.copy(linePoints[0], pts2[0]);\n        vec2.copy(linePoints[1], pts2[1]);\n      }\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"../core/util\");\n\nvar Gradient = require(\"./Gradient\");\n\n/**\n * x, y, x2, y2 are all percent from 0 to 1\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @param {number} [x2=1]\n * @param {number} [y2=0]\n * @param {Array.<Object>} colorStops\n * @param {boolean} [globalCoord=false]\n */\nvar LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'linear', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0 : x;\n  this.y = y == null ? 0 : y;\n  this.x2 = x2 == null ? 1 : x2;\n  this.y2 = y2 == null ? 0 : y2; // Can be cloned\n\n  this.type = 'linear'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nLinearGradient.prototype = {\n  constructor: LinearGradient\n};\nzrUtil.inherits(LinearGradient, Gradient);\nvar _default = LinearGradient;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisPointerModel = echarts.extendComponentModel({\n  type: 'axisPointer',\n  coordSysAxesInfo: null,\n  defaultOption: {\n    // 'auto' means that show when triggered by tooltip or handle.\n    show: 'auto',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: null,\n    // set default in AxisPonterView.js\n    zlevel: 0,\n    z: 50,\n    type: 'line',\n    // axispointer triggered by tootip determine snap automatically,\n    // see `modelHelper`.\n    snap: false,\n    triggerTooltip: true,\n    value: null,\n    status: null,\n    // Init value depends on whether handle is used.\n    // [group0, group1, ...]\n    // Each group can be: {\n    //      mapper: function () {},\n    //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n    //      xAxisId: ...,\n    //      yAxisName: ...,\n    //      angleAxisIndex: ...\n    // }\n    // mapper: can be ignored.\n    //      input: {axisInfo, value}\n    //      output: {axisInfo, value}\n    link: [],\n    // Do not set 'auto' here, otherwise global animation: false\n    // will not effect at this axispointer.\n    animation: null,\n    animationDurationUpdate: 200,\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      type: 'solid'\n    },\n    shadowStyle: {\n      color: 'rgba(150,150,150,0.3)'\n    },\n    label: {\n      show: true,\n      formatter: null,\n      // string | Function\n      precision: 'auto',\n      // Or a number like 0, 1, 2 ...\n      margin: 3,\n      color: '#fff',\n      padding: [5, 7, 5, 7],\n      backgroundColor: 'auto',\n      // default: axis line color\n      borderColor: null,\n      borderWidth: 0,\n      shadowBlur: 3,\n      shadowColor: '#aaa' // Considering applicability, common style should\n      // better not have shadowOffset.\n      // shadowOffsetX: 0,\n      // shadowOffsetY: 2\n\n    },\n    handle: {\n      show: false,\n      icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z',\n      // jshint ignore:line\n      size: 45,\n      // handle margin is from symbol center to axis, which is stable when circular move.\n      margin: 50,\n      // color: '#1b8bbd'\n      // color: '#2f4554'\n      color: '#333',\n      shadowBlur: 3,\n      shadowColor: '#aaa',\n      shadowOffsetX: 0,\n      shadowOffsetY: 2,\n      // For mobile performance\n      throttle: 40\n    }\n  }\n});\nvar _default = AxisPointerModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisModel = ComponentModel.extend({\n  type: 'cartesian2dAxis',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Axis2D}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  init: function () {\n    AxisModel.superApply(this, 'init', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function () {\n    AxisModel.superApply(this, 'mergeOption', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  restoreData: function () {\n    AxisModel.superApply(this, 'restoreData', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   * @return {module:echarts/model/Component}\n   */\n  getCoordSysModel: function () {\n    return this.ecModel.queryComponents({\n      mainType: 'grid',\n      index: this.option.gridIndex,\n      id: this.option.gridId\n    })[0];\n  }\n});\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\nvar extraOption = {\n  // gridIndex: 0,\n  // gridId: '',\n  // Offset is for multiple axis on the same position\n  offset: 0\n};\naxisModelCreator('x', AxisModel, getAxisType, extraOption);\naxisModelCreator('y', AxisModel, getAxisType, extraOption);\nvar _default = AxisModel;\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar debugMode = _config.debugMode;\n\nvar log = function () {};\n\nif (debugMode === 1) {\n  log = function () {\n    for (var k in arguments) {\n      throw new Error(arguments[k]);\n    }\n  };\n} else if (debugMode > 1) {\n  log = function () {\n    for (var k in arguments) {\n      console.log(arguments[k]);\n    }\n  };\n}\n\nvar _default = log;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _roamHelper = require(\"./roamHelper\");\n\nvar updateCenterAndZoom = _roamHelper.updateCenterAndZoom;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @payload\n * @property {string} [componentType=series]\n * @property {number} [dx]\n * @property {number} [dy]\n * @property {number} [zoom]\n * @property {number} [originX]\n * @property {number} [originY]\n */\necharts.registerAction({\n  type: 'geoRoam',\n  event: 'geoRoam',\n  update: 'updateTransform'\n}, function (payload, ecModel) {\n  var componentType = payload.componentType || 'series';\n  ecModel.eachComponent({\n    mainType: componentType,\n    query: payload\n  }, function (componentModel) {\n    var geo = componentModel.coordinateSystem;\n\n    if (geo.type !== 'geo') {\n      return;\n    }\n\n    var res = updateCenterAndZoom(geo, payload, componentModel.get('scaleLimit'));\n    componentModel.setCenter && componentModel.setCenter(res.center);\n    componentModel.setZoom && componentModel.setZoom(res.zoom); // All map series with same `map` use the same geo coordinate system\n    // So the center and zoom must be in sync. Include the series not selected by legend\n\n    if (componentType === 'series') {\n      zrUtil.each(componentModel.seriesGroup, function (seriesModel) {\n        seriesModel.setCenter(res.center);\n        seriesModel.setZoom(res.zoom);\n      });\n    }\n  });\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar interactionMutex = require(\"./interactionMutex\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @alias module:echarts/component/helper/RoamController\n * @constructor\n * @mixin {module:zrender/mixin/Eventful}\n *\n * @param {module:zrender/zrender~ZRender} zr\n */\nfunction RoamController(zr) {\n  /**\n   * @type {Function}\n   */\n  this.pointerChecker;\n  /**\n   * @type {module:zrender}\n   */\n\n  this._zr = zr;\n  /**\n   * @type {Object}\n   */\n\n  this._opt = {}; // Avoid two roamController bind the same handler\n\n  var bind = zrUtil.bind;\n  var mousedownHandler = bind(mousedown, this);\n  var mousemoveHandler = bind(mousemove, this);\n  var mouseupHandler = bind(mouseup, this);\n  var mousewheelHandler = bind(mousewheel, this);\n  var pinchHandler = bind(pinch, this);\n  Eventful.call(this);\n  /**\n   * @param {Function} pointerChecker\n   *                   input: x, y\n   *                   output: boolean\n   */\n\n  this.setPointerChecker = function (pointerChecker) {\n    this.pointerChecker = pointerChecker;\n  };\n  /**\n   * Notice: only enable needed types. For example, if 'zoom'\n   * is not needed, 'zoom' should not be enabled, otherwise\n   * default mousewheel behaviour (scroll page) will be disabled.\n   *\n   * @param  {boolean|string} [controlType=true] Specify the control type,\n   *                          which can be null/undefined or true/false\n   *                          or 'pan/move' or 'zoom'/'scale'\n   * @param {Object} [opt]\n   * @param {Object} [opt.zoomOnMouseWheel=true]\n   * @param {Object} [opt.moveOnMouseMove=true]\n   * @param {Object} [opt.preventDefaultMouseMove=true] When pan.\n   */\n\n\n  this.enable = function (controlType, opt) {\n    // Disable previous first\n    this.disable();\n    this._opt = zrUtil.defaults(zrUtil.clone(opt) || {}, {\n      zoomOnMouseWheel: true,\n      moveOnMouseMove: true,\n      preventDefaultMouseMove: true\n    });\n\n    if (controlType == null) {\n      controlType = true;\n    }\n\n    if (controlType === true || controlType === 'move' || controlType === 'pan') {\n      zr.on('mousedown', mousedownHandler);\n      zr.on('mousemove', mousemoveHandler);\n      zr.on('mouseup', mouseupHandler);\n    }\n\n    if (controlType === true || controlType === 'scale' || controlType === 'zoom') {\n      zr.on('mousewheel', mousewheelHandler);\n      zr.on('pinch', pinchHandler);\n    }\n  };\n\n  this.disable = function () {\n    zr.off('mousedown', mousedownHandler);\n    zr.off('mousemove', mousemoveHandler);\n    zr.off('mouseup', mouseupHandler);\n    zr.off('mousewheel', mousewheelHandler);\n    zr.off('pinch', pinchHandler);\n  };\n\n  this.dispose = this.disable;\n\n  this.isDragging = function () {\n    return this._dragging;\n  };\n\n  this.isPinching = function () {\n    return this._pinching;\n  };\n}\n\nzrUtil.mixin(RoamController, Eventful);\n\nfunction mousedown(e) {\n  if (eventTool.notLeftMouse(e) || e.target && e.target.draggable) {\n    return;\n  }\n\n  var x = e.offsetX;\n  var y = e.offsetY; // Only check on mosedown, but not mousemove.\n  // Mouse can be out of target when mouse moving.\n\n  if (this.pointerChecker && this.pointerChecker(e, x, y)) {\n    this._x = x;\n    this._y = y;\n    this._dragging = true;\n  }\n}\n\nfunction mousemove(e) {\n  if (eventTool.notLeftMouse(e) || !checkKeyBinding(this, 'moveOnMouseMove', e) || !this._dragging || e.gestureEvent === 'pinch' || interactionMutex.isTaken(this._zr, 'globalPan')) {\n    return;\n  }\n\n  var x = e.offsetX;\n  var y = e.offsetY;\n  var oldX = this._x;\n  var oldY = this._y;\n  var dx = x - oldX;\n  var dy = y - oldY;\n  this._x = x;\n  this._y = y;\n  this._opt.preventDefaultMouseMove && eventTool.stop(e.event);\n  this.trigger('pan', dx, dy, oldX, oldY, x, y);\n}\n\nfunction mouseup(e) {\n  if (!eventTool.notLeftMouse(e)) {\n    this._dragging = false;\n  }\n}\n\nfunction mousewheel(e) {\n  // wheelDelta maybe -0 in chrome mac.\n  if (!checkKeyBinding(this, 'zoomOnMouseWheel', e) || e.wheelDelta === 0) {\n    return;\n  } // Convenience:\n  // Mac and VM Windows on Mac: scroll up: zoom out.\n  // Windows: scroll up: zoom in.\n\n\n  var zoomDelta = e.wheelDelta > 0 ? 1.1 : 1 / 1.1;\n  zoom.call(this, e, zoomDelta, e.offsetX, e.offsetY);\n}\n\nfunction pinch(e) {\n  if (interactionMutex.isTaken(this._zr, 'globalPan')) {\n    return;\n  }\n\n  var zoomDelta = e.pinchScale > 1 ? 1.1 : 1 / 1.1;\n  zoom.call(this, e, zoomDelta, e.pinchX, e.pinchY);\n}\n\nfunction zoom(e, zoomDelta, zoomX, zoomY) {\n  if (this.pointerChecker && this.pointerChecker(e, zoomX, zoomY)) {\n    // When mouse is out of roamController rect,\n    // default befavoius should not be be disabled, otherwise\n    // page sliding is disabled, contrary to expectation.\n    eventTool.stop(e.event);\n    this.trigger('zoom', zoomDelta, zoomX, zoomY);\n  }\n}\n\nfunction checkKeyBinding(roamController, prop, e) {\n  var setting = roamController._opt[prop];\n  return setting && (!zrUtil.isString(setting) || e.event[setting + 'Key']);\n}\n\nvar _default = RoamController;\nmodule.exports = _default;","var _vector = require(\"./vector\");\n\nvar v2Create = _vector.create;\nvar v2DistSquare = _vector.distSquare;\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\nvar mathPow = Math.pow;\nvar mathSqrt = Math.sqrt;\nvar EPSILON = 1e-8;\nvar EPSILON_NUMERIC = 1e-4;\nvar THREE_SQRT = mathSqrt(3);\nvar ONE_THIRD = 1 / 3; // 临时变量\n\nvar _v0 = v2Create();\n\nvar _v1 = v2Create();\n\nvar _v2 = v2Create();\n\nfunction isAroundZero(val) {\n  return val > -EPSILON && val < EPSILON;\n}\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * 计算三次贝塞尔值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return onet * onet * (onet * p0 + 3 * t * p1) + t * t * (t * p3 + 3 * onet * p2);\n}\n/**\n * 计算三次贝塞尔导数值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicDerivativeAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return 3 * (((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet + (p3 - p2) * t * t);\n}\n/**\n * 计算三次贝塞尔方程根，使用盛金公式\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} val\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction cubicRootAt(p0, p1, p2, p3, val, roots) {\n  // Evaluate roots of cubic functions\n  var a = p3 + 3 * (p1 - p2) - p0;\n  var b = 3 * (p2 - p1 * 2 + p0);\n  var c = 3 * (p1 - p0);\n  var d = p0 - val;\n  var A = b * b - 3 * a * c;\n  var B = b * c - 9 * a * d;\n  var C = c * c - 3 * b * d;\n  var n = 0;\n\n  if (isAroundZero(A) && isAroundZero(B)) {\n    if (isAroundZero(b)) {\n      roots[0] = 0;\n    } else {\n      var t1 = -c / b; //t1, t2, t3, b is not zero\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = B * B - 4 * A * C;\n\n    if (isAroundZero(disc)) {\n      var K = B / A;\n      var t1 = -b / a + K; // t1, a is not zero\n\n      var t2 = -K / 2; // t2, t3\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n      var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n\n      if (Y1 < 0) {\n        Y1 = -mathPow(-Y1, ONE_THIRD);\n      } else {\n        Y1 = mathPow(Y1, ONE_THIRD);\n      }\n\n      if (Y2 < 0) {\n        Y2 = -mathPow(-Y2, ONE_THIRD);\n      } else {\n        Y2 = mathPow(Y2, ONE_THIRD);\n      }\n\n      var t1 = (-b - (Y1 + Y2)) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else {\n      var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n      var theta = Math.acos(T) / 3;\n      var ASqrt = mathSqrt(A);\n      var tmp = Math.cos(theta);\n      var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n      var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n      var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n\n      if (t3 >= 0 && t3 <= 1) {\n        roots[n++] = t3;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算三次贝塞尔方程极限值的位置\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {Array.<number>} extrema\n * @return {number} 有效数目\n */\n\n\nfunction cubicExtrema(p0, p1, p2, p3, extrema) {\n  var b = 6 * p2 - 12 * p1 + 6 * p0;\n  var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n  var c = 3 * p1 - 3 * p0;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      extrema[0] = -b / (2 * a);\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        extrema[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 细分三次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction cubicSubdivide(p0, p1, p2, p3, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p23 = (p3 - p2) * t + p2;\n  var p012 = (p12 - p01) * t + p01;\n  var p123 = (p23 - p12) * t + p12;\n  var p0123 = (p123 - p012) * t + p012; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012;\n  out[3] = p0123; // Seg1\n\n  out[4] = p0123;\n  out[5] = p123;\n  out[6] = p23;\n  out[7] = p3;\n}\n/**\n * 投射点到三次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} [out] 投射点\n * @return {number}\n */\n\n\nfunction cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  var prev;\n  var next;\n  var d1;\n  var d2;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n    _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n    d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    prev = t - interval;\n    next = t + interval; // t - interval\n\n    _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n    _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n    d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = cubicAt(x0, x1, x2, x3, next);\n      _v2[1] = cubicAt(y0, y1, y2, y3, next);\n      d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = cubicAt(x0, x1, x2, x3, t);\n    out[1] = cubicAt(y0, y1, y2, y3, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n/**\n * 计算二次方贝塞尔值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticAt(p0, p1, p2, t) {\n  var onet = 1 - t;\n  return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n}\n/**\n * 计算二次方贝塞尔导数值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticDerivativeAt(p0, p1, p2, t) {\n  return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n}\n/**\n * 计算二次方贝塞尔方程根\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction quadraticRootAt(p0, p1, p2, val, roots) {\n  var a = p0 - 2 * p1 + p2;\n  var b = 2 * (p1 - p0);\n  var c = p0 - val;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      var t1 = -b / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算二次贝塞尔方程极限值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @return {number}\n */\n\n\nfunction quadraticExtremum(p0, p1, p2) {\n  var divider = p0 + p2 - 2 * p1;\n\n  if (divider === 0) {\n    // p1 is center of p0 and p2\n    return 0.5;\n  } else {\n    return (p0 - p1) / divider;\n  }\n}\n/**\n * 细分二次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction quadraticSubdivide(p0, p1, p2, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p012 = (p12 - p01) * t + p01; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012; // Seg1\n\n  out[3] = p012;\n  out[4] = p12;\n  out[5] = p2;\n}\n/**\n * 投射点到二次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} out 投射点\n * @return {number}\n */\n\n\nfunction quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = quadraticAt(x0, x1, x2, _t);\n    _v1[1] = quadraticAt(y0, y1, y2, _t);\n    var d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    var prev = t - interval;\n    var next = t + interval; // t - interval\n\n    _v1[0] = quadraticAt(x0, x1, x2, prev);\n    _v1[1] = quadraticAt(y0, y1, y2, prev);\n    var d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = quadraticAt(x0, x1, x2, next);\n      _v2[1] = quadraticAt(y0, y1, y2, next);\n      var d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = quadraticAt(x0, x1, x2, t);\n    out[1] = quadraticAt(y0, y1, y2, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n\nexports.cubicAt = cubicAt;\nexports.cubicDerivativeAt = cubicDerivativeAt;\nexports.cubicRootAt = cubicRootAt;\nexports.cubicExtrema = cubicExtrema;\nexports.cubicSubdivide = cubicSubdivide;\nexports.cubicProjectPoint = cubicProjectPoint;\nexports.quadraticAt = quadraticAt;\nexports.quadraticDerivativeAt = quadraticDerivativeAt;\nexports.quadraticRootAt = quadraticRootAt;\nexports.quadraticExtremum = quadraticExtremum;\nexports.quadraticSubdivide = quadraticSubdivide;\nexports.quadraticProjectPoint = quadraticProjectPoint;","var graphic = require(\"../../util/graphic\");\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar cartesianAxisHelper = require(\"../../coord/cartesian/cartesianAxisHelper\");\n\nvar AxisView = require(\"../axis/AxisView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar CartesianAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisPointerType = axisPointerModel.get('type');\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisExtent = axis.getGlobalExtent(true);\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var dimIndex = axis.dim === 'x' ? 0 : 1;\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex]; // Make tooltip do not overlap axisPointer and in the middle of the grid.\n\n    var tooltipOptions = [{\n      verticalAlign: 'middle'\n    }, {\n      align: 'center'\n    }];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: tooltipOptions[dimIndex]\n    };\n  }\n});\n\nfunction getCartesian(grid, axis) {\n  var opt = {};\n  opt[axis.dim + 'AxisIndex'] = axis.index;\n  return grid.getCartesian(opt);\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getAxisDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = Math.max(1, axis.getBandWidth());\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getAxisDimIndex(axis))\n    };\n  }\n};\n\nfunction getAxisDimIndex(axis) {\n  return axis.dim === 'x' ? 0 : 1;\n}\n\nAxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\nvar _default = CartesianAxisPointer;\nmodule.exports = _default;","var Path = require(\"../Path\");\n\nvar fixClipWithShadow = require(\"../helper/fixClipWithShadow\");\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\nvar _default = Path.extend({\n  type: 'sector',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r0: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r0 = Math.max(shape.r0 || 0, 0);\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n    ctx.lineTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n    ctx.lineTo(Math.cos(endAngle) * r0 + x, Math.sin(endAngle) * r0 + y);\n\n    if (r0 !== 0) {\n      ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n    }\n\n    ctx.closePath();\n  }\n});\n\nmodule.exports = _default;","var _core = require(\"../core\");\n\nvar createElement = _core.createElement;\n\nvar zrUtil = require(\"../../core/util\");\n\nvar Path = require(\"../../graphic/Path\");\n\nvar ZImage = require(\"../../graphic/Image\");\n\nvar ZText = require(\"../../graphic/Text\");\n\nvar _graphic = require(\"../graphic\");\n\nvar svgPath = _graphic.path;\nvar svgImage = _graphic.image;\nvar svgText = _graphic.text;\n\n/**\n * @file Manages elements that can be defined in <defs> in SVG,\n *       e.g., gradients, clip path, etc.\n * @author Zhang Wenli\n */\nvar MARK_UNUSED = '0';\nvar MARK_USED = '1';\n/**\n * Manages elements that can be defined in <defs> in SVG,\n * e.g., gradients, clip path, etc.\n *\n * @class\n * @param {number}          zrId      zrender instance id\n * @param {SVGElement}      svgRoot   root of SVG document\n * @param {string|string[]} tagNames  possible tag names\n * @param {string}          markLabel label name to make if the element\n *                                    is used\n */\n\nfunction Definable(zrId, svgRoot, tagNames, markLabel, domName) {\n  this._zrId = zrId;\n  this._svgRoot = svgRoot;\n  this._tagNames = typeof tagNames === 'string' ? [tagNames] : tagNames;\n  this._markLabel = markLabel;\n  this._domName = domName || '_dom';\n  this.nextId = 0;\n}\n\nDefinable.prototype.createElement = createElement;\n/**\n * Get the <defs> tag for svgRoot; optionally creates one if not exists.\n *\n * @param {boolean} isForceCreating if need to create when not exists\n * @return {SVGDefsElement} SVG <defs> element, null if it doesn't\n * exist and isForceCreating is false\n */\n\nDefinable.prototype.getDefs = function (isForceCreating) {\n  var svgRoot = this._svgRoot;\n\n  var defs = this._svgRoot.getElementsByTagName('defs');\n\n  if (defs.length === 0) {\n    // Not exist\n    if (isForceCreating) {\n      defs = svgRoot.insertBefore(this.createElement('defs'), // Create new tag\n      svgRoot.firstChild // Insert in the front of svg\n      );\n\n      if (!defs.contains) {\n        // IE doesn't support contains method\n        defs.contains = function (el) {\n          var children = defs.children;\n\n          if (!children) {\n            return false;\n          }\n\n          for (var i = children.length - 1; i >= 0; --i) {\n            if (children[i] === el) {\n              return true;\n            }\n          }\n\n          return false;\n        };\n      }\n\n      return defs;\n    } else {\n      return null;\n    }\n  } else {\n    return defs[0];\n  }\n};\n/**\n * Update DOM element if necessary.\n *\n * @param {Object|string} element style element. e.g., for gradient,\n *                                it may be '#ccc' or {type: 'linear', ...}\n * @param {Function|undefined} onUpdate update callback\n */\n\n\nDefinable.prototype.update = function (element, onUpdate) {\n  if (!element) {\n    return;\n  }\n\n  var defs = this.getDefs(false);\n\n  if (element[this._domName] && defs.contains(element[this._domName])) {\n    // Update DOM\n    if (typeof onUpdate === 'function') {\n      onUpdate(element);\n    }\n  } else {\n    // No previous dom, create new\n    var dom = this.add(element);\n\n    if (dom) {\n      element[this._domName] = dom;\n    }\n  }\n};\n/**\n * Add gradient dom to defs\n *\n * @param {SVGElement} dom DOM to be added to <defs>\n */\n\n\nDefinable.prototype.addDom = function (dom) {\n  var defs = this.getDefs(true);\n  defs.appendChild(dom);\n};\n/**\n * Remove DOM of a given element.\n *\n * @param {SVGElement} element element to remove dom\n */\n\n\nDefinable.prototype.removeDom = function (element) {\n  var defs = this.getDefs(false);\n\n  if (defs && element[this._domName]) {\n    defs.removeChild(element[this._domName]);\n    element[this._domName] = null;\n  }\n};\n/**\n * Get DOMs of this element.\n *\n * @return {HTMLDomElement} doms of this defineable elements in <defs>\n */\n\n\nDefinable.prototype.getDoms = function () {\n  var defs = this.getDefs(false);\n\n  if (!defs) {\n    // No dom when defs is not defined\n    return [];\n  }\n\n  var doms = [];\n  zrUtil.each(this._tagNames, function (tagName) {\n    var tags = defs.getElementsByTagName(tagName); // Note that tags is HTMLCollection, which is array-like\n    // rather than real array.\n    // So `doms.concat(tags)` add tags as one object.\n\n    doms = doms.concat([].slice.call(tags));\n  });\n  return doms;\n};\n/**\n * Mark DOMs to be unused before painting, and clear unused ones at the end\n * of the painting.\n */\n\n\nDefinable.prototype.markAllUnused = function () {\n  var doms = this.getDoms();\n  var that = this;\n  zrUtil.each(doms, function (dom) {\n    dom[that._markLabel] = MARK_UNUSED;\n  });\n};\n/**\n * Mark a single DOM to be used.\n *\n * @param {SVGElement} dom DOM to mark\n */\n\n\nDefinable.prototype.markUsed = function (dom) {\n  if (dom) {\n    dom[this._markLabel] = MARK_USED;\n  }\n};\n/**\n * Remove unused DOMs defined in <defs>\n */\n\n\nDefinable.prototype.removeUnused = function () {\n  var defs = this.getDefs(false);\n\n  if (!defs) {\n    // Nothing to remove\n    return;\n  }\n\n  var doms = this.getDoms();\n  var that = this;\n  zrUtil.each(doms, function (dom) {\n    if (dom[that._markLabel] !== MARK_USED) {\n      // Remove gradient\n      defs.removeChild(dom);\n    }\n  });\n};\n/**\n * Get SVG proxy.\n *\n * @param {Displayable} displayable displayable element\n * @return {Path|Image|Text} svg proxy of given element\n */\n\n\nDefinable.prototype.getSvgProxy = function (displayable) {\n  if (displayable instanceof Path) {\n    return svgPath;\n  } else if (displayable instanceof ZImage) {\n    return svgImage;\n  } else if (displayable instanceof ZText) {\n    return svgText;\n  } else {\n    return svgPath;\n  }\n};\n/**\n * Get text SVG element.\n *\n * @param {Displayable} displayable displayable element\n * @return {SVGElement} SVG element of text\n */\n\n\nDefinable.prototype.getTextSvgElement = function (displayable) {\n  return displayable.__textSvgEl;\n};\n/**\n * Get SVG element.\n *\n * @param {Displayable} displayable displayable element\n * @return {SVGElement} SVG element\n */\n\n\nDefinable.prototype.getSvgElement = function (displayable) {\n  return displayable.__svgEl;\n};\n\nvar _default = Definable;\nmodule.exports = _default;","var DataZoomView = require(\"./DataZoomView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = DataZoomView.extend({\n  type: 'dataZoom.select'\n});\n\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _format = require(\"../util/format\");\n\nvar formatTime = _format.formatTime;\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\nvar getTooltipMarker = _format.getTooltipMarker;\n\nvar modelUtil = require(\"../util/model\");\n\nvar ComponentModel = require(\"./Component\");\n\nvar colorPaletteMixin = require(\"./mixin/colorPalette\");\n\nvar dataFormatMixin = require(\"../model/mixin/dataFormat\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n\nvar _task = require(\"../stream/task\");\n\nvar createTask = _task.createTask;\n\nvar _sourceHelper = require(\"../data/helper/sourceHelper\");\n\nvar prepareSource = _sourceHelper.prepareSource;\nvar getSource = _sourceHelper.getSource;\n\nvar _dataProvider = require(\"../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = modelUtil.makeInner();\nvar SeriesModel = ComponentModel.extend({\n  type: 'series.__base__',\n\n  /**\n   * @readOnly\n   */\n  seriesIndex: 0,\n  // coodinateSystem will be injected in the echarts/CoordinateSystem\n  coordinateSystem: null,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * Data provided for legend\n   * @type {Function}\n   */\n  // PENDING\n  legendDataProvider: null,\n\n  /**\n   * Access path of color for visual\n   */\n  visualColorAccessPath: 'itemStyle.color',\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  init: function (option, parentModel, ecModel, extraOpt) {\n    /**\n     * @type {number}\n     * @readOnly\n     */\n    this.seriesIndex = this.componentIndex;\n    this.dataTask = createTask({\n      count: dataTaskCount,\n      reset: dataTaskReset\n    });\n    this.dataTask.context = {\n      model: this\n    };\n    this.mergeDefaultAndTheme(option, ecModel);\n    prepareSource(this);\n    var data = this.getInitialData(option, ecModel);\n    wrapData(data, this);\n    this.dataTask.context.data = data;\n\n    /**\n     * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n     * @private\n     */\n    inner(this).dataBeforeProcessed = data; // If we reverse the order (make data firstly, and then make\n    // dataBeforeProcessed by cloneShallow), cloneShallow will\n    // cause data.graph.data !== data when using\n    // module:echarts/data/Graph or module:echarts/data/Tree.\n    // See module:echarts/data/helper/linkList\n    // Theoretically, it is unreasonable to call `seriesModel.getData()` in the model\n    // init or merge stage, because the data can be restored. So we do not `restoreData`\n    // and `setData` here, which forbids calling `seriesModel.getData()` in this stage.\n    // Call `seriesModel.getRawData()` instead.\n    // this.restoreData();\n\n    autoSeriesName(this);\n  },\n\n  /**\n   * Util for merge default and theme to option\n   * @param  {Object} option\n   * @param  {module:echarts/model/Global} ecModel\n   */\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? getLayoutParams(option) : {}; // Backward compat: using subType on theme.\n    // But if name duplicate between series subType\n    // (for example: parallel) add component mainType,\n    // add suffix 'Series'.\n\n    var themeSubType = this.subType;\n\n    if (ComponentModel.hasClass(themeSubType)) {\n      themeSubType += 'Series';\n    }\n\n    zrUtil.merge(option, ecModel.getTheme().get(this.subType));\n    zrUtil.merge(option, this.getDefaultOption()); // Default label emphasis `show`\n\n    modelUtil.defaultEmphasis(option, 'label', ['show']);\n    this.fillDataTextStyle(option.data);\n\n    if (layoutMode) {\n      mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (newSeriesOption, ecModel) {\n    // this.settingTask.dirty();\n    newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n    this.fillDataTextStyle(newSeriesOption.data);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n    }\n\n    prepareSource(this);\n    var data = this.getInitialData(newSeriesOption, ecModel);\n    wrapData(data, this);\n    this.dataTask.dirty();\n    this.dataTask.context.data = data;\n    inner(this).dataBeforeProcessed = data;\n    autoSeriesName(this);\n  },\n  fillDataTextStyle: function (data) {\n    // Default data label emphasis `show`\n    // FIXME Tree structure data ?\n    // FIXME Performance ?\n    if (data && !zrUtil.isTypedArray(data)) {\n      var props = ['show'];\n\n      for (var i = 0; i < data.length; i++) {\n        if (data[i] && data[i].label) {\n          modelUtil.defaultEmphasis(data[i], 'label', props);\n        }\n      }\n    }\n  },\n\n  /**\n   * Init a data structure from data related option in series\n   * Must be overwritten\n   */\n  getInitialData: function () {},\n\n  /**\n   * Append data to list\n   * @param {Object} params\n   * @param {Array|TypedArray} params.data\n   */\n  appendData: function (params) {\n    // FIXME ???\n    // (1) If data from dataset, forbidden append.\n    // (2) support append data of dataset.\n    var data = this.getRawData();\n    data.appendData(params.data);\n  },\n\n  /**\n   * Consider some method like `filter`, `map` need make new data,\n   * We should make sure that `seriesModel.getData()` get correct\n   * data in the stream procedure. So we fetch data from upstream\n   * each time `task.perform` called.\n   * @param {string} [dataType]\n   * @return {module:echarts/data/List}\n   */\n  getData: function (dataType) {\n    var task = getCurrentTask(this);\n\n    if (task) {\n      var data = task.context.data;\n      return dataType == null ? data : data.getLinkedData(dataType);\n    } else {\n      // When series is not alive (that may happen when click toolbox\n      // restore or setOption with not merge mode), series data may\n      // be still need to judge animation or something when graphic\n      // elements want to know whether fade out.\n      return inner(this).data;\n    }\n  },\n\n  /**\n   * @param {module:echarts/data/List} data\n   */\n  setData: function (data) {\n    var task = getCurrentTask(this);\n\n    if (task) {\n      var context = task.context; // Consider case: filter, data sample.\n\n      if (context.data !== data && task.modifyOutputEnd) {\n        task.setOutputEnd(data.count());\n      }\n\n      context.outputData = data; // Caution: setData should update context.data,\n      // Because getData may be called multiply in a\n      // single stage and expect to get the data just\n      // set. (For example, AxisProxy, x y both call\n      // getData and setDate sequentially).\n      // So the context.data should be fetched from\n      // upstream each time when a stage starts to be\n      // performed.\n\n      if (task !== this.dataTask) {\n        context.data = data;\n      }\n    }\n\n    inner(this).data = data;\n  },\n\n  /**\n   * @see {module:echarts/data/helper/sourceHelper#getSource}\n   * @return {module:echarts/data/Source} source\n   */\n  getSource: function () {\n    return getSource(this);\n  },\n\n  /**\n   * Get data before processed\n   * @return {module:echarts/data/List}\n   */\n  getRawData: function () {\n    return inner(this).dataBeforeProcessed;\n  },\n\n  /**\n   * Get base axis if has coordinate system and has axis.\n   * By default use coordSys.getBaseAxis();\n   * Can be overrided for some chart.\n   * @return {type} description\n   */\n  getBaseAxis: function () {\n    var coordSys = this.coordinateSystem;\n    return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n  },\n  // FIXME\n\n  /**\n   * Default tooltip formatter\n   *\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    function formatArrayValue(value) {\n      // ??? TODO refactor these logic.\n      // check: category-no-encode-has-axis-data in dataset.html\n      var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n        var dimItem = data.getDimensionInfo(idx);\n        return vertially |= dimItem && dimItem.tooltip !== false && dimItem.displayName != null;\n      }, 0);\n      var result = [];\n      tooltipDims.length ? zrUtil.each(tooltipDims, function (dim) {\n        setEachItem(retrieveRawValue(data, dataIndex, dim), dim);\n      }) // By default, all dims is used on tooltip.\n      : zrUtil.each(value, setEachItem);\n\n      function setEachItem(val, dim) {\n        var dimInfo = data.getDimensionInfo(dim); // If `dimInfo.tooltip` is not set, show tooltip.\n\n        if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n          return;\n        }\n\n        var dimType = dimInfo.type;\n        var dimHead = getTooltipMarker({\n          color: color,\n          type: 'subItem'\n        });\n        var valStr = (vertially ? dimHead + encodeHTML(dimInfo.displayName || '-') + ': ' : '') + // FIXME should not format time for raw data?\n        encodeHTML(dimType === 'ordinal' ? val + '' : dimType === 'time' ? multipleSeries ? '' : formatTime('yyyy/MM/dd hh:mm:ss', val) : addCommas(val));\n        valStr && result.push(valStr);\n      }\n\n      return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n    }\n\n    function formatSingleValue(val) {\n      return encodeHTML(addCommas(val));\n    }\n\n    var data = this.getData();\n    var tooltipDims = data.mapDimension('defaultedTooltip', true);\n    var tooltipDimLen = tooltipDims.length;\n    var value = this.getRawValue(dataIndex);\n    var isValueArr = zrUtil.isArray(value);\n    var color = data.getItemVisual(dataIndex, 'color');\n\n    if (zrUtil.isObject(color) && color.colorStops) {\n      color = (color.colorStops[0] || {}).color;\n    }\n\n    color = color || 'transparent'; // Complicated rule for pretty tooltip.\n\n    var formattedValue = tooltipDimLen > 1 || isValueArr && !tooltipDimLen ? formatArrayValue(value) : tooltipDimLen ? formatSingleValue(retrieveRawValue(data, dataIndex, tooltipDims[0])) : formatSingleValue(isValueArr ? value[0] : value);\n    var colorEl = getTooltipMarker(color);\n    var name = data.getName(dataIndex);\n    var seriesName = this.name;\n\n    if (!modelUtil.isNameSpecified(this)) {\n      seriesName = '';\n    }\n\n    seriesName = seriesName ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ') : '';\n    return !multipleSeries ? seriesName + colorEl + (name ? encodeHTML(name) + ': ' + formattedValue : formattedValue) : colorEl + seriesName + formattedValue;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function () {\n    if (env.node) {\n      return false;\n    }\n\n    var animationEnabled = this.getShallow('animation');\n\n    if (animationEnabled) {\n      if (this.getData().count() > this.getShallow('animationThreshold')) {\n        animationEnabled = false;\n      }\n    }\n\n    return animationEnabled;\n  },\n  restoreData: function () {\n    this.dataTask.dirty();\n  },\n  getColorFromPalette: function (name, scope, requestColorNum) {\n    var ecModel = this.ecModel; // PENDING\n\n    var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope, requestColorNum);\n\n    if (!color) {\n      color = ecModel.getColorFromPalette(name, scope, requestColorNum);\n    }\n\n    return color;\n  },\n\n  /**\n   * Use `data.mapDimension(coordDim, true)` instead.\n   * @deprecated\n   */\n  coordDimToDataDim: function (coordDim) {\n    return this.getRawData().mapDimension(coordDim, true);\n  },\n\n  /**\n   * Get progressive rendering count each step\n   * @return {number}\n   */\n  getProgressive: function () {\n    return this.get('progressive');\n  },\n\n  /**\n   * Get progressive rendering count each step\n   * @return {number}\n   */\n  getProgressiveThreshold: function () {\n    return this.get('progressiveThreshold');\n  },\n\n  /**\n   * Get data indices for show tooltip content. See tooltip.\n   * @abstract\n   * @param {Array.<string>|string} dim\n   * @param {Array.<number>} value\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis\n   * @return {Object} {dataIndices, nestestValue}.\n   */\n  getAxisTooltipData: null,\n\n  /**\n   * See tooltip.\n   * @abstract\n   * @param {number} dataIndex\n   * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n   */\n  getTooltipPosition: null,\n\n  /**\n   * @see {module:echarts/stream/Scheduler}\n   */\n  pipeTask: null,\n\n  /**\n   * Convinient for override in extended class.\n   * @protected\n   * @type {Function}\n   */\n  preventIncremental: null,\n\n  /**\n   * @public\n   * @readOnly\n   * @type {Object}\n   */\n  pipelineContext: null\n});\nzrUtil.mixin(SeriesModel, dataFormatMixin);\nzrUtil.mixin(SeriesModel, colorPaletteMixin);\n/**\n * MUST be called after `prepareSource` called\n * Here we need to make auto series, especially for auto legend. But we\n * do not modify series.name in option to avoid side effects.\n */\n\nfunction autoSeriesName(seriesModel) {\n  // User specified name has higher priority, otherwise it may cause\n  // series can not be queried unexpectedly.\n  var name = seriesModel.name;\n\n  if (!modelUtil.isNameSpecified(seriesModel)) {\n    seriesModel.name = getSeriesAutoName(seriesModel) || name;\n  }\n}\n\nfunction getSeriesAutoName(seriesModel) {\n  var data = seriesModel.getRawData();\n  var dataDims = data.mapDimension('seriesName', true);\n  var nameArr = [];\n  zrUtil.each(dataDims, function (dataDim) {\n    var dimInfo = data.getDimensionInfo(dataDim);\n    dimInfo.displayName && nameArr.push(dimInfo.displayName);\n  });\n  return nameArr.join(' ');\n}\n\nfunction dataTaskCount(context) {\n  return context.model.getRawData().count();\n}\n\nfunction dataTaskReset(context) {\n  var seriesModel = context.model;\n  seriesModel.setData(seriesModel.getRawData().cloneShallow());\n  return dataTaskProgress;\n}\n\nfunction dataTaskProgress(param, context) {\n  // Avoid repead cloneShallow when data just created in reset.\n  if (param.end > context.outputData.count()) {\n    context.model.getRawData().cloneShallow(context.outputData);\n  }\n} // TODO refactor\n\n\nfunction wrapData(data, seriesModel) {\n  zrUtil.each(data.CHANGABLE_METHODS, function (methodName) {\n    data.wrapMethod(methodName, zrUtil.curry(onDataSelfChange, seriesModel));\n  });\n}\n\nfunction onDataSelfChange(seriesModel) {\n  var task = getCurrentTask(seriesModel);\n\n  if (task) {\n    // Consider case: filter, selectRange\n    task.setOutputEnd(this.count());\n  }\n}\n\nfunction getCurrentTask(seriesModel) {\n  var scheduler = (seriesModel.ecModel || {}).scheduler;\n  var pipeline = scheduler && scheduler.getPipeline(seriesModel.uid);\n\n  if (pipeline) {\n    // When pipline finished, the currrentTask keep the last\n    // task (renderTask).\n    var task = pipeline.currentTask;\n\n    if (task) {\n      var agentStubMap = task.agentStubMap;\n\n      if (agentStubMap) {\n        task = agentStubMap.get(seriesModel.uid);\n      }\n    }\n\n    return task;\n  }\n}\n\nvar _default = SeriesModel;\nmodule.exports = _default;","var smoothSpline = require(\"./smoothSpline\");\n\nvar smoothBezier = require(\"./smoothBezier\");\n\nfunction buildPath(ctx, shape, closePath) {\n  var points = shape.points;\n  var smooth = shape.smooth;\n\n  if (points && points.length >= 2) {\n    if (smooth && smooth !== 'spline') {\n      var controlPoints = smoothBezier(points, smooth, closePath, shape.smoothConstraint);\n      ctx.moveTo(points[0][0], points[0][1]);\n      var len = points.length;\n\n      for (var i = 0; i < (closePath ? len : len - 1); i++) {\n        var cp1 = controlPoints[i * 2];\n        var cp2 = controlPoints[i * 2 + 1];\n        var p = points[(i + 1) % len];\n        ctx.bezierCurveTo(cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]);\n      }\n    } else {\n      if (smooth === 'spline') {\n        points = smoothSpline(points, closePath);\n      }\n\n      ctx.moveTo(points[0][0], points[0][1]);\n\n      for (var i = 1, l = points.length; i < l; i++) {\n        ctx.lineTo(points[i][0], points[i][1]);\n      }\n    }\n\n    closePath && ctx.closePath();\n  }\n}\n\nexports.buildPath = buildPath;","var createRenderPlanner = require(\"../helper/createRenderPlanner\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar positiveBorderColorQuery = ['itemStyle', 'borderColor'];\nvar negativeBorderColorQuery = ['itemStyle', 'borderColor0'];\nvar positiveColorQuery = ['itemStyle', 'color'];\nvar negativeColorQuery = ['itemStyle', 'color0'];\nvar _default = {\n  seriesType: 'candlestick',\n  plan: createRenderPlanner(),\n  // For legend.\n  performRawSeries: true,\n  reset: function (seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var isLargeRender = seriesModel.pipelineContext.large;\n    data.setVisual({\n      legendSymbol: 'roundRect',\n      colorP: getColor(1, seriesModel),\n      colorN: getColor(-1, seriesModel),\n      borderColorP: getBorderColor(1, seriesModel),\n      borderColorN: getBorderColor(-1, seriesModel)\n    }); // Only visible series has each data be visual encoded\n\n    if (ecModel.isSeriesFiltered(seriesModel)) {\n      return;\n    }\n\n    return !isLargeRender && {\n      progress: progress\n    };\n\n    function progress(params, data) {\n      var dataIndex;\n\n      while ((dataIndex = params.next()) != null) {\n        var itemModel = data.getItemModel(dataIndex);\n        var sign = data.getItemLayout(dataIndex).sign;\n        data.setItemVisual(dataIndex, {\n          color: getColor(sign, itemModel),\n          borderColor: getBorderColor(sign, itemModel)\n        });\n      }\n    }\n\n    function getColor(sign, model) {\n      return model.get(sign > 0 ? positiveColorQuery : negativeColorQuery);\n    }\n\n    function getBorderColor(sign, model) {\n      return model.get(sign > 0 ? positiveBorderColorQuery : negativeBorderColorQuery);\n    }\n  }\n};\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Piece of pie including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\nfunction FunnelPiece(data, idx) {\n  graphic.Group.call(this);\n  var polygon = new graphic.Polygon();\n  var labelLine = new graphic.Polyline();\n  var text = new graphic.Text();\n  this.add(polygon);\n  this.add(labelLine);\n  this.add(text);\n  this.updateData(data, idx, true); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    labelLine.ignore = labelLine.hoverIgnore;\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    labelLine.ignore = labelLine.normalIgnore;\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar funnelPieceProto = FunnelPiece.prototype;\nvar opacityAccessPath = ['itemStyle', 'opacity'];\n\nfunnelPieceProto.updateData = function (data, idx, firstCreate) {\n  var polygon = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var opacity = data.getItemModel(idx).get(opacityAccessPath);\n  opacity = opacity == null ? 1 : opacity; // Reset style\n\n  polygon.useStyle({});\n\n  if (firstCreate) {\n    polygon.setShape({\n      points: layout.points\n    });\n    polygon.setStyle({\n      opacity: 0\n    });\n    graphic.initProps(polygon, {\n      style: {\n        opacity: opacity\n      }\n    }, seriesModel, idx);\n  } else {\n    graphic.updateProps(polygon, {\n      style: {\n        opacity: opacity\n      },\n      shape: {\n        points: layout.points\n      }\n    }, seriesModel, idx);\n  } // Update common style\n\n\n  var itemStyleModel = itemModel.getModel('itemStyle');\n  var visualColor = data.getItemVisual(idx, 'color');\n  polygon.setStyle(zrUtil.defaults({\n    lineJoin: 'round',\n    fill: visualColor\n  }, itemStyleModel.getItemStyle(['opacity'])));\n  polygon.hoverStyle = itemStyleModel.getModel('emphasis').getItemStyle();\n\n  this._updateLabel(data, idx);\n\n  graphic.setHoverStyle(this);\n};\n\nfunnelPieceProto._updateLabel = function (data, idx) {\n  var labelLine = this.childAt(1);\n  var labelText = this.childAt(2);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var labelLayout = layout.label;\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.updateProps(labelLine, {\n    shape: {\n      points: labelLayout.linePoints || labelLayout.linePoints\n    }\n  }, seriesModel, idx);\n  graphic.updateProps(labelText, {\n    style: {\n      x: labelLayout.x,\n      y: labelLayout.y\n    }\n  }, seriesModel, idx);\n  labelText.attr({\n    rotation: labelLayout.rotation,\n    origin: [labelLayout.x, labelLayout.y],\n    z2: 10\n  });\n  var labelModel = itemModel.getModel('label');\n  var labelHoverModel = itemModel.getModel('emphasis.label');\n  var labelLineModel = itemModel.getModel('labelLine');\n  var labelLineHoverModel = itemModel.getModel('emphasis.labelLine');\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.setLabelStyle(labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel, {\n    labelFetcher: data.hostModel,\n    labelDataIndex: idx,\n    defaultText: data.getName(idx),\n    autoColor: visualColor,\n    useInsideStyle: !!labelLayout.inside\n  }, {\n    textAlign: labelLayout.textAlign,\n    textVerticalAlign: labelLayout.verticalAlign\n  });\n  labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n  labelText.hoverIgnore = !labelHoverModel.get('show');\n  labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n  labelLine.hoverIgnore = !labelLineHoverModel.get('show'); // Default use item visual color\n\n  labelLine.setStyle({\n    stroke: visualColor\n  });\n  labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n  labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n};\n\nzrUtil.inherits(FunnelPiece, graphic.Group);\nvar FunnelView = ChartView.extend({\n  type: 'funnel',\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    data.diff(oldData).add(function (idx) {\n      var funnelPiece = new FunnelPiece(data, idx);\n      data.setItemGraphicEl(idx, funnelPiece);\n      group.add(funnelPiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n      piePiece.updateData(data, newIdx);\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      group.remove(piePiece);\n    }).execute();\n    this._data = data;\n  },\n  remove: function () {\n    this.group.removeAll();\n    this._data = null;\n  },\n  dispose: function () {}\n});\nvar _default = FunnelView;\nmodule.exports = _default;","var createListSimply = require(\"../helper/createListSimply\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar GaugeSeries = SeriesModel.extend({\n  type: 'series.gauge',\n  getInitialData: function (option, ecModel) {\n    var dataOpt = option.data || [];\n\n    if (!zrUtil.isArray(dataOpt)) {\n      dataOpt = [dataOpt];\n    }\n\n    option.data = dataOpt;\n    return createListSimply(this, ['value']);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    legendHoverLink: true,\n    radius: '75%',\n    startAngle: 225,\n    endAngle: -45,\n    clockwise: true,\n    // 最小值\n    min: 0,\n    // 最大值\n    max: 100,\n    // 分割段数，默认为10\n    splitNumber: 10,\n    // 坐标轴线\n    axisLine: {\n      // 默认显示，属性show控制显示与否\n      show: true,\n      lineStyle: {\n        // 属性lineStyle控制线条样式\n        color: [[0.2, '#91c7ae'], [0.8, '#63869e'], [1, '#c23531']],\n        width: 30\n      }\n    },\n    // 分隔线\n    splitLine: {\n      // 默认显示，属性show控制显示与否\n      show: true,\n      // 属性length控制线长\n      length: 30,\n      // 属性lineStyle（详见lineStyle）控制线条样式\n      lineStyle: {\n        color: '#eee',\n        width: 2,\n        type: 'solid'\n      }\n    },\n    // 坐标轴小标记\n    axisTick: {\n      // 属性show控制显示与否，默认不显示\n      show: true,\n      // 每份split细分多少段\n      splitNumber: 5,\n      // 属性length控制线长\n      length: 8,\n      // 属性lineStyle控制线条样式\n      lineStyle: {\n        color: '#eee',\n        width: 1,\n        type: 'solid'\n      }\n    },\n    axisLabel: {\n      show: true,\n      distance: 5,\n      // formatter: null,\n      color: 'auto'\n    },\n    pointer: {\n      show: true,\n      length: '80%',\n      width: 8\n    },\n    itemStyle: {\n      color: 'auto'\n    },\n    title: {\n      show: true,\n      // x, y，单位px\n      offsetCenter: [0, '-40%'],\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n      color: '#333',\n      fontSize: 15\n    },\n    detail: {\n      show: true,\n      backgroundColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      borderColor: '#ccc',\n      width: 100,\n      height: null,\n      // self-adaption\n      padding: [5, 10],\n      // x, y，单位px\n      offsetCenter: [0, '40%'],\n      // formatter: null,\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n      color: 'auto',\n      fontSize: 30\n    }\n  }\n});\nvar _default = GaugeSeries;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// (1) The code `if (__DEV__) ...` can be removed by build tool.\n// (2) If intend to use `__DEV__`, this module should be imported. Use a global\n// variable `__DEV__` may cause that miss the declaration (see #6535), or the\n// declaration is behind of the using position (for example in `Model.extent`,\n// And tools like rollup can not analysis the dependency if not import).\nvar dev; // In browser\n\nif (typeof window !== 'undefined') {\n  dev = window.__DEV__;\n} // In node\nelse if (typeof global !== 'undefined') {\n    dev = global.__DEV__;\n  }\n\nif (typeof dev === 'undefined') {\n  dev = true;\n}\n\nvar __DEV__ = dev;\nexports.__DEV__ = __DEV__;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\n\nvar dataSelectableMixin = require(\"../../component/helper/selectableMixin\");\n\nvar _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawAttr = _dataProvider.retrieveRawAttr;\n\nvar geoCreator = require(\"../../coord/geo/geoCreator\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar MapSeries = SeriesModel.extend({\n  type: 'series.map',\n  dependencies: ['geo'],\n  layoutMode: 'box',\n\n  /**\n   * Only first map series of same mapType will drawMap\n   * @type {boolean}\n   */\n  needsDrawMap: false,\n\n  /**\n   * Group of all map series with same mapType\n   * @type {boolean}\n   */\n  seriesGroup: [],\n  init: function (option) {\n    // this._fillOption(option, this.getMapType());\n    // this.option = option;\n    MapSeries.superApply(this, 'init', arguments);\n    this.updateSelectedMap(this._createSelectableList());\n  },\n  getInitialData: function (option) {\n    return createListSimply(this, ['value']);\n  },\n  mergeOption: function (newOption) {\n    // this._fillOption(newOption, this.getMapType());\n    MapSeries.superApply(this, 'mergeOption', arguments);\n    this.updateSelectedMap(this._createSelectableList());\n  },\n  _createSelectableList: function () {\n    var data = this.getRawData();\n    var valueDim = data.mapDimension('value');\n    var targetList = [];\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      targetList.push({\n        name: data.getName(i),\n        value: data.get(valueDim, i),\n        selected: retrieveRawAttr(data, i, 'selected')\n      });\n    }\n\n    targetList = geoCreator.getFilledRegions(targetList, this.getMapType(), this.option.nameMap);\n    return targetList;\n  },\n\n  /**\n   * If no host geo model, return null, which means using a\n   * inner exclusive geo model.\n   */\n  getHostGeoModel: function () {\n    var geoIndex = this.option.geoIndex;\n    return geoIndex != null ? this.dependentModels.geo[geoIndex] : null;\n  },\n  getMapType: function () {\n    return (this.getHostGeoModel() || this).option.map;\n  },\n  _fillOption: function (option, mapName) {// Shallow clone\n    // option = zrUtil.extend({}, option);\n    // option.data = geoCreator.getFilledRegions(option.data, mapName, option.nameMap);\n    // return option;\n  },\n  getRawValue: function (dataIndex) {\n    // Use value stored in data instead because it is calculated from multiple series\n    // FIXME Provide all value of multiple series ?\n    var data = this.getData();\n    return data.get(data.mapDimension('value'), dataIndex);\n  },\n\n  /**\n   * Get model of region\n   * @param  {string} name\n   * @return {module:echarts/model/Model}\n   */\n  getRegionModel: function (regionName) {\n    var data = this.getData();\n    return data.getItemModel(data.indexOfName(regionName));\n  },\n\n  /**\n   * Map tooltip formatter\n   *\n   * @param {number} dataIndex\n   */\n  formatTooltip: function (dataIndex) {\n    // FIXME orignalData and data is a bit confusing\n    var data = this.getData();\n    var formattedValue = addCommas(this.getRawValue(dataIndex));\n    var name = data.getName(dataIndex);\n    var seriesGroup = this.seriesGroup;\n    var seriesNames = [];\n\n    for (var i = 0; i < seriesGroup.length; i++) {\n      var otherIndex = seriesGroup[i].originalData.indexOfName(name);\n      var valueDim = data.mapDimension('value');\n\n      if (!isNaN(seriesGroup[i].originalData.get(valueDim, otherIndex))) {\n        seriesNames.push(encodeHTML(seriesGroup[i].name));\n      }\n    }\n\n    return seriesNames.join(', ') + '<br />' + encodeHTML(name + ' : ' + formattedValue);\n  },\n\n  /**\n   * @implement\n   */\n  getTooltipPosition: function (dataIndex) {\n    if (dataIndex != null) {\n      var name = this.getData().getName(dataIndex);\n      var geo = this.coordinateSystem;\n      var region = geo.getRegion(name);\n      return region && geo.dataToPoint(region.center);\n    }\n  },\n  setZoom: function (zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function (center) {\n    this.option.center = center;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 2,\n    coordinateSystem: 'geo',\n    // map should be explicitly specified since ec3.\n    map: '',\n    // If `geoIndex` is not specified, a exclusive geo will be\n    // created. Otherwise use the specified geo component, and\n    // `map` and `mapType` are ignored.\n    // geoIndex: 0,\n    // 'center' | 'left' | 'right' | 'x%' | {number}\n    left: 'center',\n    // 'center' | 'top' | 'bottom' | 'x%' | {number}\n    top: 'center',\n    // right\n    // bottom\n    // width:\n    // height\n    // Aspect is width / height. Inited to be geoJson bbox aspect\n    // This parameter is used for scale this aspect\n    aspectScale: 0.75,\n    ///// Layout with center and size\n    // If you wan't to put map in a fixed size box with right aspect ratio\n    // This two properties may more conveninet\n    // layoutCenter: [50%, 50%]\n    // layoutSize: 100\n    // 数值合并方式，默认加和，可选为：\n    // 'sum' | 'average' | 'max' | 'min'\n    // mapValueCalculation: 'sum',\n    // 地图数值计算结果小数精度\n    // mapValuePrecision: 0,\n    // 显示图例颜色标识（系列标识的小圆点），图例开启时有效\n    showLegendSymbol: true,\n    // 选择模式，默认关闭，可选single，multiple\n    // selectedMode: false,\n    dataRangeHoverLink: true,\n    // 是否开启缩放及漫游模式\n    // roam: false,\n    // Define left-top, right-bottom coords to control view\n    // For example, [ [180, 90], [-180, -90] ],\n    // higher priority than center and zoom\n    boundingCoords: null,\n    // Default on center of map\n    center: null,\n    zoom: 1,\n    scaleLimit: null,\n    label: {\n      show: false,\n      color: '#000'\n    },\n    // scaleLimit: null,\n    itemStyle: {\n      borderWidth: 0.5,\n      borderColor: '#444',\n      areaColor: '#eee'\n    },\n    emphasis: {\n      label: {\n        show: true,\n        color: 'rgb(100,0,0)'\n      },\n      itemStyle: {\n        areaColor: 'rgba(255,215,0,0.8)'\n      }\n    }\n  }\n});\nzrUtil.mixin(MapSeries, dataSelectableMixin);\nvar _default = MapSeries;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar NodeHighlightPolicy = {\n  NONE: 'none',\n  // not downplay others\n  DESCENDANT: 'descendant',\n  ANCESTOR: 'ancestor',\n  SELF: 'self'\n};\nvar DEFAULT_SECTOR_Z = 2;\nvar DEFAULT_TEXT_Z = 4;\n/**\n * Sunburstce of Sunburst including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\n\nfunction SunburstPiece(node, seriesModel, ecModel) {\n  graphic.Group.call(this);\n  var sector = new graphic.Sector({\n    z2: DEFAULT_SECTOR_Z\n  });\n  sector.seriesIndex = seriesModel.seriesIndex;\n  var text = new graphic.Text({\n    z2: DEFAULT_TEXT_Z,\n    silent: node.getModel('label').get('silent')\n  });\n  this.add(sector);\n  this.add(text);\n  this.updateData(true, node, 'normal', seriesModel, ecModel); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar SunburstPieceProto = SunburstPiece.prototype;\n\nSunburstPieceProto.updateData = function (firstCreate, node, state, seriesModel, ecModel) {\n  this.node = node;\n  node.piece = this;\n  seriesModel = seriesModel || this._seriesModel;\n  ecModel = ecModel || this._ecModel;\n  var sector = this.childAt(0);\n  sector.dataIndex = node.dataIndex;\n  var itemModel = node.getModel();\n  var layout = node.getLayout();\n\n  if (!layout) {\n    console.log(node.getLayout());\n  }\n\n  var sectorShape = zrUtil.extend({}, layout);\n  sectorShape.label = null;\n  var visualColor = getNodeColor(node, seriesModel, ecModel);\n  var normalStyle = itemModel.getModel('itemStyle').getItemStyle();\n  var style;\n\n  if (state === 'normal') {\n    style = normalStyle;\n  } else {\n    var stateStyle = itemModel.getModel(state + '.itemStyle').getItemStyle();\n    style = zrUtil.merge(stateStyle, normalStyle);\n  }\n\n  style = zrUtil.defaults({\n    lineJoin: 'bevel',\n    fill: style.fill || visualColor\n  }, style);\n\n  if (firstCreate) {\n    sector.setShape(sectorShape);\n    sector.shape.r = layout.r0;\n    graphic.updateProps(sector, {\n      shape: {\n        r: layout.r\n      }\n    }, seriesModel, node.dataIndex);\n    sector.useStyle(style);\n  } else if (typeof style.fill === 'object' && style.fill.type || typeof sector.style.fill === 'object' && sector.style.fill.type) {\n    // Disable animation for gradient since no interpolation method\n    // is supported for gradient\n    graphic.updateProps(sector, {\n      shape: sectorShape\n    }, seriesModel);\n    sector.useStyle(style);\n  } else {\n    graphic.updateProps(sector, {\n      shape: sectorShape,\n      style: style\n    }, seriesModel);\n  }\n\n  this._updateLabel(seriesModel, visualColor, state);\n\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && sector.attr('cursor', cursorStyle);\n\n  if (firstCreate) {\n    var highlightPolicy = seriesModel.getShallow('highlightPolicy');\n\n    this._initEvents(sector, node, seriesModel, highlightPolicy);\n  }\n\n  this._seriesModel = seriesModel || this._seriesModel;\n  this._ecModel = ecModel || this._ecModel;\n};\n\nSunburstPieceProto.onEmphasis = function (highlightPolicy) {\n  var that = this;\n  this.node.hostTree.root.eachNode(function (n) {\n    if (n.piece) {\n      if (that.node === n) {\n        n.piece.updateData(false, n, 'emphasis');\n      } else if (isNodeHighlighted(n, that.node, highlightPolicy)) {\n        n.piece.childAt(0).trigger('highlight');\n      } else if (highlightPolicy !== NodeHighlightPolicy.NONE) {\n        n.piece.childAt(0).trigger('downplay');\n      }\n    }\n  });\n};\n\nSunburstPieceProto.onNormal = function () {\n  this.node.hostTree.root.eachNode(function (n) {\n    if (n.piece) {\n      n.piece.updateData(false, n, 'normal');\n    }\n  });\n};\n\nSunburstPieceProto.onHighlight = function () {\n  this.updateData(false, this.node, 'highlight');\n};\n\nSunburstPieceProto.onDownplay = function () {\n  this.updateData(false, this.node, 'downplay');\n};\n\nSunburstPieceProto._updateLabel = function (seriesModel, visualColor, state) {\n  var itemModel = this.node.getModel();\n  var normalModel = itemModel.getModel('label');\n  var labelModel = state === 'normal' || state === 'emphasis' ? normalModel : itemModel.getModel(state + '.label');\n  var labelHoverModel = itemModel.getModel('emphasis.label');\n  var text = zrUtil.retrieve(seriesModel.getFormattedLabel(this.node.dataIndex, 'normal', null, null, 'label'), this.node.name);\n\n  if (getLabelAttr('show') === false) {\n    text = '';\n  }\n\n  var layout = this.node.getLayout();\n  var labelMinAngle = labelModel.get('minAngle');\n\n  if (labelMinAngle == null) {\n    labelMinAngle = normalModel.get('minAngle');\n  }\n\n  labelMinAngle = labelMinAngle / 180 * Math.PI;\n  var angle = layout.endAngle - layout.startAngle;\n\n  if (labelMinAngle != null && Math.abs(angle) < labelMinAngle) {\n    // Not displaying text when angle is too small\n    text = '';\n  }\n\n  var label = this.childAt(1);\n  graphic.setLabelStyle(label.style, label.hoverStyle || {}, normalModel, labelHoverModel, {\n    defaultText: labelModel.getShallow('show') ? text : null,\n    autoColor: visualColor,\n    useInsideStyle: true\n  });\n  var midAngle = (layout.startAngle + layout.endAngle) / 2;\n  var dx = Math.cos(midAngle);\n  var dy = Math.sin(midAngle);\n  var r;\n  var labelPosition = getLabelAttr('position');\n  var labelPadding = getLabelAttr('distance') || 0;\n  var textAlign = getLabelAttr('align');\n\n  if (labelPosition === 'outside') {\n    r = layout.r + labelPadding;\n    textAlign = midAngle > Math.PI / 2 ? 'right' : 'left';\n  } else {\n    if (!textAlign || textAlign === 'center') {\n      r = (layout.r + layout.r0) / 2;\n      textAlign = 'center';\n    } else if (textAlign === 'left') {\n      r = layout.r0 + labelPadding;\n\n      if (midAngle > Math.PI / 2) {\n        textAlign = 'right';\n      }\n    } else if (textAlign === 'right') {\n      r = layout.r - labelPadding;\n\n      if (midAngle > Math.PI / 2) {\n        textAlign = 'left';\n      }\n    }\n  }\n\n  label.attr('style', {\n    text: text,\n    textAlign: textAlign,\n    textVerticalAlign: getLabelAttr('verticalAlign') || 'middle',\n    opacity: getLabelAttr('opacity')\n  });\n  var textX = r * dx + layout.cx;\n  var textY = r * dy + layout.cy;\n  label.attr('position', [textX, textY]);\n  var rotateType = getLabelAttr('rotate');\n  var rotate = 0;\n\n  if (rotateType === 'radial') {\n    rotate = -midAngle;\n\n    if (rotate < -Math.PI / 2) {\n      rotate += Math.PI;\n    }\n  } else if (rotateType === 'tangential') {\n    rotate = Math.PI / 2 - midAngle;\n\n    if (rotate > Math.PI / 2) {\n      rotate -= Math.PI;\n    } else if (rotate < -Math.PI / 2) {\n      rotate += Math.PI;\n    }\n  } else if (typeof rotateType === 'number') {\n    rotate = rotateType * Math.PI / 180;\n  }\n\n  label.attr('rotation', rotate);\n\n  function getLabelAttr(name) {\n    var stateAttr = labelModel.get(name);\n\n    if (stateAttr == null) {\n      return normalModel.get(name);\n    } else {\n      return stateAttr;\n    }\n  }\n};\n\nSunburstPieceProto._initEvents = function (sector, node, seriesModel, highlightPolicy) {\n  sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  var that = this;\n\n  var onEmphasis = function () {\n    that.onEmphasis(highlightPolicy);\n  };\n\n  var onNormal = function () {\n    that.onNormal();\n  };\n\n  var onDownplay = function () {\n    that.onDownplay();\n  };\n\n  var onHighlight = function () {\n    that.onHighlight();\n  };\n\n  if (seriesModel.isAnimationEnabled()) {\n    sector.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal).on('downplay', onDownplay).on('highlight', onHighlight);\n  }\n};\n\nzrUtil.inherits(SunburstPiece, graphic.Group);\nvar _default = SunburstPiece;\n/**\n * Get node color\n *\n * @param {TreeNode} node the node to get color\n * @param {module:echarts/model/Series} seriesModel series\n * @param {module:echarts/model/Global} ecModel echarts defaults\n */\n\nfunction getNodeColor(node, seriesModel, ecModel) {\n  // Color from visualMap\n  var visualColor = node.getVisual('color');\n  var visualMetaList = node.getVisual('visualMeta');\n\n  if (!visualMetaList || visualMetaList.length === 0) {\n    // Use first-generation color if has no visualMap\n    visualColor = null;\n  } // Self color or level color\n\n\n  var color = node.getModel('itemStyle').get('color');\n\n  if (color) {\n    return color;\n  } else if (visualColor) {\n    // Color mapping\n    return visualColor;\n  } else if (node.depth === 0) {\n    // Virtual root node\n    return ecModel.option.color[0];\n  } else {\n    // First-generation color\n    var length = ecModel.option.color.length;\n    color = ecModel.option.color[getRootId(node) % length];\n  }\n\n  return color;\n}\n/**\n * Get index of root in sorted order\n *\n * @param {TreeNode} node current node\n * @return {number} index in root\n */\n\n\nfunction getRootId(node) {\n  var ancestor = node;\n\n  while (ancestor.depth > 1) {\n    ancestor = ancestor.parentNode;\n  }\n\n  var virtualRoot = node.getAncestors()[0];\n  return zrUtil.indexOf(virtualRoot.children, ancestor);\n}\n\nfunction isNodeHighlighted(node, activeNode, policy) {\n  if (policy === NodeHighlightPolicy.NONE) {\n    return false;\n  } else if (policy === NodeHighlightPolicy.SELF) {\n    return node === activeNode;\n  } else if (policy === NodeHighlightPolicy.ANCESTOR) {\n    return node === activeNode || node.isAncestorOf(activeNode);\n  } else {\n    return node === activeNode || node.isDescendantOf(activeNode);\n  }\n}\n\nmodule.exports = _default;","var env = require(\"zrender/lib/core/env\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar saveAsImageLang = lang.toolbox.saveAsImage;\n\nfunction SaveAsImage(model) {\n  this.model = model;\n}\n\nSaveAsImage.defaultOption = {\n  show: true,\n  icon: 'M4.7,22.9L29.3,45.5L54.7,23.4M4.6,43.6L4.6,58L53.8,58L53.8,43.6M29.2,45.1L29.2,0',\n  title: saveAsImageLang.title,\n  type: 'png',\n  // Default use option.backgroundColor\n  // backgroundColor: '#fff',\n  name: '',\n  excludeComponents: ['toolbox'],\n  pixelRatio: 1,\n  lang: saveAsImageLang.lang.slice()\n};\nSaveAsImage.prototype.unusable = !env.canvasSupported;\nvar proto = SaveAsImage.prototype;\n\nproto.onclick = function (ecModel, api) {\n  var model = this.model;\n  var title = model.get('name') || ecModel.get('title.0.text') || 'echarts';\n  var $a = document.createElement('a');\n  var type = model.get('type', true) || 'png';\n  $a.download = title + '.' + type;\n  $a.target = '_blank';\n  var url = api.getConnectedDataURL({\n    type: type,\n    backgroundColor: model.get('backgroundColor', true) || ecModel.get('backgroundColor') || '#fff',\n    excludeComponents: model.get('excludeComponents'),\n    pixelRatio: model.get('pixelRatio')\n  });\n  $a.href = url; // Chrome and Firefox\n\n  if (typeof MouseEvent === 'function' && !env.browser.ie && !env.browser.edge) {\n    var evt = new MouseEvent('click', {\n      view: window,\n      bubbles: true,\n      cancelable: false\n    });\n    $a.dispatchEvent(evt);\n  } // IE\n  else {\n      if (window.navigator.msSaveOrOpenBlob) {\n        var bstr = atob(url.split(',')[1]);\n        var n = bstr.length;\n        var u8arr = new Uint8Array(n);\n\n        while (n--) {\n          u8arr[n] = bstr.charCodeAt(n);\n        }\n\n        var blob = new Blob([u8arr]);\n        window.navigator.msSaveOrOpenBlob(blob, title + '.' + type);\n      } else {\n        var lang = model.get('lang');\n        var html = '' + '<body style=\"margin:0;\">' + '<img src=\"' + url + '\" style=\"max-width:100%;\" title=\"' + (lang && lang[0] || '') + '\" />' + '</body>';\n        var tab = window.open();\n        tab.document.write(html);\n      }\n    }\n};\n\nfeatureManager.register('saveAsImage', SaveAsImage);\nvar _default = SaveAsImage;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar formatUtil = require(\"../../util/format\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AXIS_DIMS = ['x', 'y', 'z', 'radius', 'angle', 'single']; // Supported coords.\n\nvar COORDS = ['cartesian2d', 'polar', 'singleAxis'];\n/**\n * @param {string} coordType\n * @return {boolean}\n */\n\nfunction isCoordSupported(coordType) {\n  return zrUtil.indexOf(COORDS, coordType) >= 0;\n}\n/**\n * Create \"each\" method to iterate names.\n *\n * @pubilc\n * @param  {Array.<string>} names\n * @param  {Array.<string>=} attrs\n * @return {Function}\n */\n\n\nfunction createNameEach(names, attrs) {\n  names = names.slice();\n  var capitalNames = zrUtil.map(names, formatUtil.capitalFirst);\n  attrs = (attrs || []).slice();\n  var capitalAttrs = zrUtil.map(attrs, formatUtil.capitalFirst);\n  return function (callback, context) {\n    zrUtil.each(names, function (name, index) {\n      var nameObj = {\n        name: name,\n        capital: capitalNames[index]\n      };\n\n      for (var j = 0; j < attrs.length; j++) {\n        nameObj[attrs[j]] = name + capitalAttrs[j];\n      }\n\n      callback.call(context, nameObj);\n    });\n  };\n}\n/**\n * Iterate each dimension name.\n *\n * @public\n * @param {Function} callback The parameter is like:\n *                            {\n *                                name: 'angle',\n *                                capital: 'Angle',\n *                                axis: 'angleAxis',\n *                                axisIndex: 'angleAixs',\n *                                index: 'angleIndex'\n *                            }\n * @param {Object} context\n */\n\n\nvar eachAxisDim = createNameEach(AXIS_DIMS, ['axisIndex', 'axis', 'index', 'id']);\n/**\n * If tow dataZoomModels has the same axis controlled, we say that they are 'linked'.\n * dataZoomModels and 'links' make up one or more graphics.\n * This function finds the graphic where the source dataZoomModel is in.\n *\n * @public\n * @param {Function} forEachNode Node iterator.\n * @param {Function} forEachEdgeType edgeType iterator\n * @param {Function} edgeIdGetter Giving node and edgeType, return an array of edge id.\n * @return {Function} Input: sourceNode, Output: Like {nodes: [], dims: {}}\n */\n\nfunction createLinkedNodesFinder(forEachNode, forEachEdgeType, edgeIdGetter) {\n  return function (sourceNode) {\n    var result = {\n      nodes: [],\n      records: {} // key: edgeType.name, value: Object (key: edge id, value: boolean).\n\n    };\n    forEachEdgeType(function (edgeType) {\n      result.records[edgeType.name] = {};\n    });\n\n    if (!sourceNode) {\n      return result;\n    }\n\n    absorb(sourceNode, result);\n    var existsLink;\n\n    do {\n      existsLink = false;\n      forEachNode(processSingleNode);\n    } while (existsLink);\n\n    function processSingleNode(node) {\n      if (!isNodeAbsorded(node, result) && isLinked(node, result)) {\n        absorb(node, result);\n        existsLink = true;\n      }\n    }\n\n    return result;\n  };\n\n  function isNodeAbsorded(node, result) {\n    return zrUtil.indexOf(result.nodes, node) >= 0;\n  }\n\n  function isLinked(node, result) {\n    var hasLink = false;\n    forEachEdgeType(function (edgeType) {\n      zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n        result.records[edgeType.name][edgeId] && (hasLink = true);\n      });\n    });\n    return hasLink;\n  }\n\n  function absorb(node, result) {\n    result.nodes.push(node);\n    forEachEdgeType(function (edgeType) {\n      zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n        result.records[edgeType.name][edgeId] = true;\n      });\n    });\n  }\n}\n\nexports.isCoordSupported = isCoordSupported;\nexports.createNameEach = createNameEach;\nexports.eachAxisDim = eachAxisDim;\nexports.createLinkedNodesFinder = createLinkedNodesFinder;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../../util/number\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file  Using layout algorithm transform the raw data to layout information.\n * @author Deqing Li(annong035@gmail.com)\n */\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('themeRiver', function (seriesModel) {\n    var data = seriesModel.getData();\n    var single = seriesModel.coordinateSystem;\n    var layoutInfo = {}; // use the axis boundingRect for view\n\n    var rect = single.getRect();\n    layoutInfo.rect = rect;\n    var boundaryGap = seriesModel.get('boundaryGap');\n    var axis = single.getAxis();\n    layoutInfo.boundaryGap = boundaryGap;\n\n    if (axis.orient === 'horizontal') {\n      boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], rect.height);\n      boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], rect.height);\n      var height = rect.height - boundaryGap[0] - boundaryGap[1];\n      themeRiverLayout(data, seriesModel, height);\n    } else {\n      boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], rect.width);\n      boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], rect.width);\n      var width = rect.width - boundaryGap[0] - boundaryGap[1];\n      themeRiverLayout(data, seriesModel, width);\n    }\n\n    data.setLayout('layoutInfo', layoutInfo);\n  });\n}\n/**\n * The layout information about themeriver\n *\n * @param {module:echarts/data/List} data  data in the series\n * @param {module:echarts/model/Series} seriesModel  the model object of themeRiver series\n * @param {number} height  value used to compute every series height\n */\n\n\nfunction themeRiverLayout(data, seriesModel, height) {\n  if (!data.count()) {\n    return;\n  }\n\n  var coordSys = seriesModel.coordinateSystem; // the data in each layer are organized into a series.\n\n  var layerSeries = seriesModel.getLayerSeries(); // the points in each layer.\n\n  var timeDim = data.mapDimension('single');\n  var valueDim = data.mapDimension('value');\n  var layerPoints = zrUtil.map(layerSeries, function (singleLayer) {\n    return zrUtil.map(singleLayer.indices, function (idx) {\n      var pt = coordSys.dataToPoint(data.get(timeDim, idx));\n      pt[1] = data.get(valueDim, idx);\n      return pt;\n    });\n  });\n  var base = computeBaseline(layerPoints);\n  var baseLine = base.y0;\n  var ky = height / base.max; // set layout information for each item.\n\n  var n = layerSeries.length;\n  var m = layerSeries[0].indices.length;\n  var baseY0;\n\n  for (var j = 0; j < m; ++j) {\n    baseY0 = baseLine[j] * ky;\n    data.setItemLayout(layerSeries[0].indices[j], {\n      layerIndex: 0,\n      x: layerPoints[0][j][0],\n      y0: baseY0,\n      y: layerPoints[0][j][1] * ky\n    });\n\n    for (var i = 1; i < n; ++i) {\n      baseY0 += layerPoints[i - 1][j][1] * ky;\n      data.setItemLayout(layerSeries[i].indices[j], {\n        layerIndex: i,\n        x: layerPoints[i][j][0],\n        y0: baseY0,\n        y: layerPoints[i][j][1] * ky\n      });\n    }\n  }\n}\n/**\n * Compute the baseLine of the rawdata\n * Inspired by Lee Byron's paper Stacked Graphs - Geometry & Aesthetics\n *\n * @param  {Array.<Array>} data  the points in each layer\n * @return {Object}\n */\n\n\nfunction computeBaseline(data) {\n  var layerNum = data.length;\n  var pointNum = data[0].length;\n  var sums = [];\n  var y0 = [];\n  var max = 0;\n  var temp;\n  var base = {};\n\n  for (var i = 0; i < pointNum; ++i) {\n    for (var j = 0, temp = 0; j < layerNum; ++j) {\n      temp += data[j][i][1];\n    }\n\n    if (temp > max) {\n      max = temp;\n    }\n\n    sums.push(temp);\n  }\n\n  for (var k = 0; k < pointNum; ++k) {\n    y0[k] = (max - sums[k]) / 2;\n  }\n\n  max = 0;\n\n  for (var l = 0; l < pointNum; ++l) {\n    var sum = sums[l] + y0[l];\n\n    if (sum > max) {\n      max = sum;\n    }\n  }\n\n  base.y0 = y0;\n  base.max = max;\n  return base;\n}\n\nmodule.exports = _default;","require(\"./visualMapContinuous\");\n\nrequire(\"./visualMapPiecewise\");","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('map', function (seriesModel) {\n    var colorList = seriesModel.get('color');\n    var itemStyleModel = seriesModel.getModel('itemStyle');\n    var areaColor = itemStyleModel.get('areaColor');\n    var color = itemStyleModel.get('color') || colorList[seriesModel.seriesIndex % colorList.length];\n    seriesModel.getData().setVisual({\n      'areaColor': areaColor,\n      'color': color\n    });\n  });\n}\n\nmodule.exports = _default;","var makeStyleMapper = require(\"./makeStyleMapper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar getItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor'], ['textPosition'], ['textAlign']]);\nvar _default = {\n  getItemStyle: function (excludes, includes) {\n    var style = getItemStyle(this, excludes, includes);\n    var lineDash = this.getBorderLineDash();\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getBorderLineDash: function () {\n    var lineType = this.get('borderType');\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [5, 5] : [1, 1];\n  }\n};\nmodule.exports = _default;","require(\"../coord/radar/Radar\");\n\nrequire(\"../coord/radar/RadarModel\");\n\nrequire(\"./radar/RadarView\");","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar RoamController = require(\"../../component/helper/RoamController\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Only create one roam controller for each coordinate system.\n// one roam controller might be refered by two inside data zoom\n// components (for example, one for x and one for y). When user\n// pan or zoom, only dispatch one action for those data zoom\n// components.\nvar curry = zrUtil.curry;\nvar ATTR = '\\0_ec_dataZoom_roams';\n/**\n * @public\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} dataZoomInfo\n * @param {string} dataZoomInfo.coordId\n * @param {Function} dataZoomInfo.containsPoint\n * @param {Array.<string>} dataZoomInfo.allCoordIds\n * @param {string} dataZoomInfo.dataZoomId\n * @param {number} dataZoomInfo.throttleRate\n * @param {Function} dataZoomInfo.panGetRange\n * @param {Function} dataZoomInfo.zoomGetRange\n * @param {boolean} [dataZoomInfo.zoomLock]\n * @param {boolean} [dataZoomInfo.disabled]\n */\n\nfunction register(api, dataZoomInfo) {\n  var store = giveStore(api);\n  var theDataZoomId = dataZoomInfo.dataZoomId;\n  var theCoordId = dataZoomInfo.coordId; // Do clean when a dataZoom changes its target coordnate system.\n  // Avoid memory leak, dispose all not-used-registered.\n\n  zrUtil.each(store, function (record, coordId) {\n    var dataZoomInfos = record.dataZoomInfos;\n\n    if (dataZoomInfos[theDataZoomId] && zrUtil.indexOf(dataZoomInfo.allCoordIds, theCoordId) < 0) {\n      delete dataZoomInfos[theDataZoomId];\n      record.count--;\n    }\n  });\n  cleanStore(store);\n  var record = store[theCoordId]; // Create if needed.\n\n  if (!record) {\n    record = store[theCoordId] = {\n      coordId: theCoordId,\n      dataZoomInfos: {},\n      count: 0\n    };\n    record.controller = createController(api, record);\n    record.dispatchAction = zrUtil.curry(dispatchAction, api);\n  } // Update reference of dataZoom.\n\n\n  !record.dataZoomInfos[theDataZoomId] && record.count++;\n  record.dataZoomInfos[theDataZoomId] = dataZoomInfo;\n  var controllerParams = mergeControllerParams(record.dataZoomInfos);\n  record.controller.enable(controllerParams.controlType, controllerParams.opt); // Consider resize, area should be always updated.\n\n  record.controller.setPointerChecker(dataZoomInfo.containsPoint); // Update throttle.\n\n  throttleUtil.createOrUpdate(record, 'dispatchAction', dataZoomInfo.throttleRate, 'fixRate');\n}\n/**\n * @public\n * @param {module:echarts/ExtensionAPI} api\n * @param {string} dataZoomId\n */\n\n\nfunction unregister(api, dataZoomId) {\n  var store = giveStore(api);\n  zrUtil.each(store, function (record) {\n    record.controller.dispose();\n    var dataZoomInfos = record.dataZoomInfos;\n\n    if (dataZoomInfos[dataZoomId]) {\n      delete dataZoomInfos[dataZoomId];\n      record.count--;\n    }\n  });\n  cleanStore(store);\n}\n/**\n * @public\n */\n\n\nfunction generateCoordId(coordModel) {\n  return coordModel.type + '\\0_' + coordModel.id;\n}\n/**\n * Key: coordId, value: {dataZoomInfos: [], count, controller}\n * @type {Array.<Object>}\n */\n\n\nfunction giveStore(api) {\n  // Mount store on zrender instance, so that we do not\n  // need to worry about dispose.\n  var zr = api.getZr();\n  return zr[ATTR] || (zr[ATTR] = {});\n}\n\nfunction createController(api, newRecord) {\n  var controller = new RoamController(api.getZr());\n  controller.on('pan', curry(onPan, newRecord));\n  controller.on('zoom', curry(onZoom, newRecord));\n  return controller;\n}\n\nfunction cleanStore(store) {\n  zrUtil.each(store, function (record, coordId) {\n    if (!record.count) {\n      record.controller.dispose();\n      delete store[coordId];\n    }\n  });\n}\n\nfunction onPan(record, dx, dy, oldX, oldY, newX, newY) {\n  wrapAndDispatch(record, function (info) {\n    return info.panGetRange(record.controller, dx, dy, oldX, oldY, newX, newY);\n  });\n}\n\nfunction onZoom(record, scale, mouseX, mouseY) {\n  wrapAndDispatch(record, function (info) {\n    return info.zoomGetRange(record.controller, scale, mouseX, mouseY);\n  });\n}\n\nfunction wrapAndDispatch(record, getRange) {\n  var batch = [];\n  zrUtil.each(record.dataZoomInfos, function (info) {\n    var range = getRange(info);\n    !info.disabled && range && batch.push({\n      dataZoomId: info.dataZoomId,\n      start: range[0],\n      end: range[1]\n    });\n  });\n  batch.length && record.dispatchAction(batch);\n}\n/**\n * This action will be throttled.\n */\n\n\nfunction dispatchAction(api, batch) {\n  api.dispatchAction({\n    type: 'dataZoom',\n    batch: batch\n  });\n}\n/**\n * Merge roamController settings when multiple dataZooms share one roamController.\n */\n\n\nfunction mergeControllerParams(dataZoomInfos) {\n  var controlType;\n  var opt = {}; // DO NOT use reserved word (true, false, undefined) as key literally. Even if encapsulated\n  // as string, it is probably revert to reserved word by compress tool. See #7411.\n\n  var prefix = 'type_';\n  var typePriority = {\n    'type_true': 2,\n    'type_move': 1,\n    'type_false': 0,\n    'type_undefined': -1\n  };\n  zrUtil.each(dataZoomInfos, function (dataZoomInfo) {\n    var oneType = dataZoomInfo.disabled ? false : dataZoomInfo.zoomLock ? 'move' : true;\n\n    if (typePriority[prefix + oneType] > typePriority[prefix + controlType]) {\n      controlType = oneType;\n    } // Do not support that different 'shift'/'ctrl'/'alt' setting used in one coord sys.\n\n\n    zrUtil.extend(opt, dataZoomInfo.roamControllerOpt);\n  });\n  return {\n    controlType: controlType,\n    opt: opt\n  };\n}\n\nexports.register = register;\nexports.unregister = unregister;\nexports.generateCoordId = generateCoordId;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction retrieveTargetInfo(payload, validPayloadTypes, seriesModel) {\n  if (payload && zrUtil.indexOf(validPayloadTypes, payload.type) >= 0) {\n    var root = seriesModel.getData().tree.root;\n    var targetNode = payload.targetNode;\n\n    if (targetNode && root.contains(targetNode)) {\n      return {\n        node: targetNode\n      };\n    }\n\n    var targetNodeId = payload.targetNodeId;\n\n    if (targetNodeId != null && (targetNode = root.getNodeById(targetNodeId))) {\n      return {\n        node: targetNode\n      };\n    }\n  }\n} // Not includes the given node at the last item.\n\n\nfunction getPathToRoot(node) {\n  var path = [];\n\n  while (node) {\n    node = node.parentNode;\n    node && path.push(node);\n  }\n\n  return path.reverse();\n}\n\nfunction aboveViewRoot(viewRoot, node) {\n  var viewPath = getPathToRoot(viewRoot);\n  return zrUtil.indexOf(viewPath, node) >= 0;\n} // From root to the input node (the input node will be included).\n\n\nfunction wrapTreePathInfo(node, seriesModel) {\n  var treePathInfo = [];\n\n  while (node) {\n    var nodeDataIndex = node.dataIndex;\n    treePathInfo.push({\n      name: node.name,\n      dataIndex: nodeDataIndex,\n      value: seriesModel.getRawValue(nodeDataIndex)\n    });\n    node = node.parentNode;\n  }\n\n  treePathInfo.reverse();\n  return treePathInfo;\n}\n\nexports.retrieveTargetInfo = retrieveTargetInfo;\nexports.getPathToRoot = getPathToRoot;\nexports.aboveViewRoot = aboveViewRoot;\nexports.wrapTreePathInfo = wrapTreePathInfo;","function buildPath(ctx, shape) {\n  var x = shape.x;\n  var y = shape.y;\n  var width = shape.width;\n  var height = shape.height;\n  var r = shape.r;\n  var r1;\n  var r2;\n  var r3;\n  var r4; // Convert width and height to positive for better borderRadius\n\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n\n  if (typeof r === 'number') {\n    r1 = r2 = r3 = r4 = r;\n  } else if (r instanceof Array) {\n    if (r.length === 1) {\n      r1 = r2 = r3 = r4 = r[0];\n    } else if (r.length === 2) {\n      r1 = r3 = r[0];\n      r2 = r4 = r[1];\n    } else if (r.length === 3) {\n      r1 = r[0];\n      r2 = r4 = r[1];\n      r3 = r[2];\n    } else {\n      r1 = r[0];\n      r2 = r[1];\n      r3 = r[2];\n      r4 = r[3];\n    }\n  } else {\n    r1 = r2 = r3 = r4 = 0;\n  }\n\n  var total;\n\n  if (r1 + r2 > width) {\n    total = r1 + r2;\n    r1 *= width / total;\n    r2 *= width / total;\n  }\n\n  if (r3 + r4 > width) {\n    total = r3 + r4;\n    r3 *= width / total;\n    r4 *= width / total;\n  }\n\n  if (r2 + r3 > height) {\n    total = r2 + r3;\n    r2 *= height / total;\n    r3 *= height / total;\n  }\n\n  if (r1 + r4 > height) {\n    total = r1 + r4;\n    r1 *= height / total;\n    r4 *= height / total;\n  }\n\n  ctx.moveTo(x + r1, y);\n  ctx.lineTo(x + width - r2, y);\n  r2 !== 0 && ctx.arc(x + width - r2, y + r2, r2, -Math.PI / 2, 0);\n  ctx.lineTo(x + width, y + height - r3);\n  r3 !== 0 && ctx.arc(x + width - r3, y + height - r3, r3, 0, Math.PI / 2);\n  ctx.lineTo(x + r4, y + height);\n  r4 !== 0 && ctx.arc(x + r4, y + height - r4, r4, Math.PI / 2, Math.PI);\n  ctx.lineTo(x, y + r1);\n  r1 !== 0 && ctx.arc(x + r1, y + r1, r1, Math.PI, Math.PI * 1.5);\n}\n\nexports.buildPath = buildPath;","var graphic = require(\"../../util/graphic\");\n\nvar echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file  The file used to draw sankey view\n * @author  Deqing Li(annong035@gmail.com)\n */\nvar SankeyShape = graphic.extendShape({\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    cpx2: 0,\n    cpy2: 0,\n    extent: 0\n  },\n  buildPath: function (ctx, shape) {\n    var halfExtent = shape.extent / 2;\n    ctx.moveTo(shape.x1, shape.y1 - halfExtent);\n    ctx.bezierCurveTo(shape.cpx1, shape.cpy1 - halfExtent, shape.cpx2, shape.cpy2 - halfExtent, shape.x2, shape.y2 - halfExtent);\n    ctx.lineTo(shape.x2, shape.y2 + halfExtent);\n    ctx.bezierCurveTo(shape.cpx2, shape.cpy2 + halfExtent, shape.cpx1, shape.cpy1 + halfExtent, shape.x1, shape.y1 + halfExtent);\n    ctx.closePath();\n  }\n});\n\nvar _default = echarts.extendChartView({\n  type: 'sankey',\n\n  /**\n   * @private\n   * @type {module:echarts/chart/sankey/SankeySeries}\n   */\n  _model: null,\n  render: function (seriesModel, ecModel, api) {\n    var graph = seriesModel.getGraph();\n    var group = this.group;\n    var layoutInfo = seriesModel.layoutInfo; // view width\n\n    var width = layoutInfo.width; // view height\n\n    var height = layoutInfo.height;\n    var nodeData = seriesModel.getData();\n    var edgeData = seriesModel.getData('edge');\n    this._model = seriesModel;\n    group.removeAll();\n    group.attr('position', [layoutInfo.x, layoutInfo.y]); // generate a bezire Curve for each edge\n\n    graph.eachEdge(function (edge) {\n      var curve = new SankeyShape();\n      curve.dataIndex = edge.dataIndex;\n      curve.seriesIndex = seriesModel.seriesIndex;\n      curve.dataType = 'edge';\n      var lineStyleModel = edge.getModel('lineStyle');\n      var curvature = lineStyleModel.get('curveness');\n      var n1Layout = edge.node1.getLayout();\n      var node1Model = edge.node1.getModel();\n      var dragX1 = node1Model.get('localX');\n      var dragY1 = node1Model.get('localY');\n      var n2Layout = edge.node2.getLayout();\n      var node2Model = edge.node2.getModel();\n      var dragX2 = node2Model.get('localX');\n      var dragY2 = node2Model.get('localY');\n      var edgeLayout = edge.getLayout();\n      curve.shape.extent = Math.max(1, edgeLayout.dy);\n      var x1 = (dragX1 != null ? dragX1 * width : n1Layout.x) + n1Layout.dx;\n      var y1 = (dragY1 != null ? dragY1 * height : n1Layout.y) + edgeLayout.sy + edgeLayout.dy / 2;\n      var x2 = dragX2 != null ? dragX2 * width : n2Layout.x;\n      var y2 = (dragY2 != null ? dragY2 * height : n2Layout.y) + edgeLayout.ty + edgeLayout.dy / 2;\n      var cpx1 = x1 * (1 - curvature) + x2 * curvature;\n      var cpy1 = y1;\n      var cpx2 = x1 * curvature + x2 * (1 - curvature);\n      var cpy2 = y2;\n      curve.setShape({\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        cpx1: cpx1,\n        cpy1: cpy1,\n        cpx2: cpx2,\n        cpy2: cpy2\n      });\n      curve.setStyle(lineStyleModel.getItemStyle()); // Special color, use source node color or target node color\n\n      switch (curve.style.fill) {\n        case 'source':\n          curve.style.fill = edge.node1.getVisual('color');\n          break;\n\n        case 'target':\n          curve.style.fill = edge.node2.getVisual('color');\n          break;\n      }\n\n      graphic.setHoverStyle(curve, edge.getModel('emphasis.lineStyle').getItemStyle());\n      group.add(curve);\n      edgeData.setItemGraphicEl(edge.dataIndex, curve);\n    }); // generate a rect for each node\n\n    graph.eachNode(function (node) {\n      var layout = node.getLayout();\n      var itemModel = node.getModel();\n      var dragX = itemModel.get('localX');\n      var dragY = itemModel.get('localY');\n      var labelModel = itemModel.getModel('label');\n      var labelHoverModel = itemModel.getModel('emphasis.label');\n      var rect = new graphic.Rect({\n        shape: {\n          x: dragX != null ? dragX * width : layout.x,\n          y: dragY != null ? dragY * height : layout.y,\n          width: layout.dx,\n          height: layout.dy\n        },\n        style: itemModel.getModel('itemStyle').getItemStyle()\n      });\n      var hoverStyle = node.getModel('emphasis.itemStyle').getItemStyle();\n      graphic.setLabelStyle(rect.style, hoverStyle, labelModel, labelHoverModel, {\n        labelFetcher: seriesModel,\n        labelDataIndex: node.dataIndex,\n        defaultText: node.id,\n        isRectText: true\n      });\n      rect.setStyle('fill', node.getVisual('color'));\n      graphic.setHoverStyle(rect, hoverStyle);\n      group.add(rect);\n      nodeData.setItemGraphicEl(node.dataIndex, rect);\n      rect.dataType = 'node';\n    });\n    var draggable = seriesModel.get('draggable');\n\n    if (draggable) {\n      nodeData.eachItemGraphicEl(function (el, dataIndex) {\n        el.drift = function (dx, dy) {\n          this.shape.x += dx;\n          this.shape.y += dy;\n          this.dirty();\n          api.dispatchAction({\n            type: 'dragNode',\n            seriesId: seriesModel.id,\n            dataIndex: nodeData.getRawIndex(dataIndex),\n            localX: this.shape.x / width,\n            localY: this.shape.y / height\n          });\n        };\n\n        el.draggable = true;\n        el.cursor = 'move';\n      });\n    }\n\n    if (!this._data && seriesModel.get('animation')) {\n      group.setClipPath(createGridClipShape(group.getBoundingRect(), seriesModel, function () {\n        group.removeClipPath();\n      }));\n    }\n\n    this._data = seriesModel.getData();\n  },\n  dispose: function () {}\n}); // add animation to the view\n\n\nfunction createGridClipShape(rect, seriesModel, cb) {\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x - 10,\n      y: rect.y - 10,\n      width: 0,\n      height: rect.height + 20\n    }\n  });\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width + 20,\n      height: rect.height + 20\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nmodule.exports = _default;","var _forceHelper = require(\"./forceHelper\");\n\nvar forceLayout = _forceHelper.forceLayout;\n\nvar _simpleLayoutHelper = require(\"./simpleLayoutHelper\");\n\nvar simpleLayout = _simpleLayoutHelper.simpleLayout;\n\nvar _circularLayoutHelper = require(\"./circularLayoutHelper\");\n\nvar circularLayout = _circularLayoutHelper.circularLayout;\n\nvar _number = require(\"../../util/number\");\n\nvar linearMap = _number.linearMap;\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (graphSeries) {\n    var coordSys = graphSeries.coordinateSystem;\n\n    if (coordSys && coordSys.type !== 'view') {\n      return;\n    }\n\n    if (graphSeries.get('layout') === 'force') {\n      var preservedPoints = graphSeries.preservedPoints || {};\n      var graph = graphSeries.getGraph();\n      var nodeData = graph.data;\n      var edgeData = graph.edgeData;\n      var forceModel = graphSeries.getModel('force');\n      var initLayout = forceModel.get('initLayout');\n\n      if (graphSeries.preservedPoints) {\n        nodeData.each(function (idx) {\n          var id = nodeData.getId(idx);\n          nodeData.setItemLayout(idx, preservedPoints[id] || [NaN, NaN]);\n        });\n      } else if (!initLayout || initLayout === 'none') {\n        simpleLayout(graphSeries);\n      } else if (initLayout === 'circular') {\n        circularLayout(graphSeries);\n      }\n\n      var nodeDataExtent = nodeData.getDataExtent('value');\n      var edgeDataExtent = edgeData.getDataExtent('value'); // var edgeDataExtent = edgeData.getDataExtent('value');\n\n      var repulsion = forceModel.get('repulsion');\n      var edgeLength = forceModel.get('edgeLength');\n\n      if (!zrUtil.isArray(repulsion)) {\n        repulsion = [repulsion, repulsion];\n      }\n\n      if (!zrUtil.isArray(edgeLength)) {\n        edgeLength = [edgeLength, edgeLength];\n      } // Larger value has smaller length\n\n\n      edgeLength = [edgeLength[1], edgeLength[0]];\n      var nodes = nodeData.mapArray('value', function (value, idx) {\n        var point = nodeData.getItemLayout(idx);\n        var rep = linearMap(value, nodeDataExtent, repulsion);\n\n        if (isNaN(rep)) {\n          rep = (repulsion[0] + repulsion[1]) / 2;\n        }\n\n        return {\n          w: rep,\n          rep: rep,\n          fixed: nodeData.getItemModel(idx).get('fixed'),\n          p: !point || isNaN(point[0]) || isNaN(point[1]) ? null : point\n        };\n      });\n      var edges = edgeData.mapArray('value', function (value, idx) {\n        var edge = graph.getEdgeByIndex(idx);\n        var d = linearMap(value, edgeDataExtent, edgeLength);\n\n        if (isNaN(d)) {\n          d = (edgeLength[0] + edgeLength[1]) / 2;\n        }\n\n        return {\n          n1: nodes[edge.node1.dataIndex],\n          n2: nodes[edge.node2.dataIndex],\n          d: d,\n          curveness: edge.getModel().get('lineStyle.curveness') || 0\n        };\n      });\n      var coordSys = graphSeries.coordinateSystem;\n      var rect = coordSys.getBoundingRect();\n      var forceInstance = forceLayout(nodes, edges, {\n        rect: rect,\n        gravity: forceModel.get('gravity')\n      });\n      var oldStep = forceInstance.step;\n\n      forceInstance.step = function (cb) {\n        for (var i = 0, l = nodes.length; i < l; i++) {\n          if (nodes[i].fixed) {\n            // Write back to layout instance\n            vec2.copy(nodes[i].p, graph.getNodeByIndex(i).getLayout());\n          }\n        }\n\n        oldStep(function (nodes, edges, stopped) {\n          for (var i = 0, l = nodes.length; i < l; i++) {\n            if (!nodes[i].fixed) {\n              graph.getNodeByIndex(i).setLayout(nodes[i].p);\n            }\n\n            preservedPoints[nodeData.getId(i)] = nodes[i].p;\n          }\n\n          for (var i = 0, l = edges.length; i < l; i++) {\n            var e = edges[i];\n            var edge = graph.getEdgeByIndex(i);\n            var p1 = e.n1.p;\n            var p2 = e.n2.p;\n            var points = edge.getLayout();\n            points = points ? points.slice() : [];\n            points[0] = points[0] || [];\n            points[1] = points[1] || [];\n            vec2.copy(points[0], p1);\n            vec2.copy(points[1], p2);\n\n            if (+e.curveness) {\n              points[2] = [(p1[0] + p2[0]) / 2 - (p1[1] - p2[1]) * e.curveness, (p1[1] + p2[1]) / 2 - (p2[0] - p1[0]) * e.curveness];\n            }\n\n            edge.setLayout(points);\n          } // Update layout\n\n\n          cb && cb(stopped);\n        });\n      };\n\n      graphSeries.forceLayout = forceInstance;\n      graphSeries.preservedPoints = preservedPoints; // Step to get the layout\n\n      forceInstance.step();\n    } else {\n      // Remove prev injected forceLayout instance\n      graphSeries.forceLayout = null;\n    }\n  });\n}\n\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar isObject = _util.isObject;\nvar each = _util.each;\nvar map = _util.map;\nvar indexOf = _util.indexOf;\nvar retrieve = _util.retrieve;\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar _axisHelper = require(\"../../coord/axisHelper\");\n\nvar createScaleByModel = _axisHelper.createScaleByModel;\nvar ifAxisCrossZero = _axisHelper.ifAxisCrossZero;\nvar niceScaleExtent = _axisHelper.niceScaleExtent;\nvar estimateLabelUnionRect = _axisHelper.estimateLabelUnionRect;\n\nvar Cartesian2D = require(\"./Cartesian2D\");\n\nvar Axis2D = require(\"./Axis2D\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar getStackedDimension = _dataStackHelper.getStackedDimension;\n\nrequire(\"./GridModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\n// Depends on GridModel, AxisModel, which performs preprocess.\n\n/**\n * Check if the axis is used in the specified grid\n * @inner\n */\nfunction isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n  return axisModel.getCoordSysModel() === gridModel;\n}\n\nfunction Grid(gridModel, ecModel, api) {\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n   * @private\n   */\n  this._coordsMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n   * @private\n   */\n\n  this._coordsList = [];\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesList = [];\n\n  this._initCartesian(gridModel, ecModel, api);\n\n  this.model = gridModel;\n}\n\nvar gridProto = Grid.prototype;\ngridProto.type = 'grid';\ngridProto.axisPointerEnabled = true;\n\ngridProto.getRect = function () {\n  return this._rect;\n};\n\ngridProto.update = function (ecModel, api) {\n  var axesMap = this._axesMap;\n\n  this._updateScale(ecModel, this.model);\n\n  each(axesMap.x, function (xAxis) {\n    niceScaleExtent(xAxis.scale, xAxis.model);\n  });\n  each(axesMap.y, function (yAxis) {\n    niceScaleExtent(yAxis.scale, yAxis.model);\n  });\n  each(axesMap.x, function (xAxis) {\n    fixAxisOnZero(axesMap, 'y', xAxis);\n  });\n  each(axesMap.y, function (yAxis) {\n    fixAxisOnZero(axesMap, 'x', yAxis);\n  }); // Resize again if containLabel is enabled\n  // FIXME It may cause getting wrong grid size in data processing stage\n\n  this.resize(this.model, api);\n};\n\nfunction fixAxisOnZero(axesMap, otherAxisDim, axis) {\n  axis.getAxesOnZeroOf = function () {\n    // TODO: onZero of multiple axes.\n    return otherAxis ? [otherAxis] : [];\n  }; // onZero can not be enabled in these two situations:\n  // 1. When any other axis is a category axis.\n  // 2. When no axis is cross 0 point.\n\n\n  var otherAxes = axesMap[otherAxisDim];\n  var otherAxis;\n  var axisModel = axis.model;\n  var onZero = axisModel.get('axisLine.onZero');\n  var onZeroAxisIndex = axisModel.get('axisLine.onZeroAxisIndex');\n\n  if (!onZero) {\n    return;\n  } // If target axis is specified.\n\n\n  if (onZeroAxisIndex != null) {\n    if (canOnZeroToAxis(otherAxes[onZeroAxisIndex])) {\n      otherAxis = otherAxes[onZeroAxisIndex];\n    }\n\n    return;\n  } // Find the first available other axis.\n\n\n  for (var idx in otherAxes) {\n    if (otherAxes.hasOwnProperty(idx) && canOnZeroToAxis(otherAxes[idx])) {\n      otherAxis = otherAxes[idx];\n      break;\n    }\n  }\n}\n\nfunction canOnZeroToAxis(axis) {\n  return axis && axis.type !== 'category' && axis.type !== 'time' && ifAxisCrossZero(axis);\n}\n/**\n * Resize the grid\n * @param {module:echarts/coord/cartesian/GridModel} gridModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\ngridProto.resize = function (gridModel, api, ignoreContainLabel) {\n  var gridRect = getLayoutRect(gridModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n  this._rect = gridRect;\n  var axesList = this._axesList;\n  adjustAxes(); // Minus label size\n\n  if (!ignoreContainLabel && gridModel.get('containLabel')) {\n    each(axesList, function (axis) {\n      if (!axis.model.get('axisLabel.inside')) {\n        var labelUnionRect = estimateLabelUnionRect(axis);\n\n        if (labelUnionRect) {\n          var dim = axis.isHorizontal() ? 'height' : 'width';\n          var margin = axis.model.get('axisLabel.margin');\n          gridRect[dim] -= labelUnionRect[dim] + margin;\n\n          if (axis.position === 'top') {\n            gridRect.y += labelUnionRect.height + margin;\n          } else if (axis.position === 'left') {\n            gridRect.x += labelUnionRect.width + margin;\n          }\n        }\n      }\n    });\n    adjustAxes();\n  }\n\n  function adjustAxes() {\n    each(axesList, function (axis) {\n      var isHorizontal = axis.isHorizontal();\n      var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(extent[idx], extent[1 - idx]);\n      updateAxisTransform(axis, isHorizontal ? gridRect.x : gridRect.y);\n    });\n  }\n};\n/**\n * @param {string} axisType\n * @param {number} [axisIndex]\n */\n\n\ngridProto.getAxis = function (axisType, axisIndex) {\n  var axesMapOnDim = this._axesMap[axisType];\n\n  if (axesMapOnDim != null) {\n    if (axisIndex == null) {\n      // Find first axis\n      for (var name in axesMapOnDim) {\n        if (axesMapOnDim.hasOwnProperty(name)) {\n          return axesMapOnDim[name];\n        }\n      }\n    }\n\n    return axesMapOnDim[axisIndex];\n  }\n};\n/**\n * @return {Array.<module:echarts/coord/Axis>}\n */\n\n\ngridProto.getAxes = function () {\n  return this._axesList.slice();\n};\n/**\n * Usage:\n *      grid.getCartesian(xAxisIndex, yAxisIndex);\n *      grid.getCartesian(xAxisIndex);\n *      grid.getCartesian(null, yAxisIndex);\n *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n *\n * @param {number|Object} [xAxisIndex]\n * @param {number} [yAxisIndex]\n */\n\n\ngridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n  if (xAxisIndex != null && yAxisIndex != null) {\n    var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n    return this._coordsMap[key];\n  }\n\n  if (isObject(xAxisIndex)) {\n    yAxisIndex = xAxisIndex.yAxisIndex;\n    xAxisIndex = xAxisIndex.xAxisIndex;\n  } // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n\n\n  for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n    if (coordList[i].getAxis('x').index === xAxisIndex || coordList[i].getAxis('y').index === yAxisIndex) {\n      return coordList[i];\n    }\n  }\n};\n\ngridProto.getCartesians = function () {\n  return this._coordsList.slice();\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertToPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.dataToPoint(value) : target.axis ? target.axis.toGlobalCoord(target.axis.dataToCoord(value)) : null;\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertFromPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.pointToData(value) : target.axis ? target.axis.coordToData(target.axis.toLocalCoord(value)) : null;\n};\n/**\n * @inner\n */\n\n\ngridProto._findConvertTarget = function (ecModel, finder) {\n  var seriesModel = finder.seriesModel;\n  var xAxisModel = finder.xAxisModel || seriesModel && seriesModel.getReferringComponents('xAxis')[0];\n  var yAxisModel = finder.yAxisModel || seriesModel && seriesModel.getReferringComponents('yAxis')[0];\n  var gridModel = finder.gridModel;\n  var coordsList = this._coordsList;\n  var cartesian;\n  var axis;\n\n  if (seriesModel) {\n    cartesian = seriesModel.coordinateSystem;\n    indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n  } else if (xAxisModel && yAxisModel) {\n    cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  } else if (xAxisModel) {\n    axis = this.getAxis('x', xAxisModel.componentIndex);\n  } else if (yAxisModel) {\n    axis = this.getAxis('y', yAxisModel.componentIndex);\n  } // Lowest priority.\n  else if (gridModel) {\n      var grid = gridModel.coordinateSystem;\n\n      if (grid === this) {\n        cartesian = this._coordsList[0];\n      }\n    }\n\n  return {\n    cartesian: cartesian,\n    axis: axis\n  };\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.containPoint = function (point) {\n  var coord = this._coordsList[0];\n\n  if (coord) {\n    return coord.containPoint(point);\n  }\n};\n/**\n * Initialize cartesian coordinate systems\n * @private\n */\n\n\ngridProto._initCartesian = function (gridModel, ecModel, api) {\n  var axisPositionUsed = {\n    left: false,\n    right: false,\n    top: false,\n    bottom: false\n  };\n  var axesMap = {\n    x: {},\n    y: {}\n  };\n  var axesCount = {\n    x: 0,\n    y: 0\n  }; /// Create axis\n\n  ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n  ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n  if (!axesCount.x || !axesCount.y) {\n    // Roll back when there no either x or y axis\n    this._axesMap = {};\n    this._axesList = [];\n    return;\n  }\n\n  this._axesMap = axesMap; /// Create cartesian2d\n\n  each(axesMap.x, function (xAxis, xAxisIndex) {\n    each(axesMap.y, function (yAxis, yAxisIndex) {\n      var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n      var cartesian = new Cartesian2D(key);\n      cartesian.grid = this;\n      cartesian.model = gridModel;\n      this._coordsMap[key] = cartesian;\n\n      this._coordsList.push(cartesian);\n\n      cartesian.addAxis(xAxis);\n      cartesian.addAxis(yAxis);\n    }, this);\n  }, this);\n\n  function createAxisCreator(axisType) {\n    return function (axisModel, idx) {\n      if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var axisPosition = axisModel.get('position');\n\n      if (axisType === 'x') {\n        // Fix position\n        if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n          // Default bottom of X\n          axisPosition = 'bottom';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n          }\n        }\n      } else {\n        // Fix position\n        if (axisPosition !== 'left' && axisPosition !== 'right') {\n          // Default left of Y\n          axisPosition = 'left';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n          }\n        }\n      }\n\n      axisPositionUsed[axisPosition] = true;\n      var axis = new Axis2D(axisType, createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisPosition);\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse'); // Inject axis into axisModel\n\n      axisModel.axis = axis; // Inject axisModel into axis\n\n      axis.model = axisModel; // Inject grid info axis\n\n      axis.grid = this; // Index of axis, can be used as key\n\n      axis.index = idx;\n\n      this._axesList.push(axis);\n\n      axesMap[axisType][idx] = axis;\n      axesCount[axisType]++;\n    };\n  }\n};\n/**\n * Update cartesian properties from series\n * @param  {module:echarts/model/Option} option\n * @private\n */\n\n\ngridProto._updateScale = function (ecModel, gridModel) {\n  // Reset scale\n  each(this._axesList, function (axis) {\n    axis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (isCartesian2D(seriesModel)) {\n      var axesModels = findAxesModels(seriesModel, ecModel);\n      var xAxisModel = axesModels[0];\n      var yAxisModel = axesModels[1];\n\n      if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel) || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n      var data = seriesModel.getData();\n      var xAxis = cartesian.getAxis('x');\n      var yAxis = cartesian.getAxis('y');\n\n      if (data.type === 'list') {\n        unionExtent(data, xAxis, seriesModel);\n        unionExtent(data, yAxis, seriesModel);\n      }\n    }\n  }, this);\n\n  function unionExtent(data, axis, seriesModel) {\n    each(data.mapDimension(axis.dim, true), function (dim) {\n      axis.scale.unionExtentFromData( // For example, the extent of the orginal dimension\n      // is [0.1, 0.5], the extent of the `stackResultDimension`\n      // is [7, 9], the final extent should not include [0.1, 0.5].\n      data, getStackedDimension(data, dim));\n    });\n  }\n};\n/**\n * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n * @return {Object} {baseAxes: [], otherAxes: []}\n */\n\n\ngridProto.getTooltipAxes = function (dim) {\n  var baseAxes = [];\n  var otherAxes = [];\n  each(this.getCartesians(), function (cartesian) {\n    var baseAxis = dim != null && dim !== 'auto' ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n    var otherAxis = cartesian.getOtherAxis(baseAxis);\n    indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n    indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n  });\n  return {\n    baseAxes: baseAxes,\n    otherAxes: otherAxes\n  };\n};\n/**\n * @inner\n */\n\n\nfunction updateAxisTransform(axis, coordBase) {\n  var axisExtent = axis.getExtent();\n  var axisExtentSum = axisExtent[0] + axisExtent[1]; // Fast transform\n\n  axis.toGlobalCoord = axis.dim === 'x' ? function (coord) {\n    return coord + coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n  axis.toLocalCoord = axis.dim === 'x' ? function (coord) {\n    return coord - coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n}\n\nvar axesTypes = ['xAxis', 'yAxis'];\n/**\n * @inner\n */\n\nfunction findAxesModels(seriesModel, ecModel) {\n  return map(axesTypes, function (axisType) {\n    var axisModel = seriesModel.getReferringComponents(axisType)[0];\n    return axisModel;\n  });\n}\n/**\n * @inner\n */\n\n\nfunction isCartesian2D(seriesModel) {\n  return seriesModel.get('coordinateSystem') === 'cartesian2d';\n}\n\nGrid.create = function (ecModel, api) {\n  var grids = [];\n  ecModel.eachComponent('grid', function (gridModel, idx) {\n    var grid = new Grid(gridModel, ecModel, api);\n    grid.name = 'grid_' + idx; // dataSampling requires axis extent, so resize\n    // should be performed in create stage.\n\n    grid.resize(gridModel, api, true);\n    gridModel.coordinateSystem = grid;\n    grids.push(grid);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (!isCartesian2D(seriesModel)) {\n      return;\n    }\n\n    var axesModels = findAxesModels(seriesModel, ecModel);\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var gridModel = xAxisModel.getCoordSysModel();\n    var grid = gridModel.coordinateSystem;\n    seriesModel.coordinateSystem = grid.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  });\n  return grids;\n}; // For deciding which dimensions to use when creating list data\n\n\nGrid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\nCoordinateSystem.register('cartesian2d', Grid);\nvar _default = Grid;\nmodule.exports = _default;","require(\"./heatmap/HeatmapSeries\");\n\nrequire(\"./heatmap/HeatmapView\");","var util = require(\"./core/util\");\n\nvar _config = require(\"./config\");\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar Style = require(\"./graphic/Style\");\n\nvar Pattern = require(\"./graphic/Pattern\");\n\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\nfunction returnFalse() {\n  return false;\n}\n/**\n * 创建dom\n *\n * @inner\n * @param {string} id dom id 待用\n * @param {Painter} painter painter instance\n * @param {number} number\n */\n\n\nfunction createDom(id, painter, dpr) {\n  var newDom = util.createCanvas();\n  var width = painter.getWidth();\n  var height = painter.getHeight();\n  var newDomStyle = newDom.style;\n\n  if (newDomStyle) {\n    // In node or some other non-browser environment\n    newDomStyle.position = 'absolute';\n    newDomStyle.left = 0;\n    newDomStyle.top = 0;\n    newDomStyle.width = width + 'px';\n    newDomStyle.height = height + 'px';\n    newDom.setAttribute('data-zr-dom-id', id);\n  }\n\n  newDom.width = width * dpr;\n  newDom.height = height * dpr;\n  return newDom;\n}\n/**\n * @alias module:zrender/Layer\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @param {string} id\n * @param {module:zrender/Painter} painter\n * @param {number} [dpr]\n */\n\n\nvar Layer = function (id, painter, dpr) {\n  var dom;\n  dpr = dpr || devicePixelRatio;\n\n  if (typeof id === 'string') {\n    dom = createDom(id, painter, dpr);\n  } // Not using isDom because in node it will return false\n  else if (util.isObject(id)) {\n      dom = id;\n      id = dom.id;\n    }\n\n  this.id = id;\n  this.dom = dom;\n  var domStyle = dom.style;\n\n  if (domStyle) {\n    // Not in node\n    dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n    domStyle['-webkit-user-select'] = 'none';\n    domStyle['user-select'] = 'none';\n    domStyle['-webkit-touch-callout'] = 'none';\n    domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n    domStyle['padding'] = 0;\n    domStyle['margin'] = 0;\n    domStyle['border-width'] = 0;\n  }\n\n  this.domBack = null;\n  this.ctxBack = null;\n  this.painter = painter;\n  this.config = null; // Configs\n\n  /**\n   * 每次清空画布的颜色\n   * @type {string}\n   * @default 0\n   */\n\n  this.clearColor = 0;\n  /**\n   * 是否开启动态模糊\n   * @type {boolean}\n   * @default false\n   */\n\n  this.motionBlur = false;\n  /**\n   * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   * @type {number}\n   * @default 0.7\n   */\n\n  this.lastFrameAlpha = 0.7;\n  /**\n   * Layer dpr\n   * @type {number}\n   */\n\n  this.dpr = dpr;\n};\n\nLayer.prototype = {\n  constructor: Layer,\n  __dirty: true,\n  __used: false,\n  __drawIndex: 0,\n  __startIndex: 0,\n  __endIndex: 0,\n  incremental: false,\n  getElementCount: function () {\n    return this.__endIndex - this.__startIndex;\n  },\n  initContext: function () {\n    this.ctx = this.dom.getContext('2d');\n    this.ctx.dpr = this.dpr;\n  },\n  createBackBuffer: function () {\n    var dpr = this.dpr;\n    this.domBack = createDom('back-' + this.id, this.painter, dpr);\n    this.ctxBack = this.domBack.getContext('2d');\n\n    if (dpr != 1) {\n      this.ctxBack.scale(dpr, dpr);\n    }\n  },\n\n  /**\n   * @param  {number} width\n   * @param  {number} height\n   */\n  resize: function (width, height) {\n    var dpr = this.dpr;\n    var dom = this.dom;\n    var domStyle = dom.style;\n    var domBack = this.domBack;\n\n    if (domStyle) {\n      domStyle.width = width + 'px';\n      domStyle.height = height + 'px';\n    }\n\n    dom.width = width * dpr;\n    dom.height = height * dpr;\n\n    if (domBack) {\n      domBack.width = width * dpr;\n      domBack.height = height * dpr;\n\n      if (dpr != 1) {\n        this.ctxBack.scale(dpr, dpr);\n      }\n    }\n  },\n\n  /**\n   * 清空该层画布\n   * @param {boolean} [clearAll]=false Clear all with out motion blur\n   * @param {Color} [clearColor]\n   */\n  clear: function (clearAll, clearColor) {\n    var dom = this.dom;\n    var ctx = this.ctx;\n    var width = dom.width;\n    var height = dom.height;\n    var clearColor = clearColor || this.clearColor;\n    var haveMotionBLur = this.motionBlur && !clearAll;\n    var lastFrameAlpha = this.lastFrameAlpha;\n    var dpr = this.dpr;\n\n    if (haveMotionBLur) {\n      if (!this.domBack) {\n        this.createBackBuffer();\n      }\n\n      this.ctxBack.globalCompositeOperation = 'copy';\n      this.ctxBack.drawImage(dom, 0, 0, width / dpr, height / dpr);\n    }\n\n    ctx.clearRect(0, 0, width, height);\n\n    if (clearColor && clearColor !== 'transparent') {\n      var clearColorGradientOrPattern; // Gradient\n\n      if (clearColor.colorStops) {\n        // Cache canvas gradient\n        clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n          x: 0,\n          y: 0,\n          width: width,\n          height: height\n        });\n        clearColor.__canvasGradient = clearColorGradientOrPattern;\n      } // Pattern\n      else if (clearColor.image) {\n          clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n        }\n\n      ctx.save();\n      ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    if (haveMotionBLur) {\n      var domBack = this.domBack;\n      ctx.save();\n      ctx.globalAlpha = lastFrameAlpha;\n      ctx.drawImage(domBack, 0, 0, width, height);\n      ctx.restore();\n    }\n  }\n};\nvar _default = Layer;\nmodule.exports = _default;","var LRU = require(\"../../core/LRU\");\n\nvar globalImageCache = new LRU(50);\n/**\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\nfunction findExistImage(newImageOrSrc) {\n  if (typeof newImageOrSrc === 'string') {\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    return cachedImgObj && cachedImgObj.image;\n  } else {\n    return newImageOrSrc;\n  }\n}\n/**\n * Caution: User should cache loaded images, but not just count on LRU.\n * Consider if required images more than LRU size, will dead loop occur?\n *\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @param {HTMLImageElement|HTMLCanvasElement|Canvas} image Existent image.\n * @param {module:zrender/Element} [hostEl] For calling `dirty`.\n * @param {Function} [cb] params: (image, cbPayload)\n * @param {Object} [cbPayload] Payload on cb calling.\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\n\nfunction createOrUpdateImage(newImageOrSrc, image, hostEl, cb, cbPayload) {\n  if (!newImageOrSrc) {\n    return image;\n  } else if (typeof newImageOrSrc === 'string') {\n    // Image should not be loaded repeatly.\n    if (image && image.__zrImageSrc === newImageOrSrc || !hostEl) {\n      return image;\n    } // Only when there is no existent image or existent image src\n    // is different, this method is responsible for load.\n\n\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    var pendingWrap = {\n      hostEl: hostEl,\n      cb: cb,\n      cbPayload: cbPayload\n    };\n\n    if (cachedImgObj) {\n      image = cachedImgObj.image;\n      !isImageReady(image) && cachedImgObj.pending.push(pendingWrap);\n    } else {\n      !image && (image = new Image());\n      image.onload = imageOnLoad;\n      globalImageCache.put(newImageOrSrc, image.__cachedImgObj = {\n        image: image,\n        pending: [pendingWrap]\n      });\n      image.src = image.__zrImageSrc = newImageOrSrc;\n    }\n\n    return image;\n  } // newImageOrSrc is an HTMLImageElement or HTMLCanvasElement or Canvas\n  else {\n      return newImageOrSrc;\n    }\n}\n\nfunction imageOnLoad() {\n  var cachedImgObj = this.__cachedImgObj;\n  this.onload = this.__cachedImgObj = null;\n\n  for (var i = 0; i < cachedImgObj.pending.length; i++) {\n    var pendingWrap = cachedImgObj.pending[i];\n    var cb = pendingWrap.cb;\n    cb && cb(this, pendingWrap.cbPayload);\n    pendingWrap.hostEl.dirty();\n  }\n\n  cachedImgObj.pending.length = 0;\n}\n\nfunction isImageReady(image) {\n  return image && image.width && image.height;\n}\n\nexports.findExistImage = findExistImage;\nexports.createOrUpdateImage = createOrUpdateImage;\nexports.isImageReady = isImageReady;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _listComponent = require(\"../helper/listComponent\");\n\nvar makeBackground = _listComponent.makeBackground;\n\nvar layoutUtil = require(\"../../util/layout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar _default = echarts.extendComponentView({\n  type: 'legend.plain',\n  newlineDisabled: false,\n\n  /**\n   * @override\n   */\n  init: function () {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this.group.add(this._contentGroup = new Group());\n    /**\n     * @private\n     * @type {module:zrender/Element}\n     */\n\n    this._backgroundEl;\n  },\n\n  /**\n   * @protected\n   */\n  getContentGroup: function () {\n    return this._contentGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (legendModel, ecModel, api) {\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && legendModel.get('orient') === 'vertical' ? 'right' : 'left';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  },\n\n  /**\n   * @protected\n   */\n  resetInner: function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n  },\n\n  /**\n   * @protected\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    var excludeSeriesId = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      !seriesModel.get('legendHoverLink') && excludeSeriesId.push(seriesModel.id);\n    });\n    each(legendModel.getData(), function (itemModel, dataIndex) {\n      var name = itemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        contentGroup.add(new Group({\n          newline: true\n        }));\n        return;\n      } // Representitive series.\n\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Series legend\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var color = data.getVisual('color'); // If color is a callback function\n\n        if (typeof color === 'function') {\n          // Use the first data\n          color = color(seriesModel.getDataParams(0));\n        } // Using rect symbol defaultly\n\n\n        var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n        var symbolType = data.getVisual('symbol');\n\n        var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, api)).on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api, excludeSeriesId)).on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api, excludeSeriesId));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Data legend of pie, funnel\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendDataProvider) {\n            var data = seriesModel.legendDataProvider();\n            var idx = data.indexOfName(name);\n\n            if (idx < 0) {\n              return;\n            }\n\n            var color = data.getItemVisual(idx, 'color');\n            var legendSymbolType = 'roundRect';\n\n            var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, selectMode); // FIXME: consider different series has items with the same name.\n\n\n            itemGroup.on('click', curry(dispatchSelectAction, name, api)) // FIXME Should not specify the series name\n            .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api, excludeSeriesId)).on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api, excludeSeriesId));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n    }, this);\n  },\n  _createItem: function (name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode) {\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var inactiveColor = legendModel.get('inactiveColor');\n    var symbolKeepAspect = legendModel.get('symbolKeepAspect');\n    var isSelected = legendModel.isSelected(name);\n    var itemGroup = new Group();\n    var textStyleModel = itemModel.getModel('textStyle');\n    var itemIcon = itemModel.get('icon');\n    var tooltipModel = itemModel.getModel('tooltip');\n    var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first\n\n    legendSymbolType = itemIcon || legendSymbolType;\n    itemGroup.add(createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor, // symbolKeepAspect default true for legend\n    symbolKeepAspect == null ? true : symbolKeepAspect)); // Compose symbols\n    // PENDING\n\n    if (!itemIcon && symbolType // At least show one symbol, can't be all none\n    && (symbolType !== legendSymbolType || symbolType == 'none')) {\n      var size = itemHeight * 0.8;\n\n      if (symbolType === 'none') {\n        symbolType = 'circle';\n      } // Put symbol in the center\n\n\n      itemGroup.add(createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor, // symbolKeepAspect default true for legend\n      symbolKeepAspect == null ? true : symbolKeepAspect));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (typeof formatter === 'string' && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (typeof formatter === 'function') {\n      content = formatter(name);\n    }\n\n    itemGroup.add(new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        textAlign: textAlign,\n        textVerticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true,\n      tooltip: tooltipModel.get('show') ? zrUtil.extend({\n        content: name,\n        // Defaul formatter\n        formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n          return name;\n        },\n        formatterParams: {\n          componentType: 'legend',\n          legendIndex: legendModel.componentIndex,\n          name: name,\n          $vars: ['name']\n        }\n      }, tooltipModel.option) : null\n    });\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    graphic.setHoverStyle(itemGroup);\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  },\n\n  /**\n   * @protected\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n    return this.group.getBoundingRect();\n  }\n});\n\nfunction dispatchSelectAction(name, api) {\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: name\n  });\n}\n\nfunction dispatchHighlightAction(seriesModel, dataName, api, excludeSeriesId) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesModel.name,\n      name: dataName,\n      excludeSeriesId: excludeSeriesId\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesModel, dataName, api, excludeSeriesId) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesModel.name,\n      name: dataName,\n      excludeSeriesId: excludeSeriesId\n    });\n  }\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar _number = require(\"../util/number\");\n\nvar linearMap = _number.linearMap;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar CATEGORY_DEFAULT_VISUAL_INDEX = -1;\n/**\n * @param {Object} option\n * @param {string} [option.type] See visualHandlers.\n * @param {string} [option.mappingMethod] 'linear' or 'piecewise' or 'category' or 'fixed'\n * @param {Array.<number>=} [option.dataExtent] [minExtent, maxExtent],\n *                                              required when mappingMethod is 'linear'\n * @param {Array.<Object>=} [option.pieceList] [\n *                                             {value: someValue},\n *                                             {interval: [min1, max1], visual: {...}},\n *                                             {interval: [min2, max2]}\n *                                             ],\n *                                            required when mappingMethod is 'piecewise'.\n *                                            Visual for only each piece can be specified.\n * @param {Array.<string|Object>=} [option.categories] ['cate1', 'cate2']\n *                                            required when mappingMethod is 'category'.\n *                                            If no option.categories, categories is set\n *                                            as [0, 1, 2, ...].\n * @param {boolean} [option.loop=false] Whether loop mapping when mappingMethod is 'category'.\n * @param {(Array|Object|*)} [option.visual]  Visual data.\n *                                            when mappingMethod is 'category',\n *                                            visual data can be array or object\n *                                            (like: {cate1: '#222', none: '#fff'})\n *                                            or primary types (which represents\n *                                            defualt category visual), otherwise visual\n *                                            can be array or primary (which will be\n *                                            normalized to array).\n *\n */\n\nvar VisualMapping = function (option) {\n  var mappingMethod = option.mappingMethod;\n  var visualType = option.type;\n  /**\n   * @readOnly\n   * @type {Object}\n   */\n\n  var thisOption = this.option = zrUtil.clone(option);\n  /**\n   * @readOnly\n   * @type {string}\n   */\n\n  this.type = visualType;\n  /**\n   * @readOnly\n   * @type {string}\n   */\n\n  this.mappingMethod = mappingMethod;\n  /**\n   * @private\n   * @type {Function}\n   */\n\n  this._normalizeData = normalizers[mappingMethod];\n  var visualHandler = visualHandlers[visualType];\n  /**\n   * @public\n   * @type {Function}\n   */\n\n  this.applyVisual = visualHandler.applyVisual;\n  /**\n   * @public\n   * @type {Function}\n   */\n\n  this.getColorMapper = visualHandler.getColorMapper;\n  /**\n   * @private\n   * @type {Function}\n   */\n\n  this._doMap = visualHandler._doMap[mappingMethod];\n\n  if (mappingMethod === 'piecewise') {\n    normalizeVisualRange(thisOption);\n    preprocessForPiecewise(thisOption);\n  } else if (mappingMethod === 'category') {\n    thisOption.categories ? preprocessForSpecifiedCategory(thisOption) // categories is ordinal when thisOption.categories not specified,\n    // which need no more preprocess except normalize visual.\n    : normalizeVisualRange(thisOption, true);\n  } else {\n    // mappingMethod === 'linear' or 'fixed'\n    zrUtil.assert(mappingMethod !== 'linear' || thisOption.dataExtent);\n    normalizeVisualRange(thisOption);\n  }\n};\n\nVisualMapping.prototype = {\n  constructor: VisualMapping,\n  mapValueToVisual: function (value) {\n    var normalized = this._normalizeData(value);\n\n    return this._doMap(normalized, value);\n  },\n  getNormalizer: function () {\n    return zrUtil.bind(this._normalizeData, this);\n  }\n};\nvar visualHandlers = VisualMapping.visualHandlers = {\n  color: {\n    applyVisual: makeApplyVisual('color'),\n\n    /**\n     * Create a mapper function\n     * @return {Function}\n     */\n    getColorMapper: function () {\n      var thisOption = this.option;\n      return zrUtil.bind(thisOption.mappingMethod === 'category' ? function (value, isNormalized) {\n        !isNormalized && (value = this._normalizeData(value));\n        return doMapCategory.call(this, value);\n      } : function (value, isNormalized, out) {\n        // If output rgb array\n        // which will be much faster and useful in pixel manipulation\n        var returnRGBArray = !!out;\n        !isNormalized && (value = this._normalizeData(value));\n        out = zrColor.fastLerp(value, thisOption.parsedVisual, out);\n        return returnRGBArray ? out : zrColor.stringify(out, 'rgba');\n      }, this);\n    },\n    _doMap: {\n      linear: function (normalized) {\n        return zrColor.stringify(zrColor.fastLerp(normalized, this.option.parsedVisual), 'rgba');\n      },\n      category: doMapCategory,\n      piecewise: function (normalized, value) {\n        var result = getSpecifiedVisual.call(this, value);\n\n        if (result == null) {\n          result = zrColor.stringify(zrColor.fastLerp(normalized, this.option.parsedVisual), 'rgba');\n        }\n\n        return result;\n      },\n      fixed: doMapFixed\n    }\n  },\n  colorHue: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyHSL(color, value);\n  }),\n  colorSaturation: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyHSL(color, null, value);\n  }),\n  colorLightness: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyHSL(color, null, null, value);\n  }),\n  colorAlpha: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyAlpha(color, value);\n  }),\n  opacity: {\n    applyVisual: makeApplyVisual('opacity'),\n    _doMap: makeDoMap([0, 1])\n  },\n  liftZ: {\n    applyVisual: makeApplyVisual('liftZ'),\n    _doMap: {\n      linear: doMapFixed,\n      category: doMapFixed,\n      piecewise: doMapFixed,\n      fixed: doMapFixed\n    }\n  },\n  symbol: {\n    applyVisual: function (value, getter, setter) {\n      var symbolCfg = this.mapValueToVisual(value);\n\n      if (zrUtil.isString(symbolCfg)) {\n        setter('symbol', symbolCfg);\n      } else if (isObject(symbolCfg)) {\n        for (var name in symbolCfg) {\n          if (symbolCfg.hasOwnProperty(name)) {\n            setter(name, symbolCfg[name]);\n          }\n        }\n      }\n    },\n    _doMap: {\n      linear: doMapToArray,\n      category: doMapCategory,\n      piecewise: function (normalized, value) {\n        var result = getSpecifiedVisual.call(this, value);\n\n        if (result == null) {\n          result = doMapToArray.call(this, normalized);\n        }\n\n        return result;\n      },\n      fixed: doMapFixed\n    }\n  },\n  symbolSize: {\n    applyVisual: makeApplyVisual('symbolSize'),\n    _doMap: makeDoMap([0, 1])\n  }\n};\n\nfunction preprocessForPiecewise(thisOption) {\n  var pieceList = thisOption.pieceList;\n  thisOption.hasSpecialVisual = false;\n  zrUtil.each(pieceList, function (piece, index) {\n    piece.originIndex = index; // piece.visual is \"result visual value\" but not\n    // a visual range, so it does not need to be normalized.\n\n    if (piece.visual != null) {\n      thisOption.hasSpecialVisual = true;\n    }\n  });\n}\n\nfunction preprocessForSpecifiedCategory(thisOption) {\n  // Hash categories.\n  var categories = thisOption.categories;\n  var visual = thisOption.visual;\n  var categoryMap = thisOption.categoryMap = {};\n  each(categories, function (cate, index) {\n    categoryMap[cate] = index;\n  }); // Process visual map input.\n\n  if (!zrUtil.isArray(visual)) {\n    var visualArr = [];\n\n    if (zrUtil.isObject(visual)) {\n      each(visual, function (v, cate) {\n        var index = categoryMap[cate];\n        visualArr[index != null ? index : CATEGORY_DEFAULT_VISUAL_INDEX] = v;\n      });\n    } else {\n      // Is primary type, represents default visual.\n      visualArr[CATEGORY_DEFAULT_VISUAL_INDEX] = visual;\n    }\n\n    visual = setVisualToOption(thisOption, visualArr);\n  } // Remove categories that has no visual,\n  // then we can mapping them to CATEGORY_DEFAULT_VISUAL_INDEX.\n\n\n  for (var i = categories.length - 1; i >= 0; i--) {\n    if (visual[i] == null) {\n      delete categoryMap[categories[i]];\n      categories.pop();\n    }\n  }\n}\n\nfunction normalizeVisualRange(thisOption, isCategory) {\n  var visual = thisOption.visual;\n  var visualArr = [];\n\n  if (zrUtil.isObject(visual)) {\n    each(visual, function (v) {\n      visualArr.push(v);\n    });\n  } else if (visual != null) {\n    visualArr.push(visual);\n  }\n\n  var doNotNeedPair = {\n    color: 1,\n    symbol: 1\n  };\n\n  if (!isCategory && visualArr.length === 1 && !doNotNeedPair.hasOwnProperty(thisOption.type)) {\n    // Do not care visualArr.length === 0, which is illegal.\n    visualArr[1] = visualArr[0];\n  }\n\n  setVisualToOption(thisOption, visualArr);\n}\n\nfunction makePartialColorVisualHandler(applyValue) {\n  return {\n    applyVisual: function (value, getter, setter) {\n      value = this.mapValueToVisual(value); // Must not be array value\n\n      setter('color', applyValue(getter('color'), value));\n    },\n    _doMap: makeDoMap([0, 1])\n  };\n}\n\nfunction doMapToArray(normalized) {\n  var visual = this.option.visual;\n  return visual[Math.round(linearMap(normalized, [0, 1], [0, visual.length - 1], true))] || {};\n}\n\nfunction makeApplyVisual(visualType) {\n  return function (value, getter, setter) {\n    setter(visualType, this.mapValueToVisual(value));\n  };\n}\n\nfunction doMapCategory(normalized) {\n  var visual = this.option.visual;\n  return visual[this.option.loop && normalized !== CATEGORY_DEFAULT_VISUAL_INDEX ? normalized % visual.length : normalized];\n}\n\nfunction doMapFixed() {\n  return this.option.visual[0];\n}\n\nfunction makeDoMap(sourceExtent) {\n  return {\n    linear: function (normalized) {\n      return linearMap(normalized, sourceExtent, this.option.visual, true);\n    },\n    category: doMapCategory,\n    piecewise: function (normalized, value) {\n      var result = getSpecifiedVisual.call(this, value);\n\n      if (result == null) {\n        result = linearMap(normalized, sourceExtent, this.option.visual, true);\n      }\n\n      return result;\n    },\n    fixed: doMapFixed\n  };\n}\n\nfunction getSpecifiedVisual(value) {\n  var thisOption = this.option;\n  var pieceList = thisOption.pieceList;\n\n  if (thisOption.hasSpecialVisual) {\n    var pieceIndex = VisualMapping.findPieceIndex(value, pieceList);\n    var piece = pieceList[pieceIndex];\n\n    if (piece && piece.visual) {\n      return piece.visual[this.type];\n    }\n  }\n}\n\nfunction setVisualToOption(thisOption, visualArr) {\n  thisOption.visual = visualArr;\n\n  if (thisOption.type === 'color') {\n    thisOption.parsedVisual = zrUtil.map(visualArr, function (item) {\n      return zrColor.parse(item);\n    });\n  }\n\n  return visualArr;\n}\n/**\n * Normalizers by mapping methods.\n */\n\n\nvar normalizers = {\n  linear: function (value) {\n    return linearMap(value, this.option.dataExtent, [0, 1], true);\n  },\n  piecewise: function (value) {\n    var pieceList = this.option.pieceList;\n    var pieceIndex = VisualMapping.findPieceIndex(value, pieceList, true);\n\n    if (pieceIndex != null) {\n      return linearMap(pieceIndex, [0, pieceList.length - 1], [0, 1], true);\n    }\n  },\n  category: function (value) {\n    var index = this.option.categories ? this.option.categoryMap[value] : value; // ordinal\n\n    return index == null ? CATEGORY_DEFAULT_VISUAL_INDEX : index;\n  },\n  fixed: zrUtil.noop\n};\n/**\n * List available visual types.\n *\n * @public\n * @return {Array.<string>}\n */\n\nVisualMapping.listVisualTypes = function () {\n  var visualTypes = [];\n  zrUtil.each(visualHandlers, function (handler, key) {\n    visualTypes.push(key);\n  });\n  return visualTypes;\n};\n/**\n * @public\n */\n\n\nVisualMapping.addVisualHandler = function (name, handler) {\n  visualHandlers[name] = handler;\n};\n/**\n * @public\n */\n\n\nVisualMapping.isValidType = function (visualType) {\n  return visualHandlers.hasOwnProperty(visualType);\n};\n/**\n * Convinent method.\n * Visual can be Object or Array or primary type.\n *\n * @public\n */\n\n\nVisualMapping.eachVisual = function (visual, callback, context) {\n  if (zrUtil.isObject(visual)) {\n    zrUtil.each(visual, callback, context);\n  } else {\n    callback.call(context, visual);\n  }\n};\n\nVisualMapping.mapVisual = function (visual, callback, context) {\n  var isPrimary;\n  var newVisual = zrUtil.isArray(visual) ? [] : zrUtil.isObject(visual) ? {} : (isPrimary = true, null);\n  VisualMapping.eachVisual(visual, function (v, key) {\n    var newVal = callback.call(context, v, key);\n    isPrimary ? newVisual = newVal : newVisual[key] = newVal;\n  });\n  return newVisual;\n};\n/**\n * @public\n * @param {Object} obj\n * @return {Object} new object containers visual values.\n *                 If no visuals, return null.\n */\n\n\nVisualMapping.retrieveVisuals = function (obj) {\n  var ret = {};\n  var hasVisual;\n  obj && each(visualHandlers, function (h, visualType) {\n    if (obj.hasOwnProperty(visualType)) {\n      ret[visualType] = obj[visualType];\n      hasVisual = true;\n    }\n  });\n  return hasVisual ? ret : null;\n};\n/**\n * Give order to visual types, considering colorSaturation, colorAlpha depends on color.\n *\n * @public\n * @param {(Object|Array)} visualTypes If Object, like: {color: ..., colorSaturation: ...}\n *                                     IF Array, like: ['color', 'symbol', 'colorSaturation']\n * @return {Array.<string>} Sorted visual types.\n */\n\n\nVisualMapping.prepareVisualTypes = function (visualTypes) {\n  if (isObject(visualTypes)) {\n    var types = [];\n    each(visualTypes, function (item, type) {\n      types.push(type);\n    });\n    visualTypes = types;\n  } else if (zrUtil.isArray(visualTypes)) {\n    visualTypes = visualTypes.slice();\n  } else {\n    return [];\n  }\n\n  visualTypes.sort(function (type1, type2) {\n    // color should be front of colorSaturation, colorAlpha, ...\n    // symbol and symbolSize do not matter.\n    return type2 === 'color' && type1 !== 'color' && type1.indexOf('color') === 0 ? 1 : -1;\n  });\n  return visualTypes;\n};\n/**\n * 'color', 'colorSaturation', 'colorAlpha', ... are depends on 'color'.\n * Other visuals are only depends on themself.\n *\n * @public\n * @param {string} visualType1\n * @param {string} visualType2\n * @return {boolean}\n */\n\n\nVisualMapping.dependsOn = function (visualType1, visualType2) {\n  return visualType2 === 'color' ? !!(visualType1 && visualType1.indexOf(visualType2) === 0) : visualType1 === visualType2;\n};\n/**\n * @param {number} value\n * @param {Array.<Object>} pieceList [{value: ..., interval: [min, max]}, ...]\n *                         Always from small to big.\n * @param {boolean} [findClosestWhenOutside=false]\n * @return {number} index\n */\n\n\nVisualMapping.findPieceIndex = function (value, pieceList, findClosestWhenOutside) {\n  var possibleI;\n  var abs = Infinity; // value has the higher priority.\n\n  for (var i = 0, len = pieceList.length; i < len; i++) {\n    var pieceValue = pieceList[i].value;\n\n    if (pieceValue != null) {\n      if (pieceValue === value // FIXME\n      // It is supposed to compare value according to value type of dimension,\n      // but currently value type can exactly be string or number.\n      // Compromise for numeric-like string (like '12'), especially\n      // in the case that visualMap.categories is ['22', '33'].\n      || typeof pieceValue === 'string' && pieceValue === value + '') {\n        return i;\n      }\n\n      findClosestWhenOutside && updatePossible(pieceValue, i);\n    }\n  }\n\n  for (var i = 0, len = pieceList.length; i < len; i++) {\n    var piece = pieceList[i];\n    var interval = piece.interval;\n    var close = piece.close;\n\n    if (interval) {\n      if (interval[0] === -Infinity) {\n        if (littleThan(close[1], value, interval[1])) {\n          return i;\n        }\n      } else if (interval[1] === Infinity) {\n        if (littleThan(close[0], interval[0], value)) {\n          return i;\n        }\n      } else if (littleThan(close[0], interval[0], value) && littleThan(close[1], value, interval[1])) {\n        return i;\n      }\n\n      findClosestWhenOutside && updatePossible(interval[0], i);\n      findClosestWhenOutside && updatePossible(interval[1], i);\n    }\n  }\n\n  if (findClosestWhenOutside) {\n    return value === Infinity ? pieceList.length - 1 : value === -Infinity ? 0 : possibleI;\n  }\n\n  function updatePossible(val, index) {\n    var newAbs = Math.abs(val - value);\n\n    if (newAbs < abs) {\n      abs = newAbs;\n      possibleI = index;\n    }\n  }\n};\n\nfunction littleThan(close, a, b) {\n  return close ? a <= b : a < b;\n}\n\nvar _default = VisualMapping;\nmodule.exports = _default;","var Eventful = require(\"../mixin/Eventful\");\n\nexports.Dispatcher = Eventful;\n\nvar env = require(\"./env\");\n\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\nvar isDomLevel2 = typeof window !== 'undefined' && !!window.addEventListener;\nvar MOUSE_EVENT_REG = /^(?:mouse|pointer|contextmenu|drag|drop)|click/;\n\nfunction getBoundingClientRect(el) {\n  // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n  return el.getBoundingClientRect ? el.getBoundingClientRect() : {\n    left: 0,\n    top: 0\n  };\n} // `calculate` is optional, default false\n\n\nfunction clientToLocal(el, e, out, calculate) {\n  out = out || {}; // According to the W3C Working Draft, offsetX and offsetY should be relative\n  // to the padding edge of the target element. The only browser using this convention\n  // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n  // not support the properties.\n  // (see http://www.jacklmoore.com/notes/mouse-position/)\n  // In zr painter.dom, padding edge equals to border edge.\n  // FIXME\n  // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n  // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n  // is too complex. So css-transfrom dont support in this case temporarily.\n\n  if (calculate || !env.canvasSupported) {\n    defaultGetZrXY(el, e, out);\n  } // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n  // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n  // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n  // zoom-factor, overflow / opacity layers, transforms ...)\n  // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n  // <https://bugs.jquery.com/ticket/8523#comment:14>\n  // BTW3, In ff, offsetX/offsetY is always 0.\n  else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n      out.zrX = e.layerX;\n      out.zrY = e.layerY;\n    } // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n    else if (e.offsetX != null) {\n        out.zrX = e.offsetX;\n        out.zrY = e.offsetY;\n      } // For some other device, e.g., IOS safari.\n      else {\n          defaultGetZrXY(el, e, out);\n        }\n\n  return out;\n}\n\nfunction defaultGetZrXY(el, e, out) {\n  // This well-known method below does not support css transform.\n  var box = getBoundingClientRect(el);\n  out.zrX = e.clientX - box.left;\n  out.zrY = e.clientY - box.top;\n}\n/**\n * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n * `calculate` is optional, default false.\n */\n\n\nfunction normalizeEvent(el, e, calculate) {\n  e = e || window.event;\n\n  if (e.zrX != null) {\n    return e;\n  }\n\n  var eventType = e.type;\n  var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n  if (!isTouch) {\n    clientToLocal(el, e, e, calculate);\n    e.zrDelta = e.wheelDelta ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n  } else {\n    var touch = eventType != 'touchend' ? e.targetTouches[0] : e.changedTouches[0];\n    touch && clientToLocal(el, touch, e, calculate);\n  } // Add which for click: 1 === left; 2 === middle; 3 === right; otherwise: 0;\n  // See jQuery: https://github.com/jquery/jquery/blob/master/src/event.js\n  // If e.which has been defined, if may be readonly,\n  // see: https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/which\n\n\n  var button = e.button;\n\n  if (e.which == null && button !== undefined && MOUSE_EVENT_REG.test(e.type)) {\n    e.which = button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;\n  }\n\n  return e;\n}\n/**\n * @param {HTMLElement} el\n * @param {string} name\n * @param {Function} handler\n */\n\n\nfunction addEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    // Reproduct the console warning:\n    // [Violation] Added non-passive event listener to a scroll-blocking <some> event.\n    // Consider marking event handler as 'passive' to make the page more responsive.\n    // Just set console log level: verbose in chrome dev tool.\n    // then the warning log will be printed when addEventListener called.\n    // See https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n    // We have not yet found a neat way to using passive. Because in zrender the dom event\n    // listener delegate all of the upper events of element. Some of those events need\n    // to prevent default. For example, the feature `preventDefaultMouseMove` of echarts.\n    // Before passive can be adopted, these issues should be considered:\n    // (1) Whether and how a zrender user specifies an event listener passive. And by default,\n    // passive or not.\n    // (2) How to tread that some zrender event listener is passive, and some is not. If\n    // we use other way but not preventDefault of mousewheel and touchmove, browser\n    // compatibility should be handled.\n    // var opts = (env.passiveSupported && name === 'mousewheel')\n    //     ? {passive: true}\n    //     // By default, the third param of el.addEventListener is `capture: false`.\n    //     : void 0;\n    // el.addEventListener(name, handler /* , opts */);\n    el.addEventListener(name, handler);\n  } else {\n    el.attachEvent('on' + name, handler);\n  }\n}\n\nfunction removeEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.removeEventListener(name, handler);\n  } else {\n    el.detachEvent('on' + name, handler);\n  }\n}\n/**\n * preventDefault and stopPropagation.\n * Notice: do not do that in zrender. Upper application\n * do that if necessary.\n *\n * @memberOf module:zrender/core/event\n * @method\n * @param {Event} e : event对象\n */\n\n\nvar stop = isDomLevel2 ? function (e) {\n  e.preventDefault();\n  e.stopPropagation();\n  e.cancelBubble = true;\n} : function (e) {\n  e.returnValue = false;\n  e.cancelBubble = true;\n};\n\nfunction notLeftMouse(e) {\n  // If e.which is undefined, considered as left mouse event.\n  return e.which > 1;\n} // 做向上兼容\n\n\nexports.clientToLocal = clientToLocal;\nexports.normalizeEvent = normalizeEvent;\nexports.addEventListener = addEventListener;\nexports.removeEventListener = removeEventListener;\nexports.stop = stop;\nexports.notLeftMouse = notLeftMouse;","var graphic = require(\"../../util/graphic\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar DEFAULT_SMOOTH = 0.3;\nvar ParallelView = ChartView.extend({\n  type: 'parallel',\n  init: function () {\n    /**\n     * @type {module:zrender/container/Group}\n     * @private\n     */\n    this._dataGroup = new graphic.Group();\n    this.group.add(this._dataGroup);\n    /**\n     * @type {module:echarts/data/List}\n     */\n\n    this._data;\n    /**\n     * @type {boolean}\n     */\n\n    this._initialized;\n  },\n\n  /**\n   * @override\n   */\n  render: function (seriesModel, ecModel, api, payload) {\n    var dataGroup = this._dataGroup;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coordSys = seriesModel.coordinateSystem;\n    var dimensions = coordSys.dimensions;\n    var seriesScope = makeSeriesScope(seriesModel);\n    data.diff(oldData).add(add).update(update).remove(remove).execute();\n\n    function add(newDataIndex) {\n      var line = addEl(data, dataGroup, newDataIndex, dimensions, coordSys);\n      updateElCommon(line, data, newDataIndex, seriesScope);\n    }\n\n    function update(newDataIndex, oldDataIndex) {\n      var line = oldData.getItemGraphicEl(oldDataIndex);\n      var points = createLinePoints(data, newDataIndex, dimensions, coordSys);\n      data.setItemGraphicEl(newDataIndex, line);\n      var animationModel = payload && payload.animation === false ? null : seriesModel;\n      graphic.updateProps(line, {\n        shape: {\n          points: points\n        }\n      }, animationModel, newDataIndex);\n      updateElCommon(line, data, newDataIndex, seriesScope);\n    }\n\n    function remove(oldDataIndex) {\n      var line = oldData.getItemGraphicEl(oldDataIndex);\n      dataGroup.remove(line);\n    } // First create\n\n\n    if (!this._initialized) {\n      this._initialized = true;\n      var clipPath = createGridClipShape(coordSys, seriesModel, function () {\n        // Callback will be invoked immediately if there is no animation\n        setTimeout(function () {\n          dataGroup.removeClipPath();\n        });\n      });\n      dataGroup.setClipPath(clipPath);\n    }\n\n    this._data = data;\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    this._initialized = true;\n    this._data = null;\n\n    this._dataGroup.removeAll();\n  },\n  incrementalRender: function (taskParams, seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var coordSys = seriesModel.coordinateSystem;\n    var dimensions = coordSys.dimensions;\n    var seriesScope = makeSeriesScope(seriesModel);\n\n    for (var dataIndex = taskParams.start; dataIndex < taskParams.end; dataIndex++) {\n      var line = addEl(data, this._dataGroup, dataIndex, dimensions, coordSys);\n      line.incremental = true;\n      updateElCommon(line, data, dataIndex, seriesScope);\n    }\n  },\n  dispose: function () {},\n  // _renderForProgressive: function (seriesModel) {\n  //     var dataGroup = this._dataGroup;\n  //     var data = seriesModel.getData();\n  //     var oldData = this._data;\n  //     var coordSys = seriesModel.coordinateSystem;\n  //     var dimensions = coordSys.dimensions;\n  //     var option = seriesModel.option;\n  //     var progressive = option.progressive;\n  //     var smooth = option.smooth ? SMOOTH : null;\n  //     // In progressive animation is disabled, so use simple data diff,\n  //     // which effects performance less.\n  //     // (Typically performance for data with length 7000+ like:\n  //     // simpleDiff: 60ms, addEl: 184ms,\n  //     // in RMBP 2.4GHz intel i7, OSX 10.9 chrome 50.0.2661.102 (64-bit))\n  //     if (simpleDiff(oldData, data, dimensions)) {\n  //         dataGroup.removeAll();\n  //         data.each(function (dataIndex) {\n  //             addEl(data, dataGroup, dataIndex, dimensions, coordSys);\n  //         });\n  //     }\n  //     updateElCommon(data, progressive, smooth);\n  //     // Consider switch between progressive and not.\n  //     data.__plProgressive = true;\n  //     this._data = data;\n  // },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._dataGroup && this._dataGroup.removeAll();\n    this._data = null;\n  }\n});\n\nfunction createGridClipShape(coordSys, seriesModel, cb) {\n  var parallelModel = coordSys.model;\n  var rect = coordSys.getRect();\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    }\n  });\n  var dim = parallelModel.get('layout') === 'horizontal' ? 'width' : 'height';\n  rectEl.setShape(dim, 0);\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width,\n      height: rect.height\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nfunction createLinePoints(data, dataIndex, dimensions, coordSys) {\n  var points = [];\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimName = dimensions[i];\n    var value = data.get(data.mapDimension(dimName), dataIndex);\n\n    if (!isEmptyValue(value, coordSys.getAxis(dimName).type)) {\n      points.push(coordSys.dataToPoint(value, dimName));\n    }\n  }\n\n  return points;\n}\n\nfunction addEl(data, dataGroup, dataIndex, dimensions, coordSys) {\n  var points = createLinePoints(data, dataIndex, dimensions, coordSys);\n  var line = new graphic.Polyline({\n    shape: {\n      points: points\n    },\n    silent: true,\n    z2: 10\n  });\n  dataGroup.add(line);\n  data.setItemGraphicEl(dataIndex, line);\n  return line;\n}\n\nfunction makeSeriesScope(seriesModel) {\n  var smooth = seriesModel.get('smooth', true);\n  smooth === true && (smooth = DEFAULT_SMOOTH);\n  return {\n    lineStyle: seriesModel.getModel('lineStyle').getLineStyle(),\n    smooth: smooth != null ? smooth : DEFAULT_SMOOTH\n  };\n}\n\nfunction updateElCommon(el, data, dataIndex, seriesScope) {\n  var lineStyle = seriesScope.lineStyle;\n\n  if (data.hasItemOption) {\n    var lineStyleModel = data.getItemModel(dataIndex).getModel('lineStyle');\n    lineStyle = lineStyleModel.getLineStyle();\n  }\n\n  el.useStyle(lineStyle);\n  var elStyle = el.style;\n  elStyle.fill = null; // lineStyle.color have been set to itemVisual in module:echarts/visual/seriesColor.\n\n  elStyle.stroke = data.getItemVisual(dataIndex, 'color'); // lineStyle.opacity have been set to itemVisual in parallelVisual.\n\n  elStyle.opacity = data.getItemVisual(dataIndex, 'opacity');\n  seriesScope.smooth && (el.shape.smooth = seriesScope.smooth);\n} // function simpleDiff(oldData, newData, dimensions) {\n//     var oldLen;\n//     if (!oldData\n//         || !oldData.__plProgressive\n//         || (oldLen = oldData.count()) !== newData.count()\n//     ) {\n//         return true;\n//     }\n//     var dimLen = dimensions.length;\n//     for (var i = 0; i < oldLen; i++) {\n//         for (var j = 0; j < dimLen; j++) {\n//             if (oldData.get(dimensions[j], i) !== newData.get(dimensions[j], i)) {\n//                 return true;\n//             }\n//         }\n//     }\n//     return false;\n// }\n// FIXME\n// 公用方法?\n\n\nfunction isEmptyValue(val, axisType) {\n  return axisType === 'category' ? val == null : val == null || isNaN(val); // axisType === 'value'\n}\n\nvar _default = ParallelView;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Visual mapping.\n */\nvar visualDefault = {\n  /**\n   * @public\n   */\n  get: function (visualType, key, isCategory) {\n    var value = zrUtil.clone((defaultOption[visualType] || {})[key]);\n    return isCategory ? zrUtil.isArray(value) ? value[value.length - 1] : value : value;\n  }\n};\nvar defaultOption = {\n  color: {\n    active: ['#006edd', '#e0ffff'],\n    inactive: ['rgba(0,0,0,0)']\n  },\n  colorHue: {\n    active: [0, 360],\n    inactive: [0, 0]\n  },\n  colorSaturation: {\n    active: [0.3, 1],\n    inactive: [0, 0]\n  },\n  colorLightness: {\n    active: [0.9, 0.5],\n    inactive: [0, 0]\n  },\n  colorAlpha: {\n    active: [0.3, 1],\n    inactive: [0, 0]\n  },\n  opacity: {\n    active: [0.3, 1],\n    inactive: [0, 0]\n  },\n  symbol: {\n    active: ['circle', 'roundRect', 'diamond'],\n    inactive: ['none']\n  },\n  symbolSize: {\n    active: [10, 50],\n    inactive: [0, 0]\n  }\n};\nvar _default = visualDefault;\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../model/Model\");\n\nvar DataDiffer = require(\"./DataDiffer\");\n\nvar Source = require(\"./Source\");\n\nvar _dataProvider = require(\"./helper/dataProvider\");\n\nvar defaultDimValueGetters = _dataProvider.defaultDimValueGetters;\nvar DefaultDataProvider = _dataProvider.DefaultDataProvider;\n\nvar _dimensionHelper = require(\"./helper/dimensionHelper\");\n\nvar summarizeDimensions = _dimensionHelper.summarizeDimensions;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * List for data storage\n * @module echarts/data/List\n */\nvar isObject = zrUtil.isObject;\nvar UNDEFINED = 'undefined'; // Use prefix to avoid index to be the same as otherIdList[idx],\n// which will cause weird udpate animation.\n\nvar ID_PREFIX = 'e\\0\\0';\nvar dataCtors = {\n  'float': typeof Float64Array === UNDEFINED ? Array : Float64Array,\n  'int': typeof Int32Array === UNDEFINED ? Array : Int32Array,\n  // Ordinal data type can be string or int\n  'ordinal': Array,\n  'number': Array,\n  'time': Array\n}; // Caution: MUST not use `new CtorUint32Array(arr, 0, len)`, because the Ctor of array is\n// different from the Ctor of typed array.\n\nvar CtorUint32Array = typeof Uint32Array === UNDEFINED ? Array : Uint32Array;\nvar CtorUint16Array = typeof Uint16Array === UNDEFINED ? Array : Uint16Array;\n\nfunction getIndicesCtor(list) {\n  // The possible max value in this._indicies is always this._rawCount despite of filtering.\n  return list._rawCount > 65535 ? CtorUint32Array : CtorUint16Array;\n}\n\nfunction cloneChunk(originalChunk) {\n  var Ctor = originalChunk.constructor; // Only shallow clone is enough when Array.\n\n  return Ctor === Array ? originalChunk.slice() : new Ctor(originalChunk);\n}\n\nvar TRANSFERABLE_PROPERTIES = ['hasItemOption', '_nameList', '_idList', '_invertedIndicesMap', '_rawData', '_chunkSize', '_chunkCount', '_dimValueGetter', '_count', '_rawCount', '_nameDimIdx', '_idDimIdx'];\nvar CLONE_PROPERTIES = ['_extent', '_approximateExtent', '_rawExtent'];\n\nfunction transferProperties(target, source) {\n  zrUtil.each(TRANSFERABLE_PROPERTIES.concat(source.__wrappedMethods || []), function (propName) {\n    if (source.hasOwnProperty(propName)) {\n      target[propName] = source[propName];\n    }\n  });\n  target.__wrappedMethods = source.__wrappedMethods;\n  zrUtil.each(CLONE_PROPERTIES, function (propName) {\n    target[propName] = zrUtil.clone(source[propName]);\n  });\n  target._calculationInfo = zrUtil.extend(source._calculationInfo);\n}\n/**\n * @constructor\n * @alias module:echarts/data/List\n *\n * @param {Array.<string|Object>} dimensions\n *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n *      Spetial fields: {\n *          ordinalMeta: <module:echarts/data/OrdinalMeta>\n *          createInvertedIndices: <boolean>\n *      }\n * @param {module:echarts/model/Model} hostModel\n */\n\n\nvar List = function (dimensions, hostModel) {\n  dimensions = dimensions || ['x', 'y'];\n  var dimensionInfos = {};\n  var dimensionNames = [];\n  var invertedIndicesMap = {};\n\n  for (var i = 0; i < dimensions.length; i++) {\n    // Use the original dimensions[i], where other flag props may exists.\n    var dimensionInfo = dimensions[i];\n\n    if (zrUtil.isString(dimensionInfo)) {\n      dimensionInfo = {\n        name: dimensionInfo\n      };\n    }\n\n    var dimensionName = dimensionInfo.name;\n    dimensionInfo.type = dimensionInfo.type || 'float';\n\n    if (!dimensionInfo.coordDim) {\n      dimensionInfo.coordDim = dimensionName;\n      dimensionInfo.coordDimIndex = 0;\n    }\n\n    dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n    dimensionNames.push(dimensionName);\n    dimensionInfos[dimensionName] = dimensionInfo;\n    dimensionInfo.index = i;\n\n    if (dimensionInfo.createInvertedIndices) {\n      invertedIndicesMap[dimensionName] = [];\n    }\n  }\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n\n\n  this.dimensions = dimensionNames;\n  /**\n   * Infomation of each data dimension, like data type.\n   * @type {Object}\n   */\n\n  this._dimensionInfos = dimensionInfos;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.hostModel = hostModel;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.dataType;\n  /**\n   * Indices stores the indices of data subset after filtered.\n   * This data subset will be used in chart.\n   * @type {Array.<number>}\n   * @readOnly\n   */\n\n  this._indices = null;\n  this._count = 0;\n  this._rawCount = 0;\n  /**\n   * Data storage\n   * @type {Object.<key, Array.<TypedArray|Array>>}\n   * @private\n   */\n\n  this._storage = {};\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._nameList = [];\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._idList = [];\n  /**\n   * Models of data option is stored sparse for optimizing memory cost\n   * @type {Array.<module:echarts/model/Model>}\n   * @private\n   */\n\n  this._optionModels = [];\n  /**\n   * Global visual properties after visual coding\n   * @type {Object}\n   * @private\n   */\n\n  this._visual = {};\n  /**\n   * Globel layout properties.\n   * @type {Object}\n   * @private\n   */\n\n  this._layout = {};\n  /**\n   * Item visual properties after visual coding\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemVisuals = [];\n  /**\n   * Key: visual type, Value: boolean\n   * @type {Object}\n   * @readOnly\n   */\n\n  this.hasItemVisual = {};\n  /**\n   * Item layout properties after layout\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemLayouts = [];\n  /**\n   * Graphic elemnents\n   * @type {Array.<module:zrender/Element>}\n   * @private\n   */\n\n  this._graphicEls = [];\n  /**\n   * Max size of each chunk.\n   * @type {number}\n   * @private\n   */\n\n  this._chunkSize = 1e5;\n  /**\n   * @type {number}\n   * @private\n   */\n\n  this._chunkCount = 0;\n  /**\n   * @type {Array.<Array|Object>}\n   * @private\n   */\n\n  this._rawData;\n  /**\n   * Raw extent will not be cloned, but only transfered.\n   * It will not be calculated util needed.\n   * key: dim,\n   * value: {end: number, extent: Array.<number>}\n   * @type {Object}\n   * @private\n   */\n\n  this._rawExtent = {};\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._extent = {};\n  /**\n   * key: dim\n   * value: extent\n   * @type {Object}\n   * @private\n   */\n\n  this._approximateExtent = {};\n  /**\n   * Cache summary info for fast visit. See \"dimensionHelper\".\n   * @type {Object}\n   * @private\n   */\n\n  this._dimensionsSummary = summarizeDimensions(this);\n  /**\n   * @type {Object.<Array|TypedArray>}\n   * @private\n   */\n\n  this._invertedIndicesMap = invertedIndicesMap;\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._calculationInfo = {};\n};\n\nvar listProto = List.prototype;\nlistProto.type = 'list';\n/**\n * If each data item has it's own option\n * @type {boolean}\n */\n\nlistProto.hasItemOption = true;\n/**\n * Get dimension name\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n * @return {string} Concrete dim name.\n */\n\nlistProto.getDimension = function (dim) {\n  if (!isNaN(dim)) {\n    dim = this.dimensions[dim] || dim;\n  }\n\n  return dim;\n};\n/**\n * Get type and calculation info of particular dimension\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n */\n\n\nlistProto.getDimensionInfo = function (dim) {\n  // Do not clone, because there may be categories in dimInfo.\n  return this._dimensionInfos[this.getDimension(dim)];\n};\n/**\n * @return {Array.<string>} concrete dimension name list on coord.\n */\n\n\nlistProto.getDimensionsOnCoord = function () {\n  return this._dimensionsSummary.dataDimsOnCoord.slice();\n};\n/**\n * @param {string} coordDim\n * @param {number} [idx] A coordDim may map to more than one data dim.\n *        If idx is `true`, return a array of all mapped dims.\n *        If idx is not specified, return the first dim not extra.\n * @return {string|Array.<string>} concrete data dim.\n *        If idx is number, and not found, return null/undefined.\n *        If idx is `true`, and not found, return empty array (always return array).\n */\n\n\nlistProto.mapDimension = function (coordDim, idx) {\n  var dimensionsSummary = this._dimensionsSummary;\n\n  if (idx == null) {\n    return dimensionsSummary.encodeFirstDimNotExtra[coordDim];\n  }\n\n  var dims = dimensionsSummary.encode[coordDim];\n  return idx === true // always return array if idx is `true`\n  ? (dims || []).slice() : dims && dims[idx];\n};\n/**\n * Initialize from data\n * @param {Array.<Object|number|Array>} data source or data or data provider.\n * @param {Array.<string>} [nameLIst] The name of a datum is used on data diff and\n *        defualt label/tooltip.\n *        A name can be specified in encode.itemName,\n *        or dataItem.name (only for series option data),\n *        or provided in nameList from outside.\n * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n */\n\n\nlistProto.initData = function (data, nameList, dimValueGetter) {\n  var notProvider = Source.isInstance(data) || zrUtil.isArrayLike(data);\n\n  if (notProvider) {\n    data = new DefaultDataProvider(data, this.dimensions.length);\n  }\n\n  this._rawData = data; // Clear\n\n  this._storage = {};\n  this._indices = null;\n  this._nameList = nameList || [];\n  this._idList = [];\n  this._nameRepeatCount = {};\n\n  if (!dimValueGetter) {\n    this.hasItemOption = false;\n  }\n  /**\n   * @readOnly\n   */\n\n\n  this.defaultDimValueGetter = defaultDimValueGetters[this._rawData.getSource().sourceFormat]; // Default dim value getter\n\n  this._dimValueGetter = dimValueGetter = dimValueGetter || this.defaultDimValueGetter; // Reset raw extent.\n\n  this._rawExtent = {};\n\n  this._initDataFromProvider(0, data.count()); // If data has no item option.\n\n\n  if (data.pure) {\n    this.hasItemOption = false;\n  }\n};\n\nlistProto.getProvider = function () {\n  return this._rawData;\n};\n\nlistProto.appendData = function (data) {\n  var rawData = this._rawData;\n  var start = this.count();\n  rawData.appendData(data);\n  var end = rawData.count();\n\n  if (!rawData.persistent) {\n    end += start;\n  }\n\n  this._initDataFromProvider(start, end);\n};\n\nlistProto._initDataFromProvider = function (start, end) {\n  // Optimize.\n  if (start >= end) {\n    return;\n  }\n\n  var chunkSize = this._chunkSize;\n  var rawData = this._rawData;\n  var storage = this._storage;\n  var dimensions = this.dimensions;\n  var dimLen = dimensions.length;\n  var dimensionInfoMap = this._dimensionInfos;\n  var nameList = this._nameList;\n  var idList = this._idList;\n  var rawExtent = this._rawExtent;\n  var nameRepeatCount = this._nameRepeatCount = {};\n  var nameDimIdx;\n  var chunkCount = this._chunkCount;\n  var lastChunkIndex = chunkCount - 1;\n\n  for (var i = 0; i < dimLen; i++) {\n    var dim = dimensions[i];\n\n    if (!rawExtent[dim]) {\n      rawExtent[dim] = getInitialExtent();\n    }\n\n    var dimInfo = dimensionInfoMap[dim];\n\n    if (dimInfo.otherDims.itemName === 0) {\n      nameDimIdx = this._nameDimIdx = i;\n    }\n\n    if (dimInfo.otherDims.itemId === 0) {\n      this._idDimIdx = i;\n    }\n\n    var DataCtor = dataCtors[dimInfo.type];\n\n    if (!storage[dim]) {\n      storage[dim] = [];\n    }\n\n    var resizeChunkArray = storage[dim][lastChunkIndex];\n\n    if (resizeChunkArray && resizeChunkArray.length < chunkSize) {\n      var newStore = new DataCtor(Math.min(end - lastChunkIndex * chunkSize, chunkSize)); // The cost of the copy is probably inconsiderable\n      // within the initial chunkSize.\n\n      for (var j = 0; j < resizeChunkArray.length; j++) {\n        newStore[j] = resizeChunkArray[j];\n      }\n\n      storage[dim][lastChunkIndex] = newStore;\n    } // Create new chunks.\n\n\n    for (var k = chunkCount * chunkSize; k < end; k += chunkSize) {\n      storage[dim].push(new DataCtor(Math.min(end - k, chunkSize)));\n    }\n\n    this._chunkCount = storage[dim].length;\n  }\n\n  var dataItem = new Array(dimLen);\n\n  for (var idx = start; idx < end; idx++) {\n    // NOTICE: Try not to write things into dataItem\n    dataItem = rawData.getItem(idx, dataItem); // Each data item is value\n    // [1, 2]\n    // 2\n    // Bar chart, line chart which uses category axis\n    // only gives the 'y' value. 'x' value is the indices of category\n    // Use a tempValue to normalize the value to be a (x, y) value\n\n    var chunkIndex = Math.floor(idx / chunkSize);\n    var chunkOffset = idx % chunkSize; // Store the data by dimensions\n\n    for (var k = 0; k < dimLen; k++) {\n      var dim = dimensions[k];\n      var dimStorage = storage[dim][chunkIndex]; // PENDING NULL is empty or zero\n\n      var val = this._dimValueGetter(dataItem, dim, idx, k);\n\n      dimStorage[chunkOffset] = val;\n      var dimRawExtent = rawExtent[dim];\n\n      if (val < dimRawExtent[0]) {\n        dimRawExtent[0] = val;\n      }\n\n      if (val > dimRawExtent[1]) {\n        dimRawExtent[1] = val;\n      }\n    } // ??? FIXME not check by pure but sourceFormat?\n    // TODO refactor these logic.\n\n\n    if (!rawData.pure) {\n      var name = nameList[idx];\n\n      if (dataItem && name == null) {\n        // If dataItem is {name: ...}, it has highest priority.\n        // That is appropriate for many common cases.\n        if (dataItem.name != null) {\n          // There is no other place to persistent dataItem.name,\n          // so save it to nameList.\n          nameList[idx] = name = dataItem.name;\n        } else if (nameDimIdx != null) {\n          var nameDim = dimensions[nameDimIdx];\n          var nameDimChunk = storage[nameDim][chunkIndex];\n\n          if (nameDimChunk) {\n            name = nameDimChunk[chunkOffset];\n            var ordinalMeta = dimensionInfoMap[nameDim].ordinalMeta;\n\n            if (ordinalMeta && ordinalMeta.categories.length) {\n              name = ordinalMeta.categories[name];\n            }\n          }\n        }\n      } // Try using the id in option\n      // id or name is used on dynamical data, mapping old and new items.\n\n\n      var id = dataItem == null ? null : dataItem.id;\n\n      if (id == null && name != null) {\n        // Use name as id and add counter to avoid same name\n        nameRepeatCount[name] = nameRepeatCount[name] || 0;\n        id = name;\n\n        if (nameRepeatCount[name] > 0) {\n          id += '__ec__' + nameRepeatCount[name];\n        }\n\n        nameRepeatCount[name]++;\n      }\n\n      id != null && (idList[idx] = id);\n    }\n  }\n\n  if (!rawData.persistent && rawData.clean) {\n    // Clean unused data if data source is typed array.\n    rawData.clean();\n  }\n\n  this._rawCount = this._count = end; // Reset data extent\n\n  this._extent = {};\n  prepareInvertedIndex(this);\n};\n\nfunction prepareInvertedIndex(list) {\n  var invertedIndicesMap = list._invertedIndicesMap;\n  zrUtil.each(invertedIndicesMap, function (invertedIndices, dim) {\n    var dimInfo = list._dimensionInfos[dim]; // Currently, only dimensions that has ordinalMeta can create inverted indices.\n\n    var ordinalMeta = dimInfo.ordinalMeta;\n\n    if (ordinalMeta) {\n      invertedIndices = invertedIndicesMap[dim] = new CtorUint32Array(ordinalMeta.categories.length); // The default value of TypedArray is 0. To avoid miss\n      // mapping to 0, we should set it as NaN.\n\n      for (var i = 0; i < invertedIndices.length; i++) {\n        invertedIndices[i] = NaN;\n      }\n\n      for (var i = 0; i < list._count; i++) {\n        // Only support the case that all values are distinct.\n        invertedIndices[list.get(dim, i)] = i;\n      }\n    }\n  });\n}\n\nfunction getRawValueFromStore(list, dimIndex, rawIndex) {\n  var val;\n\n  if (dimIndex != null) {\n    var chunkSize = list._chunkSize;\n    var chunkIndex = Math.floor(rawIndex / chunkSize);\n    var chunkOffset = rawIndex % chunkSize;\n    var dim = list.dimensions[dimIndex];\n    var chunk = list._storage[dim][chunkIndex];\n\n    if (chunk) {\n      val = chunk[chunkOffset];\n      var ordinalMeta = list._dimensionInfos[dim].ordinalMeta;\n\n      if (ordinalMeta && ordinalMeta.categories.length) {\n        val = ordinalMeta.categories[val];\n      }\n    }\n  }\n\n  return val;\n}\n/**\n * @return {number}\n */\n\n\nlistProto.count = function () {\n  return this._count;\n};\n\nlistProto.getIndices = function () {\n  var newIndices;\n  var indices = this._indices;\n\n  if (indices) {\n    var Ctor = indices.constructor;\n    var thisCount = this._count; // `new Array(a, b, c)` is different from `new Uint32Array(a, b, c)`.\n\n    if (Ctor === Array) {\n      newIndices = new Ctor(thisCount);\n\n      for (var i = 0; i < thisCount; i++) {\n        newIndices[i] = indices[i];\n      }\n    } else {\n      newIndices = new Ctor(indices.buffer, 0, thisCount);\n    }\n  } else {\n    var Ctor = getIndicesCtor(this);\n    var newIndices = new Ctor(this.count());\n\n    for (var i = 0; i < newIndices.length; i++) {\n      newIndices[i] = i;\n    }\n  }\n\n  return newIndices;\n};\n/**\n * Get value. Return NaN if idx is out of range.\n * @param {string} dim Dim must be concrete name.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.get = function (dim, idx\n/*, stack */\n) {\n  if (!(idx >= 0 && idx < this._count)) {\n    return NaN;\n  }\n\n  var storage = this._storage;\n\n  if (!storage[dim]) {\n    // TODO Warn ?\n    return NaN;\n  }\n\n  idx = this.getRawIndex(idx);\n  var chunkIndex = Math.floor(idx / this._chunkSize);\n  var chunkOffset = idx % this._chunkSize;\n  var chunkStore = storage[dim][chunkIndex];\n  var value = chunkStore[chunkOffset]; // FIXME ordinal data type is not stackable\n  // if (stack) {\n  //     var dimensionInfo = this._dimensionInfos[dim];\n  //     if (dimensionInfo && dimensionInfo.stackable) {\n  //         var stackedOn = this.stackedOn;\n  //         while (stackedOn) {\n  //             // Get no stacked data of stacked on\n  //             var stackedValue = stackedOn.get(dim, idx);\n  //             // Considering positive stack, negative stack and empty data\n  //             if ((value >= 0 && stackedValue > 0)  // Positive stack\n  //                 || (value <= 0 && stackedValue < 0) // Negative stack\n  //             ) {\n  //                 value += stackedValue;\n  //             }\n  //             stackedOn = stackedOn.stackedOn;\n  //         }\n  //     }\n  // }\n\n  return value;\n};\n/**\n * @param {string} dim concrete dim\n * @param {number} rawIndex\n * @return {number|string}\n */\n\n\nlistProto.getByRawIndex = function (dim, rawIdx) {\n  if (!(rawIdx >= 0 && rawIdx < this._rawCount)) {\n    return NaN;\n  }\n\n  var dimStore = this._storage[dim];\n\n  if (!dimStore) {\n    // TODO Warn ?\n    return NaN;\n  }\n\n  var chunkIndex = Math.floor(rawIdx / this._chunkSize);\n  var chunkOffset = rawIdx % this._chunkSize;\n  var chunkStore = dimStore[chunkIndex];\n  return chunkStore[chunkOffset];\n};\n/**\n * FIXME Use `get` on chrome maybe slow(in filterSelf and selectRange).\n * Hack a much simpler _getFast\n * @private\n */\n\n\nlistProto._getFast = function (dim, rawIdx) {\n  var chunkIndex = Math.floor(rawIdx / this._chunkSize);\n  var chunkOffset = rawIdx % this._chunkSize;\n  var chunkStore = this._storage[dim][chunkIndex];\n  return chunkStore[chunkOffset];\n};\n/**\n * Get value for multi dimensions.\n * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getValues = function (dimensions, idx\n/*, stack */\n) {\n  var values = [];\n\n  if (!zrUtil.isArray(dimensions)) {\n    // stack = idx;\n    idx = dimensions;\n    dimensions = this.dimensions;\n  }\n\n  for (var i = 0, len = dimensions.length; i < len; i++) {\n    values.push(this.get(dimensions[i], idx\n    /*, stack */\n    ));\n  }\n\n  return values;\n};\n/**\n * If value is NaN. Inlcuding '-'\n * Only check the coord dimensions.\n * @param {string} dim\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.hasValue = function (idx) {\n  var dataDimsOnCoord = this._dimensionsSummary.dataDimsOnCoord;\n  var dimensionInfos = this._dimensionInfos;\n\n  for (var i = 0, len = dataDimsOnCoord.length; i < len; i++) {\n    if ( // Ordinal type can be string or number\n    dimensionInfos[dataDimsOnCoord[i]].type !== 'ordinal' // FIXME check ordinal when using index?\n    && isNaN(this.get(dataDimsOnCoord[i], idx))) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Get extent of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n */\n\n\nlistProto.getDataExtent = function (dim\n/*, stack */\n) {\n  // Make sure use concrete dim as cache name.\n  dim = this.getDimension(dim);\n  var dimData = this._storage[dim];\n  var initialExtent = getInitialExtent(); // stack = !!((stack || false) && this.getCalculationInfo(dim));\n\n  if (!dimData) {\n    return initialExtent;\n  } // Make more strict checkings to ensure hitting cache.\n\n\n  var currEnd = this.count(); // var cacheName = [dim, !!stack].join('_');\n  // var cacheName = dim;\n  // Consider the most cases when using data zoom, `getDataExtent`\n  // happened before filtering. We cache raw extent, which is not\n  // necessary to be cleared and recalculated when restore data.\n\n  var useRaw = !this._indices; // && !stack;\n\n  var dimExtent;\n\n  if (useRaw) {\n    return this._rawExtent[dim].slice();\n  }\n\n  dimExtent = this._extent[dim];\n\n  if (dimExtent) {\n    return dimExtent.slice();\n  }\n\n  dimExtent = initialExtent;\n  var min = dimExtent[0];\n  var max = dimExtent[1];\n\n  for (var i = 0; i < currEnd; i++) {\n    // var value = stack ? this.get(dim, i, true) : this._getFast(dim, this.getRawIndex(i));\n    var value = this._getFast(dim, this.getRawIndex(i));\n\n    value < min && (min = value);\n    value > max && (max = value);\n  }\n\n  dimExtent = [min, max];\n  this._extent[dim] = dimExtent;\n  return dimExtent;\n};\n/**\n * Optimize for the scenario that data is filtered by a given extent.\n * Consider that if data amount is more than hundreds of thousand,\n * extent calculation will cost more than 10ms and the cache will\n * be erased because of the filtering.\n */\n\n\nlistProto.getApproximateExtent = function (dim\n/*, stack */\n) {\n  dim = this.getDimension(dim);\n  return this._approximateExtent[dim] || this.getDataExtent(dim\n  /*, stack */\n  );\n};\n\nlistProto.setApproximateExtent = function (extent, dim\n/*, stack */\n) {\n  dim = this.getDimension(dim);\n  this._approximateExtent[dim] = extent.slice();\n};\n/**\n * @param {string} key\n * @return {*}\n */\n\n\nlistProto.getCalculationInfo = function (key) {\n  return this._calculationInfo[key];\n};\n/**\n * @param {string|Object} key or k-v object\n * @param {*} [value]\n */\n\n\nlistProto.setCalculationInfo = function (key, value) {\n  isObject(key) ? zrUtil.extend(this._calculationInfo, key) : this._calculationInfo[key] = value;\n};\n/**\n * Get sum of data in one dimension\n * @param {string} dim\n */\n\n\nlistProto.getSum = function (dim\n/*, stack */\n) {\n  var dimData = this._storage[dim];\n  var sum = 0;\n\n  if (dimData) {\n    for (var i = 0, len = this.count(); i < len; i++) {\n      var value = this.get(dim, i\n      /*, stack */\n      );\n\n      if (!isNaN(value)) {\n        sum += value;\n      }\n    }\n  }\n\n  return sum;\n};\n/**\n * Get median of data in one dimension\n * @param {string} dim\n */\n\n\nlistProto.getMedian = function (dim\n/*, stack */\n) {\n  var dimDataArray = []; // map all data of one dimension\n\n  this.each(dim, function (val, idx) {\n    if (!isNaN(val)) {\n      dimDataArray.push(val);\n    }\n  }); // TODO\n  // Use quick select?\n  // immutability & sort\n\n  var sortedDimDataArray = [].concat(dimDataArray).sort(function (a, b) {\n    return a - b;\n  });\n  var len = this.count(); // calculate median\n\n  return len === 0 ? 0 : len % 2 === 1 ? sortedDimDataArray[(len - 1) / 2] : (sortedDimDataArray[len / 2] + sortedDimDataArray[len / 2 - 1]) / 2;\n}; // /**\n//  * Retreive the index with given value\n//  * @param {string} dim Concrete dimension.\n//  * @param {number} value\n//  * @return {number}\n//  */\n// Currently incorrect: should return dataIndex but not rawIndex.\n// Do not fix it until this method is to be used somewhere.\n// FIXME Precision of float value\n// listProto.indexOf = function (dim, value) {\n//     var storage = this._storage;\n//     var dimData = storage[dim];\n//     var chunkSize = this._chunkSize;\n//     if (dimData) {\n//         for (var i = 0, len = this.count(); i < len; i++) {\n//             var chunkIndex = Math.floor(i / chunkSize);\n//             var chunkOffset = i % chunkSize;\n//             if (dimData[chunkIndex][chunkOffset] === value) {\n//                 return i;\n//             }\n//         }\n//     }\n//     return -1;\n// };\n\n/**\n * Only support the dimension which inverted index created.\n * Do not support other cases until required.\n * @param {string} concrete dim\n * @param {number|string} value\n * @return {number} rawIndex\n */\n\n\nlistProto.rawIndexOf = function (dim, value) {\n  var invertedIndices = dim && this._invertedIndicesMap[dim];\n  var rawIndex = invertedIndices[value];\n\n  if (rawIndex == null || isNaN(rawIndex)) {\n    return -1;\n  }\n\n  return rawIndex;\n};\n/**\n * Retreive the index with given name\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfName = function (name) {\n  for (var i = 0, len = this.count(); i < len; i++) {\n    if (this.getName(i) === name) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given raw data index\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfRawIndex = function (rawIndex) {\n  if (!this._indices) {\n    return rawIndex;\n  }\n\n  if (rawIndex >= this._rawCount || rawIndex < 0) {\n    return -1;\n  } // Indices are ascending\n\n\n  var indices = this._indices; // If rawIndex === dataIndex\n\n  var rawDataIndex = indices[rawIndex];\n\n  if (rawDataIndex != null && rawDataIndex < this._count && rawDataIndex === rawIndex) {\n    return rawIndex;\n  }\n\n  var left = 0;\n  var right = this._count - 1;\n\n  while (left <= right) {\n    var mid = (left + right) / 2 | 0;\n\n    if (indices[mid] < rawIndex) {\n      left = mid + 1;\n    } else if (indices[mid] > rawIndex) {\n      right = mid - 1;\n    } else {\n      return mid;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index of nearest value\n * @param {string} dim\n * @param {number} value\n * @param {number} [maxDistance=Infinity]\n * @return {Array.<number>} Considere multiple points has the same value.\n */\n\n\nlistProto.indicesOfNearest = function (dim, value, maxDistance) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var nearestIndices = [];\n\n  if (!dimData) {\n    return nearestIndices;\n  }\n\n  if (maxDistance == null) {\n    maxDistance = Infinity;\n  }\n\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n\n  for (var i = 0, len = this.count(); i < len; i++) {\n    var diff = value - this.get(dim, i\n    /*, stack */\n    );\n    var dist = Math.abs(diff);\n\n    if (diff <= maxDistance && dist <= minDist) {\n      // For the case of two data are same on xAxis, which has sequence data.\n      // Show the nearest index\n      // https://github.com/ecomfe/echarts/issues/2869\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        nearestIndices.length = 0;\n      }\n\n      nearestIndices.push(i);\n    }\n  }\n\n  return nearestIndices;\n};\n/**\n * Get raw data index\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawIndex = getRawIndexWithoutIndices;\n\nfunction getRawIndexWithoutIndices(idx) {\n  return idx;\n}\n\nfunction getRawIndexWithIndices(idx) {\n  if (idx < this._count && idx >= 0) {\n    return this._indices[idx];\n  }\n\n  return -1;\n}\n/**\n * Get raw data item\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawDataItem = function (idx) {\n  if (!this._rawData.persistent) {\n    var val = [];\n\n    for (var i = 0; i < this.dimensions.length; i++) {\n      var dim = this.dimensions[i];\n      val.push(this.get(dim, idx));\n    }\n\n    return val;\n  } else {\n    return this._rawData.getItem(this.getRawIndex(idx));\n  }\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getName = function (idx) {\n  var rawIndex = this.getRawIndex(idx);\n  return this._nameList[rawIndex] || getRawValueFromStore(this, this._nameDimIdx, rawIndex) || '';\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getId = function (idx) {\n  return getId(this, this.getRawIndex(idx));\n};\n\nfunction getId(list, rawIndex) {\n  var id = list._idList[rawIndex];\n\n  if (id == null) {\n    id = getRawValueFromStore(list, list._idDimIdx, rawIndex);\n  }\n\n  if (id == null) {\n    // FIXME Check the usage in graph, should not use prefix.\n    id = ID_PREFIX + rawIndex;\n  }\n\n  return id;\n}\n\nfunction normalizeDimensions(dimensions) {\n  if (!zrUtil.isArray(dimensions)) {\n    dimensions = [dimensions];\n  }\n\n  return dimensions;\n}\n\nfunction validateDimensions(list, dims) {\n  for (var i = 0; i < dims.length; i++) {\n    // stroage may be empty when no data, so use\n    // dimensionInfos to check.\n    if (!list._dimensionInfos[dims[i]]) {\n      console.error('Unkown dimension ' + dims[i]);\n    }\n  }\n}\n/**\n * Data iteration\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {*} [context=this]\n *\n * @example\n *  list.each('x', function (x, idx) {});\n *  list.each(['x', 'y'], function (x, y, idx) {});\n *  list.each(function (idx) {})\n */\n\n\nlistProto.each = function (dims, cb, context, contextCompat) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  }\n\n  if (typeof dims === 'function') {\n    contextCompat = context;\n    context = cb;\n    cb = dims;\n    dims = [];\n  } // contextCompat just for compat echarts3\n\n\n  context = context || contextCompat || this;\n  dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n  var dimSize = dims.length;\n\n  for (var i = 0; i < this.count(); i++) {\n    // Simple optimization\n    switch (dimSize) {\n      case 0:\n        cb.call(context, i);\n        break;\n\n      case 1:\n        cb.call(context, this.get(dims[0], i), i);\n        break;\n\n      case 2:\n        cb.call(context, this.get(dims[0], i), this.get(dims[1], i), i);\n        break;\n\n      default:\n        var k = 0;\n        var value = [];\n\n        for (; k < dimSize; k++) {\n          value[k] = this.get(dims[k], i);\n        } // Index\n\n\n        value[k] = i;\n        cb.apply(context, value);\n    }\n  }\n};\n/**\n * Data filter\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {*} [context=this]\n */\n\n\nlistProto.filterSelf = function (dimensions, cb, context, contextCompat) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  }\n\n  if (typeof dimensions === 'function') {\n    contextCompat = context;\n    context = cb;\n    cb = dimensions;\n    dimensions = [];\n  } // contextCompat just for compat echarts3\n\n\n  context = context || contextCompat || this;\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var count = this.count();\n  var Ctor = getIndicesCtor(this);\n  var newIndices = new Ctor(count);\n  var value = [];\n  var dimSize = dimensions.length;\n  var offset = 0;\n  var dim0 = dimensions[0];\n\n  for (var i = 0; i < count; i++) {\n    var keep;\n    var rawIdx = this.getRawIndex(i); // Simple optimization\n\n    if (dimSize === 0) {\n      keep = cb.call(context, i);\n    } else if (dimSize === 1) {\n      var val = this._getFast(dim0, rawIdx);\n\n      keep = cb.call(context, val, i);\n    } else {\n      for (var k = 0; k < dimSize; k++) {\n        value[k] = this._getFast(dim0, rawIdx);\n      }\n\n      value[k] = i;\n      keep = cb.apply(context, value);\n    }\n\n    if (keep) {\n      newIndices[offset++] = rawIdx;\n    }\n  } // Set indices after filtered.\n\n\n  if (offset < count) {\n    this._indices = newIndices;\n  }\n\n  this._count = offset; // Reset data extent\n\n  this._extent = {};\n  this.getRawIndex = this._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  return this;\n};\n/**\n * Select data in range. (For optimization of filter)\n * (Manually inline code, support 5 million data filtering in data zoom.)\n */\n\n\nlistProto.selectRange = function (range) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  }\n\n  var dimensions = [];\n\n  for (var dim in range) {\n    if (range.hasOwnProperty(dim)) {\n      dimensions.push(dim);\n    }\n  }\n\n  var dimSize = dimensions.length;\n\n  if (!dimSize) {\n    return;\n  }\n\n  var originalCount = this.count();\n  var Ctor = getIndicesCtor(this);\n  var newIndices = new Ctor(originalCount);\n  var offset = 0;\n  var dim0 = dimensions[0];\n  var min = range[dim0][0];\n  var max = range[dim0][1];\n  var quickFinished = false;\n\n  if (!this._indices) {\n    // Extreme optimization for common case. About 2x faster in chrome.\n    var idx = 0;\n\n    if (dimSize === 1) {\n      var dimStorage = this._storage[dimensions[0]];\n\n      for (var k = 0; k < this._chunkCount; k++) {\n        var chunkStorage = dimStorage[k];\n        var len = Math.min(this._count - k * this._chunkSize, this._chunkSize);\n\n        for (var i = 0; i < len; i++) {\n          var val = chunkStorage[i]; // NaN will not be filtered. Consider the case, in line chart, empty\n          // value indicates the line should be broken. But for the case like\n          // scatter plot, a data item with empty value will not be rendered,\n          // but the axis extent may be effected if some other dim of the data\n          // item has value. Fortunately it is not a significant negative effect.\n\n          if (val >= min && val <= max || isNaN(val)) {\n            newIndices[offset++] = idx;\n          }\n\n          idx++;\n        }\n      }\n\n      quickFinished = true;\n    } else if (dimSize === 2) {\n      var dimStorage = this._storage[dim0];\n      var dimStorage2 = this._storage[dimensions[1]];\n      var min2 = range[dimensions[1]][0];\n      var max2 = range[dimensions[1]][1];\n\n      for (var k = 0; k < this._chunkCount; k++) {\n        var chunkStorage = dimStorage[k];\n        var chunkStorage2 = dimStorage2[k];\n        var len = Math.min(this._count - k * this._chunkSize, this._chunkSize);\n\n        for (var i = 0; i < len; i++) {\n          var val = chunkStorage[i];\n          var val2 = chunkStorage2[i]; // Do not filter NaN, see comment above.\n\n          if ((val >= min && val <= max || isNaN(val)) && (val2 >= min2 && val2 <= max2 || isNaN(val2))) {\n            newIndices[offset++] = idx;\n          }\n\n          idx++;\n        }\n      }\n\n      quickFinished = true;\n    }\n  }\n\n  if (!quickFinished) {\n    if (dimSize === 1) {\n      for (var i = 0; i < originalCount; i++) {\n        var rawIndex = this.getRawIndex(i);\n\n        var val = this._getFast(dim0, rawIndex); // Do not filter NaN, see comment above.\n\n\n        if (val >= min && val <= max || isNaN(val)) {\n          newIndices[offset++] = rawIndex;\n        }\n      }\n    } else {\n      for (var i = 0; i < originalCount; i++) {\n        var keep = true;\n        var rawIndex = this.getRawIndex(i);\n\n        for (var k = 0; k < dimSize; k++) {\n          var dimk = dimensions[k];\n\n          var val = this._getFast(dim, rawIndex); // Do not filter NaN, see comment above.\n\n\n          if (val < range[dimk][0] || val > range[dimk][1]) {\n            keep = false;\n          }\n        }\n\n        if (keep) {\n          newIndices[offset++] = this.getRawIndex(i);\n        }\n      }\n    }\n  } // Set indices after filtered.\n\n\n  if (offset < originalCount) {\n    this._indices = newIndices;\n  }\n\n  this._count = offset; // Reset data extent\n\n  this._extent = {};\n  this.getRawIndex = this._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  return this;\n};\n/**\n * Data mapping to a plain array\n * @param {string|Array.<string>} [dimensions]\n * @param {Function} cb\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.mapArray = function (dimensions, cb, context, contextCompat) {\n  'use strict';\n\n  if (typeof dimensions === 'function') {\n    contextCompat = context;\n    context = cb;\n    cb = dimensions;\n    dimensions = [];\n  } // contextCompat just for compat echarts3\n\n\n  context = context || contextCompat || this;\n  var result = [];\n  this.each(dimensions, function () {\n    result.push(cb && cb.apply(this, arguments));\n  }, context);\n  return result;\n}; // Data in excludeDimensions is copied, otherwise transfered.\n\n\nfunction cloneListForMapAndSample(original, excludeDimensions) {\n  var allDimensions = original.dimensions;\n  var list = new List(zrUtil.map(allDimensions, original.getDimensionInfo, original), original.hostModel); // FIXME If needs stackedOn, value may already been stacked\n\n  transferProperties(list, original);\n  var storage = list._storage = {};\n  var originalStorage = original._storage; // Init storage\n\n  for (var i = 0; i < allDimensions.length; i++) {\n    var dim = allDimensions[i];\n\n    if (originalStorage[dim]) {\n      // Notice that we do not reset invertedIndicesMap here, becuase\n      // there is no scenario of mapping or sampling ordinal dimension.\n      if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n        storage[dim] = cloneDimStore(originalStorage[dim]);\n        list._rawExtent[dim] = getInitialExtent();\n        list._extent[dim] = null;\n      } else {\n        // Direct reference for other dimensions\n        storage[dim] = originalStorage[dim];\n      }\n    }\n  }\n\n  return list;\n}\n\nfunction cloneDimStore(originalDimStore) {\n  var newDimStore = new Array(originalDimStore.length);\n\n  for (var j = 0; j < originalDimStore.length; j++) {\n    newDimStore[j] = cloneChunk(originalDimStore[j]);\n  }\n\n  return newDimStore;\n}\n\nfunction getInitialExtent() {\n  return [Infinity, -Infinity];\n}\n/**\n * Data mapping to a new List with given dimensions\n * @param {string|Array.<string>} dimensions\n * @param {Function} cb\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.map = function (dimensions, cb, context, contextCompat) {\n  'use strict'; // contextCompat just for compat echarts3\n\n  context = context || contextCompat || this;\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var list = cloneListForMapAndSample(this, dimensions); // Following properties are all immutable.\n  // So we can reference to the same value\n\n  list._indices = this._indices;\n  list.getRawIndex = list._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  var storage = list._storage;\n  var tmpRetValue = [];\n  var chunkSize = this._chunkSize;\n  var dimSize = dimensions.length;\n  var dataCount = this.count();\n  var values = [];\n  var rawExtent = list._rawExtent;\n\n  for (var dataIndex = 0; dataIndex < dataCount; dataIndex++) {\n    for (var dimIndex = 0; dimIndex < dimSize; dimIndex++) {\n      values[dimIndex] = this.get(dimensions[dimIndex], dataIndex\n      /*, stack */\n      );\n    }\n\n    values[dimSize] = dataIndex;\n    var retValue = cb && cb.apply(context, values);\n\n    if (retValue != null) {\n      // a number or string (in oridinal dimension)?\n      if (typeof retValue !== 'object') {\n        tmpRetValue[0] = retValue;\n        retValue = tmpRetValue;\n      }\n\n      var rawIndex = this.getRawIndex(dataIndex);\n      var chunkIndex = Math.floor(rawIndex / chunkSize);\n      var chunkOffset = rawIndex % chunkSize;\n\n      for (var i = 0; i < retValue.length; i++) {\n        var dim = dimensions[i];\n        var val = retValue[i];\n        var rawExtentOnDim = rawExtent[dim];\n        var dimStore = storage[dim];\n\n        if (dimStore) {\n          dimStore[chunkIndex][chunkOffset] = val;\n        }\n\n        if (val < rawExtentOnDim[0]) {\n          rawExtentOnDim[0] = val;\n        }\n\n        if (val > rawExtentOnDim[1]) {\n          rawExtentOnDim[1] = val;\n        }\n      }\n    }\n  }\n\n  return list;\n};\n/**\n * Large data down sampling on given dimension\n * @param {string} dimension\n * @param {number} rate\n * @param {Function} sampleValue\n * @param {Function} sampleIndex Sample index for name and id\n */\n\n\nlistProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n  var list = cloneListForMapAndSample(this, [dimension]);\n  var targetStorage = list._storage;\n  var frameValues = [];\n  var frameSize = Math.floor(1 / rate);\n  var dimStore = targetStorage[dimension];\n  var len = this.count();\n  var chunkSize = this._chunkSize;\n  var rawExtentOnDim = list._rawExtent[dimension];\n  var newIndices = new (getIndicesCtor(this))(len);\n  var offset = 0;\n\n  for (var i = 0; i < len; i += frameSize) {\n    // Last frame\n    if (frameSize > len - i) {\n      frameSize = len - i;\n      frameValues.length = frameSize;\n    }\n\n    for (var k = 0; k < frameSize; k++) {\n      var dataIdx = this.getRawIndex(i + k);\n      var originalChunkIndex = Math.floor(dataIdx / chunkSize);\n      var originalChunkOffset = dataIdx % chunkSize;\n      frameValues[k] = dimStore[originalChunkIndex][originalChunkOffset];\n    }\n\n    var value = sampleValue(frameValues);\n    var sampleFrameIdx = this.getRawIndex(Math.min(i + sampleIndex(frameValues, value) || 0, len - 1));\n    var sampleChunkIndex = Math.floor(sampleFrameIdx / chunkSize);\n    var sampleChunkOffset = sampleFrameIdx % chunkSize; // Only write value on the filtered data\n\n    dimStore[sampleChunkIndex][sampleChunkOffset] = value;\n\n    if (value < rawExtentOnDim[0]) {\n      rawExtentOnDim[0] = value;\n    }\n\n    if (value > rawExtentOnDim[1]) {\n      rawExtentOnDim[1] = value;\n    }\n\n    newIndices[offset++] = sampleFrameIdx;\n  }\n\n  list._count = offset;\n  list._indices = newIndices;\n  list.getRawIndex = getRawIndexWithIndices;\n  return list;\n};\n/**\n * Get model of one data item.\n *\n * @param {number} idx\n */\n// FIXME Model proxy ?\n\n\nlistProto.getItemModel = function (idx) {\n  var hostModel = this.hostModel;\n  return new Model(this.getRawDataItem(idx), hostModel, hostModel && hostModel.ecModel);\n};\n/**\n * Create a data differ\n * @param {module:echarts/data/List} otherList\n * @return {module:echarts/data/DataDiffer}\n */\n\n\nlistProto.diff = function (otherList) {\n  var thisList = this;\n  return new DataDiffer(otherList ? otherList.getIndices() : [], this.getIndices(), function (idx) {\n    return getId(otherList, idx);\n  }, function (idx) {\n    return getId(thisList, idx);\n  });\n};\n/**\n * Get visual property.\n * @param {string} key\n */\n\n\nlistProto.getVisual = function (key) {\n  var visual = this._visual;\n  return visual && visual[key];\n};\n/**\n * Set visual property\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setVisual('color', color);\n *  setVisual({\n *      'color': color\n *  });\n */\n\n\nlistProto.setVisual = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setVisual(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._visual = this._visual || {};\n  this._visual[key] = val;\n};\n/**\n * Set layout property.\n * @param {string|Object} key\n * @param {*} [val]\n */\n\n\nlistProto.setLayout = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setLayout(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._layout[key] = val;\n};\n/**\n * Get layout property.\n * @param  {string} key.\n * @return {*}\n */\n\n\nlistProto.getLayout = function (key) {\n  return this._layout[key];\n};\n/**\n * Get layout of single data item\n * @param {number} idx\n */\n\n\nlistProto.getItemLayout = function (idx) {\n  return this._itemLayouts[idx];\n};\n/**\n * Set layout of single data item\n * @param {number} idx\n * @param {Object} layout\n * @param {boolean=} [merge=false]\n */\n\n\nlistProto.setItemLayout = function (idx, layout, merge) {\n  this._itemLayouts[idx] = merge ? zrUtil.extend(this._itemLayouts[idx] || {}, layout) : layout;\n};\n/**\n * Clear all layout of single data item\n */\n\n\nlistProto.clearItemLayouts = function () {\n  this._itemLayouts.length = 0;\n};\n/**\n * Get visual property of single data item\n * @param {number} idx\n * @param {string} key\n * @param {boolean} [ignoreParent=false]\n */\n\n\nlistProto.getItemVisual = function (idx, key, ignoreParent) {\n  var itemVisual = this._itemVisuals[idx];\n  var val = itemVisual && itemVisual[key];\n\n  if (val == null && !ignoreParent) {\n    // Use global visual property\n    return this.getVisual(key);\n  }\n\n  return val;\n};\n/**\n * Set visual property of single data item\n *\n * @param {number} idx\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setItemVisual(0, 'color', color);\n *  setItemVisual(0, {\n *      'color': color\n *  });\n */\n\n\nlistProto.setItemVisual = function (idx, key, value) {\n  var itemVisual = this._itemVisuals[idx] || {};\n  var hasItemVisual = this.hasItemVisual;\n  this._itemVisuals[idx] = itemVisual;\n\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        itemVisual[name] = key[name];\n        hasItemVisual[name] = true;\n      }\n    }\n\n    return;\n  }\n\n  itemVisual[key] = value;\n  hasItemVisual[key] = true;\n};\n/**\n * Clear itemVisuals and list visual.\n */\n\n\nlistProto.clearAllVisual = function () {\n  this._visual = {};\n  this._itemVisuals = [];\n  this.hasItemVisual = {};\n};\n\nvar setItemDataAndSeriesIndex = function (child) {\n  child.seriesIndex = this.seriesIndex;\n  child.dataIndex = this.dataIndex;\n  child.dataType = this.dataType;\n};\n/**\n * Set graphic element relative to data. It can be set as null\n * @param {number} idx\n * @param {module:zrender/Element} [el]\n */\n\n\nlistProto.setItemGraphicEl = function (idx, el) {\n  var hostModel = this.hostModel;\n\n  if (el) {\n    // Add data index and series index for indexing the data by element\n    // Useful in tooltip\n    el.dataIndex = idx;\n    el.dataType = this.dataType;\n    el.seriesIndex = hostModel && hostModel.seriesIndex;\n\n    if (el.type === 'group') {\n      el.traverse(setItemDataAndSeriesIndex, el);\n    }\n  }\n\n  this._graphicEls[idx] = el;\n};\n/**\n * @param {number} idx\n * @return {module:zrender/Element}\n */\n\n\nlistProto.getItemGraphicEl = function (idx) {\n  return this._graphicEls[idx];\n};\n/**\n * @param {Function} cb\n * @param {*} context\n */\n\n\nlistProto.eachItemGraphicEl = function (cb, context) {\n  zrUtil.each(this._graphicEls, function (el, idx) {\n    if (el) {\n      cb && cb.call(context, el, idx);\n    }\n  });\n};\n/**\n * Shallow clone a new list except visual and layout properties, and graph elements.\n * New list only change the indices.\n */\n\n\nlistProto.cloneShallow = function (list) {\n  if (!list) {\n    var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n    list = new List(dimensionInfoList, this.hostModel);\n  } // FIXME\n\n\n  list._storage = this._storage;\n  transferProperties(list, this); // Clone will not change the data extent and indices\n\n  if (this._indices) {\n    var Ctor = this._indices.constructor;\n    list._indices = new Ctor(this._indices);\n  } else {\n    list._indices = null;\n  }\n\n  list.getRawIndex = list._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  return list;\n};\n/**\n * Wrap some method to add more feature\n * @param {string} methodName\n * @param {Function} injectFunction\n */\n\n\nlistProto.wrapMethod = function (methodName, injectFunction) {\n  var originalMethod = this[methodName];\n\n  if (typeof originalMethod !== 'function') {\n    return;\n  }\n\n  this.__wrappedMethods = this.__wrappedMethods || [];\n\n  this.__wrappedMethods.push(methodName);\n\n  this[methodName] = function () {\n    var res = originalMethod.apply(this, arguments);\n    return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n  };\n}; // Methods that create a new list based on this list should be listed here.\n// Notice that those method should `RETURN` the new list.\n\n\nlistProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map']; // Methods that change indices of this list should be listed here.\n\nlistProto.CHANGABLE_METHODS = ['filterSelf', 'selectRange'];\nvar _default = List;\nmodule.exports = _default;","var _vector = require(\"../../core/vector\");\n\nvar v2Distance = _vector.distance;\n\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * @inner\n */\nfunction interpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n/**\n * @alias module:zrender/shape/util/smoothSpline\n * @param {Array} points 线段顶点数组\n * @param {boolean} isLoop\n * @return {Array}\n */\n\n\nfunction _default(points, isLoop) {\n  var len = points.length;\n  var ret = [];\n  var distance = 0;\n\n  for (var i = 1; i < len; i++) {\n    distance += v2Distance(points[i - 1], points[i]);\n  }\n\n  var segs = distance / 2;\n  segs = segs < len ? len : segs;\n\n  for (var i = 0; i < segs; i++) {\n    var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n    var idx = Math.floor(pos);\n    var w = pos - idx;\n    var p0;\n    var p1 = points[idx % len];\n    var p2;\n    var p3;\n\n    if (!isLoop) {\n      p0 = points[idx === 0 ? idx : idx - 1];\n      p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n      p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n    } else {\n      p0 = points[(idx - 1 + len) % len];\n      p2 = points[(idx + 1) % len];\n      p3 = points[(idx + 2) % len];\n    }\n\n    var w2 = w * w;\n    var w3 = w * w2;\n    ret.push([interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3), interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)]);\n  }\n\n  return ret;\n}\n\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar TYPE_DELIMITER = '.';\nvar IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n/**\n * Notice, parseClassType('') should returns {main: '', sub: ''}\n * @public\n */\n\nfunction parseClassType(componentType) {\n  var ret = {\n    main: '',\n    sub: ''\n  };\n\n  if (componentType) {\n    componentType = componentType.split(TYPE_DELIMITER);\n    ret.main = componentType[0] || '';\n    ret.sub = componentType[1] || '';\n  }\n\n  return ret;\n}\n/**\n * @public\n */\n\n\nfunction checkClassType(componentType) {\n  zrUtil.assert(/^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType), 'componentType \"' + componentType + '\" illegal');\n}\n/**\n * @public\n */\n\n\nfunction enableClassExtend(RootClass, mandatoryMethods) {\n  RootClass.$constructor = RootClass;\n\n  RootClass.extend = function (proto) {\n    var superClass = this;\n\n    var ExtendedClass = function () {\n      if (!proto.$constructor) {\n        superClass.apply(this, arguments);\n      } else {\n        proto.$constructor.apply(this, arguments);\n      }\n    };\n\n    zrUtil.extend(ExtendedClass.prototype, proto);\n    ExtendedClass.extend = this.extend;\n    ExtendedClass.superCall = superCall;\n    ExtendedClass.superApply = superApply;\n    zrUtil.inherits(ExtendedClass, this);\n    ExtendedClass.superClass = superClass;\n    return ExtendedClass;\n  };\n}\n\nvar classBase = 0;\n/**\n * Can not use instanceof, consider different scope by\n * cross domain or es module import in ec extensions.\n * Mount a method \"isInstance()\" to Clz.\n */\n\nfunction enableClassCheck(Clz) {\n  var classAttr = ['__\\0is_clz', classBase++, Math.random().toFixed(3)].join('_');\n  Clz.prototype[classAttr] = true;\n\n  Clz.isInstance = function (obj) {\n    return !!(obj && obj[classAttr]);\n  };\n} // superCall should have class info, which can not be fetch from 'this'.\n// Consider this case:\n// class A has method f,\n// class B inherits class A, overrides method f, f call superApply('f'),\n// class C inherits class B, do not overrides method f,\n// then when method of class C is called, dead loop occured.\n\n\nfunction superCall(context, methodName) {\n  var args = zrUtil.slice(arguments, 2);\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n\nfunction superApply(context, methodName, args) {\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n/**\n * @param {Object} entity\n * @param {Object} options\n * @param {boolean} [options.registerWhenExtend]\n * @public\n */\n\n\nfunction enableClassManagement(entity, options) {\n  options = options || {};\n  /**\n   * Component model classes\n   * key: componentType,\n   * value:\n   *     componentClass, when componentType is 'xxx'\n   *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n   * @type {Object}\n   */\n\n  var storage = {};\n\n  entity.registerClass = function (Clazz, componentType) {\n    if (componentType) {\n      checkClassType(componentType);\n      componentType = parseClassType(componentType);\n\n      if (!componentType.sub) {\n        storage[componentType.main] = Clazz;\n      } else if (componentType.sub !== IS_CONTAINER) {\n        var container = makeContainer(componentType);\n        container[componentType.sub] = Clazz;\n      }\n    }\n\n    return Clazz;\n  };\n\n  entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n    var Clazz = storage[componentMainType];\n\n    if (Clazz && Clazz[IS_CONTAINER]) {\n      Clazz = subType ? Clazz[subType] : null;\n    }\n\n    if (throwWhenNotFound && !Clazz) {\n      throw new Error(!subType ? componentMainType + '.' + 'type should be specified.' : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.');\n    }\n\n    return Clazz;\n  };\n\n  entity.getClassesByMainType = function (componentType) {\n    componentType = parseClassType(componentType);\n    var result = [];\n    var obj = storage[componentType.main];\n\n    if (obj && obj[IS_CONTAINER]) {\n      zrUtil.each(obj, function (o, type) {\n        type !== IS_CONTAINER && result.push(o);\n      });\n    } else {\n      result.push(obj);\n    }\n\n    return result;\n  };\n\n  entity.hasClass = function (componentType) {\n    // Just consider componentType.main.\n    componentType = parseClassType(componentType);\n    return !!storage[componentType.main];\n  };\n  /**\n   * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n   */\n\n\n  entity.getAllClassMainTypes = function () {\n    var types = [];\n    zrUtil.each(storage, function (obj, type) {\n      types.push(type);\n    });\n    return types;\n  };\n  /**\n   * If a main type is container and has sub types\n   * @param  {string}  mainType\n   * @return {boolean}\n   */\n\n\n  entity.hasSubTypes = function (componentType) {\n    componentType = parseClassType(componentType);\n    var obj = storage[componentType.main];\n    return obj && obj[IS_CONTAINER];\n  };\n\n  entity.parseClassType = parseClassType;\n\n  function makeContainer(componentType) {\n    var container = storage[componentType.main];\n\n    if (!container || !container[IS_CONTAINER]) {\n      container = storage[componentType.main] = {};\n      container[IS_CONTAINER] = true;\n    }\n\n    return container;\n  }\n\n  if (options.registerWhenExtend) {\n    var originalExtend = entity.extend;\n\n    if (originalExtend) {\n      entity.extend = function (proto) {\n        var ExtendedClass = originalExtend.call(this, proto);\n        return entity.registerClass(ExtendedClass, proto.type);\n      };\n    }\n  }\n\n  return entity;\n}\n/**\n * @param {string|Array.<string>} properties\n */\n\n\nfunction setReadOnly(obj, properties) {// FIXME It seems broken in IE8 simulation of IE11\n  // if (!zrUtil.isArray(properties)) {\n  //     properties = properties != null ? [properties] : [];\n  // }\n  // zrUtil.each(properties, function (prop) {\n  //     var value = obj[prop];\n  //     Object.defineProperty\n  //         && Object.defineProperty(obj, prop, {\n  //             value: value, writable: false\n  //         });\n  //     zrUtil.isArray(obj[prop])\n  //         && Object.freeze\n  //         && Object.freeze(obj[prop]);\n  // });\n}\n\nexports.parseClassType = parseClassType;\nexports.enableClassExtend = enableClassExtend;\nexports.enableClassCheck = enableClassCheck;\nexports.enableClassManagement = enableClassManagement;\nexports.setReadOnly = setReadOnly;","var echarts = require(\"../echarts\");\n\nvar graphic = require(\"../util/graphic\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Model\necharts.extendComponentModel({\n  type: 'title',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 6,\n    show: true,\n    text: '',\n    // 超链接跳转\n    // link: null,\n    // 仅支持self | blank\n    target: 'blank',\n    subtext: '',\n    // 超链接跳转\n    // sublink: null,\n    // 仅支持self | blank\n    subtarget: 'blank',\n    // 'center' ¦ 'left' ¦ 'right'\n    // ¦ {number}（x坐标，单位px）\n    left: 0,\n    // 'top' ¦ 'bottom' ¦ 'center'\n    // ¦ {number}（y坐标，单位px）\n    top: 0,\n    // 水平对齐\n    // 'auto' | 'left' | 'right' | 'center'\n    // 默认根据 left 的位置判断是左对齐还是右对齐\n    // textAlign: null\n    //\n    // 垂直对齐\n    // 'auto' | 'top' | 'bottom' | 'middle'\n    // 默认根据 top 位置判断是上对齐还是下对齐\n    // textBaseline: null\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 标题边框颜色\n    borderColor: '#ccc',\n    // 标题边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 标题内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 主副标题纵向间隔，单位px，默认为10，\n    itemGap: 10,\n    textStyle: {\n      fontSize: 18,\n      fontWeight: 'bolder',\n      color: '#333'\n    },\n    subtextStyle: {\n      color: '#aaa'\n    }\n  }\n}); // View\n\necharts.extendComponentView({\n  type: 'title',\n  render: function (titleModel, ecModel, api) {\n    this.group.removeAll();\n\n    if (!titleModel.get('show')) {\n      return;\n    }\n\n    var group = this.group;\n    var textStyleModel = titleModel.getModel('textStyle');\n    var subtextStyleModel = titleModel.getModel('subtextStyle');\n    var textAlign = titleModel.get('textAlign');\n    var textBaseline = titleModel.get('textBaseline');\n    var textEl = new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: titleModel.get('text'),\n        textFill: textStyleModel.getTextColor()\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var textRect = textEl.getBoundingRect();\n    var subText = titleModel.get('subtext');\n    var subTextEl = new graphic.Text({\n      style: graphic.setTextStyle({}, subtextStyleModel, {\n        text: subText,\n        textFill: subtextStyleModel.getTextColor(),\n        y: textRect.height + titleModel.get('itemGap'),\n        textVerticalAlign: 'top'\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var link = titleModel.get('link');\n    var sublink = titleModel.get('sublink');\n    textEl.silent = !link;\n    subTextEl.silent = !sublink;\n\n    if (link) {\n      textEl.on('click', function () {\n        window.open(link, '_' + titleModel.get('target'));\n      });\n    }\n\n    if (sublink) {\n      subTextEl.on('click', function () {\n        window.open(sublink, '_' + titleModel.get('subtarget'));\n      });\n    }\n\n    group.add(textEl);\n    subText && group.add(subTextEl); // If no subText, but add subTextEl, there will be an empty line.\n\n    var groupRect = group.getBoundingRect();\n    var layoutOption = titleModel.getBoxLayoutParams();\n    layoutOption.width = groupRect.width;\n    layoutOption.height = groupRect.height;\n    var layoutRect = getLayoutRect(layoutOption, {\n      width: api.getWidth(),\n      height: api.getHeight()\n    }, titleModel.get('padding')); // Adjust text align based on position\n\n    if (!textAlign) {\n      // Align left if title is on the left. center and right is same\n      textAlign = titleModel.get('left') || titleModel.get('right');\n\n      if (textAlign === 'middle') {\n        textAlign = 'center';\n      } // Adjust layout by text align\n\n\n      if (textAlign === 'right') {\n        layoutRect.x += layoutRect.width;\n      } else if (textAlign === 'center') {\n        layoutRect.x += layoutRect.width / 2;\n      }\n    }\n\n    if (!textBaseline) {\n      textBaseline = titleModel.get('top') || titleModel.get('bottom');\n\n      if (textBaseline === 'center') {\n        textBaseline = 'middle';\n      }\n\n      if (textBaseline === 'bottom') {\n        layoutRect.y += layoutRect.height;\n      } else if (textBaseline === 'middle') {\n        layoutRect.y += layoutRect.height / 2;\n      }\n\n      textBaseline = textBaseline || 'top';\n    }\n\n    group.attr('position', [layoutRect.x, layoutRect.y]);\n    var alignStyle = {\n      textAlign: textAlign,\n      textVerticalAlign: textBaseline\n    };\n    textEl.setStyle(alignStyle);\n    subTextEl.setStyle(alignStyle); // Render background\n    // Get groupRect again because textAlign has been changed\n\n    groupRect = group.getBoundingRect();\n    var padding = layoutRect.margin;\n    var style = titleModel.getItemStyle(['color', 'opacity']);\n    style.fill = titleModel.get('backgroundColor');\n    var rect = new graphic.Rect({\n      shape: {\n        x: groupRect.x - padding[3],\n        y: groupRect.y - padding[0],\n        width: groupRect.width + padding[1] + padding[3],\n        height: groupRect.height + padding[0] + padding[2],\n        r: titleModel.get('borderRadius')\n      },\n      style: style,\n      silent: true\n    });\n    graphic.subPixelOptimizeRect(rect);\n    group.add(rect);\n  }\n});","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (!legendModels || !legendModels.length) {\n    return;\n  }\n\n  ecModel.eachSeriesByType('graph', function (graphSeries) {\n    var categoriesData = graphSeries.getCategoriesData();\n    var graph = graphSeries.getGraph();\n    var data = graph.data;\n    var categoryNames = categoriesData.mapArray(categoriesData.getName);\n    data.filterSelf(function (idx) {\n      var model = data.getItemModel(idx);\n      var category = model.getShallow('category');\n\n      if (category != null) {\n        if (typeof category === 'number') {\n          category = categoryNames[category];\n        } // If in any legend component the status is not selected.\n\n\n        for (var i = 0; i < legendModels.length; i++) {\n          if (!legendModels[i].isSelected(category)) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    });\n  }, this);\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./map/MapSeries\");\n\nrequire(\"./map/MapView\");\n\nrequire(\"../action/geoRoam\");\n\nrequire(\"../coord/geo/geoCreator\");\n\nvar mapSymbolLayout = require(\"./map/mapSymbolLayout\");\n\nvar mapVisual = require(\"./map/mapVisual\");\n\nvar mapDataStatistic = require(\"./map/mapDataStatistic\");\n\nvar backwardCompat = require(\"./map/backwardCompat\");\n\nvar createDataSelectAction = require(\"../action/createDataSelectAction\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerLayout(mapSymbolLayout);\necharts.registerVisual(mapVisual);\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, mapDataStatistic);\necharts.registerPreprocessor(backwardCompat);\ncreateDataSelectAction('map', [{\n  type: 'mapToggleSelect',\n  event: 'mapselectchanged',\n  method: 'toggleSelected'\n}, {\n  type: 'mapSelect',\n  event: 'mapselected',\n  method: 'select'\n}, {\n  type: 'mapUnSelect',\n  event: 'mapunselected',\n  method: 'unSelect'\n}]);","var createListFromArray = require(\"../helper/createListFromArray\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.effectScatter',\n  dependencies: ['grid', 'polar'],\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  brushSelector: 'point',\n  defaultOption: {\n    coordinateSystem: 'cartesian2d',\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    effectType: 'ripple',\n    progressive: 0,\n    // When to show the effect, option: 'render'|'emphasis'\n    showEffectOn: 'render',\n    // Ripple effect config\n    rippleEffect: {\n      period: 4,\n      // Scale of ripple\n      scale: 2.5,\n      // Brush type can be fill or stroke\n      brushType: 'fill'\n    },\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Polar coordinate system\n    // polarIndex: 0,\n    // Geo coordinate system\n    // geoIndex: 0,\n    // symbol: null,        // 图形类型\n    symbolSize: 10 // 图形大小，半宽（半径）参数，当图形为方向或菱形则总宽度为symbolSize * 2\n    // symbolRotate: null,  // 图形旋转控制\n    // large: false,\n    // Available when large is true\n    // largeThreshold: 2000,\n    // itemStyle: {\n    //     opacity: 1\n    // }\n\n  }\n});\n\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _helper = require(\"./helper\");\n\nvar setLabel = _helper.setLabel;\n\nvar Model = require(\"../../model/Model\");\n\nvar barItemStyle = require(\"./barItemStyle\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'barBorderWidth']; // FIXME\n// Just for compatible with ec2.\n\nzrUtil.extend(Model.prototype, barItemStyle);\n\nvar _default = echarts.extendChartView({\n  type: 'bar',\n  render: function (seriesModel, ecModel, api) {\n    this._updateDrawMode(seriesModel);\n\n    var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n    if (coordinateSystemType === 'cartesian2d' || coordinateSystemType === 'polar') {\n      this._isLargeDraw ? this._renderLarge(seriesModel, ecModel, api) : this._renderNormal(seriesModel, ecModel, api);\n    } else {}\n\n    return this.group;\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    this._clear();\n\n    this._updateDrawMode(seriesModel);\n  },\n  incrementalRender: function (params, seriesModel, ecModel, api) {\n    // Do not support progressive in normal mode.\n    this._incrementalRenderLarge(params, seriesModel);\n  },\n  _updateDrawMode: function (seriesModel) {\n    var isLargeDraw = seriesModel.pipelineContext.large;\n\n    if (this._isLargeDraw == null || isLargeDraw ^ this._isLargeDraw) {\n      this._isLargeDraw = isLargeDraw;\n\n      this._clear();\n    }\n  },\n  _renderNormal: function (seriesModel, ecModel, api) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coord = seriesModel.coordinateSystem;\n    var baseAxis = coord.getBaseAxis();\n    var isHorizontalOrRadial;\n\n    if (coord.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n    } else if (coord.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n    }\n\n    var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n    data.diff(oldData).add(function (dataIndex) {\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      var itemModel = data.getItemModel(dataIndex);\n      var layout = getLayout[coord.type](data, dataIndex, itemModel);\n      var el = elementCreator[coord.type](data, dataIndex, itemModel, layout, isHorizontalOrRadial, animationModel);\n      data.setItemGraphicEl(dataIndex, el);\n      group.add(el);\n      updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).update(function (newIndex, oldIndex) {\n      var el = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(el);\n        return;\n      }\n\n      var itemModel = data.getItemModel(newIndex);\n      var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n      if (el) {\n        graphic.updateProps(el, {\n          shape: layout\n        }, animationModel, newIndex);\n      } else {\n        el = elementCreator[coord.type](data, newIndex, itemModel, layout, isHorizontalOrRadial, animationModel, true);\n      }\n\n      data.setItemGraphicEl(newIndex, el); // Add back\n\n      group.add(el);\n      updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).remove(function (dataIndex) {\n      var el = oldData.getItemGraphicEl(dataIndex);\n\n      if (coord.type === 'cartesian2d') {\n        el && removeRect(dataIndex, animationModel, el);\n      } else {\n        el && removeSector(dataIndex, animationModel, el);\n      }\n    }).execute();\n    this._data = data;\n  },\n  _renderLarge: function (seriesModel, ecModel, api) {\n    this._clear();\n\n    createLarge(seriesModel, this.group);\n  },\n  _incrementalRenderLarge: function (params, seriesModel) {\n    createLarge(seriesModel, this.group, true);\n  },\n  dispose: zrUtil.noop,\n  remove: function (ecModel) {\n    this._clear(ecModel);\n  },\n  _clear: function (ecModel) {\n    var group = this.group;\n    var data = this._data;\n\n    if (ecModel && ecModel.get('animation') && data && !this._isLargeDraw) {\n      data.eachItemGraphicEl(function (el) {\n        if (el.type === 'sector') {\n          removeSector(el.dataIndex, ecModel, el);\n        } else {\n          removeRect(el.dataIndex, ecModel, el);\n        }\n      });\n    } else {\n      group.removeAll();\n    }\n\n    this._data = null;\n  }\n});\n\nvar elementCreator = {\n  cartesian2d: function (data, dataIndex, itemModel, layout, isHorizontal, animationModel, isUpdate) {\n    var rect = new graphic.Rect({\n      shape: zrUtil.extend({}, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var rectShape = rect.shape;\n      var animateProperty = isHorizontal ? 'height' : 'width';\n      var animateTarget = {};\n      rectShape[animateProperty] = 0;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return rect;\n  },\n  polar: function (data, dataIndex, itemModel, layout, isRadial, animationModel, isUpdate) {\n    // Keep the same logic with bar in catesion: use end value to control\n    // direction. Notice that if clockwise is true (by default), the sector\n    // will always draw clockwisely, no matter whether endAngle is greater\n    // or less than startAngle.\n    var clockwise = layout.startAngle < layout.endAngle;\n    var sector = new graphic.Sector({\n      shape: zrUtil.defaults({\n        clockwise: clockwise\n      }, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var sectorShape = sector.shape;\n      var animateProperty = isRadial ? 'r' : 'endAngle';\n      var animateTarget = {};\n      sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](sector, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return sector;\n  }\n};\n\nfunction removeRect(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      width: 0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nfunction removeSector(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      r: el.shape.r0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nvar getLayout = {\n  cartesian2d: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    var fixedLineWidth = getLineWidth(itemModel, layout); // fix layout with lineWidth\n\n    var signX = layout.width > 0 ? 1 : -1;\n    var signY = layout.height > 0 ? 1 : -1;\n    return {\n      x: layout.x + signX * fixedLineWidth / 2,\n      y: layout.y + signY * fixedLineWidth / 2,\n      width: layout.width - signX * fixedLineWidth,\n      height: layout.height - signY * fixedLineWidth\n    };\n  },\n  polar: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    return {\n      cx: layout.cx,\n      cy: layout.cy,\n      r0: layout.r0,\n      r: layout.r,\n      startAngle: layout.startAngle,\n      endAngle: layout.endAngle\n    };\n  }\n};\n\nfunction updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar) {\n  var color = data.getItemVisual(dataIndex, 'color');\n  var opacity = data.getItemVisual(dataIndex, 'opacity');\n  var itemStyleModel = itemModel.getModel('itemStyle');\n  var hoverStyle = itemModel.getModel('emphasis.itemStyle').getBarItemStyle();\n\n  if (!isPolar) {\n    el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n  }\n\n  el.useStyle(zrUtil.defaults({\n    fill: color,\n    opacity: opacity\n  }, itemStyleModel.getBarItemStyle()));\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && el.attr('cursor', cursorStyle);\n  var labelPositionOutside = isHorizontal ? layout.height > 0 ? 'bottom' : 'top' : layout.width > 0 ? 'left' : 'right';\n\n  if (!isPolar) {\n    setLabel(el.style, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside);\n  }\n\n  graphic.setHoverStyle(el, hoverStyle);\n} // In case width or height are too small.\n\n\nfunction getLineWidth(itemModel, rawLayout) {\n  var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n  return Math.min(lineWidth, Math.abs(rawLayout.width), Math.abs(rawLayout.height));\n}\n\nvar LargePath = Path.extend({\n  type: 'largeBar',\n  shape: {\n    points: []\n  },\n  buildPath: function (ctx, shape) {\n    // Drawing lines is more efficient than drawing\n    // a whole line or drawing rects.\n    var points = shape.points;\n    var startPoint = this.__startPoint;\n    var valueIdx = this.__valueIdx;\n\n    for (var i = 0; i < points.length; i += 2) {\n      startPoint[this.__valueIdx] = points[i + valueIdx];\n      ctx.moveTo(startPoint[0], startPoint[1]);\n      ctx.lineTo(points[i], points[i + 1]);\n    }\n  }\n});\n\nfunction createLarge(seriesModel, group, incremental) {\n  // TODO support polar\n  var data = seriesModel.getData();\n  var startPoint = [];\n  var valueIdx = data.getLayout('valueAxisHorizontal') ? 1 : 0;\n  startPoint[1 - valueIdx] = data.getLayout('valueAxisStart');\n  var el = new LargePath({\n    shape: {\n      points: data.getLayout('largePoints')\n    },\n    incremental: !!incremental,\n    __startPoint: startPoint,\n    __valueIdx: valueIdx\n  });\n  group.add(el);\n  setLargeStyle(el, seriesModel, data);\n}\n\nfunction setLargeStyle(el, seriesModel, data) {\n  var borderColor = data.getVisual('borderColor') || data.getVisual('color');\n  var itemStyle = seriesModel.getModel('itemStyle').getItemStyle(['color', 'borderColor']);\n  el.useStyle(itemStyle);\n  el.style.fill = null;\n  el.style.stroke = borderColor;\n  el.style.lineWidth = data.getLayout('barWidth');\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(option) {\n  createParallelIfNeeded(option);\n  mergeAxisOptionFromParallel(option);\n}\n/**\n * Create a parallel coordinate if not exists.\n * @inner\n */\n\n\nfunction createParallelIfNeeded(option) {\n  if (option.parallel) {\n    return;\n  }\n\n  var hasParallelSeries = false;\n  zrUtil.each(option.series, function (seriesOpt) {\n    if (seriesOpt && seriesOpt.type === 'parallel') {\n      hasParallelSeries = true;\n    }\n  });\n\n  if (hasParallelSeries) {\n    option.parallel = [{}];\n  }\n}\n/**\n * Merge aixs definition from parallel option (if exists) to axis option.\n * @inner\n */\n\n\nfunction mergeAxisOptionFromParallel(option) {\n  var axes = modelUtil.normalizeToArray(option.parallelAxis);\n  zrUtil.each(axes, function (axisOption) {\n    if (!zrUtil.isObject(axisOption)) {\n      return;\n    }\n\n    var parallelIndex = axisOption.parallelIndex || 0;\n    var parallelOption = modelUtil.normalizeToArray(option.parallel)[parallelIndex];\n\n    if (parallelOption && parallelOption.parallelAxisDefault) {\n      zrUtil.merge(axisOption, parallelOption.parallelAxisDefault, false);\n    }\n  });\n}\n\nmodule.exports = _default;","var createRenderPlanner = require(\"../helper/createRenderPlanner\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = {\n  seriesType: 'lines',\n  plan: createRenderPlanner(),\n  reset: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var isPolyline = seriesModel.get('polyline');\n    var isLarge = seriesModel.pipelineContext.large;\n\n    function progress(params, lineData) {\n      var lineCoords = [];\n\n      if (isLarge) {\n        var points;\n        var segCount = params.end - params.start;\n\n        if (isPolyline) {\n          var totalCoordsCount = 0;\n\n          for (var i = params.start; i < params.end; i++) {\n            totalCoordsCount += seriesModel.getLineCoordsCount(i);\n          }\n\n          points = new Float32Array(segCount + totalCoordsCount * 2);\n        } else {\n          points = new Float32Array(segCount * 4);\n        }\n\n        var offset = 0;\n        var pt = [];\n\n        for (var i = params.start; i < params.end; i++) {\n          var len = seriesModel.getLineCoords(i, lineCoords);\n\n          if (isPolyline) {\n            points[offset++] = len;\n          }\n\n          for (var k = 0; k < len; k++) {\n            pt = coordSys.dataToPoint(lineCoords[k], false, pt);\n            points[offset++] = pt[0];\n            points[offset++] = pt[1];\n          }\n        }\n\n        lineData.setLayout('linesPoints', points);\n      } else {\n        for (var i = params.start; i < params.end; i++) {\n          var itemModel = lineData.getItemModel(i);\n          var len = seriesModel.getLineCoords(i, lineCoords);\n          var pts = [];\n\n          if (isPolyline) {\n            for (var j = 0; j < len; j++) {\n              pts.push(coordSys.dataToPoint(lineCoords[j]));\n            }\n          } else {\n            pts[0] = coordSys.dataToPoint(lineCoords[0]);\n            pts[1] = coordSys.dataToPoint(lineCoords[1]);\n            var curveness = itemModel.get('lineStyle.curveness');\n\n            if (+curveness) {\n              pts[2] = [(pts[0][0] + pts[1][0]) / 2 - (pts[0][1] - pts[1][1]) * curveness, (pts[0][1] + pts[1][1]) / 2 - (pts[1][0] - pts[0][0]) * curveness];\n            }\n          }\n\n          lineData.setItemLayout(i, pts);\n        }\n      }\n    }\n\n    return {\n      progress: progress\n    };\n  }\n};\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar axisPointerModelHelper = require(\"../axisPointer/modelHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Base class of AxisView.\n */\nvar AxisView = echarts.extendComponentView({\n  type: 'axis',\n\n  /**\n   * @private\n   */\n  _axisPointer: null,\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  axisPointerClass: null,\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    // FIXME\n    // This process should proformed after coordinate systems updated\n    // (axis scale updated), and should be performed each time update.\n    // So put it here temporarily, although it is not appropriate to\n    // put a model-writing procedure in `view`.\n    this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n    AxisView.superApply(this, 'render', arguments);\n    updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n  },\n\n  /**\n   * Action handler.\n   * @public\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/model/Global} ecModel\n   * @param {module:echarts/ExtensionAPI} api\n   * @param {Object} payload\n   */\n  updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n    updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    var axisPointer = this._axisPointer;\n    axisPointer && axisPointer.remove(api);\n    AxisView.superApply(this, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    disposeAxisPointer(this, api);\n    AxisView.superApply(this, 'dispose', arguments);\n  }\n});\n\nfunction updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n  var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n\n  if (!Clazz) {\n    return;\n  }\n\n  var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n  axisPointerModel ? (axisView._axisPointer || (axisView._axisPointer = new Clazz())).render(axisModel, axisPointerModel, api, forceRender) : disposeAxisPointer(axisView, api);\n}\n\nfunction disposeAxisPointer(axisView, ecModel, api) {\n  var axisPointer = axisView._axisPointer;\n  axisPointer && axisPointer.dispose(ecModel, api);\n  axisView._axisPointer = null;\n}\n\nvar axisPointerClazz = [];\n\nAxisView.registerAxisPointerClass = function (type, clazz) {\n  axisPointerClazz[type] = clazz;\n};\n\nAxisView.getAxisPointerClass = function (type) {\n  return type && axisPointerClazz[type];\n};\n\nvar _default = AxisView;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(option) {\n  var timelineOpt = option && option.timeline;\n\n  if (!zrUtil.isArray(timelineOpt)) {\n    timelineOpt = timelineOpt ? [timelineOpt] : [];\n  }\n\n  zrUtil.each(timelineOpt, function (opt) {\n    if (!opt) {\n      return;\n    }\n\n    compatibleEC2(opt);\n  });\n}\n\nfunction compatibleEC2(opt) {\n  var type = opt.type;\n  var ec2Types = {\n    'number': 'value',\n    'time': 'time'\n  }; // Compatible with ec2\n\n  if (ec2Types[type]) {\n    opt.axisType = ec2Types[type];\n    delete opt.type;\n  }\n\n  transferItem(opt);\n\n  if (has(opt, 'controlPosition')) {\n    var controlStyle = opt.controlStyle || (opt.controlStyle = {});\n\n    if (!has(controlStyle, 'position')) {\n      controlStyle.position = opt.controlPosition;\n    }\n\n    if (controlStyle.position === 'none' && !has(controlStyle, 'show')) {\n      controlStyle.show = false;\n      delete controlStyle.position;\n    }\n\n    delete opt.controlPosition;\n  }\n\n  zrUtil.each(opt.data || [], function (dataItem) {\n    if (zrUtil.isObject(dataItem) && !zrUtil.isArray(dataItem)) {\n      if (!has(dataItem, 'value') && has(dataItem, 'name')) {\n        // In ec2, using name as value.\n        dataItem.value = dataItem.name;\n      }\n\n      transferItem(dataItem);\n    }\n  });\n}\n\nfunction transferItem(opt) {\n  var itemStyle = opt.itemStyle || (opt.itemStyle = {});\n  var itemStyleEmphasis = itemStyle.emphasis || (itemStyle.emphasis = {}); // Transfer label out\n\n  var label = opt.label || opt.label || {};\n  var labelNormal = label.normal || (label.normal = {});\n  var excludeLabelAttr = {\n    normal: 1,\n    emphasis: 1\n  };\n  zrUtil.each(label, function (value, name) {\n    if (!excludeLabelAttr[name] && !has(labelNormal, name)) {\n      labelNormal[name] = value;\n    }\n  });\n\n  if (itemStyleEmphasis.label && !has(label, 'emphasis')) {\n    label.emphasis = itemStyleEmphasis.label;\n    delete itemStyleEmphasis.label;\n  }\n}\n\nfunction has(obj, attr) {\n  return obj.hasOwnProperty(attr);\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @constructor  module:echarts/coord/single/SingleAxis\n * @extends {module:echarts/coord/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar SingleAxis = function (dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   * - 'category'\n   * - 'value'\n   * - 'time'\n   * - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   *  @type {string}\n   */\n\n  this.position = position || 'bottom';\n  /**\n   * Axis orient\n   *  - 'horizontal'\n   *  - 'vertical'\n   * @type {[type]}\n   */\n\n  this.orient = null;\n};\n\nSingleAxis.prototype = {\n  constructor: SingleAxis,\n\n  /**\n   * Axis model\n   * @type {module:echarts/coord/single/AxisModel}\n   */\n  model: null,\n\n  /**\n   * Judge the orient of the axis.\n   * @return {boolean}\n   */\n  isHorizontal: function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.coordinateSystem.pointToData(point, clamp)[0];\n  },\n\n  /**\n   * Convert the local coord(processed by dataToCoord())\n   * to global coord(concrete pixel coord).\n   * designated by module:echarts/coord/single/Single.\n   * @type {Function}\n   */\n  toGlobalCoord: null,\n\n  /**\n   * Convert the global coord to local coord.\n   * designated by module:echarts/coord/single/Single.\n   * @type {Function}\n   */\n  toLocalCoord: null\n};\nzrUtil.inherits(SingleAxis, Axis);\nvar _default = SingleAxis;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar geoCoordMap = {\n  'Russia': [100, 60],\n  'United States': [-99, 38],\n  'United States of America': [-99, 38]\n};\n\nfunction _default(geo) {\n  zrUtil.each(geo.regions, function (region) {\n    var geoCoord = geoCoordMap[region.name];\n\n    if (geoCoord) {\n      var cp = region.center;\n      cp[0] = geoCoord[0];\n      cp[1] = geoCoord[1];\n    }\n  });\n}\n\nmodule.exports = _default;","var _curve = require(\"../core/curve\");\n\nvar quadraticProjectPoint = _curve.quadraticProjectPoint;\n\n/**\n * 二次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l) {\n    return false;\n  }\n\n  var d = quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;","var Component = require(\"../../model/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nComponent.registerSubTypeDefaulter('dataZoom', function () {\n  // Default 'slider' when no type specified.\n  return 'slider';\n});","var guid = require(\"./core/guid\");\n\nvar env = require(\"./core/env\");\n\nvar zrUtil = require(\"./core/util\");\n\nvar Handler = require(\"./Handler\");\n\nvar Storage = require(\"./Storage\");\n\nvar Painter = require(\"./Painter\");\n\nvar Animation = require(\"./animation/Animation\");\n\nvar HandlerProxy = require(\"./dom/HandlerProxy\");\n\n/*!\n* ZRender, a high performance 2d drawing library.\n*\n* Copyright (c) 2013, Baidu Inc.\n* All rights reserved.\n*\n* LICENSE\n* https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n*/\nvar useVML = !env.canvasSupported;\nvar painterCtors = {\n  canvas: Painter\n};\nvar instances = {}; // ZRender实例map索引\n\n/**\n * @type {string}\n */\n\nvar version = '4.0.4';\n/**\n * Initializing a zrender instance\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n * @return {module:zrender/ZRender}\n */\n\nfunction init(dom, opts) {\n  var zr = new ZRender(guid(), dom, opts);\n  instances[zr.id] = zr;\n  return zr;\n}\n/**\n * Dispose zrender instance\n * @param {module:zrender/ZRender} zr\n */\n\n\nfunction dispose(zr) {\n  if (zr) {\n    zr.dispose();\n  } else {\n    for (var key in instances) {\n      if (instances.hasOwnProperty(key)) {\n        instances[key].dispose();\n      }\n    }\n\n    instances = {};\n  }\n\n  return this;\n}\n/**\n * Get zrender instance by id\n * @param {string} id zrender instance id\n * @return {module:zrender/ZRender}\n */\n\n\nfunction getInstance(id) {\n  return instances[id];\n}\n\nfunction registerPainter(name, Ctor) {\n  painterCtors[name] = Ctor;\n}\n\nfunction delInstance(id) {\n  delete instances[id];\n}\n/**\n * @module zrender/ZRender\n */\n\n/**\n * @constructor\n * @alias module:zrender/ZRender\n * @param {string} id\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n */\n\n\nvar ZRender = function (id, dom, opts) {\n  opts = opts || {};\n  /**\n   * @type {HTMLDomElement}\n   */\n\n  this.dom = dom;\n  /**\n   * @type {string}\n   */\n\n  this.id = id;\n  var self = this;\n  var storage = new Storage();\n  var rendererType = opts.renderer; // TODO WebGL\n\n  if (useVML) {\n    if (!painterCtors.vml) {\n      throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n    }\n\n    rendererType = 'vml';\n  } else if (!rendererType || !painterCtors[rendererType]) {\n    rendererType = 'canvas';\n  }\n\n  var painter = new painterCtors[rendererType](dom, storage, opts, id);\n  this.storage = storage;\n  this.painter = painter;\n  var handerProxy = !env.node && !env.worker ? new HandlerProxy(painter.getViewportRoot()) : null;\n  this.handler = new Handler(storage, painter, handerProxy, painter.root);\n  /**\n   * @type {module:zrender/animation/Animation}\n   */\n\n  this.animation = new Animation({\n    stage: {\n      update: zrUtil.bind(this.flush, this)\n    }\n  });\n  this.animation.start();\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._needsRefresh; // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n  // FIXME 有点ugly\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n    el && el.removeSelfFromZr(self);\n  };\n\n  storage.addToStorage = function (el) {\n    oldAddToStorage.call(storage, el);\n    el.addSelfToZr(self);\n  };\n};\n\nZRender.prototype = {\n  constructor: ZRender,\n\n  /**\n   * 获取实例唯一标识\n   * @return {string}\n   */\n  getId: function () {\n    return this.id;\n  },\n\n  /**\n   * 添加元素\n   * @param  {module:zrender/Element} el\n   */\n  add: function (el) {\n    this.storage.addRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * 删除元素\n   * @param  {module:zrender/Element} el\n   */\n  remove: function (el) {\n    this.storage.delRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Change configuration of layer\n   * @param {string} zLevel\n   * @param {Object} config\n   * @param {string} [config.clearColor=0] Clear color\n   * @param {string} [config.motionBlur=false] If enable motion blur\n   * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n  */\n  configLayer: function (zLevel, config) {\n    if (this.painter.configLayer) {\n      this.painter.configLayer(zLevel, config);\n    }\n\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Set background color\n   * @param {string} backgroundColor\n   */\n  setBackgroundColor: function (backgroundColor) {\n    if (this.painter.setBackgroundColor) {\n      this.painter.setBackgroundColor(backgroundColor);\n    }\n\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Repaint the canvas immediately\n   */\n  refreshImmediately: function () {\n    // var start = new Date();\n    // Clear needsRefresh ahead to avoid something wrong happens in refresh\n    // Or it will cause zrender refreshes again and again.\n    this._needsRefresh = false;\n    this.painter.refresh();\n    /**\n     * Avoid trigger zr.refresh in Element#beforeUpdate hook\n     */\n\n    this._needsRefresh = false; // var end = new Date();\n    // var log = document.getElementById('log');\n    // if (log) {\n    //     log.innerHTML = log.innerHTML + '<br>' + (end - start);\n    // }\n  },\n\n  /**\n   * Mark and repaint the canvas in the next frame of browser\n   */\n  refresh: function () {\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Perform all refresh\n   */\n  flush: function () {\n    var triggerRendered;\n\n    if (this._needsRefresh) {\n      triggerRendered = true;\n      this.refreshImmediately();\n    }\n\n    if (this._needsRefreshHover) {\n      triggerRendered = true;\n      this.refreshHoverImmediately();\n    }\n\n    triggerRendered && this.trigger('rendered');\n  },\n\n  /**\n   * Add element to hover layer\n   * @param  {module:zrender/Element} el\n   * @param {Object} style\n   */\n  addHover: function (el, style) {\n    if (this.painter.addHover) {\n      this.painter.addHover(el, style);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Add element from hover layer\n   * @param  {module:zrender/Element} el\n   */\n  removeHover: function (el) {\n    if (this.painter.removeHover) {\n      this.painter.removeHover(el);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Clear all hover elements in hover layer\n   * @param  {module:zrender/Element} el\n   */\n  clearHover: function () {\n    if (this.painter.clearHover) {\n      this.painter.clearHover();\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Refresh hover in next frame\n   */\n  refreshHover: function () {\n    this._needsRefreshHover = true;\n  },\n\n  /**\n   * Refresh hover immediately\n   */\n  refreshHoverImmediately: function () {\n    this._needsRefreshHover = false;\n    this.painter.refreshHover && this.painter.refreshHover();\n  },\n\n  /**\n   * Resize the canvas.\n   * Should be invoked when container size is changed\n   * @param {Object} [opts]\n   * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n   * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n   */\n  resize: function (opts) {\n    opts = opts || {};\n    this.painter.resize(opts.width, opts.height);\n    this.handler.resize();\n  },\n\n  /**\n   * Stop and clear all animation immediately\n   */\n  clearAnimation: function () {\n    this.animation.clear();\n  },\n\n  /**\n   * Get container width\n   */\n  getWidth: function () {\n    return this.painter.getWidth();\n  },\n\n  /**\n   * Get container height\n   */\n  getHeight: function () {\n    return this.painter.getHeight();\n  },\n\n  /**\n   * Export the canvas as Base64 URL\n   * @param {string} type\n   * @param {string} [backgroundColor='#fff']\n   * @return {string} Base64 URL\n   */\n  // toDataURL: function(type, backgroundColor) {\n  //     return this.painter.getRenderedCanvas({\n  //         backgroundColor: backgroundColor\n  //     }).toDataURL(type);\n  // },\n\n  /**\n   * Converting a path to image.\n   * It has much better performance of drawing image rather than drawing a vector path.\n   * @param {module:zrender/graphic/Path} e\n   * @param {number} width\n   * @param {number} height\n   */\n  pathToImage: function (e, dpr) {\n    return this.painter.pathToImage(e, dpr);\n  },\n\n  /**\n   * Set default cursor\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    this.handler.setCursorStyle(cursorStyle);\n  },\n\n  /**\n   * Find hovered element\n   * @param {number} x\n   * @param {number} y\n   * @return {Object} {target, topTarget}\n   */\n  findHover: function (x, y) {\n    return this.handler.findHover(x, y);\n  },\n\n  /**\n   * Bind event\n   *\n   * @param {string} eventName Event name\n   * @param {Function} eventHandler Handler function\n   * @param {Object} [context] Context object\n   */\n  on: function (eventName, eventHandler, context) {\n    this.handler.on(eventName, eventHandler, context);\n  },\n\n  /**\n   * Unbind event\n   * @param {string} eventName Event name\n   * @param {Function} [eventHandler] Handler function\n   */\n  off: function (eventName, eventHandler) {\n    this.handler.off(eventName, eventHandler);\n  },\n\n  /**\n   * Trigger event manually\n   *\n   * @param {string} eventName Event name\n   * @param {event=} event Event object\n   */\n  trigger: function (eventName, event) {\n    this.handler.trigger(eventName, event);\n  },\n\n  /**\n   * Clear all objects and the canvas.\n   */\n  clear: function () {\n    this.storage.delRoot();\n    this.painter.clear();\n  },\n\n  /**\n   * Dispose self.\n   */\n  dispose: function () {\n    this.animation.stop();\n    this.clear();\n    this.storage.dispose();\n    this.painter.dispose();\n    this.handler.dispose();\n    this.animation = this.storage = this.painter = this.handler = null;\n    delInstance(this.id);\n  }\n};\nexports.version = version;\nexports.init = init;\nexports.dispose = dispose;\nexports.getInstance = getInstance;\nexports.registerPainter = registerPainter;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar OrdinalScale = require(\"../scale/Ordinal\");\n\nvar IntervalScale = require(\"../scale/Interval\");\n\nvar Scale = require(\"../scale/Scale\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar _barGrid = require(\"../layout/barGrid\");\n\nvar prepareLayoutBarSeries = _barGrid.prepareLayoutBarSeries;\nvar makeColumnLayout = _barGrid.makeColumnLayout;\nvar retrieveColumnLayout = _barGrid.retrieveColumnLayout;\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nrequire(\"../scale/Time\");\n\nrequire(\"../scale/Log\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Get axis scale extent before niced.\n * Item of returned array can only be number (including Infinity and NaN).\n */\nfunction getScaleExtent(scale, model) {\n  var scaleType = scale.type;\n  var min = model.getMin();\n  var max = model.getMax();\n  var fixMin = min != null;\n  var fixMax = max != null;\n  var originalExtent = scale.getExtent();\n  var axisDataLen;\n  var boundaryGap;\n  var span;\n\n  if (scaleType === 'ordinal') {\n    axisDataLen = model.getCategories().length;\n  } else {\n    boundaryGap = model.get('boundaryGap');\n\n    if (!zrUtil.isArray(boundaryGap)) {\n      boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n    }\n\n    if (typeof boundaryGap[0] === 'boolean') {\n      boundaryGap = [0, 0];\n    }\n\n    boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n    boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n    span = originalExtent[1] - originalExtent[0] || Math.abs(originalExtent[0]);\n  } // Notice: When min/max is not set (that is, when there are null/undefined,\n  // which is the most common case), these cases should be ensured:\n  // (1) For 'ordinal', show all axis.data.\n  // (2) For others:\n  //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n  //      disabled).\n  //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n  //      be the result that originalExtent enlarged by boundaryGap.\n  // (3) If no data, it should be ensured that `scale.setBlank` is set.\n  // FIXME\n  // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n  // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n  // that the results processed by boundaryGap are positive/negative?\n\n\n  if (min == null) {\n    min = scaleType === 'ordinal' ? axisDataLen ? 0 : NaN : originalExtent[0] - boundaryGap[0] * span;\n  }\n\n  if (max == null) {\n    max = scaleType === 'ordinal' ? axisDataLen ? axisDataLen - 1 : NaN : originalExtent[1] + boundaryGap[1] * span;\n  }\n\n  if (min === 'dataMin') {\n    min = originalExtent[0];\n  } else if (typeof min === 'function') {\n    min = min({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  if (max === 'dataMax') {\n    max = originalExtent[1];\n  } else if (typeof max === 'function') {\n    max = max({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  (min == null || !isFinite(min)) && (min = NaN);\n  (max == null || !isFinite(max)) && (max = NaN);\n  scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max) || scaleType === 'ordinal' && !scale.getOrdinalMeta().categories.length); // Evaluate if axis needs cross zero\n\n  if (model.getNeedCrossZero()) {\n    // Axis is over zero and min is not set\n    if (min > 0 && max > 0 && !fixMin) {\n      min = 0;\n    } // Axis is under zero and max is not set\n\n\n    if (min < 0 && max < 0 && !fixMax) {\n      max = 0;\n    }\n  } // If bars are placed on a base axis of type time or interval account for axis boundary overflow and current axis\n  // is base axis\n  // FIXME\n  // (1) Consider support value axis, where below zero and axis `onZero` should be handled properly.\n  // (2) Refactor the logic with `barGrid`. Is it not need to `makeBarWidthAndOffsetInfo` twice with different extent?\n  //     Should not depend on series type `bar`?\n  // (3) Fix that might overlap when using dataZoom.\n  // (4) Consider other chart types using `barGrid`?\n  // See #6728, #4862, `test/bar-overflow-time-plot.html`\n\n\n  var ecModel = model.ecModel;\n\n  if (ecModel && scaleType === 'time'\n  /*|| scaleType === 'interval' */\n  ) {\n    var barSeriesModels = prepareLayoutBarSeries('bar', ecModel);\n    var isBaseAxisAndHasBarSeries;\n    zrUtil.each(barSeriesModels, function (seriesModel) {\n      isBaseAxisAndHasBarSeries |= seriesModel.getBaseAxis() === model.axis;\n    });\n\n    if (isBaseAxisAndHasBarSeries) {\n      // Calculate placement of bars on axis\n      var barWidthAndOffset = makeColumnLayout(barSeriesModels); // Adjust axis min and max to account for overflow\n\n      var adjustedScale = adjustScaleForOverflow(min, max, model, barWidthAndOffset);\n      min = adjustedScale.min;\n      max = adjustedScale.max;\n    }\n  }\n\n  return [min, max];\n}\n\nfunction adjustScaleForOverflow(min, max, model, barWidthAndOffset) {\n  // Get Axis Length\n  var axisExtent = model.axis.getExtent();\n  var axisLength = axisExtent[1] - axisExtent[0]; // Get bars on current base axis and calculate min and max overflow\n\n  var barsOnCurrentAxis = retrieveColumnLayout(barWidthAndOffset, model.axis);\n\n  if (barsOnCurrentAxis === undefined) {\n    return {\n      min: min,\n      max: max\n    };\n  }\n\n  var minOverflow = Infinity;\n  zrUtil.each(barsOnCurrentAxis, function (item) {\n    minOverflow = Math.min(item.offset, minOverflow);\n  });\n  var maxOverflow = -Infinity;\n  zrUtil.each(barsOnCurrentAxis, function (item) {\n    maxOverflow = Math.max(item.offset + item.width, maxOverflow);\n  });\n  minOverflow = Math.abs(minOverflow);\n  maxOverflow = Math.abs(maxOverflow);\n  var totalOverFlow = minOverflow + maxOverflow; // Calulate required buffer based on old range and overflow\n\n  var oldRange = max - min;\n  var oldRangePercentOfNew = 1 - (minOverflow + maxOverflow) / axisLength;\n  var overflowBuffer = oldRange / oldRangePercentOfNew - oldRange;\n  max += overflowBuffer * (maxOverflow / totalOverFlow);\n  min -= overflowBuffer * (minOverflow / totalOverFlow);\n  return {\n    min: min,\n    max: max\n  };\n}\n\nfunction niceScaleExtent(scale, model) {\n  var extent = getScaleExtent(scale, model);\n  var fixMin = model.getMin() != null;\n  var fixMax = model.getMax() != null;\n  var splitNumber = model.get('splitNumber');\n\n  if (scale.type === 'log') {\n    scale.base = model.get('logBase');\n  }\n\n  var scaleType = scale.type;\n  scale.setExtent(extent[0], extent[1]);\n  scale.niceExtent({\n    splitNumber: splitNumber,\n    fixMin: fixMin,\n    fixMax: fixMax,\n    minInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('minInterval') : null,\n    maxInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('maxInterval') : null\n  }); // If some one specified the min, max. And the default calculated interval\n  // is not good enough. He can specify the interval. It is often appeared\n  // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n  // to be 60.\n  // FIXME\n\n  var interval = model.get('interval');\n\n  if (interval != null) {\n    scale.setInterval && scale.setInterval(interval);\n  }\n}\n/**\n * @param {module:echarts/model/Model} model\n * @param {string} [axisType] Default retrieve from model.type\n * @return {module:echarts/scale/*}\n */\n\n\nfunction createScaleByModel(model, axisType) {\n  axisType = axisType || model.get('type');\n\n  if (axisType) {\n    switch (axisType) {\n      // Buildin scale\n      case 'category':\n        return new OrdinalScale(model.getOrdinalMeta ? model.getOrdinalMeta() : model.getCategories(), [Infinity, -Infinity]);\n\n      case 'value':\n        return new IntervalScale();\n      // Extended scale, like time and log\n\n      default:\n        return (Scale.getClass(axisType) || IntervalScale).create(model);\n    }\n  }\n}\n/**\n * Check if the axis corss 0\n */\n\n\nfunction ifAxisCrossZero(axis) {\n  var dataExtent = axis.scale.getExtent();\n  var min = dataExtent[0];\n  var max = dataExtent[1];\n  return !(min > 0 && max > 0 || min < 0 && max < 0);\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @return {Function} Label formatter function.\n *         param: {number} tickValue,\n *         param: {number} idx, the index in all ticks.\n *                         If category axis, this param is not requied.\n *         return: {string} label string.\n */\n\n\nfunction makeLabelFormatter(axis) {\n  var labelFormatter = axis.getLabelModel().get('formatter');\n  var categoryTickStart = axis.type === 'category' ? axis.scale.getExtent()[0] : null;\n\n  if (typeof labelFormatter === 'string') {\n    labelFormatter = function (tpl) {\n      return function (val) {\n        return tpl.replace('{value}', val != null ? val : '');\n      };\n    }(labelFormatter); // Consider empty array\n\n\n    return labelFormatter;\n  } else if (typeof labelFormatter === 'function') {\n    return function (tickValue, idx) {\n      // The original intention of `idx` is \"the index of the tick in all ticks\".\n      // But the previous implementation of category axis do not consider the\n      // `axisLabel.interval`, which cause that, for example, the `interval` is\n      // `1`, then the ticks \"name5\", \"name7\", \"name9\" are displayed, where the\n      // corresponding `idx` are `0`, `2`, `4`, but not `0`, `1`, `2`. So we keep\n      // the definition here for back compatibility.\n      if (categoryTickStart != null) {\n        idx = tickValue - categoryTickStart;\n      }\n\n      return labelFormatter(getAxisRawValue(axis, tickValue), idx);\n    };\n  } else {\n    return function (tick) {\n      return axis.scale.getLabel(tick);\n    };\n  }\n}\n\nfunction getAxisRawValue(axis, value) {\n  // In category axis with data zoom, tick is not the original\n  // index of axis.data. So tick should not be exposed to user\n  // in category axis.\n  return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @return {module:zrender/core/BoundingRect} Be null/undefined if no labels.\n */\n\n\nfunction estimateLabelUnionRect(axis) {\n  var axisModel = axis.model;\n  var scale = axis.scale;\n\n  if (!axisModel.get('axisLabel.show') || scale.isBlank()) {\n    return;\n  }\n\n  var isCategory = axis.type === 'category';\n  var realNumberScaleTicks;\n  var tickCount;\n  var categoryScaleExtent = scale.getExtent(); // Optimize for large category data, avoid call `getTicks()`.\n\n  if (isCategory) {\n    tickCount = scale.count();\n  } else {\n    realNumberScaleTicks = scale.getTicks();\n    tickCount = realNumberScaleTicks.length;\n  }\n\n  var axisLabelModel = axis.getLabelModel();\n  var labelFormatter = makeLabelFormatter(axis);\n  var rect;\n  var step = 1; // Simple optimization for large amount of labels\n\n  if (tickCount > 40) {\n    step = Math.ceil(tickCount / 40);\n  }\n\n  for (var i = 0; i < tickCount; i += step) {\n    var tickValue = realNumberScaleTicks ? realNumberScaleTicks[i] : categoryScaleExtent[0] + i;\n    var label = labelFormatter(tickValue);\n    var unrotatedSingleRect = axisLabelModel.getTextRect(label);\n    var singleRect = rotateTextRect(unrotatedSingleRect, axisLabelModel.get('rotate') || 0);\n    rect ? rect.union(singleRect) : rect = singleRect;\n  }\n\n  return rect;\n}\n\nfunction rotateTextRect(textRect, rotate) {\n  var rotateRadians = rotate * Math.PI / 180;\n  var boundingBox = textRect.plain();\n  var beforeWidth = boundingBox.width;\n  var beforeHeight = boundingBox.height;\n  var afterWidth = beforeWidth * Math.cos(rotateRadians) + beforeHeight * Math.sin(rotateRadians);\n  var afterHeight = beforeWidth * Math.sin(rotateRadians) + beforeHeight * Math.cos(rotateRadians);\n  var rotatedRect = new BoundingRect(boundingBox.x, boundingBox.y, afterWidth, afterHeight);\n  return rotatedRect;\n}\n\nexports.getScaleExtent = getScaleExtent;\nexports.niceScaleExtent = niceScaleExtent;\nexports.createScaleByModel = createScaleByModel;\nexports.ifAxisCrossZero = ifAxisCrossZero;\nexports.makeLabelFormatter = makeLabelFormatter;\nexports.getAxisRawValue = getAxisRawValue;\nexports.estimateLabelUnionRect = estimateLabelUnionRect;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar map = _util.map;\nvar isArray = _util.isArray;\nvar isFunction = _util.isFunction;\nvar createHashMap = _util.createHashMap;\nvar noop = _util.noop;\n\nvar _task = require(\"./task\");\n\nvar createTask = _task.createTask;\n\nvar _component = require(\"../util/component\");\n\nvar getUID = _component.getUID;\n\nvar GlobalModel = require(\"../model/Global\");\n\nvar ExtensionAPI = require(\"../ExtensionAPI\");\n\nvar _model = require(\"../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/stream/Scheduler\n */\n\n/**\n * @constructor\n */\nfunction Scheduler(ecInstance, api, dataProcessorHandlers, visualHandlers) {\n  this.ecInstance = ecInstance;\n  this.api = api;\n  this.unfinished; // Fix current processors in case that in some rear cases that\n  // processors might be registered after echarts instance created.\n  // Register processors incrementally for a echarts instance is\n  // not supported by this stream architecture.\n\n  var dataProcessorHandlers = this._dataProcessorHandlers = dataProcessorHandlers.slice();\n  var visualHandlers = this._visualHandlers = visualHandlers.slice();\n  this._allHandlers = dataProcessorHandlers.concat(visualHandlers);\n  /**\n   * @private\n   * @type {\n   *     [handlerUID: string]: {\n   *         seriesTaskMap?: {\n   *             [seriesUID: string]: Task\n   *         },\n   *         overallTask?: Task\n   *     }\n   * }\n   */\n\n  this._stageTaskMap = createHashMap();\n}\n\nvar proto = Scheduler.prototype;\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} payload\n */\n\nproto.restoreData = function (ecModel, payload) {\n  // TODO: Only restroe needed series and components, but not all components.\n  // Currently `restoreData` of all of the series and component will be called.\n  // But some independent components like `title`, `legend`, `graphic`, `toolbox`,\n  // `tooltip`, `axisPointer`, etc, do not need series refresh when `setOption`,\n  // and some components like coordinate system, axes, dataZoom, visualMap only\n  // need their target series refresh.\n  // (1) If we are implementing this feature some day, we should consider these cases:\n  // if a data processor depends on a component (e.g., dataZoomProcessor depends\n  // on the settings of `dataZoom`), it should be re-performed if the component\n  // is modified by `setOption`.\n  // (2) If a processor depends on sevral series, speicified by its `getTargetSeries`,\n  // it should be re-performed when the result array of `getTargetSeries` changed.\n  // We use `dependencies` to cover these issues.\n  // (3) How to update target series when coordinate system related components modified.\n  // TODO: simply the dirty mechanism? Check whether only the case here can set tasks dirty,\n  // and this case all of the tasks will be set as dirty.\n  ecModel.restoreData(payload); // Theoretically an overall task not only depends on each of its target series, but also\n  // depends on all of the series.\n  // The overall task is not in pipeline, and `ecModel.restoreData` only set pipeline tasks\n  // dirty. If `getTargetSeries` of an overall task returns nothing, we should also ensure\n  // that the overall task is set as dirty and to be performed, otherwise it probably cause\n  // state chaos. So we have to set dirty of all of the overall tasks manually, otherwise it\n  // probably cause state chaos (consider `dataZoomProcessor`).\n\n  this._stageTaskMap.each(function (taskRecord) {\n    var overallTask = taskRecord.overallTask;\n    overallTask && overallTask.dirty();\n  });\n}; // If seriesModel provided, incremental threshold is check by series data.\n\n\nproto.getPerformArgs = function (task, isBlock) {\n  // For overall task\n  if (!task.__pipeline) {\n    return;\n  }\n\n  var pipeline = this._pipelineMap.get(task.__pipeline.id);\n\n  var pCtx = pipeline.context;\n  var incremental = !isBlock && pipeline.progressiveEnabled && (!pCtx || pCtx.progressiveRender) && task.__idxInPipeline > pipeline.blockIndex;\n  var step = incremental ? pipeline.step : null;\n  var modDataCount = pCtx && pCtx.modDataCount;\n  var modBy = modDataCount != null ? Math.ceil(modDataCount / step) : null;\n  return {\n    step: step,\n    modBy: modBy,\n    modDataCount: modDataCount\n  };\n};\n\nproto.getPipeline = function (pipelineId) {\n  return this._pipelineMap.get(pipelineId);\n};\n/**\n * Current, progressive rendering starts from visual and layout.\n * Always detect render mode in the same stage, avoiding that incorrect\n * detection caused by data filtering.\n * Caution:\n * `updateStreamModes` use `seriesModel.getData()`.\n */\n\n\nproto.updateStreamModes = function (seriesModel, view) {\n  var pipeline = this._pipelineMap.get(seriesModel.uid);\n\n  var data = seriesModel.getData();\n  var dataLen = data.count(); // `progressiveRender` means that can render progressively in each\n  // animation frame. Note that some types of series do not provide\n  // `view.incrementalPrepareRender` but support `chart.appendData`. We\n  // use the term `incremental` but not `progressive` to describe the\n  // case that `chart.appendData`.\n\n  var progressiveRender = pipeline.progressiveEnabled && view.incrementalPrepareRender && dataLen >= pipeline.threshold;\n  var large = seriesModel.get('large') && dataLen >= seriesModel.get('largeThreshold'); // TODO: modDataCount should not updated if `appendData`, otherwise cause whole repaint.\n  // see `test/candlestick-large3.html`\n\n  var modDataCount = seriesModel.get('progressiveChunkMode') === 'mod' ? dataLen : null;\n  seriesModel.pipelineContext = pipeline.context = {\n    progressiveRender: progressiveRender,\n    modDataCount: modDataCount,\n    large: large\n  };\n};\n\nproto.restorePipelines = function (ecModel) {\n  var scheduler = this;\n  var pipelineMap = scheduler._pipelineMap = createHashMap();\n  ecModel.eachSeries(function (seriesModel) {\n    var progressive = seriesModel.getProgressive();\n    var pipelineId = seriesModel.uid;\n    pipelineMap.set(pipelineId, {\n      id: pipelineId,\n      head: null,\n      tail: null,\n      threshold: seriesModel.getProgressiveThreshold(),\n      progressiveEnabled: progressive && !(seriesModel.preventIncremental && seriesModel.preventIncremental()),\n      blockIndex: -1,\n      step: Math.round(progressive || 700),\n      count: 0\n    });\n    pipe(scheduler, seriesModel, seriesModel.dataTask);\n  });\n};\n\nproto.prepareStageTasks = function () {\n  var stageTaskMap = this._stageTaskMap;\n  var ecModel = this.ecInstance.getModel();\n  var api = this.api;\n  each(this._allHandlers, function (handler) {\n    var record = stageTaskMap.get(handler.uid) || stageTaskMap.set(handler.uid, []);\n    handler.reset && createSeriesStageTask(this, handler, record, ecModel, api);\n    handler.overallReset && createOverallStageTask(this, handler, record, ecModel, api);\n  }, this);\n};\n\nproto.prepareView = function (view, model, ecModel, api) {\n  var renderTask = view.renderTask;\n  var context = renderTask.context;\n  context.model = model;\n  context.ecModel = ecModel;\n  context.api = api;\n  renderTask.__block = !view.incrementalPrepareRender;\n  pipe(this, model, renderTask);\n};\n\nproto.performDataProcessorTasks = function (ecModel, payload) {\n  // If we do not use `block` here, it should be considered when to update modes.\n  performStageTasks(this, this._dataProcessorHandlers, ecModel, payload, {\n    block: true\n  });\n}; // opt\n// opt.visualType: 'visual' or 'layout'\n// opt.setDirty\n\n\nproto.performVisualTasks = function (ecModel, payload, opt) {\n  performStageTasks(this, this._visualHandlers, ecModel, payload, opt);\n};\n\nfunction performStageTasks(scheduler, stageHandlers, ecModel, payload, opt) {\n  opt = opt || {};\n  var unfinished;\n  each(stageHandlers, function (stageHandler, idx) {\n    if (opt.visualType && opt.visualType !== stageHandler.visualType) {\n      return;\n    }\n\n    var stageHandlerRecord = scheduler._stageTaskMap.get(stageHandler.uid);\n\n    var seriesTaskMap = stageHandlerRecord.seriesTaskMap;\n    var overallTask = stageHandlerRecord.overallTask;\n\n    if (overallTask) {\n      var overallNeedDirty;\n      var agentStubMap = overallTask.agentStubMap;\n      agentStubMap.each(function (stub) {\n        if (needSetDirty(opt, stub)) {\n          stub.dirty();\n          overallNeedDirty = true;\n        }\n      });\n      overallNeedDirty && overallTask.dirty();\n      updatePayload(overallTask, payload);\n      var performArgs = scheduler.getPerformArgs(overallTask, opt.block); // Execute stubs firstly, which may set the overall task dirty,\n      // then execute the overall task. And stub will call seriesModel.setData,\n      // which ensures that in the overallTask seriesModel.getData() will not\n      // return incorrect data.\n\n      agentStubMap.each(function (stub) {\n        stub.perform(performArgs);\n      });\n      unfinished |= overallTask.perform(performArgs);\n    } else if (seriesTaskMap) {\n      seriesTaskMap.each(function (task, pipelineId) {\n        if (needSetDirty(opt, task)) {\n          task.dirty();\n        }\n\n        var performArgs = scheduler.getPerformArgs(task, opt.block);\n        performArgs.skip = !stageHandler.performRawSeries && ecModel.isSeriesFiltered(task.context.model);\n        updatePayload(task, payload);\n        unfinished |= task.perform(performArgs);\n      });\n    }\n  });\n\n  function needSetDirty(opt, task) {\n    return opt.setDirty && (!opt.dirtyMap || opt.dirtyMap.get(task.__pipeline.id));\n  }\n\n  scheduler.unfinished |= unfinished;\n}\n\nproto.performSeriesTasks = function (ecModel) {\n  var unfinished;\n  ecModel.eachSeries(function (seriesModel) {\n    // Progress to the end for dataInit and dataRestore.\n    unfinished |= seriesModel.dataTask.perform();\n  });\n  this.unfinished |= unfinished;\n};\n\nproto.plan = function () {\n  // Travel pipelines, check block.\n  this._pipelineMap.each(function (pipeline) {\n    var task = pipeline.tail;\n\n    do {\n      if (task.__block) {\n        pipeline.blockIndex = task.__idxInPipeline;\n        break;\n      }\n\n      task = task.getUpstream();\n    } while (task);\n  });\n};\n\nvar updatePayload = proto.updatePayload = function (task, payload) {\n  payload !== 'remain' && (task.context.payload = payload);\n};\n\nfunction createSeriesStageTask(scheduler, stageHandler, stageHandlerRecord, ecModel, api) {\n  var seriesTaskMap = stageHandlerRecord.seriesTaskMap || (stageHandlerRecord.seriesTaskMap = createHashMap());\n  var seriesType = stageHandler.seriesType;\n  var getTargetSeries = stageHandler.getTargetSeries; // If a stageHandler should cover all series, `createOnAllSeries` should be declared mandatorily,\n  // to avoid some typo or abuse. Otherwise if an extension do not specify a `seriesType`,\n  // it works but it may cause other irrelevant charts blocked.\n\n  if (stageHandler.createOnAllSeries) {\n    ecModel.eachRawSeries(create);\n  } else if (seriesType) {\n    ecModel.eachRawSeriesByType(seriesType, create);\n  } else if (getTargetSeries) {\n    getTargetSeries(ecModel, api).each(create);\n  }\n\n  function create(seriesModel) {\n    var pipelineId = seriesModel.uid; // Init tasks for each seriesModel only once.\n    // Reuse original task instance.\n\n    var task = seriesTaskMap.get(pipelineId) || seriesTaskMap.set(pipelineId, createTask({\n      plan: seriesTaskPlan,\n      reset: seriesTaskReset,\n      count: seriesTaskCount\n    }));\n    task.context = {\n      model: seriesModel,\n      ecModel: ecModel,\n      api: api,\n      useClearVisual: stageHandler.isVisual && !stageHandler.isLayout,\n      plan: stageHandler.plan,\n      reset: stageHandler.reset,\n      scheduler: scheduler\n    };\n    pipe(scheduler, seriesModel, task);\n  } // Clear unused series tasks.\n\n\n  var pipelineMap = scheduler._pipelineMap;\n  seriesTaskMap.each(function (task, pipelineId) {\n    if (!pipelineMap.get(pipelineId)) {\n      task.dispose();\n      seriesTaskMap.removeKey(pipelineId);\n    }\n  });\n}\n\nfunction createOverallStageTask(scheduler, stageHandler, stageHandlerRecord, ecModel, api) {\n  var overallTask = stageHandlerRecord.overallTask = stageHandlerRecord.overallTask // For overall task, the function only be called on reset stage.\n  || createTask({\n    reset: overallTaskReset\n  });\n  overallTask.context = {\n    ecModel: ecModel,\n    api: api,\n    overallReset: stageHandler.overallReset,\n    scheduler: scheduler\n  }; // Reuse orignal stubs.\n\n  var agentStubMap = overallTask.agentStubMap = overallTask.agentStubMap || createHashMap();\n  var seriesType = stageHandler.seriesType;\n  var getTargetSeries = stageHandler.getTargetSeries;\n  var overallProgress = true;\n  var modifyOutputEnd = stageHandler.modifyOutputEnd; // An overall task with seriesType detected or has `getTargetSeries`, we add\n  // stub in each pipelines, it will set the overall task dirty when the pipeline\n  // progress. Moreover, to avoid call the overall task each frame (too frequent),\n  // we set the pipeline block.\n\n  if (seriesType) {\n    ecModel.eachRawSeriesByType(seriesType, createStub);\n  } else if (getTargetSeries) {\n    getTargetSeries(ecModel, api).each(createStub);\n  } // Otherwise, (usually it is legancy case), the overall task will only be\n  // executed when upstream dirty. Otherwise the progressive rendering of all\n  // pipelines will be disabled unexpectedly. But it still needs stubs to receive\n  // dirty info from upsteam.\n  else {\n      overallProgress = false;\n      each(ecModel.getSeries(), createStub);\n    }\n\n  function createStub(seriesModel) {\n    var pipelineId = seriesModel.uid;\n    var stub = agentStubMap.get(pipelineId);\n\n    if (!stub) {\n      stub = agentStubMap.set(pipelineId, createTask({\n        reset: stubReset,\n        onDirty: stubOnDirty\n      })); // When the result of `getTargetSeries` changed, the overallTask\n      // should be set as dirty and re-performed.\n\n      overallTask.dirty();\n    }\n\n    stub.context = {\n      model: seriesModel,\n      overallProgress: overallProgress,\n      modifyOutputEnd: modifyOutputEnd\n    };\n    stub.agent = overallTask;\n    stub.__block = overallProgress;\n    pipe(scheduler, seriesModel, stub);\n  } // Clear unused stubs.\n\n\n  var pipelineMap = scheduler._pipelineMap;\n  agentStubMap.each(function (stub, pipelineId) {\n    if (!pipelineMap.get(pipelineId)) {\n      stub.dispose(); // When the result of `getTargetSeries` changed, the overallTask\n      // should be set as dirty and re-performed.\n\n      overallTask.dirty();\n      agentStubMap.removeKey(pipelineId);\n    }\n  });\n}\n\nfunction overallTaskReset(context) {\n  context.overallReset(context.ecModel, context.api, context.payload);\n}\n\nfunction stubReset(context, upstreamContext) {\n  return context.overallProgress && stubProgress;\n}\n\nfunction stubProgress() {\n  this.agent.dirty();\n  this.getDownstream().dirty();\n}\n\nfunction stubOnDirty() {\n  this.agent && this.agent.dirty();\n}\n\nfunction seriesTaskPlan(context) {\n  return context.plan && context.plan(context.model, context.ecModel, context.api, context.payload);\n}\n\nfunction seriesTaskReset(context) {\n  if (context.useClearVisual) {\n    context.data.clearAllVisual();\n  }\n\n  var resetDefines = context.resetDefines = normalizeToArray(context.reset(context.model, context.ecModel, context.api, context.payload));\n  return resetDefines.length > 1 ? map(resetDefines, function (v, idx) {\n    return makeSeriesTaskProgress(idx);\n  }) : singleSeriesTaskProgress;\n}\n\nvar singleSeriesTaskProgress = makeSeriesTaskProgress(0);\n\nfunction makeSeriesTaskProgress(resetDefineIdx) {\n  return function (params, context) {\n    var data = context.data;\n    var resetDefine = context.resetDefines[resetDefineIdx];\n\n    if (resetDefine && resetDefine.dataEach) {\n      for (var i = params.start; i < params.end; i++) {\n        resetDefine.dataEach(data, i);\n      }\n    } else if (resetDefine && resetDefine.progress) {\n      resetDefine.progress(params, data);\n    }\n  };\n}\n\nfunction seriesTaskCount(context) {\n  return context.data.count();\n}\n\nfunction pipe(scheduler, seriesModel, task) {\n  var pipelineId = seriesModel.uid;\n\n  var pipeline = scheduler._pipelineMap.get(pipelineId);\n\n  !pipeline.head && (pipeline.head = task);\n  pipeline.tail && pipeline.tail.pipe(task);\n  pipeline.tail = task;\n  task.__idxInPipeline = pipeline.count++;\n  task.__pipeline = pipeline;\n}\n\nScheduler.wrapStageHandler = function (stageHandler, visualType) {\n  if (isFunction(stageHandler)) {\n    stageHandler = {\n      overallReset: stageHandler,\n      seriesType: detectSeriseType(stageHandler)\n    };\n  }\n\n  stageHandler.uid = getUID('stageHandler');\n  visualType && (stageHandler.visualType = visualType);\n  return stageHandler;\n};\n/**\n * Only some legacy stage handlers (usually in echarts extensions) are pure function.\n * To ensure that they can work normally, they should work in block mode, that is,\n * they should not be started util the previous tasks finished. So they cause the\n * progressive rendering disabled. We try to detect the series type, to narrow down\n * the block range to only the series type they concern, but not all series.\n */\n\n\nfunction detectSeriseType(legacyFunc) {\n  seriesType = null;\n\n  try {\n    // Assume there is no async when calling `eachSeriesByType`.\n    legacyFunc(ecModelMock, apiMock);\n  } catch (e) {}\n\n  return seriesType;\n}\n\nvar ecModelMock = {};\nvar apiMock = {};\nvar seriesType;\nmockMethods(ecModelMock, GlobalModel);\nmockMethods(apiMock, ExtensionAPI);\n\necModelMock.eachSeriesByType = ecModelMock.eachRawSeriesByType = function (type) {\n  seriesType = type;\n};\n\necModelMock.eachComponent = function (cond) {\n  if (cond.mainType === 'series' && cond.subType) {\n    seriesType = cond.subType;\n  }\n};\n\nfunction mockMethods(target, Clz) {\n  for (var name in Clz.prototype) {\n    // Do not use hasOwnProperty\n    target[name] = noop;\n  }\n}\n\nvar _default = Scheduler;\nmodule.exports = _default;","var Polyline = require(\"./Polyline\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar EffectLine = require(\"./EffectLine\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Provide effect for line\n * @module echarts/chart/helper/EffectLine\n */\n\n/**\n * @constructor\n * @extends {module:echarts/chart/helper/EffectLine}\n * @alias {module:echarts/chart/helper/Polyline}\n */\nfunction EffectPolyline(lineData, idx, seriesScope) {\n  EffectLine.call(this, lineData, idx, seriesScope);\n  this._lastFrame = 0;\n  this._lastFramePercent = 0;\n}\n\nvar effectPolylineProto = EffectPolyline.prototype; // Overwrite\n\neffectPolylineProto.createLine = function (lineData, idx, seriesScope) {\n  return new Polyline(lineData, idx, seriesScope);\n}; // Overwrite\n\n\neffectPolylineProto.updateAnimationPoints = function (symbol, points) {\n  this._points = points;\n  var accLenArr = [0];\n  var len = 0;\n\n  for (var i = 1; i < points.length; i++) {\n    var p1 = points[i - 1];\n    var p2 = points[i];\n    len += vec2.dist(p1, p2);\n    accLenArr.push(len);\n  }\n\n  if (len === 0) {\n    return;\n  }\n\n  for (var i = 0; i < accLenArr.length; i++) {\n    accLenArr[i] /= len;\n  }\n\n  this._offsets = accLenArr;\n  this._length = len;\n}; // Overwrite\n\n\neffectPolylineProto.getLineLength = function (symbol) {\n  return this._length;\n}; // Overwrite\n\n\neffectPolylineProto.updateSymbolPosition = function (symbol) {\n  var t = symbol.__t;\n  var points = this._points;\n  var offsets = this._offsets;\n  var len = points.length;\n\n  if (!offsets) {\n    // Has length 0\n    return;\n  }\n\n  var lastFrame = this._lastFrame;\n  var frame;\n\n  if (t < this._lastFramePercent) {\n    // Start from the next frame\n    // PENDING start from lastFrame ?\n    var start = Math.min(lastFrame + 1, len - 1);\n\n    for (frame = start; frame >= 0; frame--) {\n      if (offsets[frame] <= t) {\n        break;\n      }\n    } // PENDING really need to do this ?\n\n\n    frame = Math.min(frame, len - 2);\n  } else {\n    for (var frame = lastFrame; frame < len; frame++) {\n      if (offsets[frame] > t) {\n        break;\n      }\n    }\n\n    frame = Math.min(frame - 1, len - 2);\n  }\n\n  vec2.lerp(symbol.position, points[frame], points[frame + 1], (t - offsets[frame]) / (offsets[frame + 1] - offsets[frame]));\n  var tx = points[frame + 1][0] - points[frame][0];\n  var ty = points[frame + 1][1] - points[frame][1];\n  symbol.rotation = -Math.atan2(ty, tx) - Math.PI / 2;\n  this._lastFrame = frame;\n  this._lastFramePercent = t;\n  symbol.ignore = false;\n};\n\nzrUtil.inherits(EffectPolyline, EffectLine);\nvar _default = EffectPolyline;\nmodule.exports = _default;","var formatUtil = require(\"../../util/format\");\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\nvar AxisView = require(\"../axis/AxisView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PolarAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n\n    if (axis.dim === 'angle') {\n      this.animationThreshold = Math.PI / 18;\n    }\n\n    var polar = axis.polar;\n    var otherAxis = polar.getOtherAxis(axis);\n    var otherExtent = otherAxis.getExtent();\n    var coordValue;\n    coordValue = axis['dataTo' + formatUtil.capitalFirst(axis.dim)](value);\n    var axisPointerType = axisPointerModel.get('type');\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, polar, coordValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var labelMargin = axisPointerModel.get('label.margin');\n    var labelPos = getLabelPosition(value, axisModel, axisPointerModel, polar, labelMargin);\n    viewHelper.buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos);\n  } // Do not support handle, utill any user requires it.\n\n});\n\nfunction getLabelPosition(value, axisModel, axisPointerModel, polar, labelMargin) {\n  var axis = axisModel.axis;\n  var coord = axis.dataToCoord(value);\n  var axisAngle = polar.getAngleAxis().getExtent()[0];\n  axisAngle = axisAngle / 180 * Math.PI;\n  var radiusExtent = polar.getRadiusAxis().getExtent();\n  var position;\n  var align;\n  var verticalAlign;\n\n  if (axis.dim === 'radius') {\n    var transform = matrix.create();\n    matrix.rotate(transform, transform, axisAngle);\n    matrix.translate(transform, transform, [polar.cx, polar.cy]);\n    position = graphic.applyTransform([coord, -labelMargin], transform);\n    var labelRotation = axisModel.getModel('axisLabel').get('rotate') || 0;\n    var labelLayout = AxisBuilder.innerTextLayout(axisAngle, labelRotation * Math.PI / 180, -1);\n    align = labelLayout.textAlign;\n    verticalAlign = labelLayout.textVerticalAlign;\n  } else {\n    // angle axis\n    var r = radiusExtent[1];\n    position = polar.coordToPoint([r + labelMargin, coord]);\n    var cx = polar.cx;\n    var cy = polar.cy;\n    align = Math.abs(position[0] - cx) / r < 0.3 ? 'center' : position[0] > cx ? 'left' : 'right';\n    verticalAlign = Math.abs(position[1] - cy) / r < 0.3 ? 'middle' : position[1] > cy ? 'top' : 'bottom';\n  }\n\n  return {\n    position: position,\n    align: align,\n    verticalAlign: verticalAlign\n  };\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, polar, coordValue, otherExtent, elStyle) {\n    return axis.dim === 'angle' ? {\n      type: 'Line',\n      shape: viewHelper.makeLineShape(polar.coordToPoint([otherExtent[0], coordValue]), polar.coordToPoint([otherExtent[1], coordValue]))\n    } : {\n      type: 'Circle',\n      shape: {\n        cx: polar.cx,\n        cy: polar.cy,\n        r: coordValue\n      }\n    };\n  },\n  shadow: function (axis, polar, coordValue, otherExtent, elStyle) {\n    var bandWidth = Math.max(1, axis.getBandWidth());\n    var radian = Math.PI / 180;\n    return axis.dim === 'angle' ? {\n      type: 'Sector',\n      shape: viewHelper.makeSectorShape(polar.cx, polar.cy, otherExtent[0], otherExtent[1], // In ECharts y is negative if angle is positive\n      (-coordValue - bandWidth / 2) * radian, (-coordValue + bandWidth / 2) * radian)\n    } : {\n      type: 'Sector',\n      shape: viewHelper.makeSectorShape(polar.cx, polar.cy, coordValue - bandWidth / 2, coordValue + bandWidth / 2, 0, Math.PI * 2)\n    };\n  }\n};\nAxisView.registerAxisPointerClass('PolarAxisPointer', PolarAxisPointer);\nvar _default = PolarAxisPointer;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar ATTR = '\\0_ec_hist_store';\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} newSnapshot {dataZoomId, batch: [payloadInfo, ...]}\n */\n\nfunction push(ecModel, newSnapshot) {\n  var store = giveStore(ecModel); // If previous dataZoom can not be found,\n  // complete an range with current range.\n\n  each(newSnapshot, function (batchItem, dataZoomId) {\n    var i = store.length - 1;\n\n    for (; i >= 0; i--) {\n      var snapshot = store[i];\n\n      if (snapshot[dataZoomId]) {\n        break;\n      }\n    }\n\n    if (i < 0) {\n      // No origin range set, create one by current range.\n      var dataZoomModel = ecModel.queryComponents({\n        mainType: 'dataZoom',\n        subType: 'select',\n        id: dataZoomId\n      })[0];\n\n      if (dataZoomModel) {\n        var percentRange = dataZoomModel.getPercentRange();\n        store[0][dataZoomId] = {\n          dataZoomId: dataZoomId,\n          start: percentRange[0],\n          end: percentRange[1]\n        };\n      }\n    }\n  });\n  store.push(newSnapshot);\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} snapshot\n */\n\n\nfunction pop(ecModel) {\n  var store = giveStore(ecModel);\n  var head = store[store.length - 1];\n  store.length > 1 && store.pop(); // Find top for all dataZoom.\n\n  var snapshot = {};\n  each(head, function (batchItem, dataZoomId) {\n    for (var i = store.length - 1; i >= 0; i--) {\n      var batchItem = store[i][dataZoomId];\n\n      if (batchItem) {\n        snapshot[dataZoomId] = batchItem;\n        break;\n      }\n    }\n  });\n  return snapshot;\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction clear(ecModel) {\n  ecModel[ATTR] = null;\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n * @return {number} records. always >= 1.\n */\n\n\nfunction count(ecModel) {\n  return giveStore(ecModel).length;\n}\n/**\n * [{key: dataZoomId, value: {dataZoomId, range}}, ...]\n * History length of each dataZoom may be different.\n * this._history[0] is used to store origin range.\n * @type {Array.<Object>}\n */\n\n\nfunction giveStore(ecModel) {\n  var store = ecModel[ATTR];\n\n  if (!store) {\n    store = ecModel[ATTR] = [{}];\n  }\n\n  return store;\n}\n\nexports.push = push;\nexports.pop = pop;\nexports.clear = clear;\nexports.count = count;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\nvar graphic = require(\"../../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\n\nvar _default = echarts.extendComponentView({\n  type: 'radar',\n  render: function (radarModel, ecModel, api) {\n    var group = this.group;\n    group.removeAll();\n\n    this._buildAxes(radarModel);\n\n    this._buildSplitLineAndArea(radarModel);\n  },\n  _buildAxes: function (radarModel) {\n    var radar = radarModel.coordinateSystem;\n    var indicatorAxes = radar.getIndicatorAxes();\n    var axisBuilders = zrUtil.map(indicatorAxes, function (indicatorAxis) {\n      var axisBuilder = new AxisBuilder(indicatorAxis.model, {\n        position: [radar.cx, radar.cy],\n        rotation: indicatorAxis.angle,\n        labelDirection: -1,\n        tickDirection: -1,\n        nameDirection: 1\n      });\n      return axisBuilder;\n    });\n    zrUtil.each(axisBuilders, function (axisBuilder) {\n      zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n      this.group.add(axisBuilder.getGroup());\n    }, this);\n  },\n  _buildSplitLineAndArea: function (radarModel) {\n    var radar = radarModel.coordinateSystem;\n    var indicatorAxes = radar.getIndicatorAxes();\n\n    if (!indicatorAxes.length) {\n      return;\n    }\n\n    var shape = radarModel.get('shape');\n    var splitLineModel = radarModel.getModel('splitLine');\n    var splitAreaModel = radarModel.getModel('splitArea');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var showSplitLine = splitLineModel.get('show');\n    var showSplitArea = splitAreaModel.get('show');\n    var splitLineColors = lineStyleModel.get('color');\n    var splitAreaColors = areaStyleModel.get('color');\n    splitLineColors = zrUtil.isArray(splitLineColors) ? splitLineColors : [splitLineColors];\n    splitAreaColors = zrUtil.isArray(splitAreaColors) ? splitAreaColors : [splitAreaColors];\n    var splitLines = [];\n    var splitAreas = [];\n\n    function getColorIndex(areaOrLine, areaOrLineColorList, idx) {\n      var colorIndex = idx % areaOrLineColorList.length;\n      areaOrLine[colorIndex] = areaOrLine[colorIndex] || [];\n      return colorIndex;\n    }\n\n    if (shape === 'circle') {\n      var ticksRadius = indicatorAxes[0].getTicksCoords();\n      var cx = radar.cx;\n      var cy = radar.cy;\n\n      for (var i = 0; i < ticksRadius.length; i++) {\n        if (showSplitLine) {\n          var colorIndex = getColorIndex(splitLines, splitLineColors, i);\n          splitLines[colorIndex].push(new graphic.Circle({\n            shape: {\n              cx: cx,\n              cy: cy,\n              r: ticksRadius[i].coord\n            }\n          }));\n        }\n\n        if (showSplitArea && i < ticksRadius.length - 1) {\n          var colorIndex = getColorIndex(splitAreas, splitAreaColors, i);\n          splitAreas[colorIndex].push(new graphic.Ring({\n            shape: {\n              cx: cx,\n              cy: cy,\n              r0: ticksRadius[i].coord,\n              r: ticksRadius[i + 1].coord\n            }\n          }));\n        }\n      }\n    } // Polyyon\n    else {\n        var realSplitNumber;\n        var axesTicksPoints = zrUtil.map(indicatorAxes, function (indicatorAxis, idx) {\n          var ticksCoords = indicatorAxis.getTicksCoords();\n          realSplitNumber = realSplitNumber == null ? ticksCoords.length - 1 : Math.min(ticksCoords.length - 1, realSplitNumber);\n          return zrUtil.map(ticksCoords, function (tickCoord) {\n            return radar.coordToPoint(tickCoord.coord, idx);\n          });\n        });\n        var prevPoints = [];\n\n        for (var i = 0; i <= realSplitNumber; i++) {\n          var points = [];\n\n          for (var j = 0; j < indicatorAxes.length; j++) {\n            points.push(axesTicksPoints[j][i]);\n          } // Close\n\n\n          if (points[0]) {\n            points.push(points[0].slice());\n          } else {}\n\n          if (showSplitLine) {\n            var colorIndex = getColorIndex(splitLines, splitLineColors, i);\n            splitLines[colorIndex].push(new graphic.Polyline({\n              shape: {\n                points: points\n              }\n            }));\n          }\n\n          if (showSplitArea && prevPoints) {\n            var colorIndex = getColorIndex(splitAreas, splitAreaColors, i - 1);\n            splitAreas[colorIndex].push(new graphic.Polygon({\n              shape: {\n                points: points.concat(prevPoints)\n              }\n            }));\n          }\n\n          prevPoints = points.slice().reverse();\n        }\n      }\n\n    var lineStyle = lineStyleModel.getLineStyle();\n    var areaStyle = areaStyleModel.getAreaStyle(); // Add splitArea before splitLine\n\n    zrUtil.each(splitAreas, function (splitAreas, idx) {\n      this.group.add(graphic.mergePath(splitAreas, {\n        style: zrUtil.defaults({\n          stroke: 'none',\n          fill: splitAreaColors[idx % splitAreaColors.length]\n        }, areaStyle),\n        silent: true\n      }));\n    }, this);\n    zrUtil.each(splitLines, function (splitLines, idx) {\n      this.group.add(graphic.mergePath(splitLines, {\n        style: zrUtil.defaults({\n          fill: 'none',\n          stroke: splitLineColors[idx % splitLineColors.length]\n        }, lineStyle),\n        silent: true\n      }));\n    }, this);\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"../component/singleAxis\");\n\nrequire(\"./themeRiver/ThemeRiverSeries\");\n\nrequire(\"./themeRiver/ThemeRiverView\");\n\nvar themeRiverLayout = require(\"./themeRiver/themeRiverLayout\");\n\nvar themeRiverVisual = require(\"./themeRiver/themeRiverVisual\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerLayout(themeRiverLayout);\necharts.registerVisual(themeRiverVisual);\necharts.registerProcessor(dataFilter('themeRiver'));","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"./Model\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassManagement = _clazz.enableClassManagement;\nvar parseClassType = _clazz.parseClassType;\n\nvar _model = require(\"../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar layout = require(\"../util/layout\");\n\nvar boxLayoutMixin = require(\"./mixin/boxLayout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\nvar inner = makeInner();\n/**\n * @alias module:echarts/model/Component\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {module:echarts/model/Model} ecModel\n */\n\nvar ComponentModel = Model.extend({\n  type: 'component',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  id: '',\n\n  /**\n   * Because simplified concept is probably better, series.name (or component.name)\n   * has been having too many resposibilities:\n   * (1) Generating id (which requires name in option should not be modified).\n   * (2) As an index to mapping series when merging option or calling API (a name\n   * can refer to more then one components, which is convinient is some case).\n   * (3) Display.\n   * @readOnly\n   */\n  name: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  mainType: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  subType: '',\n\n  /**\n   * @readOnly\n   * @type {number}\n   */\n  componentIndex: 0,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n  ecModel: null,\n\n  /**\n   * key: componentType\n   * value:  Component model list, can not be null.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @readOnly\n   */\n  dependentModels: [],\n\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  uid: null,\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  $constructor: function (option, parentModel, ecModel, extraOpt) {\n    Model.call(this, option, parentModel, ecModel, extraOpt);\n    this.uid = componentUtil.getUID('ec_cpt_model');\n  },\n  init: function (option, parentModel, ecModel, extraOpt) {\n    this.mergeDefaultAndTheme(option, ecModel);\n  },\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? layout.getLayoutParams(option) : {};\n    var themeModel = ecModel.getTheme();\n    zrUtil.merge(option, themeModel.get(this.mainType));\n    zrUtil.merge(option, this.getDefaultOption());\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (option, extraOpt) {\n    zrUtil.merge(this.option, option, true);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(this.option, option, layoutMode);\n    }\n  },\n  // Hooker after init or mergeOption\n  optionUpdated: function (newCptOption, isInit) {},\n  getDefaultOption: function () {\n    var fields = inner(this);\n\n    if (!fields.defaultOption) {\n      var optList = [];\n      var Class = this.constructor;\n\n      while (Class) {\n        var opt = Class.prototype.defaultOption;\n        opt && optList.push(opt);\n        Class = Class.superClass;\n      }\n\n      var defaultOption = {};\n\n      for (var i = optList.length - 1; i >= 0; i--) {\n        defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n      }\n\n      fields.defaultOption = defaultOption;\n    }\n\n    return fields.defaultOption;\n  },\n  getReferringComponents: function (mainType) {\n    return this.ecModel.queryComponents({\n      mainType: mainType,\n      index: this.get(mainType + 'Index', true),\n      id: this.get(mainType + 'Id', true)\n    });\n  }\n}); // Reset ComponentModel.extend, add preConstruct.\n// clazzUtil.enableClassExtend(\n//     ComponentModel,\n//     function (option, parentModel, ecModel, extraOpt) {\n//         // Set dependentModels, componentIndex, name, id, mainType, subType.\n//         zrUtil.extend(this, extraOpt);\n//         this.uid = componentUtil.getUID('componentModel');\n//         // this.setReadOnly([\n//         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n//         //     'dependentModels', 'componentIndex'\n//         // ]);\n//     }\n// );\n// Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nenableClassManagement(ComponentModel, {\n  registerWhenExtend: true\n});\ncomponentUtil.enableSubTypeDefaulter(ComponentModel); // Add capability of ComponentModel.topologicalTravel.\n\ncomponentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\nfunction getDependencies(componentType) {\n  var deps = [];\n  zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n    deps = deps.concat(Clazz.prototype.dependencies || []);\n  }); // Ensure main type.\n\n  deps = zrUtil.map(deps, function (type) {\n    return parseClassType(type).main;\n  }); // Hack dataset for convenience.\n\n  if (componentType !== 'dataset' && zrUtil.indexOf(deps, 'dataset') <= 0) {\n    deps.unshift('dataset');\n  }\n\n  return deps;\n}\n\nzrUtil.mixin(ComponentModel, boxLayoutMixin);\nvar _default = ComponentModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar Transformable = require(\"zrender/lib/mixin/Transformable\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Simple view coordinate system\n * Mapping given x, y to transformd view x, y\n */\nvar v2ApplyTransform = vector.applyTransform; // Dummy transform node\n\nfunction TransformDummy() {\n  Transformable.call(this);\n}\n\nzrUtil.mixin(TransformDummy, Transformable);\n\nfunction View(name) {\n  /**\n   * @type {string}\n   */\n  this.name = name;\n  /**\n   * @type {Object}\n   */\n\n  this.zoomLimit;\n  Transformable.call(this);\n  this._roamTransformable = new TransformDummy();\n  this._rawTransformable = new TransformDummy();\n  this._center;\n  this._zoom;\n}\n\nView.prototype = {\n  constructor: View,\n  type: 'view',\n\n  /**\n   * @param {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Set bounding rect\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  // PENDING to getRect\n  setBoundingRect: function (x, y, width, height) {\n    this._rect = new BoundingRect(x, y, width, height);\n    return this._rect;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // PENDING to getRect\n  getBoundingRect: function () {\n    return this._rect;\n  },\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  setViewRect: function (x, y, width, height) {\n    this.transformTo(x, y, width, height);\n    this._viewRect = new BoundingRect(x, y, width, height);\n  },\n\n  /**\n   * Transformed to particular position and size\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var rawTransform = this._rawTransformable;\n    rawTransform.transform = rect.calculateTransform(new BoundingRect(x, y, width, height));\n    rawTransform.decomposeTransform();\n\n    this._updateTransform();\n  },\n\n  /**\n   * Set center of view\n   * @param {Array.<number>} [centerCoord]\n   */\n  setCenter: function (centerCoord) {\n    if (!centerCoord) {\n      return;\n    }\n\n    this._center = centerCoord;\n\n    this._updateCenterAndZoom();\n  },\n\n  /**\n   * @param {number} zoom\n   */\n  setZoom: function (zoom) {\n    zoom = zoom || 1;\n    var zoomLimit = this.zoomLimit;\n\n    if (zoomLimit) {\n      if (zoomLimit.max != null) {\n        zoom = Math.min(zoomLimit.max, zoom);\n      }\n\n      if (zoomLimit.min != null) {\n        zoom = Math.max(zoomLimit.min, zoom);\n      }\n    }\n\n    this._zoom = zoom;\n\n    this._updateCenterAndZoom();\n  },\n\n  /**\n   * Get default center without roam\n   */\n  getDefaultCenter: function () {\n    // Rect before any transform\n    var rawRect = this.getBoundingRect();\n    var cx = rawRect.x + rawRect.width / 2;\n    var cy = rawRect.y + rawRect.height / 2;\n    return [cx, cy];\n  },\n  getCenter: function () {\n    return this._center || this.getDefaultCenter();\n  },\n  getZoom: function () {\n    return this._zoom || 1;\n  },\n\n  /**\n   * @return {Array.<number}\n   */\n  getRoamTransform: function () {\n    return this._roamTransformable.getLocalTransform();\n  },\n\n  /**\n   * Remove roam\n   */\n  _updateCenterAndZoom: function () {\n    // Must update after view transform updated\n    var rawTransformMatrix = this._rawTransformable.getLocalTransform();\n\n    var roamTransform = this._roamTransformable;\n    var defaultCenter = this.getDefaultCenter();\n    var center = this.getCenter();\n    var zoom = this.getZoom();\n    center = vector.applyTransform([], center, rawTransformMatrix);\n    defaultCenter = vector.applyTransform([], defaultCenter, rawTransformMatrix);\n    roamTransform.origin = center;\n    roamTransform.position = [defaultCenter[0] - center[0], defaultCenter[1] - center[1]];\n    roamTransform.scale = [zoom, zoom];\n\n    this._updateTransform();\n  },\n\n  /**\n   * Update transform from roam and mapLocation\n   * @private\n   */\n  _updateTransform: function () {\n    var roamTransformable = this._roamTransformable;\n    var rawTransformable = this._rawTransformable;\n    rawTransformable.parent = roamTransformable;\n    roamTransformable.updateTransform();\n    rawTransformable.updateTransform();\n    matrix.copy(this.transform || (this.transform = []), rawTransformable.transform || matrix.create());\n    this._rawTransform = rawTransformable.getLocalTransform();\n    this.invTransform = this.invTransform || [];\n    matrix.invert(this.invTransform, this.transform);\n    this.decomposeTransform();\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getViewRect: function () {\n    return this._viewRect;\n  },\n\n  /**\n   * Get view rect after roam transform\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getViewRectAfterRoam: function () {\n    var rect = this.getBoundingRect().clone();\n    rect.applyTransform(this.transform);\n    return rect;\n  },\n\n  /**\n   * Convert a single (lon, lat) data item to (x, y) point.\n   * @param {Array.<number>} data\n   * @param {boolean} noRoam\n   * @param {Array.<number>} [out]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, noRoam, out) {\n    var transform = noRoam ? this._rawTransform : this.transform;\n    out = out || [];\n    return transform ? v2ApplyTransform(out, data, transform) : vector.copy(out, data);\n  },\n\n  /**\n   * Convert a (x, y) point to (lon, lat) data\n   * @param {Array.<number>} point\n   * @return {Array.<number>}\n   */\n  pointToData: function (point) {\n    var invTransform = this.invTransform;\n    return invTransform ? v2ApplyTransform([], point, invTransform) : [point[0], point[1]];\n  },\n\n  /**\n   * @implements\n   * see {module:echarts/CoodinateSystem}\n   */\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\n\n  /**\n   * @implements\n   * see {module:echarts/CoodinateSystem}\n   */\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData'),\n\n  /**\n   * @implements\n   * see {module:echarts/CoodinateSystem}\n   */\n  containPoint: function (point) {\n    return this.getViewRectAfterRoam().contain(point[0], point[1]);\n  }\n  /**\n   * @return {number}\n   */\n  // getScalarScale: function () {\n  //     // Use determinant square root of transform to mutiply scalar\n  //     var m = this.transform;\n  //     var det = Math.sqrt(Math.abs(m[0] * m[3] - m[2] * m[1]));\n  //     return det;\n  // }\n\n};\nzrUtil.mixin(View, Transformable);\n\nfunction doConvert(methodName, ecModel, finder, value) {\n  var seriesModel = finder.seriesModel;\n  var coordSys = seriesModel ? seriesModel.coordinateSystem : null; // e.g., graph.\n\n  return coordSys === this ? coordSys[methodName](value) : null;\n}\n\nvar _default = View;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar SymbolClz = require(\"../helper/Symbol\");\n\nvar _layoutHelper = require(\"./layoutHelper\");\n\nvar radialCoordinate = _layoutHelper.radialCoordinate;\n\nvar echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file  This file used to draw tree view\n */\nvar _default = echarts.extendChartView({\n  type: 'tree',\n\n  /**\n   * Init the chart\n   * @override\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function (ecModel, api) {\n    /**\n     * @private\n     * @type {module:echarts/data/Tree}\n     */\n    this._oldTree;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this._mainGroup = new graphic.Group();\n    this.group.add(this._mainGroup);\n  },\n  render: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var layoutInfo = seriesModel.layoutInfo;\n    var group = this._mainGroup;\n    var layout = seriesModel.get('layout');\n\n    if (layout === 'radial') {\n      group.attr('position', [layoutInfo.x + layoutInfo.width / 2, layoutInfo.y + layoutInfo.height / 2]);\n    } else {\n      group.attr('position', [layoutInfo.x, layoutInfo.y]);\n    }\n\n    var oldData = this._data;\n    var seriesScope = {\n      expandAndCollapse: seriesModel.get('expandAndCollapse'),\n      layout: layout,\n      orient: seriesModel.getOrient(),\n      curvature: seriesModel.get('lineStyle.curveness'),\n      symbolRotate: seriesModel.get('symbolRotate'),\n      symbolOffset: seriesModel.get('symbolOffset'),\n      hoverAnimation: seriesModel.get('hoverAnimation'),\n      useNameLabel: true,\n      fadeIn: true\n    };\n    data.diff(oldData).add(function (newIdx) {\n      if (symbolNeedsDraw(data, newIdx)) {\n        // create node and edge\n        updateNode(data, newIdx, null, group, seriesModel, seriesScope);\n      }\n    }).update(function (newIdx, oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx);\n\n      if (!symbolNeedsDraw(data, newIdx)) {\n        symbolEl && removeNode(oldData, oldIdx, symbolEl, group, seriesModel, seriesScope);\n        return;\n      } // update  node and edge\n\n\n      updateNode(data, newIdx, symbolEl, group, seriesModel, seriesScope);\n    }).remove(function (oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx); // When remove a collapsed node of subtree, since the collapsed\n      // node haven't been initialized with a symbol element,\n      // you can't found it's symbol element through index.\n      // so if we want to remove the symbol element we should insure\n      // that the symbol element is not null.\n\n      if (symbolEl) {\n        removeNode(oldData, oldIdx, symbolEl, group, seriesModel, seriesScope);\n      }\n    }).execute();\n\n    if (seriesScope.expandAndCollapse === true) {\n      data.eachItemGraphicEl(function (el, dataIndex) {\n        el.off('click').on('click', function () {\n          api.dispatchAction({\n            type: 'treeExpandAndCollapse',\n            seriesId: seriesModel.id,\n            dataIndex: dataIndex\n          });\n        });\n      });\n    }\n\n    this._data = data;\n  },\n  dispose: function () {},\n  remove: function () {\n    this._mainGroup.removeAll();\n\n    this._data = null;\n  }\n});\n\nfunction symbolNeedsDraw(data, dataIndex) {\n  var layout = data.getItemLayout(dataIndex);\n  return layout && !isNaN(layout.x) && !isNaN(layout.y) && data.getItemVisual(dataIndex, 'symbol') !== 'none';\n}\n\nfunction getTreeNodeStyle(node, itemModel, seriesScope) {\n  seriesScope.itemModel = itemModel;\n  seriesScope.itemStyle = itemModel.getModel('itemStyle').getItemStyle();\n  seriesScope.hoverItemStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n  seriesScope.lineStyle = itemModel.getModel('lineStyle').getLineStyle();\n  seriesScope.labelModel = itemModel.getModel('label');\n  seriesScope.hoverLabelModel = itemModel.getModel('emphasis.label');\n\n  if (node.isExpand === false && node.children.length !== 0) {\n    seriesScope.symbolInnerColor = seriesScope.itemStyle.fill;\n  } else {\n    seriesScope.symbolInnerColor = '#fff';\n  }\n\n  return seriesScope;\n}\n\nfunction updateNode(data, dataIndex, symbolEl, group, seriesModel, seriesScope) {\n  var isInit = !symbolEl;\n  var node = data.tree.getNodeByDataIndex(dataIndex);\n  var itemModel = node.getModel();\n  var seriesScope = getTreeNodeStyle(node, itemModel, seriesScope);\n  var virtualRoot = data.tree.root;\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\n  var sourceSymbolEl = data.getItemGraphicEl(source.dataIndex);\n  var sourceLayout = source.getLayout();\n  var sourceOldLayout = sourceSymbolEl ? {\n    x: sourceSymbolEl.position[0],\n    y: sourceSymbolEl.position[1],\n    rawX: sourceSymbolEl.__radialOldRawX,\n    rawY: sourceSymbolEl.__radialOldRawY\n  } : sourceLayout;\n  var targetLayout = node.getLayout();\n\n  if (isInit) {\n    symbolEl = new SymbolClz(data, dataIndex, seriesScope);\n    symbolEl.attr('position', [sourceOldLayout.x, sourceOldLayout.y]);\n  } else {\n    symbolEl.updateData(data, dataIndex, seriesScope);\n  }\n\n  symbolEl.__radialOldRawX = symbolEl.__radialRawX;\n  symbolEl.__radialOldRawY = symbolEl.__radialRawY;\n  symbolEl.__radialRawX = targetLayout.rawX;\n  symbolEl.__radialRawY = targetLayout.rawY;\n  group.add(symbolEl);\n  data.setItemGraphicEl(dataIndex, symbolEl);\n  graphic.updateProps(symbolEl, {\n    position: [targetLayout.x, targetLayout.y]\n  }, seriesModel);\n  var symbolPath = symbolEl.getSymbolPath();\n\n  if (seriesScope.layout === 'radial') {\n    var realRoot = virtualRoot.children[0];\n    var rootLayout = realRoot.getLayout();\n    var length = realRoot.children.length;\n    var rad;\n    var isLeft;\n\n    if (targetLayout.x === rootLayout.x && node.isExpand === true) {\n      var center = {};\n      center.x = (realRoot.children[0].getLayout().x + realRoot.children[length - 1].getLayout().x) / 2;\n      center.y = (realRoot.children[0].getLayout().y + realRoot.children[length - 1].getLayout().y) / 2;\n      rad = Math.atan2(center.y - rootLayout.y, center.x - rootLayout.x);\n\n      if (rad < 0) {\n        rad = Math.PI * 2 + rad;\n      }\n\n      isLeft = center.x < rootLayout.x;\n\n      if (isLeft) {\n        rad = rad - Math.PI;\n      }\n    } else {\n      rad = Math.atan2(targetLayout.y - rootLayout.y, targetLayout.x - rootLayout.x);\n\n      if (rad < 0) {\n        rad = Math.PI * 2 + rad;\n      }\n\n      if (node.children.length === 0 || node.children.length !== 0 && node.isExpand === false) {\n        isLeft = targetLayout.x < rootLayout.x;\n\n        if (isLeft) {\n          rad = rad - Math.PI;\n        }\n      } else {\n        isLeft = targetLayout.x > rootLayout.x;\n\n        if (!isLeft) {\n          rad = rad - Math.PI;\n        }\n      }\n    }\n\n    var textPosition = isLeft ? 'left' : 'right';\n    symbolPath.setStyle({\n      textPosition: textPosition,\n      textRotation: -rad,\n      textOrigin: 'center',\n      verticalAlign: 'middle'\n    });\n  }\n\n  if (node.parentNode && node.parentNode !== virtualRoot) {\n    var edge = symbolEl.__edge;\n\n    if (!edge) {\n      edge = symbolEl.__edge = new graphic.BezierCurve({\n        shape: getEdgeShape(seriesScope, sourceOldLayout, sourceOldLayout),\n        style: zrUtil.defaults({\n          opacity: 0\n        }, seriesScope.lineStyle)\n      });\n    }\n\n    graphic.updateProps(edge, {\n      shape: getEdgeShape(seriesScope, sourceLayout, targetLayout),\n      style: {\n        opacity: 1\n      }\n    }, seriesModel);\n    group.add(edge);\n  }\n}\n\nfunction removeNode(data, dataIndex, symbolEl, group, seriesModel, seriesScope) {\n  var node = data.tree.getNodeByDataIndex(dataIndex);\n  var virtualRoot = data.tree.root;\n  var itemModel = node.getModel();\n  var seriesScope = getTreeNodeStyle(node, itemModel, seriesScope);\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\n  var sourceLayout;\n\n  while (sourceLayout = source.getLayout(), sourceLayout == null) {\n    source = source.parentNode === virtualRoot ? source : source.parentNode || source;\n  }\n\n  graphic.updateProps(symbolEl, {\n    position: [sourceLayout.x + 1, sourceLayout.y + 1]\n  }, seriesModel, function () {\n    group.remove(symbolEl);\n    data.setItemGraphicEl(dataIndex, null);\n  });\n  symbolEl.fadeOut(null, {\n    keepLabel: true\n  });\n  var edge = symbolEl.__edge;\n\n  if (edge) {\n    graphic.updateProps(edge, {\n      shape: getEdgeShape(seriesScope, sourceLayout, sourceLayout),\n      style: {\n        opacity: 0\n      }\n    }, seriesModel, function () {\n      group.remove(edge);\n    });\n  }\n}\n\nfunction getEdgeShape(seriesScope, sourceLayout, targetLayout) {\n  var cpx1;\n  var cpy1;\n  var cpx2;\n  var cpy2;\n  var orient = seriesScope.orient;\n\n  if (seriesScope.layout === 'radial') {\n    var x1 = sourceLayout.rawX;\n    var y1 = sourceLayout.rawY;\n    var x2 = targetLayout.rawX;\n    var y2 = targetLayout.rawY;\n    var radialCoor1 = radialCoordinate(x1, y1);\n    var radialCoor2 = radialCoordinate(x1, y1 + (y2 - y1) * seriesScope.curvature);\n    var radialCoor3 = radialCoordinate(x2, y2 + (y1 - y2) * seriesScope.curvature);\n    var radialCoor4 = radialCoordinate(x2, y2);\n    return {\n      x1: radialCoor1.x,\n      y1: radialCoor1.y,\n      x2: radialCoor4.x,\n      y2: radialCoor4.y,\n      cpx1: radialCoor2.x,\n      cpy1: radialCoor2.y,\n      cpx2: radialCoor3.x,\n      cpy2: radialCoor3.y\n    };\n  } else {\n    var x1 = sourceLayout.x;\n    var y1 = sourceLayout.y;\n    var x2 = targetLayout.x;\n    var y2 = targetLayout.y;\n\n    if (orient === 'LR' || orient === 'RL') {\n      cpx1 = x1 + (x2 - x1) * seriesScope.curvature;\n      cpy1 = y1;\n      cpx2 = x2 + (x1 - x2) * seriesScope.curvature;\n      cpy2 = y2;\n    }\n\n    if (orient === 'TB' || orient === 'BT') {\n      cpx1 = x1;\n      cpy1 = y1 + (y2 - y1) * seriesScope.curvature;\n      cpx2 = x2;\n      cpy2 = y2 + (y1 - y2) * seriesScope.curvature;\n    }\n\n    return {\n      x1: x1,\n      y1: y1,\n      x2: x2,\n      y2: y2,\n      cpx1: cpx1,\n      cpy1: cpy1,\n      cpx2: cpx2,\n      cpy2: cpy2\n    };\n  }\n}\n\nmodule.exports = _default;","/**\n * @module zrender/core/util\n */\n// 用于处理merge时无法遍历Date等对象的问题\nvar BUILTIN_OBJECT = {\n  '[object Function]': 1,\n  '[object RegExp]': 1,\n  '[object Date]': 1,\n  '[object Error]': 1,\n  '[object CanvasGradient]': 1,\n  '[object CanvasPattern]': 1,\n  // For node-canvas\n  '[object Image]': 1,\n  '[object Canvas]': 1\n};\nvar TYPED_ARRAY = {\n  '[object Int8Array]': 1,\n  '[object Uint8Array]': 1,\n  '[object Uint8ClampedArray]': 1,\n  '[object Int16Array]': 1,\n  '[object Uint16Array]': 1,\n  '[object Int32Array]': 1,\n  '[object Uint32Array]': 1,\n  '[object Float32Array]': 1,\n  '[object Float64Array]': 1\n};\nvar objToString = Object.prototype.toString;\nvar arrayProto = Array.prototype;\nvar nativeForEach = arrayProto.forEach;\nvar nativeFilter = arrayProto.filter;\nvar nativeSlice = arrayProto.slice;\nvar nativeMap = arrayProto.map;\nvar nativeReduce = arrayProto.reduce; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  // Clear ctx instance for different environment\n  if (name === 'createCanvas') {\n    _ctx = null;\n  }\n\n  methods[name] = fn;\n}\n/**\n * Those data types can be cloned:\n *     Plain object, Array, TypedArray, number, string, null, undefined.\n * Those data types will be assgined using the orginal data:\n *     BUILTIN_OBJECT\n * Instance of user defined class will be cloned to a plain object, without\n * properties in prototype.\n * Other data types is not supported (not sure what will happen).\n *\n * Caution: do not support clone Date, for performance consideration.\n * (There might be a large number of date in `series.data`).\n * So date should not be modified in and out of echarts.\n *\n * @param {*} source\n * @return {*} new\n */\n\n\nfunction clone(source) {\n  if (source == null || typeof source != 'object') {\n    return source;\n  }\n\n  var result = source;\n  var typeStr = objToString.call(source);\n\n  if (typeStr === '[object Array]') {\n    if (!isPrimitive(source)) {\n      result = [];\n\n      for (var i = 0, len = source.length; i < len; i++) {\n        result[i] = clone(source[i]);\n      }\n    }\n  } else if (TYPED_ARRAY[typeStr]) {\n    if (!isPrimitive(source)) {\n      var Ctor = source.constructor;\n\n      if (source.constructor.from) {\n        result = Ctor.from(source);\n      } else {\n        result = new Ctor(source.length);\n\n        for (var i = 0, len = source.length; i < len; i++) {\n          result[i] = clone(source[i]);\n        }\n      }\n    }\n  } else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n    result = {};\n\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) {\n        result[key] = clone(source[key]);\n      }\n    }\n  }\n\n  return result;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overwrite=false]\n */\n\n\nfunction merge(target, source, overwrite) {\n  // We should escapse that source is string\n  // and enter for ... in ...\n  if (!isObject(source) || !isObject(target)) {\n    return overwrite ? clone(source) : target;\n  }\n\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      var targetProp = target[key];\n      var sourceProp = source[key];\n\n      if (isObject(sourceProp) && isObject(targetProp) && !isArray(sourceProp) && !isArray(targetProp) && !isDom(sourceProp) && !isDom(targetProp) && !isBuiltInObject(sourceProp) && !isBuiltInObject(targetProp) && !isPrimitive(sourceProp) && !isPrimitive(targetProp)) {\n        // 如果需要递归覆盖，就递归调用merge\n        merge(targetProp, sourceProp, overwrite);\n      } else if (overwrite || !(key in target)) {\n        // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n        // NOTE，在 target[key] 不存在的时候也是直接覆盖\n        target[key] = clone(source[key], true);\n      }\n    }\n  }\n\n  return target;\n}\n/**\n * @param {Array} targetAndSources The first item is target, and the rests are source.\n * @param {boolean} [overwrite=false]\n * @return {*} target\n */\n\n\nfunction mergeAll(targetAndSources, overwrite) {\n  var result = targetAndSources[0];\n\n  for (var i = 1, len = targetAndSources.length; i < len; i++) {\n    result = merge(result, targetAndSources[i], overwrite);\n  }\n\n  return result;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @memberOf module:zrender/core/util\n */\n\n\nfunction extend(target, source) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overlay=false]\n * @memberOf module:zrender/core/util\n */\n\n\nfunction defaults(target, source, overlay) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key) && (overlay ? source[key] != null : target[key] == null)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar createCanvas = function () {\n  return methods.createCanvas();\n};\n\nmethods.createCanvas = function () {\n  return document.createElement('canvas');\n}; // FIXME\n\n\nvar _ctx;\n\nfunction getContext() {\n  if (!_ctx) {\n    // Use util.createCanvas instead of createCanvas\n    // because createCanvas may be overwritten in different environment\n    _ctx = createCanvas().getContext('2d');\n  }\n\n  return _ctx;\n}\n/**\n * 查询数组中元素的index\n * @memberOf module:zrender/core/util\n */\n\n\nfunction indexOf(array, value) {\n  if (array) {\n    if (array.indexOf) {\n      return array.indexOf(value);\n    }\n\n    for (var i = 0, len = array.length; i < len; i++) {\n      if (array[i] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n}\n/**\n * 构造类继承关系\n *\n * @memberOf module:zrender/core/util\n * @param {Function} clazz 源类\n * @param {Function} baseClazz 基类\n */\n\n\nfunction inherits(clazz, baseClazz) {\n  var clazzPrototype = clazz.prototype;\n\n  function F() {}\n\n  F.prototype = baseClazz.prototype;\n  clazz.prototype = new F();\n\n  for (var prop in clazzPrototype) {\n    clazz.prototype[prop] = clazzPrototype[prop];\n  }\n\n  clazz.prototype.constructor = clazz;\n  clazz.superClass = baseClazz;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Object|Function} target\n * @param {Object|Function} sorce\n * @param {boolean} overlay\n */\n\n\nfunction mixin(target, source, overlay) {\n  target = 'prototype' in target ? target.prototype : target;\n  source = 'prototype' in source ? source.prototype : source;\n  defaults(target, source, overlay);\n}\n/**\n * Consider typed array.\n * @param {Array|TypedArray} data\n */\n\n\nfunction isArrayLike(data) {\n  if (!data) {\n    return;\n  }\n\n  if (typeof data == 'string') {\n    return false;\n  }\n\n  return typeof data.length == 'number';\n}\n/**\n * 数组或对象遍历\n * @memberOf module:zrender/core/util\n * @param {Object|Array} obj\n * @param {Function} cb\n * @param {*} [context]\n */\n\n\nfunction each(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.forEach && obj.forEach === nativeForEach) {\n    obj.forEach(cb, context);\n  } else if (obj.length === +obj.length) {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      cb.call(context, obj[i], i, obj);\n    }\n  } else {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        cb.call(context, obj[key], key, obj);\n      }\n    }\n  }\n}\n/**\n * 数组映射\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction map(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.map && obj.map === nativeMap) {\n    return obj.map(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      result.push(cb.call(context, obj[i], i, obj));\n    }\n\n    return result;\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {Object} [memo]\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction reduce(obj, cb, memo, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.reduce && obj.reduce === nativeReduce) {\n    return obj.reduce(cb, memo, context);\n  } else {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      memo = cb.call(context, memo, obj[i], i, obj);\n    }\n\n    return memo;\n  }\n}\n/**\n * 数组过滤\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction filter(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.filter && obj.filter === nativeFilter) {\n    return obj.filter(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      if (cb.call(context, obj[i], i, obj)) {\n        result.push(obj[i]);\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * 数组项查找\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {*}\n */\n\n\nfunction find(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  for (var i = 0, len = obj.length; i < len; i++) {\n    if (cb.call(context, obj[i], i, obj)) {\n      return obj[i];\n    }\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @param {*} context\n * @return {Function}\n */\n\n\nfunction bind(func, context) {\n  var args = nativeSlice.call(arguments, 2);\n  return function () {\n    return func.apply(context, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @return {Function}\n */\n\n\nfunction curry(func) {\n  var args = nativeSlice.call(arguments, 1);\n  return function () {\n    return func.apply(this, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isArray(value) {\n  return objToString.call(value) === '[object Array]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isString(value) {\n  return objToString.call(value) === '[object String]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return type === 'function' || !!value && type == 'object';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isBuiltInObject(value) {\n  return !!BUILTIN_OBJECT[objToString.call(value)];\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isTypedArray(value) {\n  return !!TYPED_ARRAY[objToString.call(value)];\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isDom(value) {\n  return typeof value === 'object' && typeof value.nodeType === 'number' && typeof value.ownerDocument === 'object';\n}\n/**\n * Whether is exactly NaN. Notice isNaN('a') returns true.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction eqNaN(value) {\n  return value !== value;\n}\n/**\n * If value1 is not null, then return value1, otherwise judget rest of values.\n * Low performance.\n * @memberOf module:zrender/core/util\n * @return {*} Final value\n */\n\n\nfunction retrieve(values) {\n  for (var i = 0, len = arguments.length; i < len; i++) {\n    if (arguments[i] != null) {\n      return arguments[i];\n    }\n  }\n}\n\nfunction retrieve2(value0, value1) {\n  return value0 != null ? value0 : value1;\n}\n\nfunction retrieve3(value0, value1, value2) {\n  return value0 != null ? value0 : value1 != null ? value1 : value2;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} arr\n * @param {number} startIndex\n * @param {number} endIndex\n * @return {Array}\n */\n\n\nfunction slice() {\n  return Function.call.apply(nativeSlice, arguments);\n}\n/**\n * Normalize css liked array configuration\n * e.g.\n *  3 => [3, 3, 3, 3]\n *  [4, 2] => [4, 2, 4, 2]\n *  [4, 3, 2] => [4, 3, 2, 3]\n * @param {number|Array.<number>} val\n * @return {Array.<number>}\n */\n\n\nfunction normalizeCssArray(val) {\n  if (typeof val === 'number') {\n    return [val, val, val, val];\n  }\n\n  var len = val.length;\n\n  if (len === 2) {\n    // vertical | horizontal\n    return [val[0], val[1], val[0], val[1]];\n  } else if (len === 3) {\n    // top | horizontal | bottom\n    return [val[0], val[1], val[2], val[1]];\n  }\n\n  return val;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {boolean} condition\n * @param {string} message\n */\n\n\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {string} str string to be trimed\n * @return {string} trimed string\n */\n\n\nfunction trim(str) {\n  if (str == null) {\n    return null;\n  } else if (typeof str.trim === 'function') {\n    return str.trim();\n  } else {\n    return str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n  }\n}\n\nvar primitiveKey = '__ec_primitive__';\n/**\n * Set an object as primitive to be ignored traversing children in clone or merge\n */\n\nfunction setAsPrimitive(obj) {\n  obj[primitiveKey] = true;\n}\n\nfunction isPrimitive(obj) {\n  return obj[primitiveKey];\n}\n/**\n * @constructor\n * @param {Object} obj Only apply `ownProperty`.\n */\n\n\nfunction HashMap(obj) {\n  var isArr = isArray(obj);\n  var thisMap = this;\n  obj instanceof HashMap ? obj.each(visit) : obj && each(obj, visit);\n\n  function visit(value, key) {\n    isArr ? thisMap.set(value, key) : thisMap.set(key, value);\n  }\n} // Add prefix to avoid conflict with Object.prototype.\n\n\nHashMap.prototype = {\n  constructor: HashMap,\n  // Do not provide `has` method to avoid defining what is `has`.\n  // (We usually treat `null` and `undefined` as the same, different\n  // from ES6 Map).\n  get: function (key) {\n    return this.hasOwnProperty(key) ? this[key] : null;\n  },\n  set: function (key, value) {\n    // Comparing with invocation chaining, `return value` is more commonly\n    // used in this case: `var someVal = map.set('a', genVal());`\n    return this[key] = value;\n  },\n  // Although util.each can be performed on this hashMap directly, user\n  // should not use the exposed keys, who are prefixed.\n  each: function (cb, context) {\n    context !== void 0 && (cb = bind(cb, context));\n\n    for (var key in this) {\n      this.hasOwnProperty(key) && cb(this[key], key);\n    }\n  },\n  // Do not use this method if performance sensitive.\n  removeKey: function (key) {\n    delete this[key];\n  }\n};\n\nfunction createHashMap(obj) {\n  return new HashMap(obj);\n}\n\nfunction concatArray(a, b) {\n  var newArray = new a.constructor(a.length + b.length);\n\n  for (var i = 0; i < a.length; i++) {\n    newArray[i] = a[i];\n  }\n\n  var offset = a.length;\n\n  for (i = 0; i < b.length; i++) {\n    newArray[i + offset] = b[i];\n  }\n\n  return newArray;\n}\n\nfunction noop() {}\n\nexports.$override = $override;\nexports.clone = clone;\nexports.merge = merge;\nexports.mergeAll = mergeAll;\nexports.extend = extend;\nexports.defaults = defaults;\nexports.createCanvas = createCanvas;\nexports.getContext = getContext;\nexports.indexOf = indexOf;\nexports.inherits = inherits;\nexports.mixin = mixin;\nexports.isArrayLike = isArrayLike;\nexports.each = each;\nexports.map = map;\nexports.reduce = reduce;\nexports.filter = filter;\nexports.find = find;\nexports.bind = bind;\nexports.curry = curry;\nexports.isArray = isArray;\nexports.isFunction = isFunction;\nexports.isString = isString;\nexports.isObject = isObject;\nexports.isBuiltInObject = isBuiltInObject;\nexports.isTypedArray = isTypedArray;\nexports.isDom = isDom;\nexports.eqNaN = eqNaN;\nexports.retrieve = retrieve;\nexports.retrieve2 = retrieve2;\nexports.retrieve3 = retrieve3;\nexports.slice = slice;\nexports.normalizeCssArray = normalizeCssArray;\nexports.assert = assert;\nexports.trim = trim;\nexports.setAsPrimitive = setAsPrimitive;\nexports.isPrimitive = isPrimitive;\nexports.createHashMap = createHashMap;\nexports.concatArray = concatArray;\nexports.noop = noop;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Traverse the tree from bottom to top and do something\n * @param  {module:echarts/data/Tree~TreeNode} root  The real root of the tree\n * @param  {Function} callback\n */\nfunction eachAfter(root, callback, separation) {\n  var nodes = [root];\n  var next = [];\n  var node;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    next.push(node);\n\n    if (node.isExpand) {\n      var children = node.children;\n\n      if (children.length) {\n        for (var i = 0; i < children.length; i++) {\n          nodes.push(children[i]);\n        }\n      }\n    }\n  }\n\n  while (node = next.pop()) {\n    // jshint ignore:line\n    callback(node, separation);\n  }\n}\n/**\n * Traverse the tree from top to bottom and do something\n * @param  {module:echarts/data/Tree~TreeNode} root  The real root of the tree\n * @param  {Function} callback\n */\n\n\nfunction eachBefore(root, callback) {\n  var nodes = [root];\n  var node;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    callback(node);\n\n    if (node.isExpand) {\n      var children = node.children;\n\n      if (children.length) {\n        for (var i = children.length - 1; i >= 0; i--) {\n          nodes.push(children[i]);\n        }\n      }\n    }\n  }\n}\n\nexports.eachAfter = eachAfter;\nexports.eachBefore = eachBefore;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassCheck = _clazz.enableClassCheck;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Graph data structure\n *\n * @module echarts/data/Graph\n * @author Yi Shen(https://www.github.com/pissang)\n */\n// id may be function name of Object, add a prefix to avoid this problem.\nfunction generateNodeKey(id) {\n  return '_EC_' + id;\n}\n/**\n * @alias module:echarts/data/Graph\n * @constructor\n * @param {boolean} directed\n */\n\n\nvar Graph = function (directed) {\n  /**\n   * 是否是有向图\n   * @type {boolean}\n   * @private\n   */\n  this._directed = directed || false;\n  /**\n   * @type {Array.<module:echarts/data/Graph.Node>}\n   * @readOnly\n   */\n\n  this.nodes = [];\n  /**\n   * @type {Array.<module:echarts/data/Graph.Edge>}\n   * @readOnly\n   */\n\n  this.edges = [];\n  /**\n   * @type {Object.<string, module:echarts/data/Graph.Node>}\n   * @private\n   */\n\n  this._nodesMap = {};\n  /**\n   * @type {Object.<string, module:echarts/data/Graph.Edge>}\n   * @private\n   */\n\n  this._edgesMap = {};\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.data;\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.edgeData;\n};\n\nvar graphProto = Graph.prototype;\n/**\n * @type {string}\n */\n\ngraphProto.type = 'graph';\n/**\n * If is directed graph\n * @return {boolean}\n */\n\ngraphProto.isDirected = function () {\n  return this._directed;\n};\n/**\n * Add a new node\n * @param {string} id\n * @param {number} [dataIndex]\n */\n\n\ngraphProto.addNode = function (id, dataIndex) {\n  id = id || '' + dataIndex;\n  var nodesMap = this._nodesMap;\n\n  if (nodesMap[generateNodeKey(id)]) {\n    return;\n  }\n\n  var node = new Node(id, dataIndex);\n  node.hostGraph = this;\n  this.nodes.push(node);\n  nodesMap[generateNodeKey(id)] = node;\n  return node;\n};\n/**\n * Get node by data index\n * @param  {number} dataIndex\n * @return {module:echarts/data/Graph~Node}\n */\n\n\ngraphProto.getNodeByIndex = function (dataIndex) {\n  var rawIdx = this.data.getRawIndex(dataIndex);\n  return this.nodes[rawIdx];\n};\n/**\n * Get node by id\n * @param  {string} id\n * @return {module:echarts/data/Graph.Node}\n */\n\n\ngraphProto.getNodeById = function (id) {\n  return this._nodesMap[generateNodeKey(id)];\n};\n/**\n * Add a new edge\n * @param {number|string|module:echarts/data/Graph.Node} n1\n * @param {number|string|module:echarts/data/Graph.Node} n2\n * @param {number} [dataIndex=-1]\n * @return {module:echarts/data/Graph.Edge}\n */\n\n\ngraphProto.addEdge = function (n1, n2, dataIndex) {\n  var nodesMap = this._nodesMap;\n  var edgesMap = this._edgesMap; // PNEDING\n\n  if (typeof n1 === 'number') {\n    n1 = this.nodes[n1];\n  }\n\n  if (typeof n2 === 'number') {\n    n2 = this.nodes[n2];\n  }\n\n  if (!Node.isInstance(n1)) {\n    n1 = nodesMap[generateNodeKey(n1)];\n  }\n\n  if (!Node.isInstance(n2)) {\n    n2 = nodesMap[generateNodeKey(n2)];\n  }\n\n  if (!n1 || !n2) {\n    return;\n  }\n\n  var key = n1.id + '-' + n2.id; // PENDING\n\n  if (edgesMap[key]) {\n    return;\n  }\n\n  var edge = new Edge(n1, n2, dataIndex);\n  edge.hostGraph = this;\n\n  if (this._directed) {\n    n1.outEdges.push(edge);\n    n2.inEdges.push(edge);\n  }\n\n  n1.edges.push(edge);\n\n  if (n1 !== n2) {\n    n2.edges.push(edge);\n  }\n\n  this.edges.push(edge);\n  edgesMap[key] = edge;\n  return edge;\n};\n/**\n * Get edge by data index\n * @param  {number} dataIndex\n * @return {module:echarts/data/Graph~Node}\n */\n\n\ngraphProto.getEdgeByIndex = function (dataIndex) {\n  var rawIdx = this.edgeData.getRawIndex(dataIndex);\n  return this.edges[rawIdx];\n};\n/**\n * Get edge by two linked nodes\n * @param  {module:echarts/data/Graph.Node|string} n1\n * @param  {module:echarts/data/Graph.Node|string} n2\n * @return {module:echarts/data/Graph.Edge}\n */\n\n\ngraphProto.getEdge = function (n1, n2) {\n  if (Node.isInstance(n1)) {\n    n1 = n1.id;\n  }\n\n  if (Node.isInstance(n2)) {\n    n2 = n2.id;\n  }\n\n  var edgesMap = this._edgesMap;\n\n  if (this._directed) {\n    return edgesMap[n1 + '-' + n2];\n  } else {\n    return edgesMap[n1 + '-' + n2] || edgesMap[n2 + '-' + n1];\n  }\n};\n/**\n * Iterate all nodes\n * @param  {Function} cb\n * @param  {*} [context]\n */\n\n\ngraphProto.eachNode = function (cb, context) {\n  var nodes = this.nodes;\n  var len = nodes.length;\n\n  for (var i = 0; i < len; i++) {\n    if (nodes[i].dataIndex >= 0) {\n      cb.call(context, nodes[i], i);\n    }\n  }\n};\n/**\n * Iterate all edges\n * @param  {Function} cb\n * @param  {*} [context]\n */\n\n\ngraphProto.eachEdge = function (cb, context) {\n  var edges = this.edges;\n  var len = edges.length;\n\n  for (var i = 0; i < len; i++) {\n    if (edges[i].dataIndex >= 0 && edges[i].node1.dataIndex >= 0 && edges[i].node2.dataIndex >= 0) {\n      cb.call(context, edges[i], i);\n    }\n  }\n};\n/**\n * Breadth first traverse\n * @param {Function} cb\n * @param {module:echarts/data/Graph.Node} startNode\n * @param {string} [direction='none'] 'none'|'in'|'out'\n * @param {*} [context]\n */\n\n\ngraphProto.breadthFirstTraverse = function (cb, startNode, direction, context) {\n  if (!Node.isInstance(startNode)) {\n    startNode = this._nodesMap[generateNodeKey(startNode)];\n  }\n\n  if (!startNode) {\n    return;\n  }\n\n  var edgeType = direction === 'out' ? 'outEdges' : direction === 'in' ? 'inEdges' : 'edges';\n\n  for (var i = 0; i < this.nodes.length; i++) {\n    this.nodes[i].__visited = false;\n  }\n\n  if (cb.call(context, startNode, null)) {\n    return;\n  }\n\n  var queue = [startNode];\n\n  while (queue.length) {\n    var currentNode = queue.shift();\n    var edges = currentNode[edgeType];\n\n    for (var i = 0; i < edges.length; i++) {\n      var e = edges[i];\n      var otherNode = e.node1 === currentNode ? e.node2 : e.node1;\n\n      if (!otherNode.__visited) {\n        if (cb.call(context, otherNode, currentNode)) {\n          // Stop traversing\n          return;\n        }\n\n        queue.push(otherNode);\n        otherNode.__visited = true;\n      }\n    }\n  }\n}; // TODO\n// graphProto.depthFirstTraverse = function (\n//     cb, startNode, direction, context\n// ) {\n// };\n// Filter update\n\n\ngraphProto.update = function () {\n  var data = this.data;\n  var edgeData = this.edgeData;\n  var nodes = this.nodes;\n  var edges = this.edges;\n\n  for (var i = 0, len = nodes.length; i < len; i++) {\n    nodes[i].dataIndex = -1;\n  }\n\n  for (var i = 0, len = data.count(); i < len; i++) {\n    nodes[data.getRawIndex(i)].dataIndex = i;\n  }\n\n  edgeData.filterSelf(function (idx) {\n    var edge = edges[edgeData.getRawIndex(idx)];\n    return edge.node1.dataIndex >= 0 && edge.node2.dataIndex >= 0;\n  }); // Update edge\n\n  for (var i = 0, len = edges.length; i < len; i++) {\n    edges[i].dataIndex = -1;\n  }\n\n  for (var i = 0, len = edgeData.count(); i < len; i++) {\n    edges[edgeData.getRawIndex(i)].dataIndex = i;\n  }\n};\n/**\n * @return {module:echarts/data/Graph}\n */\n\n\ngraphProto.clone = function () {\n  var graph = new Graph(this._directed);\n  var nodes = this.nodes;\n  var edges = this.edges;\n\n  for (var i = 0; i < nodes.length; i++) {\n    graph.addNode(nodes[i].id, nodes[i].dataIndex);\n  }\n\n  for (var i = 0; i < edges.length; i++) {\n    var e = edges[i];\n    graph.addEdge(e.node1.id, e.node2.id, e.dataIndex);\n  }\n\n  return graph;\n};\n/**\n * @alias module:echarts/data/Graph.Node\n */\n\n\nfunction Node(id, dataIndex) {\n  /**\n  * @type {string}\n  */\n  this.id = id == null ? '' : id;\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.inEdges = [];\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.outEdges = [];\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.edges = [];\n  /**\n   * @type {module:echarts/data/Graph}\n   */\n\n  this.hostGraph;\n  /**\n   * @type {number}\n   */\n\n  this.dataIndex = dataIndex == null ? -1 : dataIndex;\n}\n\nNode.prototype = {\n  constructor: Node,\n\n  /**\n   * @return {number}\n   */\n  degree: function () {\n    return this.edges.length;\n  },\n\n  /**\n   * @return {number}\n   */\n  inDegree: function () {\n    return this.inEdges.length;\n  },\n\n  /**\n  * @return {number}\n  */\n  outDegree: function () {\n    return this.outEdges.length;\n  },\n\n  /**\n   * @param {string} [path]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path) {\n    if (this.dataIndex < 0) {\n      return;\n    }\n\n    var graph = this.hostGraph;\n    var itemModel = graph.data.getItemModel(this.dataIndex);\n    return itemModel.getModel(path);\n  }\n};\n/**\n * 图边\n * @alias module:echarts/data/Graph.Edge\n * @param {module:echarts/data/Graph.Node} n1\n * @param {module:echarts/data/Graph.Node} n2\n * @param {number} [dataIndex=-1]\n */\n\nfunction Edge(n1, n2, dataIndex) {\n  /**\n   * 节点1，如果是有向图则为源节点\n   * @type {module:echarts/data/Graph.Node}\n   */\n  this.node1 = n1;\n  /**\n   * 节点2，如果是有向图则为目标节点\n   * @type {module:echarts/data/Graph.Node}\n   */\n\n  this.node2 = n2;\n  this.dataIndex = dataIndex == null ? -1 : dataIndex;\n}\n/**\n * @param {string} [path]\n * @return {module:echarts/model/Model}\n */\n\n\nEdge.prototype.getModel = function (path) {\n  if (this.dataIndex < 0) {\n    return;\n  }\n\n  var graph = this.hostGraph;\n  var itemModel = graph.edgeData.getItemModel(this.dataIndex);\n  return itemModel.getModel(path);\n};\n\nvar createGraphDataProxyMixin = function (hostName, dataName) {\n  return {\n    /**\n     * @param {string=} [dimension='value'] Default 'value'. can be 'a', 'b', 'c', 'd', 'e'.\n     * @return {number}\n     */\n    getValue: function (dimension) {\n      var data = this[hostName][dataName];\n      return data.get(data.getDimension(dimension || 'value'), this.dataIndex);\n    },\n\n    /**\n     * @param {Object|string} key\n     * @param {*} [value]\n     */\n    setVisual: function (key, value) {\n      this.dataIndex >= 0 && this[hostName][dataName].setItemVisual(this.dataIndex, key, value);\n    },\n\n    /**\n     * @param {string} key\n     * @return {boolean}\n     */\n    getVisual: function (key, ignoreParent) {\n      return this[hostName][dataName].getItemVisual(this.dataIndex, key, ignoreParent);\n    },\n\n    /**\n     * @param {Object} layout\n     * @return {boolean} [merge=false]\n     */\n    setLayout: function (layout, merge) {\n      this.dataIndex >= 0 && this[hostName][dataName].setItemLayout(this.dataIndex, layout, merge);\n    },\n\n    /**\n     * @return {Object}\n     */\n    getLayout: function () {\n      return this[hostName][dataName].getItemLayout(this.dataIndex);\n    },\n\n    /**\n     * @return {module:zrender/Element}\n     */\n    getGraphicEl: function () {\n      return this[hostName][dataName].getItemGraphicEl(this.dataIndex);\n    },\n\n    /**\n     * @return {number}\n     */\n    getRawIndex: function () {\n      return this[hostName][dataName].getRawIndex(this.dataIndex);\n    }\n  };\n};\n\nzrUtil.mixin(Node, createGraphDataProxyMixin('hostGraph', 'data'));\nzrUtil.mixin(Edge, createGraphDataProxyMixin('hostGraph', 'edgeData'));\nGraph.Node = Node;\nGraph.Edge = Edge;\nenableClassCheck(Node);\nenableClassCheck(Edge);\nvar _default = Graph;\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar LineGroup = require(\"./Line\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/LineDraw\n */\n// import IncrementalDisplayable from 'zrender/src/graphic/IncrementalDisplayable';\n\n/**\n * @alias module:echarts/component/marker/LineDraw\n * @constructor\n */\nfunction LineDraw(ctor) {\n  this._ctor = ctor || LineGroup;\n  this.group = new graphic.Group();\n}\n\nvar lineDrawProto = LineDraw.prototype;\n\nlineDrawProto.isPersistent = function () {\n  return true;\n};\n/**\n * @param {module:echarts/data/List} lineData\n */\n\n\nlineDrawProto.updateData = function (lineData) {\n  var lineDraw = this;\n  var group = lineDraw.group;\n  var oldLineData = lineDraw._lineData;\n  lineDraw._lineData = lineData; // There is no oldLineData only when first rendering or switching from\n  // stream mode to normal mode, where previous elements should be removed.\n\n  if (!oldLineData) {\n    group.removeAll();\n  }\n\n  var seriesScope = makeSeriesScope(lineData);\n  lineData.diff(oldLineData).add(function (idx) {\n    doAdd(lineDraw, lineData, idx, seriesScope);\n  }).update(function (newIdx, oldIdx) {\n    doUpdate(lineDraw, oldLineData, lineData, oldIdx, newIdx, seriesScope);\n  }).remove(function (idx) {\n    group.remove(oldLineData.getItemGraphicEl(idx));\n  }).execute();\n};\n\nfunction doAdd(lineDraw, lineData, idx, seriesScope) {\n  var itemLayout = lineData.getItemLayout(idx);\n\n  if (!lineNeedsDraw(itemLayout)) {\n    return;\n  }\n\n  var el = new lineDraw._ctor(lineData, idx, seriesScope);\n  lineData.setItemGraphicEl(idx, el);\n  lineDraw.group.add(el);\n}\n\nfunction doUpdate(lineDraw, oldLineData, newLineData, oldIdx, newIdx, seriesScope) {\n  var itemEl = oldLineData.getItemGraphicEl(oldIdx);\n\n  if (!lineNeedsDraw(newLineData.getItemLayout(newIdx))) {\n    lineDraw.group.remove(itemEl);\n    return;\n  }\n\n  if (!itemEl) {\n    itemEl = new lineDraw._ctor(newLineData, newIdx, seriesScope);\n  } else {\n    itemEl.updateData(newLineData, newIdx, seriesScope);\n  }\n\n  newLineData.setItemGraphicEl(newIdx, itemEl);\n  lineDraw.group.add(itemEl);\n}\n\nlineDrawProto.updateLayout = function () {\n  var lineData = this._lineData; // Do not support update layout in incremental mode.\n\n  if (!lineData) {\n    return;\n  }\n\n  lineData.eachItemGraphicEl(function (el, idx) {\n    el.updateLayout(lineData, idx);\n  }, this);\n};\n\nlineDrawProto.incrementalPrepareUpdate = function (lineData) {\n  this._seriesScope = makeSeriesScope(lineData);\n  this._lineData = null;\n  this.group.removeAll();\n};\n\nlineDrawProto.incrementalUpdate = function (taskParams, lineData) {\n  function updateIncrementalAndHover(el) {\n    if (!el.isGroup) {\n      el.incremental = el.useHoverLayer = true;\n    }\n  }\n\n  for (var idx = taskParams.start; idx < taskParams.end; idx++) {\n    var itemLayout = lineData.getItemLayout(idx);\n\n    if (lineNeedsDraw(itemLayout)) {\n      var el = new this._ctor(lineData, idx, this._seriesScope);\n      el.traverse(updateIncrementalAndHover);\n      this.group.add(el);\n      lineData.setItemGraphicEl(idx, el);\n    }\n  }\n};\n\nfunction makeSeriesScope(lineData) {\n  var hostModel = lineData.hostModel;\n  return {\n    lineStyle: hostModel.getModel('lineStyle').getLineStyle(),\n    hoverLineStyle: hostModel.getModel('emphasis.lineStyle').getLineStyle(),\n    labelModel: hostModel.getModel('label'),\n    hoverLabelModel: hostModel.getModel('emphasis.label')\n  };\n}\n\nlineDrawProto.remove = function () {\n  this._clearIncremental();\n\n  this._incremental = null;\n  this.group.removeAll();\n};\n\nlineDrawProto._clearIncremental = function () {\n  var incremental = this._incremental;\n\n  if (incremental) {\n    incremental.clearDisplaybles();\n  }\n};\n\nfunction isPointNaN(pt) {\n  return isNaN(pt[0]) || isNaN(pt[1]);\n}\n\nfunction lineNeedsDraw(pts) {\n  return !isPointNaN(pts[0]) && !isPointNaN(pts[1]);\n}\n\nvar _default = LineDraw;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Data selectable mixin for chart series.\n * To eanble data select, option of series must have `selectedMode`.\n * And each data item will use `selected` to toggle itself selected status\n */\nvar _default = {\n  /**\n   * @param {Array.<Object>} targetList [{name, value, selected}, ...]\n   *        If targetList is an array, it should like [{name: ..., value: ...}, ...].\n   *        If targetList is a \"List\", it must have coordDim: 'value' dimension and name.\n   */\n  updateSelectedMap: function (targetList) {\n    this._targetList = zrUtil.isArray(targetList) ? targetList.slice() : [];\n    this._selectTargetMap = zrUtil.reduce(targetList || [], function (targetMap, target) {\n      targetMap.set(target.name, target);\n      return targetMap;\n    }, zrUtil.createHashMap());\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  // PENGING If selectedMode is null ?\n  select: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      this._selectTargetMap.each(function (target) {\n        target.selected = false;\n      });\n    }\n\n    target && (target.selected = true);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  unSelect: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name); // var selectedMode = this.get('selectedMode');\n    // selectedMode !== 'single' && target && (target.selected = false);\n\n    target && (target.selected = false);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  toggleSelected: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n\n    if (target != null) {\n      this[target.selected ? 'unSelect' : 'select'](name, id);\n      return target.selected;\n    }\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  isSelected: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    return target && target.selected;\n  }\n};\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar defaultOption = {\n  show: true,\n  zlevel: 0,\n  z: 0,\n  // Inverse the axis.\n  inverse: false,\n  // Axis name displayed.\n  name: '',\n  // 'start' | 'middle' | 'end'\n  nameLocation: 'end',\n  // By degree. By defualt auto rotate by nameLocation.\n  nameRotate: null,\n  nameTruncate: {\n    maxWidth: null,\n    ellipsis: '...',\n    placeholder: '.'\n  },\n  // Use global text style by default.\n  nameTextStyle: {},\n  // The gap between axisName and axisLine.\n  nameGap: 15,\n  // Default `false` to support tooltip.\n  silent: false,\n  // Default `false` to avoid legacy user event listener fail.\n  triggerEvent: false,\n  tooltip: {\n    show: false\n  },\n  axisPointer: {},\n  axisLine: {\n    show: true,\n    onZero: true,\n    onZeroAxisIndex: null,\n    lineStyle: {\n      color: '#333',\n      width: 1,\n      type: 'solid'\n    },\n    // The arrow at both ends the the axis.\n    symbol: ['none', 'none'],\n    symbolSize: [10, 15]\n  },\n  axisTick: {\n    show: true,\n    // Whether axisTick is inside the grid or outside the grid.\n    inside: false,\n    // The length of axisTick.\n    length: 5,\n    lineStyle: {\n      width: 1\n    }\n  },\n  axisLabel: {\n    show: true,\n    // Whether axisLabel is inside the grid or outside the grid.\n    inside: false,\n    rotate: 0,\n    // true | false | null/undefined (auto)\n    showMinLabel: null,\n    // true | false | null/undefined (auto)\n    showMaxLabel: null,\n    margin: 8,\n    // formatter: null,\n    fontSize: 12\n  },\n  splitLine: {\n    show: true,\n    lineStyle: {\n      color: ['#ccc'],\n      width: 1,\n      type: 'solid'\n    }\n  },\n  splitArea: {\n    show: false,\n    areaStyle: {\n      color: ['rgba(250,250,250,0.3)', 'rgba(200,200,200,0.3)']\n    }\n  }\n};\nvar axisDefault = {};\naxisDefault.categoryAxis = zrUtil.merge({\n  // The gap at both ends of the axis. For categoryAxis, boolean.\n  boundaryGap: true,\n  // Set false to faster category collection.\n  // Only usefull in the case like: category is\n  // ['2012-01-01', '2012-01-02', ...], where the input\n  // data has been ensured not duplicate and is large data.\n  // null means \"auto\":\n  // if axis.data provided, do not deduplication,\n  // else do deduplication.\n  deduplication: null,\n  // splitArea: {\n  // show: false\n  // },\n  splitLine: {\n    show: false\n  },\n  axisTick: {\n    // If tick is align with label when boundaryGap is true\n    alignWithLabel: false,\n    interval: 'auto'\n  },\n  axisLabel: {\n    interval: 'auto'\n  }\n}, defaultOption);\naxisDefault.valueAxis = zrUtil.merge({\n  // The gap at both ends of the axis. For value axis, [GAP, GAP], where\n  // `GAP` can be an absolute pixel number (like `35`), or percent (like `'30%'`)\n  boundaryGap: [0, 0],\n  // TODO\n  // min/max: [30, datamin, 60] or [20, datamin] or [datamin, 60]\n  // Min value of the axis. can be:\n  // + a number\n  // + 'dataMin': use the min value in data.\n  // + null/undefined: auto decide min value (consider pretty look and boundaryGap).\n  // min: null,\n  // Max value of the axis. can be:\n  // + a number\n  // + 'dataMax': use the max value in data.\n  // + null/undefined: auto decide max value (consider pretty look and boundaryGap).\n  // max: null,\n  // Readonly prop, specifies start value of the range when using data zoom.\n  // rangeStart: null\n  // Readonly prop, specifies end value of the range when using data zoom.\n  // rangeEnd: null\n  // Optional value can be:\n  // + `false`: always include value 0.\n  // + `true`: the extent do not consider value 0.\n  // scale: false,\n  // AxisTick and axisLabel and splitLine are caculated based on splitNumber.\n  splitNumber: 5 // Interval specifies the span of the ticks is mandatorily.\n  // interval: null\n  // Specify min interval when auto calculate tick interval.\n  // minInterval: null\n  // Specify max interval when auto calculate tick interval.\n  // maxInterval: null\n\n}, defaultOption);\naxisDefault.timeAxis = zrUtil.defaults({\n  scale: true,\n  min: 'dataMin',\n  max: 'dataMax'\n}, axisDefault.valueAxis);\naxisDefault.logAxis = zrUtil.defaults({\n  scale: true,\n  logBase: 10\n}, axisDefault.valueAxis);\nvar _default = axisDefault;\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Visual encoding for themeRiver view\n * @author  Deqing Li(annong035@gmail.com)\n */\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('themeRiver', function (seriesModel) {\n    var data = seriesModel.getData();\n    var rawData = seriesModel.getRawData();\n    var colorList = seriesModel.get('color');\n    var idxMap = createHashMap();\n    data.each(function (idx) {\n      idxMap.set(data.getRawIndex(idx), idx);\n    });\n    rawData.each(function (rawIndex) {\n      var name = rawData.getName(rawIndex);\n      var color = colorList[(seriesModel.nameMap.get(name) - 1) % colorList.length];\n      rawData.setItemVisual(rawIndex, 'color', color);\n      var idx = idxMap.get(rawIndex);\n\n      if (idx != null) {\n        data.setItemVisual(idx, 'color', color);\n      }\n    });\n  });\n}\n\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar List = require(\"../../data/List\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar concatArray = _util.concatArray;\nvar mergeAll = _util.mergeAll;\nvar map = _util.map;\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar Uint32Arr = typeof Uint32Array === 'undefined' ? Array : Uint32Array;\nvar Float64Arr = typeof Float64Array === 'undefined' ? Array : Float64Array;\n\nfunction compatEc2(seriesOpt) {\n  var data = seriesOpt.data;\n\n  if (data && data[0] && data[0][0] && data[0][0].coord) {\n    seriesOpt.data = map(data, function (itemOpt) {\n      var coords = [itemOpt[0].coord, itemOpt[1].coord];\n      var target = {\n        coords: coords\n      };\n\n      if (itemOpt[0].name) {\n        target.fromName = itemOpt[0].name;\n      }\n\n      if (itemOpt[1].name) {\n        target.toName = itemOpt[1].name;\n      }\n\n      return mergeAll([target, itemOpt[0], itemOpt[1]]);\n    });\n  }\n}\n\nvar LinesSeries = SeriesModel.extend({\n  type: 'series.lines',\n  dependencies: ['grid', 'polar'],\n  visualColorAccessPath: 'lineStyle.color',\n  init: function (option) {\n    // The input data may be null/undefined.\n    option.data = option.data || []; // Not using preprocessor because mergeOption may not have series.type\n\n    compatEc2(option);\n\n    var result = this._processFlatCoordsArray(option.data);\n\n    this._flatCoords = result.flatCoords;\n    this._flatCoordsOffset = result.flatCoordsOffset;\n\n    if (result.flatCoords) {\n      option.data = new Float32Array(result.count);\n    }\n\n    LinesSeries.superApply(this, 'init', arguments);\n  },\n  mergeOption: function (option) {\n    // The input data may be null/undefined.\n    option.data = option.data || [];\n    compatEc2(option);\n\n    if (option.data) {\n      // Only update when have option data to merge.\n      var result = this._processFlatCoordsArray(option.data);\n\n      this._flatCoords = result.flatCoords;\n      this._flatCoordsOffset = result.flatCoordsOffset;\n\n      if (result.flatCoords) {\n        option.data = new Float32Array(result.count);\n      }\n    }\n\n    LinesSeries.superApply(this, 'mergeOption', arguments);\n  },\n  appendData: function (params) {\n    var result = this._processFlatCoordsArray(params.data);\n\n    if (result.flatCoords) {\n      if (!this._flatCoords) {\n        this._flatCoords = result.flatCoords;\n        this._flatCoordsOffset = result.flatCoordsOffset;\n      } else {\n        this._flatCoords = concatArray(this._flatCoords, result.flatCoords);\n        this._flatCoordsOffset = concatArray(this._flatCoordsOffset, result.flatCoordsOffset);\n      }\n\n      params.data = new Float32Array(result.count);\n    }\n\n    this.getRawData().appendData(params.data);\n  },\n  _getCoordsFromItemModel: function (idx) {\n    var itemModel = this.getData().getItemModel(idx);\n    var coords = itemModel.option instanceof Array ? itemModel.option : itemModel.getShallow('coords');\n    return coords;\n  },\n  getLineCoordsCount: function (idx) {\n    if (this._flatCoordsOffset) {\n      return this._flatCoordsOffset[idx * 2 + 1];\n    } else {\n      return this._getCoordsFromItemModel(idx).length;\n    }\n  },\n  getLineCoords: function (idx, out) {\n    if (this._flatCoordsOffset) {\n      var offset = this._flatCoordsOffset[idx * 2];\n      var len = this._flatCoordsOffset[idx * 2 + 1];\n\n      for (var i = 0; i < len; i++) {\n        out[i] = out[i] || [];\n        out[i][0] = this._flatCoords[offset + i * 2];\n        out[i][1] = this._flatCoords[offset + i * 2 + 1];\n      }\n\n      return len;\n    } else {\n      var coords = this._getCoordsFromItemModel(idx);\n\n      for (var i = 0; i < coords.length; i++) {\n        out[i] = out[i] || [];\n        out[i][0] = coords[i][0];\n        out[i][1] = coords[i][1];\n      }\n\n      return coords.length;\n    }\n  },\n  _processFlatCoordsArray: function (data) {\n    var startOffset = 0;\n\n    if (this._flatCoords) {\n      startOffset = this._flatCoords.length;\n    } // Stored as a typed array. In format\n    // Points Count(2) | x | y | x | y | Points Count(3) | x |  y | x | y | x | y |\n\n\n    if (typeof data[0] === 'number') {\n      var len = data.length; // Store offset and len of each segment\n\n      var coordsOffsetAndLenStorage = new Uint32Arr(len);\n      var coordsStorage = new Float64Arr(len);\n      var coordsCursor = 0;\n      var offsetCursor = 0;\n      var dataCount = 0;\n\n      for (var i = 0; i < len;) {\n        dataCount++;\n        var count = data[i++]; // Offset\n\n        coordsOffsetAndLenStorage[offsetCursor++] = coordsCursor + startOffset; // Len\n\n        coordsOffsetAndLenStorage[offsetCursor++] = count;\n\n        for (var k = 0; k < count; k++) {\n          var x = data[i++];\n          var y = data[i++];\n          coordsStorage[coordsCursor++] = x;\n          coordsStorage[coordsCursor++] = y;\n\n          if (i > len) {}\n        }\n      }\n\n      return {\n        flatCoordsOffset: new Uint32Array(coordsOffsetAndLenStorage.buffer, 0, offsetCursor),\n        flatCoords: coordsStorage,\n        count: dataCount\n      };\n    }\n\n    return {\n      flatCoordsOffset: null,\n      flatCoords: null,\n      count: data.length\n    };\n  },\n  getInitialData: function (option, ecModel) {\n    var lineData = new List(['value'], this);\n    lineData.hasItemOption = false;\n    lineData.initData(option.data, [], function (dataItem, dimName, dataIndex, dimIndex) {\n      // dataItem is simply coords\n      if (dataItem instanceof Array) {\n        return NaN;\n      } else {\n        lineData.hasItemOption = true;\n        var value = dataItem.value;\n\n        if (value != null) {\n          return value instanceof Array ? value[dimIndex] : value;\n        }\n      }\n    });\n    return lineData;\n  },\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var itemModel = data.getItemModel(dataIndex);\n    var name = itemModel.get('name');\n\n    if (name) {\n      return name;\n    }\n\n    var fromName = itemModel.get('fromName');\n    var toName = itemModel.get('toName');\n    var html = [];\n    fromName != null && html.push(fromName);\n    toName != null && html.push(toName);\n    return encodeHTML(html.join(' > '));\n  },\n  preventIncremental: function () {\n    return !!this.get('effect.show');\n  },\n  getProgressive: function () {\n    var progressive = this.option.progressive;\n\n    if (progressive == null) {\n      return this.option.large ? 1e4 : this.get('progressive');\n    }\n\n    return progressive;\n  },\n  getProgressiveThreshold: function () {\n    var progressiveThreshold = this.option.progressiveThreshold;\n\n    if (progressiveThreshold == null) {\n      return this.option.large ? 2e4 : this.get('progressiveThreshold');\n    }\n\n    return progressiveThreshold;\n  },\n  defaultOption: {\n    coordinateSystem: 'geo',\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // Cartesian coordinate system\n    xAxisIndex: 0,\n    yAxisIndex: 0,\n    symbol: ['none', 'none'],\n    symbolSize: [10, 10],\n    // Geo coordinate system\n    geoIndex: 0,\n    effect: {\n      show: false,\n      period: 4,\n      // Animation delay. support callback\n      // delay: 0,\n      // If move with constant speed px/sec\n      // period will be ignored if this property is > 0,\n      constantSpeed: 0,\n      symbol: 'circle',\n      symbolSize: 3,\n      loop: true,\n      // Length of trail, 0 - 1\n      trailLength: 0.2 // Same with lineStyle.color\n      // color\n\n    },\n    large: false,\n    // Available when large is true\n    largeThreshold: 2000,\n    // If lines are polyline\n    // polyline not support curveness, label, animation\n    polyline: false,\n    label: {\n      show: false,\n      position: 'end' // distance: 5,\n      // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n\n    },\n    lineStyle: {\n      opacity: 0.5\n    }\n  }\n});\nvar _default = LinesSeries;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar layout = require(\"../../util/layout\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendComponentView({\n  type: 'visualMap',\n\n  /**\n   * @readOnly\n   * @type {Object}\n   */\n  autoPositionValues: {\n    left: 1,\n    right: 1,\n    top: 1,\n    bottom: 1\n  },\n  init: function (ecModel, api) {\n    /**\n     * @readOnly\n     * @type {module:echarts/model/Global}\n     */\n    this.ecModel = ecModel;\n    /**\n     * @readOnly\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this.api = api;\n    /**\n     * @readOnly\n     * @type {module:echarts/component/visualMap/visualMapModel}\n     */\n\n    this.visualMapModel;\n  },\n\n  /**\n   * @protected\n   */\n  render: function (visualMapModel, ecModel, api, payload) {\n    this.visualMapModel = visualMapModel;\n\n    if (visualMapModel.get('show') === false) {\n      this.group.removeAll();\n      return;\n    }\n\n    this.doRender.apply(this, arguments);\n  },\n\n  /**\n   * @protected\n   */\n  renderBackground: function (group) {\n    var visualMapModel = this.visualMapModel;\n    var padding = formatUtil.normalizeCssArray(visualMapModel.get('padding') || 0);\n    var rect = group.getBoundingRect();\n    group.add(new graphic.Rect({\n      z2: -1,\n      // Lay background rect on the lowest layer.\n      silent: true,\n      shape: {\n        x: rect.x - padding[3],\n        y: rect.y - padding[0],\n        width: rect.width + padding[3] + padding[1],\n        height: rect.height + padding[0] + padding[2]\n      },\n      style: {\n        fill: visualMapModel.get('backgroundColor'),\n        stroke: visualMapModel.get('borderColor'),\n        lineWidth: visualMapModel.get('borderWidth')\n      }\n    }));\n  },\n\n  /**\n   * @protected\n   * @param {number} targetValue can be Infinity or -Infinity\n   * @param {string=} visualCluster Only can be 'color' 'opacity' 'symbol' 'symbolSize'\n   * @param {Object} [opts]\n   * @param {string=} [opts.forceState] Specify state, instead of using getValueState method.\n   * @param {string=} [opts.convertOpacityToAlpha=false] For color gradient in controller widget.\n   * @return {*} Visual value.\n   */\n  getControllerVisual: function (targetValue, visualCluster, opts) {\n    opts = opts || {};\n    var forceState = opts.forceState;\n    var visualMapModel = this.visualMapModel;\n    var visualObj = {}; // Default values.\n\n    if (visualCluster === 'symbol') {\n      visualObj.symbol = visualMapModel.get('itemSymbol');\n    }\n\n    if (visualCluster === 'color') {\n      var defaultColor = visualMapModel.get('contentColor');\n      visualObj.color = defaultColor;\n    }\n\n    function getter(key) {\n      return visualObj[key];\n    }\n\n    function setter(key, value) {\n      visualObj[key] = value;\n    }\n\n    var mappings = visualMapModel.controllerVisuals[forceState || visualMapModel.getValueState(targetValue)];\n    var visualTypes = VisualMapping.prepareVisualTypes(mappings);\n    zrUtil.each(visualTypes, function (type) {\n      var visualMapping = mappings[type];\n\n      if (opts.convertOpacityToAlpha && type === 'opacity') {\n        type = 'colorAlpha';\n        visualMapping = mappings.__alphaForOpacity;\n      }\n\n      if (VisualMapping.dependsOn(type, visualCluster)) {\n        visualMapping && visualMapping.applyVisual(targetValue, getter, setter);\n      }\n    });\n    return visualObj[visualCluster];\n  },\n\n  /**\n   * @protected\n   */\n  positionGroup: function (group) {\n    var model = this.visualMapModel;\n    var api = this.api;\n    layout.positionElement(group, model.getBoxLayoutParams(), {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  },\n\n  /**\n   * @protected\n   * @abstract\n   */\n  doRender: zrUtil.noop\n});\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(seriesType, actionInfos) {\n  zrUtil.each(actionInfos, function (actionInfo) {\n    actionInfo.update = 'updateView';\n    /**\n     * @payload\n     * @property {string} seriesName\n     * @property {string} name\n     */\n\n    echarts.registerAction(actionInfo, function (payload, ecModel) {\n      var selected = {};\n      ecModel.eachComponent({\n        mainType: 'series',\n        subType: seriesType,\n        query: payload\n      }, function (seriesModel) {\n        if (seriesModel[actionInfo.method]) {\n          seriesModel[actionInfo.method](payload.name, payload.dataIndex);\n        }\n\n        var data = seriesModel.getData(); // Create selected map\n\n        data.each(function (idx) {\n          var name = data.getName(idx);\n          selected[name] = seriesModel.isSelected(name) || false;\n        });\n      });\n      return {\n        name: payload.name,\n        selected: selected\n      };\n    });\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar preprocessor = require(\"./visualMap/preprocessor\");\n\nrequire(\"./visualMap/typeDefaulter\");\n\nrequire(\"./visualMap/visualEncoding\");\n\nrequire(\"./visualMap/ContinuousModel\");\n\nrequire(\"./visualMap/ContinuousView\");\n\nrequire(\"./visualMap/visualMapAction\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * DataZoom component entry\n */\necharts.registerPreprocessor(preprocessor);","/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\nvar easing = {\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  linear: function (k) {\n    return k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticIn: function (k) {\n    return k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticOut: function (k) {\n    return k * (2 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k;\n    }\n\n    return -0.5 * (--k * (k - 2) - 1);\n  },\n  // 三次方的缓动（t^3）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicIn: function (k) {\n    return k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicOut: function (k) {\n    return --k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k + 2);\n  },\n  // 四次方的缓动（t^4）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticIn: function (k) {\n    return k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticOut: function (k) {\n    return 1 - --k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k;\n    }\n\n    return -0.5 * ((k -= 2) * k * k * k - 2);\n  },\n  // 五次方的缓动（t^5）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticIn: function (k) {\n    return k * k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticOut: function (k) {\n    return --k * k * k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k * k * k + 2);\n  },\n  // 正弦曲线的缓动（sin(t)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalIn: function (k) {\n    return 1 - Math.cos(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalOut: function (k) {\n    return Math.sin(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalInOut: function (k) {\n    return 0.5 * (1 - Math.cos(Math.PI * k));\n  },\n  // 指数曲线的缓动（2^t）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialIn: function (k) {\n    return k === 0 ? 0 : Math.pow(1024, k - 1);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialOut: function (k) {\n    return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialInOut: function (k) {\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if ((k *= 2) < 1) {\n      return 0.5 * Math.pow(1024, k - 1);\n    }\n\n    return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n  },\n  // 圆形曲线的缓动（sqrt(1-t^2)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularIn: function (k) {\n    return 1 - Math.sqrt(1 - k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularOut: function (k) {\n    return Math.sqrt(1 - --k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return -0.5 * (Math.sqrt(1 - k * k) - 1);\n    }\n\n    return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n  },\n  // 创建类似于弹簧在停止前来回振荡的动画\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticIn: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return -(a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return a * Math.pow(2, -10 * k) * Math.sin((k - s) * (2 * Math.PI) / p) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticInOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    if ((k *= 2) < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n    }\n\n    return a * Math.pow(2, -10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n  },\n  // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backIn: function (k) {\n    var s = 1.70158;\n    return k * k * ((s + 1) * k - s);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backOut: function (k) {\n    var s = 1.70158;\n    return --k * k * ((s + 1) * k + s) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backInOut: function (k) {\n    var s = 1.70158 * 1.525;\n\n    if ((k *= 2) < 1) {\n      return 0.5 * (k * k * ((s + 1) * k - s));\n    }\n\n    return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n  },\n  // 创建弹跳效果\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceIn: function (k) {\n    return 1 - easing.bounceOut(1 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceOut: function (k) {\n    if (k < 1 / 2.75) {\n      return 7.5625 * k * k;\n    } else if (k < 2 / 2.75) {\n      return 7.5625 * (k -= 1.5 / 2.75) * k + 0.75;\n    } else if (k < 2.5 / 2.75) {\n      return 7.5625 * (k -= 2.25 / 2.75) * k + 0.9375;\n    } else {\n      return 7.5625 * (k -= 2.625 / 2.75) * k + 0.984375;\n    }\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceInOut: function (k) {\n    if (k < 0.5) {\n      return easing.bounceIn(k * 2) * 0.5;\n    }\n\n    return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n  }\n};\nvar _default = easing;\nmodule.exports = _default;","var MapDraw = require(\"../helper/MapDraw\");\n\nvar echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendComponentView({\n  type: 'geo',\n  init: function (ecModel, api) {\n    var mapDraw = new MapDraw(api, true);\n    this._mapDraw = mapDraw;\n    this.group.add(mapDraw.group);\n  },\n  render: function (geoModel, ecModel, api, payload) {\n    // Not render if it is an toggleSelect action from self\n    if (payload && payload.type === 'geoToggleSelect' && payload.from === this.uid) {\n      return;\n    }\n\n    var mapDraw = this._mapDraw;\n\n    if (geoModel.get('show')) {\n      mapDraw.draw(geoModel, ecModel, api, this, payload);\n    } else {\n      this._mapDraw.group.removeAll();\n    }\n\n    this.group.silent = geoModel.get('silent');\n  },\n  dispose: function () {\n    this._mapDraw && this._mapDraw.remove();\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar dataViewLang = lang.toolbox.dataView;\nvar BLOCK_SPLITER = new Array(60).join('-');\nvar ITEM_SPLITER = '\\t';\n/**\n * Group series into two types\n *  1. on category axis, like line, bar\n *  2. others, like scatter, pie\n * @param {module:echarts/model/Global} ecModel\n * @return {Object}\n * @inner\n */\n\nfunction groupSeries(ecModel) {\n  var seriesGroupByCategoryAxis = {};\n  var otherSeries = [];\n  var meta = [];\n  ecModel.eachRawSeries(function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && (coordSys.type === 'cartesian2d' || coordSys.type === 'polar')) {\n      var baseAxis = coordSys.getBaseAxis();\n\n      if (baseAxis.type === 'category') {\n        var key = baseAxis.dim + '_' + baseAxis.index;\n\n        if (!seriesGroupByCategoryAxis[key]) {\n          seriesGroupByCategoryAxis[key] = {\n            categoryAxis: baseAxis,\n            valueAxis: coordSys.getOtherAxis(baseAxis),\n            series: []\n          };\n          meta.push({\n            axisDim: baseAxis.dim,\n            axisIndex: baseAxis.index\n          });\n        }\n\n        seriesGroupByCategoryAxis[key].series.push(seriesModel);\n      } else {\n        otherSeries.push(seriesModel);\n      }\n    } else {\n      otherSeries.push(seriesModel);\n    }\n  });\n  return {\n    seriesGroupByCategoryAxis: seriesGroupByCategoryAxis,\n    other: otherSeries,\n    meta: meta\n  };\n}\n/**\n * Assemble content of series on cateogory axis\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\n\nfunction assembleSeriesWithCategoryAxis(series) {\n  var tables = [];\n  zrUtil.each(series, function (group, key) {\n    var categoryAxis = group.categoryAxis;\n    var valueAxis = group.valueAxis;\n    var valueAxisDim = valueAxis.dim;\n    var headers = [' '].concat(zrUtil.map(group.series, function (series) {\n      return series.name;\n    }));\n    var columns = [categoryAxis.model.getCategories()];\n    zrUtil.each(group.series, function (series) {\n      columns.push(series.getRawData().mapArray(valueAxisDim, function (val) {\n        return val;\n      }));\n    }); // Assemble table content\n\n    var lines = [headers.join(ITEM_SPLITER)];\n\n    for (var i = 0; i < columns[0].length; i++) {\n      var items = [];\n\n      for (var j = 0; j < columns.length; j++) {\n        items.push(columns[j][i]);\n      }\n\n      lines.push(items.join(ITEM_SPLITER));\n    }\n\n    tables.push(lines.join('\\n'));\n  });\n  return tables.join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * Assemble content of other series\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\n\nfunction assembleOtherSeries(series) {\n  return zrUtil.map(series, function (series) {\n    var data = series.getRawData();\n    var lines = [series.name];\n    var vals = [];\n    data.each(data.dimensions, function () {\n      var argLen = arguments.length;\n      var dataIndex = arguments[argLen - 1];\n      var name = data.getName(dataIndex);\n\n      for (var i = 0; i < argLen - 1; i++) {\n        vals[i] = arguments[i];\n      }\n\n      lines.push((name ? name + ITEM_SPLITER : '') + vals.join(ITEM_SPLITER));\n    });\n    return lines.join('\\n');\n  }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * @param {module:echarts/model/Global}\n * @return {Object}\n * @inner\n */\n\n\nfunction getContentFromModel(ecModel) {\n  var result = groupSeries(ecModel);\n  return {\n    value: zrUtil.filter([assembleSeriesWithCategoryAxis(result.seriesGroupByCategoryAxis), assembleOtherSeries(result.other)], function (str) {\n      return str.replace(/[\\n\\t\\s]/g, '');\n    }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n'),\n    meta: result.meta\n  };\n}\n\nfunction trim(str) {\n  return str.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n}\n/**\n * If a block is tsv format\n */\n\n\nfunction isTSVFormat(block) {\n  // Simple method to find out if a block is tsv format\n  var firstLine = block.slice(0, block.indexOf('\\n'));\n\n  if (firstLine.indexOf(ITEM_SPLITER) >= 0) {\n    return true;\n  }\n}\n\nvar itemSplitRegex = new RegExp('[' + ITEM_SPLITER + ']+', 'g');\n/**\n * @param {string} tsv\n * @return {Object}\n */\n\nfunction parseTSVContents(tsv) {\n  var tsvLines = tsv.split(/\\n+/g);\n  var headers = trim(tsvLines.shift()).split(itemSplitRegex);\n  var categories = [];\n  var series = zrUtil.map(headers, function (header) {\n    return {\n      name: header,\n      data: []\n    };\n  });\n\n  for (var i = 0; i < tsvLines.length; i++) {\n    var items = trim(tsvLines[i]).split(itemSplitRegex);\n    categories.push(items.shift());\n\n    for (var j = 0; j < items.length; j++) {\n      series[j] && (series[j].data[i] = items[j]);\n    }\n  }\n\n  return {\n    series: series,\n    categories: categories\n  };\n}\n/**\n * @param {string} str\n * @return {Array.<Object>}\n * @inner\n */\n\n\nfunction parseListContents(str) {\n  var lines = str.split(/\\n+/g);\n  var seriesName = trim(lines.shift());\n  var data = [];\n\n  for (var i = 0; i < lines.length; i++) {\n    var items = trim(lines[i]).split(itemSplitRegex);\n    var name = '';\n    var value;\n    var hasName = false;\n\n    if (isNaN(items[0])) {\n      // First item is name\n      hasName = true;\n      name = items[0];\n      items = items.slice(1);\n      data[i] = {\n        name: name,\n        value: []\n      };\n      value = data[i].value;\n    } else {\n      value = data[i] = [];\n    }\n\n    for (var j = 0; j < items.length; j++) {\n      value.push(+items[j]);\n    }\n\n    if (value.length === 1) {\n      hasName ? data[i].value = value[0] : data[i] = value[0];\n    }\n  }\n\n  return {\n    name: seriesName,\n    data: data\n  };\n}\n/**\n * @param {string} str\n * @param {Array.<Object>} blockMetaList\n * @return {Object}\n * @inner\n */\n\n\nfunction parseContents(str, blockMetaList) {\n  var blocks = str.split(new RegExp('\\n*' + BLOCK_SPLITER + '\\n*', 'g'));\n  var newOption = {\n    series: []\n  };\n  zrUtil.each(blocks, function (block, idx) {\n    if (isTSVFormat(block)) {\n      var result = parseTSVContents(block);\n      var blockMeta = blockMetaList[idx];\n      var axisKey = blockMeta.axisDim + 'Axis';\n\n      if (blockMeta) {\n        newOption[axisKey] = newOption[axisKey] || [];\n        newOption[axisKey][blockMeta.axisIndex] = {\n          data: result.categories\n        };\n        newOption.series = newOption.series.concat(result.series);\n      }\n    } else {\n      var result = parseListContents(block);\n      newOption.series.push(result);\n    }\n  });\n  return newOption;\n}\n/**\n * @alias {module:echarts/component/toolbox/feature/DataView}\n * @constructor\n * @param {module:echarts/model/Model} model\n */\n\n\nfunction DataView(model) {\n  this._dom = null;\n  this.model = model;\n}\n\nDataView.defaultOption = {\n  show: true,\n  readOnly: false,\n  optionToContent: null,\n  contentToOption: null,\n  icon: 'M17.5,17.3H33 M17.5,17.3H33 M45.4,29.5h-28 M11.5,2v56H51V14.8L38.4,2H11.5z M38.4,2.2v12.7H51 M45.4,41.7h-28',\n  title: zrUtil.clone(dataViewLang.title),\n  lang: zrUtil.clone(dataViewLang.lang),\n  backgroundColor: '#fff',\n  textColor: '#000',\n  textareaColor: '#fff',\n  textareaBorderColor: '#333',\n  buttonColor: '#c23531',\n  buttonTextColor: '#fff'\n};\n\nDataView.prototype.onclick = function (ecModel, api) {\n  var container = api.getDom();\n  var model = this.model;\n\n  if (this._dom) {\n    container.removeChild(this._dom);\n  }\n\n  var root = document.createElement('div');\n  root.style.cssText = 'position:absolute;left:5px;top:5px;bottom:5px;right:5px;';\n  root.style.backgroundColor = model.get('backgroundColor') || '#fff'; // Create elements\n\n  var header = document.createElement('h4');\n  var lang = model.get('lang') || [];\n  header.innerHTML = lang[0] || model.get('title');\n  header.style.cssText = 'margin: 10px 20px;';\n  header.style.color = model.get('textColor');\n  var viewMain = document.createElement('div');\n  var textarea = document.createElement('textarea');\n  viewMain.style.cssText = 'display:block;width:100%;overflow:auto;';\n  var optionToContent = model.get('optionToContent');\n  var contentToOption = model.get('contentToOption');\n  var result = getContentFromModel(ecModel);\n\n  if (typeof optionToContent === 'function') {\n    var htmlOrDom = optionToContent(api.getOption());\n\n    if (typeof htmlOrDom === 'string') {\n      viewMain.innerHTML = htmlOrDom;\n    } else if (zrUtil.isDom(htmlOrDom)) {\n      viewMain.appendChild(htmlOrDom);\n    }\n  } else {\n    // Use default textarea\n    viewMain.appendChild(textarea);\n    textarea.readOnly = model.get('readOnly');\n    textarea.style.cssText = 'width:100%;height:100%;font-family:monospace;font-size:14px;line-height:1.6rem;';\n    textarea.style.color = model.get('textColor');\n    textarea.style.borderColor = model.get('textareaBorderColor');\n    textarea.style.backgroundColor = model.get('textareaColor');\n    textarea.value = result.value;\n  }\n\n  var blockMetaList = result.meta;\n  var buttonContainer = document.createElement('div');\n  buttonContainer.style.cssText = 'position:absolute;bottom:0;left:0;right:0;';\n  var buttonStyle = 'float:right;margin-right:20px;border:none;' + 'cursor:pointer;padding:2px 5px;font-size:12px;border-radius:3px';\n  var closeButton = document.createElement('div');\n  var refreshButton = document.createElement('div');\n  buttonStyle += ';background-color:' + model.get('buttonColor');\n  buttonStyle += ';color:' + model.get('buttonTextColor');\n  var self = this;\n\n  function close() {\n    container.removeChild(root);\n    self._dom = null;\n  }\n\n  eventTool.addEventListener(closeButton, 'click', close);\n  eventTool.addEventListener(refreshButton, 'click', function () {\n    var newOption;\n\n    try {\n      if (typeof contentToOption === 'function') {\n        newOption = contentToOption(viewMain, api.getOption());\n      } else {\n        newOption = parseContents(textarea.value, blockMetaList);\n      }\n    } catch (e) {\n      close();\n      throw new Error('Data view format error ' + e);\n    }\n\n    if (newOption) {\n      api.dispatchAction({\n        type: 'changeDataView',\n        newOption: newOption\n      });\n    }\n\n    close();\n  });\n  closeButton.innerHTML = lang[1];\n  refreshButton.innerHTML = lang[2];\n  refreshButton.style.cssText = buttonStyle;\n  closeButton.style.cssText = buttonStyle;\n  !model.get('readOnly') && buttonContainer.appendChild(refreshButton);\n  buttonContainer.appendChild(closeButton); // http://stackoverflow.com/questions/6637341/use-tab-to-indent-in-textarea\n\n  eventTool.addEventListener(textarea, 'keydown', function (e) {\n    if ((e.keyCode || e.which) === 9) {\n      // get caret position/selection\n      var val = this.value;\n      var start = this.selectionStart;\n      var end = this.selectionEnd; // set textarea value to: text before caret + tab + text after caret\n\n      this.value = val.substring(0, start) + ITEM_SPLITER + val.substring(end); // put caret at right position again\n\n      this.selectionStart = this.selectionEnd = start + 1; // prevent the focus lose\n\n      eventTool.stop(e);\n    }\n  });\n  root.appendChild(header);\n  root.appendChild(viewMain);\n  root.appendChild(buttonContainer);\n  viewMain.style.height = container.clientHeight - 80 + 'px';\n  container.appendChild(root);\n  this._dom = root;\n};\n\nDataView.prototype.remove = function (ecModel, api) {\n  this._dom && api.getDom().removeChild(this._dom);\n};\n\nDataView.prototype.dispose = function (ecModel, api) {\n  this.remove(ecModel, api);\n};\n/**\n * @inner\n */\n\n\nfunction tryMergeDataOption(newData, originalData) {\n  return zrUtil.map(newData, function (newVal, idx) {\n    var original = originalData && originalData[idx];\n\n    if (zrUtil.isObject(original) && !zrUtil.isArray(original)) {\n      if (zrUtil.isObject(newVal) && !zrUtil.isArray(newVal)) {\n        newVal = newVal.value;\n      } // Original data has option\n\n\n      return zrUtil.defaults({\n        value: newVal\n      }, original);\n    } else {\n      return newVal;\n    }\n  });\n}\n\nfeatureManager.register('dataView', DataView);\necharts.registerAction({\n  type: 'changeDataView',\n  event: 'dataViewChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  var newSeriesOptList = [];\n  zrUtil.each(payload.newOption.series, function (seriesOpt) {\n    var seriesModel = ecModel.getSeriesByName(seriesOpt.name)[0];\n\n    if (!seriesModel) {\n      // New created series\n      // Geuss the series type\n      newSeriesOptList.push(zrUtil.extend({\n        // Default is scatter\n        type: 'scatter'\n      }, seriesOpt));\n    } else {\n      var originalData = seriesModel.get('data');\n      newSeriesOptList.push({\n        name: seriesOpt.name,\n        data: tryMergeDataOption(seriesOpt.data, originalData)\n      });\n    }\n  });\n  ecModel.mergeOption(zrUtil.defaults({\n    series: newSeriesOptList\n  }, payload.newOption));\n});\nvar _default = DataView;\nmodule.exports = _default;","var Displayable = require(\"./Displayable\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar textContain = require(\"../contain/text\");\n\nvar textHelper = require(\"./helper/text\");\n\n/**\n * @alias zrender/graphic/Text\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nvar Text = function (opts) {\n  // jshint ignore:line\n  Displayable.call(this, opts);\n};\n\nText.prototype = {\n  constructor: Text,\n  type: 'text',\n  brush: function (ctx, prevEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true); // Use props with prefix 'text'.\n\n    style.fill = style.stroke = style.shadowBlur = style.shadowColor = style.shadowOffsetX = style.shadowOffsetY = null;\n    var text = style.text; // Convert to string\n\n    text != null && (text += ''); // Always bind style\n\n    style.bind(ctx, this, prevEl);\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    }\n\n    this.setTransform(ctx);\n    textHelper.renderText(this, ctx, text, style);\n    this.restoreTransform(ctx);\n  },\n  getBoundingRect: function () {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n    if (!this._rect) {\n      var text = style.text;\n      text != null ? text += '' : text = '';\n      var rect = textContain.getBoundingRect(style.text + '', style.font, style.textAlign, style.textVerticalAlign, style.textPadding, style.rich);\n      rect.x += style.x || 0;\n      rect.y += style.y || 0;\n\n      if (textHelper.getStroke(style.textStroke, style.textStrokeWidth)) {\n        var w = style.textStrokeWidth;\n        rect.x -= w / 2;\n        rect.y -= w / 2;\n        rect.width += w;\n        rect.height += w;\n      }\n\n      this._rect = rect;\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(Text, Displayable);\nvar _default = Text;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction IndicatorAxis(dim, scale, radiusExtent) {\n  Axis.call(this, dim, scale, radiusExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = 'value';\n  this.angle = 0;\n  /**\n   * Indicator name\n   * @type {string}\n   */\n\n  this.name = '';\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.model;\n}\n\nzrUtil.inherits(IndicatorAxis, Axis);\nvar _default = IndicatorAxis;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Backward compat for radar chart in 2\nfunction _default(option) {\n  var polarOptArr = option.polar;\n\n  if (polarOptArr) {\n    if (!zrUtil.isArray(polarOptArr)) {\n      polarOptArr = [polarOptArr];\n    }\n\n    var polarNotRadar = [];\n    zrUtil.each(polarOptArr, function (polarOpt, idx) {\n      if (polarOpt.indicator) {\n        if (polarOpt.type && !polarOpt.shape) {\n          polarOpt.shape = polarOpt.type;\n        }\n\n        option.radar = option.radar || [];\n\n        if (!zrUtil.isArray(option.radar)) {\n          option.radar = [option.radar];\n        }\n\n        option.radar.push(polarOpt);\n      } else {\n        polarNotRadar.push(polarOpt);\n      }\n    });\n    option.polar = polarNotRadar;\n  }\n\n  zrUtil.each(option.series, function (seriesOpt) {\n    if (seriesOpt && seriesOpt.type === 'radar' && seriesOpt.polarIndex) {\n      seriesOpt.radarIndex = seriesOpt.polarIndex;\n    }\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nrequire(\"./AxisModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendComponentModel({\n  type: 'polar',\n  dependencies: ['polarAxis', 'angleAxis'],\n\n  /**\n   * @type {module:echarts/coord/polar/Polar}\n   */\n  coordinateSystem: null,\n\n  /**\n   * @param {string} axisType\n   * @return {module:echarts/coord/polar/AxisModel}\n   */\n  findAxisModel: function (axisType) {\n    var foundAxisModel;\n    var ecModel = this.ecModel;\n    ecModel.eachComponent(axisType, function (axisModel) {\n      if (axisModel.getCoordSysModel() === this) {\n        foundAxisModel = axisModel;\n      }\n    }, this);\n    return foundAxisModel;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    center: ['50%', '50%'],\n    radius: '80%'\n  }\n});\n\nmodule.exports = _default;","var _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\nvar layoutBox = _layout.box;\nvar positionElement = _layout.positionElement;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Layout list like component.\n * It will box layout each items in group of component and then position the whole group in the viewport\n * @param {module:zrender/group/Group} group\n * @param {module:echarts/model/Component} componentModel\n * @param {module:echarts/ExtensionAPI}\n */\nfunction layout(group, componentModel, api) {\n  var boxLayoutParams = componentModel.getBoxLayoutParams();\n  var padding = componentModel.get('padding');\n  var viewportSize = {\n    width: api.getWidth(),\n    height: api.getHeight()\n  };\n  var rect = getLayoutRect(boxLayoutParams, viewportSize, padding);\n  layoutBox(componentModel.get('orient'), group, componentModel.get('itemGap'), rect.width, rect.height);\n  positionElement(group, boxLayoutParams, viewportSize, padding);\n}\n\nfunction makeBackground(rect, componentModel) {\n  var padding = formatUtil.normalizeCssArray(componentModel.get('padding'));\n  var style = componentModel.getItemStyle(['color', 'opacity']);\n  style.fill = componentModel.get('backgroundColor');\n  var rect = new graphic.Rect({\n    shape: {\n      x: rect.x - padding[3],\n      y: rect.y - padding[0],\n      width: rect.width + padding[1] + padding[3],\n      height: rect.height + padding[0] + padding[2],\n      r: componentModel.get('borderRadius')\n    },\n    style: style,\n    silent: true,\n    z2: -1\n  }); // FIXME\n  // `subPixelOptimizeRect` may bring some gap between edge of viewpart\n  // and background rect when setting like `left: 0`, `top: 0`.\n  // graphic.subPixelOptimizeRect(rect);\n\n  return rect;\n}\n\nexports.layout = layout;\nexports.makeBackground = makeBackground;","require(\"../coord/polar/polarCreator\");\n\nrequire(\"./axis/RadiusAxisView\");","var View = require(\"../../coord/View\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar bbox = require(\"zrender/lib/core/bbox\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME Where to create the simple view coordinate system\nfunction getViewRect(seriesModel, api, aspect) {\n  var option = seriesModel.getBoxLayoutParams();\n  option.aspect = aspect;\n  return getLayoutRect(option, {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction _default(ecModel, api) {\n  var viewList = [];\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var coordSysType = seriesModel.get('coordinateSystem');\n\n    if (!coordSysType || coordSysType === 'view') {\n      var data = seriesModel.getData();\n      var positions = data.mapArray(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        return [+itemModel.get('x'), +itemModel.get('y')];\n      });\n      var min = [];\n      var max = [];\n      bbox.fromPoints(positions, min, max); // If width or height is 0\n\n      if (max[0] - min[0] === 0) {\n        max[0] += 1;\n        min[0] -= 1;\n      }\n\n      if (max[1] - min[1] === 0) {\n        max[1] += 1;\n        min[1] -= 1;\n      }\n\n      var aspect = (max[0] - min[0]) / (max[1] - min[1]); // FIXME If get view rect after data processed?\n\n      var viewRect = getViewRect(seriesModel, api, aspect); // Position may be NaN, use view rect instead\n\n      if (isNaN(aspect)) {\n        min = [viewRect.x, viewRect.y];\n        max = [viewRect.x + viewRect.width, viewRect.y + viewRect.height];\n      }\n\n      var bbWidth = max[0] - min[0];\n      var bbHeight = max[1] - min[1];\n      var viewWidth = viewRect.width;\n      var viewHeight = viewRect.height;\n      var viewCoordSys = seriesModel.coordinateSystem = new View();\n      viewCoordSys.zoomLimit = seriesModel.get('scaleLimit');\n      viewCoordSys.setBoundingRect(min[0], min[1], bbWidth, bbHeight);\n      viewCoordSys.setViewRect(viewRect.x, viewRect.y, viewWidth, viewHeight); // Update roam info\n\n      viewCoordSys.setCenter(seriesModel.get('center'));\n      viewCoordSys.setZoom(seriesModel.get('zoom'));\n      viewList.push(viewCoordSys);\n    }\n  });\n  return viewList;\n}\n\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar graphicUtil = require(\"../util/graphic\");\n\nvar layoutUtil = require(\"../util/layout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// -------------\n// Preprocessor\n// -------------\necharts.registerPreprocessor(function (option) {\n  var graphicOption = option.graphic; // Convert\n  // {graphic: [{left: 10, type: 'circle'}, ...]}\n  // or\n  // {graphic: {left: 10, type: 'circle'}}\n  // to\n  // {graphic: [{elements: [{left: 10, type: 'circle'}, ...]}]}\n\n  if (zrUtil.isArray(graphicOption)) {\n    if (!graphicOption[0] || !graphicOption[0].elements) {\n      option.graphic = [{\n        elements: graphicOption\n      }];\n    } else {\n      // Only one graphic instance can be instantiated. (We dont\n      // want that too many views are created in echarts._viewMap)\n      option.graphic = [option.graphic[0]];\n    }\n  } else if (graphicOption && !graphicOption.elements) {\n    option.graphic = [{\n      elements: [graphicOption]\n    }];\n  }\n}); // ------\n// Model\n// ------\n\nvar GraphicModel = echarts.extendComponentModel({\n  type: 'graphic',\n  defaultOption: {\n    // Extra properties for each elements:\n    //\n    // left/right/top/bottom: (like 12, '22%', 'center', default undefined)\n    //      If left/rigth is set, shape.x/shape.cx/position will not be used.\n    //      If top/bottom is set, shape.y/shape.cy/position will not be used.\n    //      This mechanism is useful when you want to position a group/element\n    //      against the right side or the center of this container.\n    //\n    // width/height: (can only be pixel value, default 0)\n    //      Only be used to specify contianer(group) size, if needed. And\n    //      can not be percentage value (like '33%'). See the reason in the\n    //      layout algorithm below.\n    //\n    // bounding: (enum: 'all' (default) | 'raw')\n    //      Specify how to calculate boundingRect when locating.\n    //      'all': Get uioned and transformed boundingRect\n    //          from both itself and its descendants.\n    //          This mode simplies confining a group of elements in the bounding\n    //          of their ancester container (e.g., using 'right: 0').\n    //      'raw': Only use the boundingRect of itself and before transformed.\n    //          This mode is similar to css behavior, which is useful when you\n    //          want an element to be able to overflow its container. (Consider\n    //          a rotated circle needs to be located in a corner.)\n    // Note: elements is always behind its ancestors in this elements array.\n    elements: [],\n    parentId: null\n  },\n\n  /**\n   * Save el options for the sake of the performance (only update modified graphics).\n   * The order is the same as those in option. (ancesters -> descendants)\n   *\n   * @private\n   * @type {Array.<Object>}\n   */\n  _elOptionsToUpdate: null,\n\n  /**\n   * @override\n   */\n  mergeOption: function (option) {\n    // Prevent default merge to elements\n    var elements = this.option.elements;\n    this.option.elements = null;\n    GraphicModel.superApply(this, 'mergeOption', arguments);\n    this.option.elements = elements;\n  },\n\n  /**\n   * @override\n   */\n  optionUpdated: function (newOption, isInit) {\n    var thisOption = this.option;\n    var newList = (isInit ? thisOption : newOption).elements;\n    var existList = thisOption.elements = isInit ? [] : thisOption.elements;\n    var flattenedList = [];\n\n    this._flatten(newList, flattenedList);\n\n    var mappingResult = modelUtil.mappingToExists(existList, flattenedList);\n    modelUtil.makeIdAndName(mappingResult); // Clear elOptionsToUpdate\n\n    var elOptionsToUpdate = this._elOptionsToUpdate = [];\n    zrUtil.each(mappingResult, function (resultItem, index) {\n      var newElOption = resultItem.option;\n\n      if (!newElOption) {\n        return;\n      }\n\n      elOptionsToUpdate.push(newElOption);\n      setKeyInfoToNewElOption(resultItem, newElOption);\n      mergeNewElOptionToExist(existList, index, newElOption);\n      setLayoutInfoToExist(existList[index], newElOption);\n    }, this); // Clean\n\n    for (var i = existList.length - 1; i >= 0; i--) {\n      if (existList[i] == null) {\n        existList.splice(i, 1);\n      } else {\n        // $action should be volatile, otherwise option gotten from\n        // `getOption` will contain unexpected $action.\n        delete existList[i].$action;\n      }\n    }\n  },\n\n  /**\n   * Convert\n   * [{\n   *  type: 'group',\n   *  id: 'xx',\n   *  children: [{type: 'circle'}, {type: 'polygon'}]\n   * }]\n   * to\n   * [\n   *  {type: 'group', id: 'xx'},\n   *  {type: 'circle', parentId: 'xx'},\n   *  {type: 'polygon', parentId: 'xx'}\n   * ]\n   *\n   * @private\n   * @param {Array.<Object>} optionList option list\n   * @param {Array.<Object>} result result of flatten\n   * @param {Object} parentOption parent option\n   */\n  _flatten: function (optionList, result, parentOption) {\n    zrUtil.each(optionList, function (option) {\n      if (!option) {\n        return;\n      }\n\n      if (parentOption) {\n        option.parentOption = parentOption;\n      }\n\n      result.push(option);\n      var children = option.children;\n\n      if (option.type === 'group' && children) {\n        this._flatten(children, result, option);\n      } // Deleting for JSON output, and for not affecting group creation.\n\n\n      delete option.children;\n    }, this);\n  },\n  // FIXME\n  // Pass to view using payload? setOption has a payload?\n  useElOptionsToUpdate: function () {\n    var els = this._elOptionsToUpdate; // Clear to avoid render duplicately when zooming.\n\n    this._elOptionsToUpdate = null;\n    return els;\n  }\n}); // -----\n// View\n// -----\n\necharts.extendComponentView({\n  type: 'graphic',\n\n  /**\n   * @override\n   */\n  init: function (ecModel, api) {\n    /**\n     * @private\n     * @type {module:zrender/core/util.HashMap}\n     */\n    this._elMap = zrUtil.createHashMap();\n    /**\n     * @private\n     * @type {module:echarts/graphic/GraphicModel}\n     */\n\n    this._lastGraphicModel;\n  },\n\n  /**\n   * @override\n   */\n  render: function (graphicModel, ecModel, api) {\n    // Having leveraged between use cases and algorithm complexity, a very\n    // simple layout mechanism is used:\n    // The size(width/height) can be determined by itself or its parent (not\n    // implemented yet), but can not by its children. (Top-down travel)\n    // The location(x/y) can be determined by the bounding rect of itself\n    // (can including its descendants or not) and the size of its parent.\n    // (Bottom-up travel)\n    // When `chart.clear()` or `chart.setOption({...}, true)` with the same id,\n    // view will be reused.\n    if (graphicModel !== this._lastGraphicModel) {\n      this._clear();\n    }\n\n    this._lastGraphicModel = graphicModel;\n\n    this._updateElements(graphicModel, api);\n\n    this._relocate(graphicModel, api);\n  },\n\n  /**\n   * Update graphic elements.\n   *\n   * @private\n   * @param {Object} graphicModel graphic model\n   * @param {module:echarts/ExtensionAPI} api extension API\n   */\n  _updateElements: function (graphicModel, api) {\n    var elOptionsToUpdate = graphicModel.useElOptionsToUpdate();\n\n    if (!elOptionsToUpdate) {\n      return;\n    }\n\n    var elMap = this._elMap;\n    var rootGroup = this.group; // Top-down tranverse to assign graphic settings to each elements.\n\n    zrUtil.each(elOptionsToUpdate, function (elOption) {\n      var $action = elOption.$action;\n      var id = elOption.id;\n      var existEl = elMap.get(id);\n      var parentId = elOption.parentId;\n      var targetElParent = parentId != null ? elMap.get(parentId) : rootGroup;\n\n      if (elOption.type === 'text') {\n        var elOptionStyle = elOption.style; // In top/bottom mode, textVerticalAlign should not be used, which cause\n        // inaccurately locating.\n\n        if (elOption.hv && elOption.hv[1]) {\n          elOptionStyle.textVerticalAlign = elOptionStyle.textBaseline = null;\n        } // Compatible with previous setting: both support fill and textFill,\n        // stroke and textStroke.\n\n\n        !elOptionStyle.hasOwnProperty('textFill') && elOptionStyle.fill && (elOptionStyle.textFill = elOptionStyle.fill);\n        !elOptionStyle.hasOwnProperty('textStroke') && elOptionStyle.stroke && (elOptionStyle.textStroke = elOptionStyle.stroke);\n      } // Remove unnecessary props to avoid potential problems.\n\n\n      var elOptionCleaned = getCleanedElOption(elOption); // For simple, do not support parent change, otherwise reorder is needed.\n\n      if (!$action || $action === 'merge') {\n        existEl ? existEl.attr(elOptionCleaned) : createEl(id, targetElParent, elOptionCleaned, elMap);\n      } else if ($action === 'replace') {\n        removeEl(existEl, elMap);\n        createEl(id, targetElParent, elOptionCleaned, elMap);\n      } else if ($action === 'remove') {\n        removeEl(existEl, elMap);\n      }\n\n      var el = elMap.get(id);\n\n      if (el) {\n        el.__ecGraphicWidth = elOption.width;\n        el.__ecGraphicHeight = elOption.height;\n      }\n    });\n  },\n\n  /**\n   * Locate graphic elements.\n   *\n   * @private\n   * @param {Object} graphicModel graphic model\n   * @param {module:echarts/ExtensionAPI} api extension API\n   */\n  _relocate: function (graphicModel, api) {\n    var elOptions = graphicModel.option.elements;\n    var rootGroup = this.group;\n    var elMap = this._elMap; // Bottom-up tranvese all elements (consider ec resize) to locate elements.\n\n    for (var i = elOptions.length - 1; i >= 0; i--) {\n      var elOption = elOptions[i];\n      var el = elMap.get(elOption.id);\n\n      if (!el) {\n        continue;\n      }\n\n      var parentEl = el.parent;\n      var containerInfo = parentEl === rootGroup ? {\n        width: api.getWidth(),\n        height: api.getHeight()\n      } : {\n        // Like 'position:absolut' in css, default 0.\n        width: parentEl.__ecGraphicWidth || 0,\n        height: parentEl.__ecGraphicHeight || 0\n      };\n      layoutUtil.positionElement(el, elOption, containerInfo, null, {\n        hv: elOption.hv,\n        boundingMode: elOption.bounding\n      });\n    }\n  },\n\n  /**\n   * Clear all elements.\n   *\n   * @private\n   */\n  _clear: function () {\n    var elMap = this._elMap;\n    elMap.each(function (el) {\n      removeEl(el, elMap);\n    });\n    this._elMap = zrUtil.createHashMap();\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._clear();\n  }\n});\n\nfunction createEl(id, targetElParent, elOption, elMap) {\n  var graphicType = elOption.type;\n  var Clz = graphicUtil[graphicType.charAt(0).toUpperCase() + graphicType.slice(1)];\n  var el = new Clz(elOption);\n  targetElParent.add(el);\n  elMap.set(id, el);\n  el.__ecGraphicId = id;\n}\n\nfunction removeEl(existEl, elMap) {\n  var existElParent = existEl && existEl.parent;\n\n  if (existElParent) {\n    existEl.type === 'group' && existEl.traverse(function (el) {\n      removeEl(el, elMap);\n    });\n    elMap.removeKey(existEl.__ecGraphicId);\n    existElParent.remove(existEl);\n  }\n} // Remove unnecessary props to avoid potential problems.\n\n\nfunction getCleanedElOption(elOption) {\n  elOption = zrUtil.extend({}, elOption);\n  zrUtil.each(['id', 'parentId', '$action', 'hv', 'bounding'].concat(layoutUtil.LOCATION_PARAMS), function (name) {\n    delete elOption[name];\n  });\n  return elOption;\n}\n\nfunction isSetLoc(obj, props) {\n  var isSet;\n  zrUtil.each(props, function (prop) {\n    obj[prop] != null && obj[prop] !== 'auto' && (isSet = true);\n  });\n  return isSet;\n}\n\nfunction setKeyInfoToNewElOption(resultItem, newElOption) {\n  var existElOption = resultItem.exist; // Set id and type after id assigned.\n\n  newElOption.id = resultItem.keyInfo.id;\n  !newElOption.type && existElOption && (newElOption.type = existElOption.type); // Set parent id if not specified\n\n  if (newElOption.parentId == null) {\n    var newElParentOption = newElOption.parentOption;\n\n    if (newElParentOption) {\n      newElOption.parentId = newElParentOption.id;\n    } else if (existElOption) {\n      newElOption.parentId = existElOption.parentId;\n    }\n  } // Clear\n\n\n  newElOption.parentOption = null;\n}\n\nfunction mergeNewElOptionToExist(existList, index, newElOption) {\n  // Update existing options, for `getOption` feature.\n  var newElOptCopy = zrUtil.extend({}, newElOption);\n  var existElOption = existList[index];\n  var $action = newElOption.$action || 'merge';\n\n  if ($action === 'merge') {\n    if (existElOption) {\n      // We can ensure that newElOptCopy and existElOption are not\n      // the same object, so `merge` will not change newElOptCopy.\n      zrUtil.merge(existElOption, newElOptCopy, true); // Rigid body, use ignoreSize.\n\n      layoutUtil.mergeLayoutParam(existElOption, newElOptCopy, {\n        ignoreSize: true\n      }); // Will be used in render.\n\n      layoutUtil.copyLayoutParams(newElOption, existElOption);\n    } else {\n      existList[index] = newElOptCopy;\n    }\n  } else if ($action === 'replace') {\n    existList[index] = newElOptCopy;\n  } else if ($action === 'remove') {\n    // null will be cleaned later.\n    existElOption && (existList[index] = null);\n  }\n}\n\nfunction setLayoutInfoToExist(existItem, newElOption) {\n  if (!existItem) {\n    return;\n  }\n\n  existItem.hv = newElOption.hv = [// Rigid body, dont care `width`.\n  isSetLoc(newElOption, ['left', 'right']), // Rigid body, dont care `height`.\n  isSetLoc(newElOption, ['top', 'bottom'])]; // Give default group size. Otherwise layout error may occur.\n\n  if (existItem.type === 'group') {\n    existItem.width == null && (existItem.width = newElOption.width = 0);\n    existItem.height == null && (existItem.height = newElOption.height = 0);\n  }\n}","var graphic = require(\"../../util/graphic\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Line path for bezier and straight line draw\n */\nvar straightLineProto = graphic.Line.prototype;\nvar bezierCurveProto = graphic.BezierCurve.prototype;\n\nfunction isLine(shape) {\n  return isNaN(+shape.cpx1) || isNaN(+shape.cpy1);\n}\n\nvar _default = graphic.extendShape({\n  type: 'ec-line',\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    percent: 1,\n    cpx1: null,\n    cpy1: null\n  },\n  buildPath: function (ctx, shape) {\n    (isLine(shape) ? straightLineProto : bezierCurveProto).buildPath(ctx, shape);\n  },\n  pointAt: function (t) {\n    return isLine(this.shape) ? straightLineProto.pointAt.call(this, t) : bezierCurveProto.pointAt.call(this, t);\n  },\n  tangentAt: function (t) {\n    var shape = this.shape;\n    var p = isLine(shape) ? [shape.x2 - shape.x1, shape.y2 - shape.y1] : bezierCurveProto.tangentAt.call(this, t);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(seriesType, defaultSymbolType, legendSymbol) {\n  // Encoding visual for all series include which is filtered for legend drawing\n  return {\n    seriesType: seriesType,\n    // For legend.\n    performRawSeries: true,\n    reset: function (seriesModel, ecModel, api) {\n      var data = seriesModel.getData();\n      var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n      var symbolSize = seriesModel.get('symbolSize');\n      var keepAspect = seriesModel.get('symbolKeepAspect');\n      data.setVisual({\n        legendSymbol: legendSymbol || symbolType,\n        symbol: symbolType,\n        symbolSize: symbolSize,\n        symbolKeepAspect: keepAspect\n      }); // Only visible series has each data be visual encoded\n\n      if (ecModel.isSeriesFiltered(seriesModel)) {\n        return;\n      }\n\n      var hasCallback = typeof symbolSize === 'function';\n\n      function dataEach(data, idx) {\n        if (typeof symbolSize === 'function') {\n          var rawValue = seriesModel.getRawValue(idx); // FIXME\n\n          var params = seriesModel.getDataParams(idx);\n          data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n        }\n\n        if (data.hasItemOption) {\n          var itemModel = data.getItemModel(idx);\n          var itemSymbolType = itemModel.getShallow('symbol', true);\n          var itemSymbolSize = itemModel.getShallow('symbolSize', true);\n          var itemSymbolKeepAspect = itemModel.getShallow('symbolKeepAspect', true); // If has item symbol\n\n          if (itemSymbolType != null) {\n            data.setItemVisual(idx, 'symbol', itemSymbolType);\n          }\n\n          if (itemSymbolSize != null) {\n            // PENDING Transform symbolSize ?\n            data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n          }\n\n          if (itemSymbolKeepAspect != null) {\n            data.setItemVisual(idx, 'symbolKeepAspect', itemSymbolKeepAspect);\n          }\n        }\n      }\n\n      return {\n        dataEach: data.hasItemOption || hasCallback ? dataEach : null\n      };\n    }\n  };\n}\n\nmodule.exports = _default;","var echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BrushController = require(\"../../helper/BrushController\");\n\nvar BrushTargetManager = require(\"../../helper/BrushTargetManager\");\n\nvar history = require(\"../../dataZoom/history\");\n\nvar sliderMove = require(\"../../helper/sliderMove\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nrequire(\"../../dataZoomSelect\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Use dataZoomSelect\nvar dataZoomLang = lang.toolbox.dataZoom;\nvar each = zrUtil.each; // Spectial component id start with \\0ec\\0, see echarts/model/Global.js~hasInnerId\n\nvar DATA_ZOOM_ID_BASE = '\\0_ec_\\0toolbox-dataZoom_';\n\nfunction DataZoom(model, ecModel, api) {\n  /**\n   * @private\n   * @type {module:echarts/component/helper/BrushController}\n   */\n  (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this)).mount();\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._isZoomActive;\n}\n\nDataZoom.defaultOption = {\n  show: true,\n  // Icon group\n  icon: {\n    zoom: 'M0,13.5h26.9 M13.5,26.9V0 M32.1,13.5H58V58H13.5 V32.1',\n    back: 'M22,1.4L9.9,13.5l12.3,12.3 M10.3,13.5H54.9v44.6 H10.3v-26'\n  },\n  // `zoom`, `back`\n  title: zrUtil.clone(dataZoomLang.title)\n};\nvar proto = DataZoom.prototype;\n\nproto.render = function (featureModel, ecModel, api, payload) {\n  this.model = featureModel;\n  this.ecModel = ecModel;\n  this.api = api;\n  updateZoomBtnStatus(featureModel, ecModel, this, payload, api);\n  updateBackBtnStatus(featureModel, ecModel);\n};\n\nproto.onclick = function (ecModel, api, type) {\n  handlers[type].call(this);\n};\n\nproto.remove = function (ecModel, api) {\n  this._brushController.unmount();\n};\n\nproto.dispose = function (ecModel, api) {\n  this._brushController.dispose();\n};\n/**\n * @private\n */\n\n\nvar handlers = {\n  zoom: function () {\n    var nextActive = !this._isZoomActive;\n    this.api.dispatchAction({\n      type: 'takeGlobalCursor',\n      key: 'dataZoomSelect',\n      dataZoomSelectActive: nextActive\n    });\n  },\n  back: function () {\n    this._dispatchZoomAction(history.pop(this.ecModel));\n  }\n};\n/**\n * @private\n */\n\nproto._onBrush = function (areas, opt) {\n  if (!opt.isEnd || !areas.length) {\n    return;\n  }\n\n  var snapshot = {};\n  var ecModel = this.ecModel;\n\n  this._brushController.updateCovers([]); // remove cover\n\n\n  var brushTargetManager = new BrushTargetManager(retrieveAxisSetting(this.model.option), ecModel, {\n    include: ['grid']\n  });\n  brushTargetManager.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n    if (coordSys.type !== 'cartesian2d') {\n      return;\n    }\n\n    var brushType = area.brushType;\n\n    if (brushType === 'rect') {\n      setBatch('x', coordSys, coordRange[0]);\n      setBatch('y', coordSys, coordRange[1]);\n    } else {\n      setBatch({\n        lineX: 'x',\n        lineY: 'y'\n      }[brushType], coordSys, coordRange);\n    }\n  });\n  history.push(ecModel, snapshot);\n\n  this._dispatchZoomAction(snapshot);\n\n  function setBatch(dimName, coordSys, minMax) {\n    var axis = coordSys.getAxis(dimName);\n    var axisModel = axis.model;\n    var dataZoomModel = findDataZoom(dimName, axisModel, ecModel); // Restrict range.\n\n    var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy(axisModel).getMinMaxSpan();\n\n    if (minMaxSpan.minValueSpan != null || minMaxSpan.maxValueSpan != null) {\n      minMax = sliderMove(0, minMax.slice(), axis.scale.getExtent(), 0, minMaxSpan.minValueSpan, minMaxSpan.maxValueSpan);\n    }\n\n    dataZoomModel && (snapshot[dataZoomModel.id] = {\n      dataZoomId: dataZoomModel.id,\n      startValue: minMax[0],\n      endValue: minMax[1]\n    });\n  }\n\n  function findDataZoom(dimName, axisModel, ecModel) {\n    var found;\n    ecModel.eachComponent({\n      mainType: 'dataZoom',\n      subType: 'select'\n    }, function (dzModel) {\n      var has = dzModel.getAxisModel(dimName, axisModel.componentIndex);\n      has && (found = dzModel);\n    });\n    return found;\n  }\n};\n/**\n * @private\n */\n\n\nproto._dispatchZoomAction = function (snapshot) {\n  var batch = []; // Convert from hash map to array.\n\n  each(snapshot, function (batchItem, dataZoomId) {\n    batch.push(zrUtil.clone(batchItem));\n  });\n  batch.length && this.api.dispatchAction({\n    type: 'dataZoom',\n    from: this.uid,\n    batch: batch\n  });\n};\n\nfunction retrieveAxisSetting(option) {\n  var setting = {}; // Compatible with previous setting: null => all axis, false => no axis.\n\n  zrUtil.each(['xAxisIndex', 'yAxisIndex'], function (name) {\n    setting[name] = option[name];\n    setting[name] == null && (setting[name] = 'all');\n    (setting[name] === false || setting[name] === 'none') && (setting[name] = []);\n  });\n  return setting;\n}\n\nfunction updateBackBtnStatus(featureModel, ecModel) {\n  featureModel.setIconStatus('back', history.count(ecModel) > 1 ? 'emphasis' : 'normal');\n}\n\nfunction updateZoomBtnStatus(featureModel, ecModel, view, payload, api) {\n  var zoomActive = view._isZoomActive;\n\n  if (payload && payload.type === 'takeGlobalCursor') {\n    zoomActive = payload.key === 'dataZoomSelect' ? payload.dataZoomSelectActive : false;\n  }\n\n  view._isZoomActive = zoomActive;\n  featureModel.setIconStatus('zoom', zoomActive ? 'emphasis' : 'normal');\n  var brushTargetManager = new BrushTargetManager(retrieveAxisSetting(featureModel.option), ecModel, {\n    include: ['grid']\n  });\n\n  view._brushController.setPanels(brushTargetManager.makePanelOpts(api, function (targetInfo) {\n    return targetInfo.xAxisDeclared && !targetInfo.yAxisDeclared ? 'lineX' : !targetInfo.xAxisDeclared && targetInfo.yAxisDeclared ? 'lineY' : 'rect';\n  })).enableBrush(zoomActive ? {\n    brushType: 'auto',\n    brushStyle: {\n      // FIXME user customized?\n      lineWidth: 0,\n      fill: 'rgba(0,0,0,0.2)'\n    }\n  } : false);\n}\n\nfeatureManager.register('dataZoom', DataZoom); // Create special dataZoom option for select\n// FIXME consider the case of merge option, where axes options are not exists.\n\necharts.registerPreprocessor(function (option) {\n  if (!option) {\n    return;\n  }\n\n  var dataZoomOpts = option.dataZoom || (option.dataZoom = []);\n\n  if (!zrUtil.isArray(dataZoomOpts)) {\n    option.dataZoom = dataZoomOpts = [dataZoomOpts];\n  }\n\n  var toolboxOpt = option.toolbox;\n\n  if (toolboxOpt) {\n    // Assume there is only one toolbox\n    if (zrUtil.isArray(toolboxOpt)) {\n      toolboxOpt = toolboxOpt[0];\n    }\n\n    if (toolboxOpt && toolboxOpt.feature) {\n      var dataZoomOpt = toolboxOpt.feature.dataZoom; // FIXME: If add dataZoom when setOption in merge mode,\n      // no axis info to be added. See `test/dataZoom-extreme.html`\n\n      addForAxis('xAxis', dataZoomOpt);\n      addForAxis('yAxis', dataZoomOpt);\n    }\n  }\n\n  function addForAxis(axisName, dataZoomOpt) {\n    if (!dataZoomOpt) {\n      return;\n    } // Try not to modify model, because it is not merged yet.\n\n\n    var axisIndicesName = axisName + 'Index';\n    var givenAxisIndices = dataZoomOpt[axisIndicesName];\n\n    if (givenAxisIndices != null && givenAxisIndices != 'all' && !zrUtil.isArray(givenAxisIndices)) {\n      givenAxisIndices = givenAxisIndices === false || givenAxisIndices === 'none' ? [] : [givenAxisIndices];\n    }\n\n    forEachComponent(axisName, function (axisOpt, axisIndex) {\n      if (givenAxisIndices != null && givenAxisIndices != 'all' && zrUtil.indexOf(givenAxisIndices, axisIndex) === -1) {\n        return;\n      }\n\n      var newOpt = {\n        type: 'select',\n        $fromToolbox: true,\n        // Id for merge mapping.\n        id: DATA_ZOOM_ID_BASE + axisName + axisIndex\n      }; // FIXME\n      // Only support one axis now.\n\n      newOpt[axisIndicesName] = axisIndex;\n      dataZoomOpts.push(newOpt);\n    });\n  }\n\n  function forEachComponent(mainType, cb) {\n    var opts = option[mainType];\n\n    if (!zrUtil.isArray(opts)) {\n      opts = opts ? [opts] : [];\n    }\n\n    each(opts, cb);\n  }\n});\nvar _default = DataZoom;\nmodule.exports = _default;","var SHADOW_PROPS = {\n  'shadowBlur': 1,\n  'shadowOffsetX': 1,\n  'shadowOffsetY': 1,\n  'textShadowBlur': 1,\n  'textShadowOffsetX': 1,\n  'textShadowOffsetY': 1,\n  'textBoxShadowBlur': 1,\n  'textBoxShadowOffsetX': 1,\n  'textBoxShadowOffsetY': 1\n};\n\nfunction _default(ctx, propName, value) {\n  if (SHADOW_PROPS.hasOwnProperty(propName)) {\n    return value *= ctx.dpr;\n  }\n\n  return value;\n}\n\nmodule.exports = _default;","var ComponentView = require(\"../../view/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = ComponentView.extend({\n  type: 'dataZoom',\n  render: function (dataZoomModel, ecModel, api, payload) {\n    this.dataZoomModel = dataZoomModel;\n    this.ecModel = ecModel;\n    this.api = api;\n  },\n\n  /**\n   * Find the first target coordinate system.\n   *\n   * @protected\n   * @return {Object} {\n   *                   grid: [\n   *                       {model: coord0, axisModels: [axis1, axis3], coordIndex: 1},\n   *                       {model: coord1, axisModels: [axis0, axis2], coordIndex: 0},\n   *                       ...\n   *                   ],  // cartesians must not be null/undefined.\n   *                   polar: [\n   *                       {model: coord0, axisModels: [axis4], coordIndex: 0},\n   *                       ...\n   *                   ],  // polars must not be null/undefined.\n   *                   singleAxis: [\n   *                       {model: coord0, axisModels: [], coordIndex: 0}\n   *                   ]\n   */\n  getTargetCoordInfo: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var ecModel = this.ecModel;\n    var coordSysLists = {};\n    dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n      var axisModel = ecModel.getComponent(dimNames.axis, axisIndex);\n\n      if (axisModel) {\n        var coordModel = axisModel.getCoordSysModel();\n        coordModel && save(coordModel, axisModel, coordSysLists[coordModel.mainType] || (coordSysLists[coordModel.mainType] = []), coordModel.componentIndex);\n      }\n    }, this);\n\n    function save(coordModel, axisModel, store, coordIndex) {\n      var item;\n\n      for (var i = 0; i < store.length; i++) {\n        if (store[i].model === coordModel) {\n          item = store[i];\n          break;\n        }\n      }\n\n      if (!item) {\n        store.push(item = {\n          model: coordModel,\n          axisModels: [],\n          coordIndex: coordIndex\n        });\n      }\n\n      item.axisModels.push(axisModel);\n    }\n\n    return coordSysLists;\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./marker/MarkAreaModel\");\n\nrequire(\"./marker/MarkAreaView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerPreprocessor(function (opt) {\n  // Make sure markArea component is enabled\n  opt.markArea = opt.markArea || {};\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar symbolUtil = require(\"../../util/symbol\");\n\nvar LinePath = require(\"./LinePath\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _number = require(\"../../util/number\");\n\nvar round = _number.round;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/Line\n */\nvar SYMBOL_CATEGORIES = ['fromSymbol', 'toSymbol'];\n\nfunction makeSymbolTypeKey(symbolCategory) {\n  return '_' + symbolCategory + 'Type';\n}\n/**\n * @inner\n */\n\n\nfunction createSymbol(name, lineData, idx) {\n  var color = lineData.getItemVisual(idx, 'color');\n  var symbolType = lineData.getItemVisual(idx, name);\n  var symbolSize = lineData.getItemVisual(idx, name + 'Size');\n\n  if (!symbolType || symbolType === 'none') {\n    return;\n  }\n\n  if (!zrUtil.isArray(symbolSize)) {\n    symbolSize = [symbolSize, symbolSize];\n  }\n\n  var symbolPath = symbolUtil.createSymbol(symbolType, -symbolSize[0] / 2, -symbolSize[1] / 2, symbolSize[0], symbolSize[1], color);\n  symbolPath.name = name;\n  return symbolPath;\n}\n\nfunction createLine(points) {\n  var line = new LinePath({\n    name: 'line'\n  });\n  setLinePoints(line.shape, points);\n  return line;\n}\n\nfunction setLinePoints(targetShape, points) {\n  var p1 = points[0];\n  var p2 = points[1];\n  var cp1 = points[2];\n  targetShape.x1 = p1[0];\n  targetShape.y1 = p1[1];\n  targetShape.x2 = p2[0];\n  targetShape.y2 = p2[1];\n  targetShape.percent = 1;\n\n  if (cp1) {\n    targetShape.cpx1 = cp1[0];\n    targetShape.cpy1 = cp1[1];\n  } else {\n    targetShape.cpx1 = NaN;\n    targetShape.cpy1 = NaN;\n  }\n}\n\nfunction updateSymbolAndLabelBeforeLineUpdate() {\n  var lineGroup = this;\n  var symbolFrom = lineGroup.childOfName('fromSymbol');\n  var symbolTo = lineGroup.childOfName('toSymbol');\n  var label = lineGroup.childOfName('label'); // Quick reject\n\n  if (!symbolFrom && !symbolTo && label.ignore) {\n    return;\n  }\n\n  var invScale = 1;\n  var parentNode = this.parent;\n\n  while (parentNode) {\n    if (parentNode.scale) {\n      invScale /= parentNode.scale[0];\n    }\n\n    parentNode = parentNode.parent;\n  }\n\n  var line = lineGroup.childOfName('line'); // If line not changed\n  // FIXME Parent scale changed\n\n  if (!this.__dirty && !line.__dirty) {\n    return;\n  }\n\n  var percent = line.shape.percent;\n  var fromPos = line.pointAt(0);\n  var toPos = line.pointAt(percent);\n  var d = vector.sub([], toPos, fromPos);\n  vector.normalize(d, d);\n\n  if (symbolFrom) {\n    symbolFrom.attr('position', fromPos);\n    var tangent = line.tangentAt(0);\n    symbolFrom.attr('rotation', Math.PI / 2 - Math.atan2(tangent[1], tangent[0]));\n    symbolFrom.attr('scale', [invScale * percent, invScale * percent]);\n  }\n\n  if (symbolTo) {\n    symbolTo.attr('position', toPos);\n    var tangent = line.tangentAt(1);\n    symbolTo.attr('rotation', -Math.PI / 2 - Math.atan2(tangent[1], tangent[0]));\n    symbolTo.attr('scale', [invScale * percent, invScale * percent]);\n  }\n\n  if (!label.ignore) {\n    label.attr('position', toPos);\n    var textPosition;\n    var textAlign;\n    var textVerticalAlign;\n    var distance = 5 * invScale; // End\n\n    if (label.__position === 'end') {\n      textPosition = [d[0] * distance + toPos[0], d[1] * distance + toPos[1]];\n      textAlign = d[0] > 0.8 ? 'left' : d[0] < -0.8 ? 'right' : 'center';\n      textVerticalAlign = d[1] > 0.8 ? 'top' : d[1] < -0.8 ? 'bottom' : 'middle';\n    } // Middle\n    else if (label.__position === 'middle') {\n        var halfPercent = percent / 2;\n        var tangent = line.tangentAt(halfPercent);\n        var n = [tangent[1], -tangent[0]];\n        var cp = line.pointAt(halfPercent);\n\n        if (n[1] > 0) {\n          n[0] = -n[0];\n          n[1] = -n[1];\n        }\n\n        textPosition = [cp[0] + n[0] * distance, cp[1] + n[1] * distance];\n        textAlign = 'center';\n        textVerticalAlign = 'bottom';\n        var rotation = -Math.atan2(tangent[1], tangent[0]);\n\n        if (toPos[0] < fromPos[0]) {\n          rotation = Math.PI + rotation;\n        }\n\n        label.attr('rotation', rotation);\n      } // Start\n      else {\n          textPosition = [-d[0] * distance + fromPos[0], -d[1] * distance + fromPos[1]];\n          textAlign = d[0] > 0.8 ? 'right' : d[0] < -0.8 ? 'left' : 'center';\n          textVerticalAlign = d[1] > 0.8 ? 'bottom' : d[1] < -0.8 ? 'top' : 'middle';\n        }\n\n    label.attr({\n      style: {\n        // Use the user specified text align and baseline first\n        textVerticalAlign: label.__verticalAlign || textVerticalAlign,\n        textAlign: label.__textAlign || textAlign\n      },\n      position: textPosition,\n      scale: [invScale, invScale]\n    });\n  }\n}\n/**\n * @constructor\n * @extends {module:zrender/graphic/Group}\n * @alias {module:echarts/chart/helper/Line}\n */\n\n\nfunction Line(lineData, idx, seriesScope) {\n  graphic.Group.call(this);\n\n  this._createLine(lineData, idx, seriesScope);\n}\n\nvar lineProto = Line.prototype; // Update symbol position and rotation\n\nlineProto.beforeUpdate = updateSymbolAndLabelBeforeLineUpdate;\n\nlineProto._createLine = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var linePoints = lineData.getItemLayout(idx);\n  var line = createLine(linePoints);\n  line.shape.percent = 0;\n  graphic.initProps(line, {\n    shape: {\n      percent: 1\n    }\n  }, seriesModel, idx);\n  this.add(line);\n  var label = new graphic.Text({\n    name: 'label'\n  });\n  this.add(label);\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbol = createSymbol(symbolCategory, lineData, idx); // symbols must added after line to make sure\n    // it will be updated after line#update.\n    // Or symbol position and rotation update in line#beforeUpdate will be one frame slow\n\n    this.add(symbol);\n    this[makeSymbolTypeKey(symbolCategory)] = lineData.getItemVisual(idx, symbolCategory);\n  }, this);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\nlineProto.updateData = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childOfName('line');\n  var linePoints = lineData.getItemLayout(idx);\n  var target = {\n    shape: {}\n  };\n  setLinePoints(target.shape, linePoints);\n  graphic.updateProps(line, target, seriesModel, idx);\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbolType = lineData.getItemVisual(idx, symbolCategory);\n    var key = makeSymbolTypeKey(symbolCategory); // Symbol changed\n\n    if (this[key] !== symbolType) {\n      this.remove(this.childOfName(symbolCategory));\n      var symbol = createSymbol(symbolCategory, lineData, idx);\n      this.add(symbol);\n    }\n\n    this[key] = symbolType;\n  }, this);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\nlineProto._updateCommonStl = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childOfName('line');\n  var lineStyle = seriesScope && seriesScope.lineStyle;\n  var hoverLineStyle = seriesScope && seriesScope.hoverLineStyle;\n  var labelModel = seriesScope && seriesScope.labelModel;\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel; // Optimization for large dataset\n\n  if (!seriesScope || lineData.hasItemOption) {\n    var itemModel = lineData.getItemModel(idx);\n    lineStyle = itemModel.getModel('lineStyle').getLineStyle();\n    hoverLineStyle = itemModel.getModel('emphasis.lineStyle').getLineStyle();\n    labelModel = itemModel.getModel('label');\n    hoverLabelModel = itemModel.getModel('emphasis.label');\n  }\n\n  var visualColor = lineData.getItemVisual(idx, 'color');\n  var visualOpacity = zrUtil.retrieve3(lineData.getItemVisual(idx, 'opacity'), lineStyle.opacity, 1);\n  line.useStyle(zrUtil.defaults({\n    strokeNoScale: true,\n    fill: 'none',\n    stroke: visualColor,\n    opacity: visualOpacity\n  }, lineStyle));\n  line.hoverStyle = hoverLineStyle; // Update symbol\n\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbol = this.childOfName(symbolCategory);\n\n    if (symbol) {\n      symbol.setColor(visualColor);\n      symbol.setStyle({\n        opacity: visualOpacity\n      });\n    }\n  }, this);\n  var showLabel = labelModel.getShallow('show');\n  var hoverShowLabel = hoverLabelModel.getShallow('show');\n  var label = this.childOfName('label');\n  var defaultLabelColor;\n  var baseText; // FIXME: the logic below probably should be merged to `graphic.setLabelStyle`.\n\n  if (showLabel || hoverShowLabel) {\n    defaultLabelColor = visualColor || '#000';\n    baseText = seriesModel.getFormattedLabel(idx, 'normal', lineData.dataType);\n\n    if (baseText == null) {\n      var rawVal = seriesModel.getRawValue(idx);\n      baseText = rawVal == null ? lineData.getName(idx) : isFinite(rawVal) ? round(rawVal) : rawVal;\n    }\n  }\n\n  var normalText = showLabel ? baseText : null;\n  var emphasisText = hoverShowLabel ? zrUtil.retrieve2(seriesModel.getFormattedLabel(idx, 'emphasis', lineData.dataType), baseText) : null;\n  var labelStyle = label.style; // Always set `textStyle` even if `normalStyle.text` is null, because default\n  // values have to be set on `normalStyle`.\n\n  if (normalText != null || emphasisText != null) {\n    graphic.setTextStyle(label.style, labelModel, {\n      text: normalText\n    }, {\n      autoColor: defaultLabelColor\n    });\n    label.__textAlign = labelStyle.textAlign;\n    label.__verticalAlign = labelStyle.textVerticalAlign; // 'start', 'middle', 'end'\n\n    label.__position = labelModel.get('position') || 'middle';\n  }\n\n  if (emphasisText != null) {\n    // Only these properties supported in this emphasis style here.\n    label.hoverStyle = {\n      text: emphasisText,\n      textFill: hoverLabelModel.getTextColor(true),\n      // For merging hover style to normal style, do not use\n      // `hoverLabelModel.getFont()` here.\n      fontStyle: hoverLabelModel.getShallow('fontStyle'),\n      fontWeight: hoverLabelModel.getShallow('fontWeight'),\n      fontSize: hoverLabelModel.getShallow('fontSize'),\n      fontFamily: hoverLabelModel.getShallow('fontFamily')\n    };\n  } else {\n    label.hoverStyle = {\n      text: null\n    };\n  }\n\n  label.ignore = !showLabel && !hoverShowLabel;\n  graphic.setHoverStyle(this);\n};\n\nlineProto.highlight = function () {\n  this.trigger('emphasis');\n};\n\nlineProto.downplay = function () {\n  this.trigger('normal');\n};\n\nlineProto.updateLayout = function (lineData, idx) {\n  this.setLinePoints(lineData.getItemLayout(idx));\n};\n\nlineProto.setLinePoints = function (points) {\n  var linePath = this.childOfName('line');\n  setLinePoints(linePath.shape, points);\n  linePath.dirty();\n};\n\nzrUtil.inherits(Line, graphic.Group);\nvar _default = Line;\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar filter = _util.filter;\nvar map = _util.map;\nvar isArray = _util.isArray;\nvar indexOf = _util.indexOf;\nvar isObject = _util.isObject;\nvar isString = _util.isString;\nvar createHashMap = _util.createHashMap;\nvar assert = _util.assert;\nvar clone = _util.clone;\nvar merge = _util.merge;\nvar extend = _util.extend;\nvar mixin = _util.mixin;\n\nvar modelUtil = require(\"../util/model\");\n\nvar Model = require(\"./Model\");\n\nvar ComponentModel = require(\"./Component\");\n\nvar globalDefault = require(\"./globalDefault\");\n\nvar colorPaletteMixin = require(\"./mixin/colorPalette\");\n\nvar _sourceHelper = require(\"../data/helper/sourceHelper\");\n\nvar resetSourceDefaulter = _sourceHelper.resetSourceDefaulter;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n/**\n * Caution: If the mechanism should be changed some day, these cases\n * should be considered:\n *\n * (1) In `merge option` mode, if using the same option to call `setOption`\n * many times, the result should be the same (try our best to ensure that).\n * (2) In `merge option` mode, if a component has no id/name specified, it\n * will be merged by index, and the result sequence of the components is\n * consistent to the original sequence.\n * (3) `reset` feature (in toolbox). Find detailed info in comments about\n * `mergeOption` in module:echarts/model/OptionManager.\n */\nvar OPTION_INNER_KEY = '\\0_ec_inner';\n/**\n * @alias module:echarts/model/Global\n *\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {Object} theme\n */\n\nvar GlobalModel = Model.extend({\n  init: function (option, parentModel, theme, optionManager) {\n    theme = theme || {};\n    this.option = null; // Mark as not initialized.\n\n    /**\n     * @type {module:echarts/model/Model}\n     * @private\n     */\n\n    this._theme = new Model(theme);\n    /**\n     * @type {module:echarts/model/OptionManager}\n     */\n\n    this._optionManager = optionManager;\n  },\n  setOption: function (option, optionPreprocessorFuncs) {\n    assert(!(OPTION_INNER_KEY in option), 'please use chart.getOption()');\n\n    this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n    this.resetOption(null);\n  },\n\n  /**\n   * @param {string} type null/undefined: reset all.\n   *                      'recreate': force recreate all.\n   *                      'timeline': only reset timeline option\n   *                      'media': only reset media query option\n   * @return {boolean} Whether option changed.\n   */\n  resetOption: function (type) {\n    var optionChanged = false;\n    var optionManager = this._optionManager;\n\n    if (!type || type === 'recreate') {\n      var baseOption = optionManager.mountOption(type === 'recreate');\n\n      if (!this.option || type === 'recreate') {\n        initBase.call(this, baseOption);\n      } else {\n        this.restoreData();\n        this.mergeOption(baseOption);\n      }\n\n      optionChanged = true;\n    }\n\n    if (type === 'timeline' || type === 'media') {\n      this.restoreData();\n    }\n\n    if (!type || type === 'recreate' || type === 'timeline') {\n      var timelineOption = optionManager.getTimelineOption(this);\n      timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n    }\n\n    if (!type || type === 'recreate' || type === 'media') {\n      var mediaOptions = optionManager.getMediaOption(this, this._api);\n\n      if (mediaOptions.length) {\n        each(mediaOptions, function (mediaOption) {\n          this.mergeOption(mediaOption, optionChanged = true);\n        }, this);\n      }\n    }\n\n    return optionChanged;\n  },\n\n  /**\n   * @protected\n   */\n  mergeOption: function (newOption) {\n    var option = this.option;\n    var componentsMap = this._componentsMap;\n    var newCptTypes = [];\n    resetSourceDefaulter(this); // If no component class, merge directly.\n    // For example: color, animaiton options, etc.\n\n    each(newOption, function (componentOption, mainType) {\n      if (componentOption == null) {\n        return;\n      }\n\n      if (!ComponentModel.hasClass(mainType)) {\n        // globalSettingTask.dirty();\n        option[mainType] = option[mainType] == null ? clone(componentOption) : merge(option[mainType], componentOption, true);\n      } else if (mainType) {\n        newCptTypes.push(mainType);\n      }\n    });\n    ComponentModel.topologicalTravel(newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this);\n\n    function visitComponent(mainType, dependencies) {\n      var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n      var mapResult = modelUtil.mappingToExists(componentsMap.get(mainType), newCptOptionList);\n      modelUtil.makeIdAndName(mapResult); // Set mainType and complete subType.\n\n      each(mapResult, function (item, index) {\n        var opt = item.option;\n\n        if (isObject(opt)) {\n          item.keyInfo.mainType = mainType;\n          item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n        }\n      });\n      var dependentModels = getComponentsByTypes(componentsMap, dependencies);\n      option[mainType] = [];\n      componentsMap.set(mainType, []);\n      each(mapResult, function (resultItem, index) {\n        var componentModel = resultItem.exist;\n        var newCptOption = resultItem.option;\n        assert(isObject(newCptOption) || componentModel, 'Empty component definition'); // Consider where is no new option and should be merged using {},\n        // see removeEdgeAndAdd in topologicalTravel and\n        // ComponentModel.getAllClassMainTypes.\n\n        if (!newCptOption) {\n          componentModel.mergeOption({}, this);\n          componentModel.optionUpdated({}, false);\n        } else {\n          var ComponentModelClass = ComponentModel.getClass(mainType, resultItem.keyInfo.subType, true);\n\n          if (componentModel && componentModel instanceof ComponentModelClass) {\n            componentModel.name = resultItem.keyInfo.name; // componentModel.settingTask && componentModel.settingTask.dirty();\n\n            componentModel.mergeOption(newCptOption, this);\n            componentModel.optionUpdated(newCptOption, false);\n          } else {\n            // PENDING Global as parent ?\n            var extraOpt = extend({\n              dependentModels: dependentModels,\n              componentIndex: index\n            }, resultItem.keyInfo);\n            componentModel = new ComponentModelClass(newCptOption, this, this, extraOpt);\n            extend(componentModel, extraOpt);\n            componentModel.init(newCptOption, this, this, extraOpt); // Call optionUpdated after init.\n            // newCptOption has been used as componentModel.option\n            // and may be merged with theme and default, so pass null\n            // to avoid confusion.\n\n            componentModel.optionUpdated(null, true);\n          }\n        }\n\n        componentsMap.get(mainType)[index] = componentModel;\n        option[mainType][index] = componentModel.option;\n      }, this); // Backup series for filtering.\n\n      if (mainType === 'series') {\n        createSeriesIndices(this, componentsMap.get('series'));\n      }\n    }\n\n    this._seriesIndicesMap = createHashMap(this._seriesIndices = this._seriesIndices || []);\n  },\n\n  /**\n   * Get option for output (cloned option and inner info removed)\n   * @public\n   * @return {Object}\n   */\n  getOption: function () {\n    var option = clone(this.option);\n    each(option, function (opts, mainType) {\n      if (ComponentModel.hasClass(mainType)) {\n        var opts = modelUtil.normalizeToArray(opts);\n\n        for (var i = opts.length - 1; i >= 0; i--) {\n          // Remove options with inner id.\n          if (modelUtil.isIdInner(opts[i])) {\n            opts.splice(i, 1);\n          }\n        }\n\n        option[mainType] = opts;\n      }\n    });\n    delete option[OPTION_INNER_KEY];\n    return option;\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getTheme: function () {\n    return this._theme;\n  },\n\n  /**\n   * @param {string} mainType\n   * @param {number} [idx=0]\n   * @return {module:echarts/model/Component}\n   */\n  getComponent: function (mainType, idx) {\n    var list = this._componentsMap.get(mainType);\n\n    if (list) {\n      return list[idx || 0];\n    }\n  },\n\n  /**\n   * If none of index and id and name used, return all components with mainType.\n   * @param {Object} condition\n   * @param {string} condition.mainType\n   * @param {string} [condition.subType] If ignore, only query by mainType\n   * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  queryComponents: function (condition) {\n    var mainType = condition.mainType;\n\n    if (!mainType) {\n      return [];\n    }\n\n    var index = condition.index;\n    var id = condition.id;\n    var name = condition.name;\n\n    var cpts = this._componentsMap.get(mainType);\n\n    if (!cpts || !cpts.length) {\n      return [];\n    }\n\n    var result;\n\n    if (index != null) {\n      if (!isArray(index)) {\n        index = [index];\n      }\n\n      result = filter(map(index, function (idx) {\n        return cpts[idx];\n      }), function (val) {\n        return !!val;\n      });\n    } else if (id != null) {\n      var isIdArray = isArray(id);\n      result = filter(cpts, function (cpt) {\n        return isIdArray && indexOf(id, cpt.id) >= 0 || !isIdArray && cpt.id === id;\n      });\n    } else if (name != null) {\n      var isNameArray = isArray(name);\n      result = filter(cpts, function (cpt) {\n        return isNameArray && indexOf(name, cpt.name) >= 0 || !isNameArray && cpt.name === name;\n      });\n    } else {\n      // Return all components with mainType\n      result = cpts.slice();\n    }\n\n    return filterBySubType(result, condition);\n  },\n\n  /**\n   * The interface is different from queryComponents,\n   * which is convenient for inner usage.\n   *\n   * @usage\n   * var result = findComponents(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series'},\n   *     function (model, index) {...}\n   * );\n   * // result like [component0, componnet1, ...]\n   *\n   * @param {Object} condition\n   * @param {string} condition.mainType Mandatory.\n   * @param {string} [condition.subType] Optional.\n   * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n   *        where xxx is mainType.\n   *        If query attribute is null/undefined or has no index/id/name,\n   *        do not filtering by query conditions, which is convenient for\n   *        no-payload situations or when target of action is global.\n   * @param {Function} [condition.filter] parameter: component, return boolean.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  findComponents: function (condition) {\n    var query = condition.query;\n    var mainType = condition.mainType;\n    var queryCond = getQueryCond(query);\n    var result = queryCond ? this.queryComponents(queryCond) : this._componentsMap.get(mainType);\n    return doFilter(filterBySubType(result, condition));\n\n    function getQueryCond(q) {\n      var indexAttr = mainType + 'Index';\n      var idAttr = mainType + 'Id';\n      var nameAttr = mainType + 'Name';\n      return q && (q[indexAttr] != null || q[idAttr] != null || q[nameAttr] != null) ? {\n        mainType: mainType,\n        // subType will be filtered finally.\n        index: q[indexAttr],\n        id: q[idAttr],\n        name: q[nameAttr]\n      } : null;\n    }\n\n    function doFilter(res) {\n      return condition.filter ? filter(res, condition.filter) : res;\n    }\n  },\n\n  /**\n   * @usage\n   * eachComponent('legend', function (legendModel, index) {\n   *     ...\n   * });\n   * eachComponent(function (componentType, model, index) {\n   *     // componentType does not include subType\n   *     // (componentType is 'xxx' but not 'xxx.aa')\n   * });\n   * eachComponent(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n   *     function (model, index) {...}\n   * );\n   * eachComponent(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n   *     function (model, index) {...}\n   * );\n   *\n   * @param {string|Object=} mainType When mainType is object, the definition\n   *                                  is the same as the method 'findComponents'.\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachComponent: function (mainType, cb, context) {\n    var componentsMap = this._componentsMap;\n\n    if (typeof mainType === 'function') {\n      context = cb;\n      cb = mainType;\n      componentsMap.each(function (components, componentType) {\n        each(components, function (component, index) {\n          cb.call(context, componentType, component, index);\n        });\n      });\n    } else if (isString(mainType)) {\n      each(componentsMap.get(mainType), cb, context);\n    } else if (isObject(mainType)) {\n      var queryResult = this.findComponents(mainType);\n      each(queryResult, cb, context);\n    }\n  },\n\n  /**\n   * @param {string} name\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByName: function (name) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.name === name;\n    });\n  },\n\n  /**\n   * @param {number} seriesIndex\n   * @return {module:echarts/model/Series}\n   */\n  getSeriesByIndex: function (seriesIndex) {\n    return this._componentsMap.get('series')[seriesIndex];\n  },\n\n  /**\n   * Get series list before filtered by type.\n   * FIXME: rename to getRawSeriesByType?\n   *\n   * @param {string} subType\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByType: function (subType) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.subType === subType;\n    });\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeries: function () {\n    return this._componentsMap.get('series').slice();\n  },\n\n  /**\n   * @return {number}\n   */\n  getSeriesCount: function () {\n    return this._componentsMap.get('series').length;\n  },\n\n  /**\n   * After filtering, series may be different\n   * frome raw series.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      cb.call(context, series, rawSeriesIndex);\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeries: function (cb, context) {\n    each(this._componentsMap.get('series'), cb, context);\n  },\n\n  /**\n   * After filtering, series may be different.\n   * frome raw series.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeriesByType: function (subType, cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      if (series.subType === subType) {\n        cb.call(context, series, rawSeriesIndex);\n      }\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered of given type.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeriesByType: function (subType, cb, context) {\n    return each(this.getSeriesByType(subType), cb, context);\n  },\n\n  /**\n   * @param {module:echarts/model/Series} seriesModel\n   */\n  isSeriesFiltered: function (seriesModel) {\n    assertSeriesInitialized(this);\n    return this._seriesIndicesMap.get(seriesModel.componentIndex) == null;\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getCurrentSeriesIndices: function () {\n    return (this._seriesIndices || []).slice();\n  },\n\n  /**\n   * @param {Function} cb\n   * @param {*} context\n   */\n  filterSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    var filteredSeries = filter(this._componentsMap.get('series'), cb, context);\n    createSeriesIndices(this, filteredSeries);\n  },\n  restoreData: function (payload) {\n    var componentsMap = this._componentsMap;\n    createSeriesIndices(this, componentsMap.get('series'));\n    var componentTypes = [];\n    componentsMap.each(function (components, componentType) {\n      componentTypes.push(componentType);\n    });\n    ComponentModel.topologicalTravel(componentTypes, ComponentModel.getAllClassMainTypes(), function (componentType, dependencies) {\n      each(componentsMap.get(componentType), function (component) {\n        (componentType !== 'series' || !isNotTargetSeries(component, payload)) && component.restoreData();\n      });\n    });\n  }\n});\n\nfunction isNotTargetSeries(seriesModel, payload) {\n  if (payload) {\n    var index = payload.seiresIndex;\n    var id = payload.seriesId;\n    var name = payload.seriesName;\n    return index != null && seriesModel.componentIndex !== index || id != null && seriesModel.id !== id || name != null && seriesModel.name !== name;\n  }\n}\n/**\n * @inner\n */\n\n\nfunction mergeTheme(option, theme) {\n  // PENDING\n  // NOT use `colorLayer` in theme if option has `color`\n  var notMergeColorLayer = option.color && !option.colorLayer;\n  each(theme, function (themeItem, name) {\n    if (name === 'colorLayer' && notMergeColorLayer) {\n      return;\n    } // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n\n\n    if (!ComponentModel.hasClass(name)) {\n      if (typeof themeItem === 'object') {\n        option[name] = !option[name] ? clone(themeItem) : merge(option[name], themeItem, false);\n      } else {\n        if (option[name] == null) {\n          option[name] = themeItem;\n        }\n      }\n    }\n  });\n}\n\nfunction initBase(baseOption) {\n  baseOption = baseOption; // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n  // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n\n  this.option = {};\n  this.option[OPTION_INNER_KEY] = 1;\n  /**\n   * Init with series: [], in case of calling findSeries method\n   * before series initialized.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @private\n   */\n\n  this._componentsMap = createHashMap({\n    series: []\n  });\n  /**\n   * Mapping between filtered series list and raw series list.\n   * key: filtered series indices, value: raw series indices.\n   * @type {Array.<nubmer>}\n   * @private\n   */\n\n  this._seriesIndices;\n  this._seriesIndicesMap;\n  mergeTheme(baseOption, this._theme.option); // TODO Needs clone when merging to the unexisted property\n\n  merge(baseOption, globalDefault, false);\n  this.mergeOption(baseOption);\n}\n/**\n * @inner\n * @param {Array.<string>|string} types model types\n * @return {Object} key: {string} type, value: {Array.<Object>} models\n */\n\n\nfunction getComponentsByTypes(componentsMap, types) {\n  if (!isArray(types)) {\n    types = types ? [types] : [];\n  }\n\n  var ret = {};\n  each(types, function (type) {\n    ret[type] = (componentsMap.get(type) || []).slice();\n  });\n  return ret;\n}\n/**\n * @inner\n */\n\n\nfunction determineSubType(mainType, newCptOption, existComponent) {\n  var subType = newCptOption.type ? newCptOption.type : existComponent ? existComponent.subType // Use determineSubType only when there is no existComponent.\n  : ComponentModel.determineSubType(mainType, newCptOption); // tooltip, markline, markpoint may always has no subType\n\n  return subType;\n}\n/**\n * @inner\n */\n\n\nfunction createSeriesIndices(ecModel, seriesModels) {\n  ecModel._seriesIndicesMap = createHashMap(ecModel._seriesIndices = map(seriesModels, function (series) {\n    return series.componentIndex;\n  }) || []);\n}\n/**\n * @inner\n */\n\n\nfunction filterBySubType(components, condition) {\n  // Using hasOwnProperty for restrict. Consider\n  // subType is undefined in user payload.\n  return condition.hasOwnProperty('subType') ? filter(components, function (cpt) {\n    return cpt.subType === condition.subType;\n  }) : components;\n}\n/**\n * @inner\n */\n\n\nfunction assertSeriesInitialized(ecModel) {}\n\nmixin(GlobalModel, colorPaletteMixin);\nvar _default = GlobalModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar SymbolDraw = require(\"../../chart/helper/SymbolDraw\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar List = require(\"../../data/List\");\n\nvar markerHelper = require(\"./markerHelper\");\n\nvar MarkerView = require(\"./MarkerView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction updateMarkerLayout(mpData, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  mpData.each(function (idx) {\n    var itemModel = mpData.getItemModel(idx);\n    var point;\n    var xPx = numberUtil.parsePercent(itemModel.get('x'), api.getWidth());\n    var yPx = numberUtil.parsePercent(itemModel.get('y'), api.getHeight());\n\n    if (!isNaN(xPx) && !isNaN(yPx)) {\n      point = [xPx, yPx];\n    } // Chart like bar may have there own marker positioning logic\n    else if (seriesModel.getMarkerPosition) {\n        // Use the getMarkerPoisition\n        point = seriesModel.getMarkerPosition(mpData.getValues(mpData.dimensions, idx));\n      } else if (coordSys) {\n        var x = mpData.get(coordSys.dimensions[0], idx);\n        var y = mpData.get(coordSys.dimensions[1], idx);\n        point = coordSys.dataToPoint([x, y]);\n      } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n\n    mpData.setItemLayout(idx, point);\n  });\n}\n\nvar _default = MarkerView.extend({\n  type: 'markPoint',\n  // updateLayout: function (markPointModel, ecModel, api) {\n  //     ecModel.eachSeries(function (seriesModel) {\n  //         var mpModel = seriesModel.markPointModel;\n  //         if (mpModel) {\n  //             updateMarkerLayout(mpModel.getData(), seriesModel, api);\n  //             this.markerGroupMap.get(seriesModel.id).updateLayout(mpModel);\n  //         }\n  //     }, this);\n  // },\n  updateTransform: function (markPointModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var mpModel = seriesModel.markPointModel;\n\n      if (mpModel) {\n        updateMarkerLayout(mpModel.getData(), seriesModel, api);\n        this.markerGroupMap.get(seriesModel.id).updateLayout(mpModel);\n      }\n    }, this);\n  },\n  renderSeries: function (seriesModel, mpModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesId = seriesModel.id;\n    var seriesData = seriesModel.getData();\n    var symbolDrawMap = this.markerGroupMap;\n    var symbolDraw = symbolDrawMap.get(seriesId) || symbolDrawMap.set(seriesId, new SymbolDraw());\n    var mpData = createList(coordSys, seriesModel, mpModel); // FIXME\n\n    mpModel.setData(mpData);\n    updateMarkerLayout(mpModel.getData(), seriesModel, api);\n    mpData.each(function (idx) {\n      var itemModel = mpData.getItemModel(idx);\n      var symbolSize = itemModel.getShallow('symbolSize');\n\n      if (typeof symbolSize === 'function') {\n        // FIXME 这里不兼容 ECharts 2.x，2.x 貌似参数是整个数据？\n        symbolSize = symbolSize(mpModel.getRawValue(idx), mpModel.getDataParams(idx));\n      }\n\n      mpData.setItemVisual(idx, {\n        symbolSize: symbolSize,\n        color: itemModel.get('itemStyle.color') || seriesData.getVisual('color'),\n        symbol: itemModel.getShallow('symbol')\n      });\n    }); // TODO Text are wrong\n\n    symbolDraw.updateData(mpData);\n    this.group.add(symbolDraw.group); // Set host model for tooltip\n    // FIXME\n\n    mpData.eachItemGraphicEl(function (el) {\n      el.traverse(function (child) {\n        child.dataModel = mpModel;\n      });\n    });\n    symbolDraw.__keep = true;\n    symbolDraw.group.silent = mpModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} [coordSys]\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\n\nfunction createList(coordSys, seriesModel, mpModel) {\n  var coordDimsInfos;\n\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var info = seriesModel.getData().getDimensionInfo(seriesModel.getData().mapDimension(coordDim)) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      return zrUtil.defaults({\n        name: coordDim\n      }, info);\n    });\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n  }\n\n  var mpData = new List(coordDimsInfos, mpModel);\n  var dataOpt = zrUtil.map(mpModel.get('data'), zrUtil.curry(markerHelper.dataTransform, seriesModel));\n\n  if (coordSys) {\n    dataOpt = zrUtil.filter(dataOpt, zrUtil.curry(markerHelper.dataFilter, coordSys));\n  }\n\n  mpData.initData(dataOpt, null, coordSys ? markerHelper.dimValueGetter : function (item) {\n    return item.value;\n  });\n  return mpData;\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar sizeCalculable = _layout.sizeCalculable;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar CalendarModel = ComponentModel.extend({\n  type: 'calendar',\n\n  /**\n   * @type {module:echarts/coord/calendar/Calendar}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    left: 80,\n    top: 60,\n    cellSize: 20,\n    // horizontal vertical\n    orient: 'horizontal',\n    // month separate line style\n    splitLine: {\n      show: true,\n      lineStyle: {\n        color: '#000',\n        width: 1,\n        type: 'solid'\n      }\n    },\n    // rect style  temporarily unused emphasis\n    itemStyle: {\n      color: '#fff',\n      borderWidth: 1,\n      borderColor: '#ccc'\n    },\n    // week text style\n    dayLabel: {\n      show: true,\n      // a week first day\n      firstDay: 0,\n      // start end\n      position: 'start',\n      margin: '50%',\n      // 50% of cellSize\n      nameMap: 'en',\n      color: '#000'\n    },\n    // month text style\n    monthLabel: {\n      show: true,\n      // start end\n      position: 'start',\n      margin: 5,\n      // center or left\n      align: 'center',\n      // cn en []\n      nameMap: 'en',\n      formatter: null,\n      color: '#000'\n    },\n    // year text style\n    yearLabel: {\n      show: true,\n      // top bottom left right\n      position: null,\n      margin: 30,\n      formatter: null,\n      color: '#ccc',\n      fontFamily: 'sans-serif',\n      fontWeight: 'bolder',\n      fontSize: 20\n    }\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    var inputPositionParams = getLayoutParams(option);\n    CalendarModel.superApply(this, 'init', arguments);\n    mergeAndNormalizeLayoutParams(option, inputPositionParams);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option, extraOpt) {\n    CalendarModel.superApply(this, 'mergeOption', arguments);\n    mergeAndNormalizeLayoutParams(this.option, option);\n  }\n});\n\nfunction mergeAndNormalizeLayoutParams(target, raw) {\n  // Normalize cellSize\n  var cellSize = target.cellSize;\n\n  if (!zrUtil.isArray(cellSize)) {\n    cellSize = target.cellSize = [cellSize, cellSize];\n  } else if (cellSize.length === 1) {\n    cellSize[1] = cellSize[0];\n  }\n\n  var ignoreSize = zrUtil.map([0, 1], function (hvIdx) {\n    // If user have set `width` or both `left` and `right`, cellSize\n    // will be automatically set to 'auto', otherwise the default\n    // setting of cellSize will make `width` setting not work.\n    if (sizeCalculable(raw, hvIdx)) {\n      cellSize[hvIdx] = 'auto';\n    }\n\n    return cellSize[hvIdx] != null && cellSize[hvIdx] !== 'auto';\n  });\n  mergeLayoutParam(target, raw, {\n    type: 'box',\n    ignoreSize: ignoreSize\n  });\n}\n\nvar _default = CalendarModel;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction defaultKeyGetter(item) {\n  return item;\n}\n/**\n * @param {Array} oldArr\n * @param {Array} newArr\n * @param {Function} oldKeyGetter\n * @param {Function} newKeyGetter\n * @param {Object} [context] Can be visited by this.context in callback.\n */\n\n\nfunction DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter, context) {\n  this._old = oldArr;\n  this._new = newArr;\n  this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n  this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n  this.context = context;\n}\n\nDataDiffer.prototype = {\n  constructor: DataDiffer,\n\n  /**\n   * Callback function when add a data\n   */\n  add: function (func) {\n    this._add = func;\n    return this;\n  },\n\n  /**\n   * Callback function when update a data\n   */\n  update: function (func) {\n    this._update = func;\n    return this;\n  },\n\n  /**\n   * Callback function when remove a data\n   */\n  remove: function (func) {\n    this._remove = func;\n    return this;\n  },\n  execute: function () {\n    var oldArr = this._old;\n    var newArr = this._new;\n    var oldDataIndexMap = {};\n    var newDataIndexMap = {};\n    var oldDataKeyArr = [];\n    var newDataKeyArr = [];\n    var i;\n    initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, '_oldKeyGetter', this);\n    initIndexMap(newArr, newDataIndexMap, newDataKeyArr, '_newKeyGetter', this); // Travel by inverted order to make sure order consistency\n    // when duplicate keys exists (consider newDataIndex.pop() below).\n    // For performance consideration, these code below do not look neat.\n\n    for (i = 0; i < oldArr.length; i++) {\n      var key = oldDataKeyArr[i];\n      var idx = newDataIndexMap[key]; // idx can never be empty array here. see 'set null' logic below.\n\n      if (idx != null) {\n        // Consider there is duplicate key (for example, use dataItem.name as key).\n        // We should make sure every item in newArr and oldArr can be visited.\n        var len = idx.length;\n\n        if (len) {\n          len === 1 && (newDataIndexMap[key] = null);\n          idx = idx.unshift();\n        } else {\n          newDataIndexMap[key] = null;\n        }\n\n        this._update && this._update(idx, i);\n      } else {\n        this._remove && this._remove(i);\n      }\n    }\n\n    for (var i = 0; i < newDataKeyArr.length; i++) {\n      var key = newDataKeyArr[i];\n\n      if (newDataIndexMap.hasOwnProperty(key)) {\n        var idx = newDataIndexMap[key];\n\n        if (idx == null) {\n          continue;\n        } // idx can never be empty array here. see 'set null' logic above.\n\n\n        if (!idx.length) {\n          this._add && this._add(idx);\n        } else {\n          for (var j = 0, len = idx.length; j < len; j++) {\n            this._add && this._add(idx[j]);\n          }\n        }\n      }\n    }\n  }\n};\n\nfunction initIndexMap(arr, map, keyArr, keyGetterName, dataDiffer) {\n  for (var i = 0; i < arr.length; i++) {\n    // Add prefix to avoid conflict with Object.prototype.\n    var key = '_ec_' + dataDiffer[keyGetterName](arr[i], i);\n    var existence = map[key];\n\n    if (existence == null) {\n      keyArr.push(key);\n      map[key] = i;\n    } else {\n      if (!existence.length) {\n        map[key] = existence = [existence];\n      }\n\n      existence.push(i);\n    }\n  }\n}\n\nvar _default = DataDiffer;\nmodule.exports = _default;","var layout = require(\"../../util/layout\");\n\nvar nest = require(\"../../util/array/nest\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file The layout algorithm of sankey view\n * @author Deqing Li(annong035@gmail.com)\n */\nfunction _default(ecModel, api, payload) {\n  ecModel.eachSeriesByType('sankey', function (seriesModel) {\n    var nodeWidth = seriesModel.get('nodeWidth');\n    var nodeGap = seriesModel.get('nodeGap');\n    var layoutInfo = getViewRect(seriesModel, api);\n    seriesModel.layoutInfo = layoutInfo;\n    var width = layoutInfo.width;\n    var height = layoutInfo.height;\n    var graph = seriesModel.getGraph();\n    var nodes = graph.nodes;\n    var edges = graph.edges;\n    computeNodeValues(nodes);\n    var filteredNodes = zrUtil.filter(nodes, function (node) {\n      return node.getLayout().value === 0;\n    });\n    var iterations = filteredNodes.length !== 0 ? 0 : seriesModel.get('layoutIterations');\n    layoutSankey(nodes, edges, nodeWidth, nodeGap, width, height, iterations);\n  });\n}\n/**\n * Get the layout position of the whole view\n *\n * @param {module:echarts/model/Series} seriesModel  the model object of sankey series\n * @param {module:echarts/ExtensionAPI} api  provide the API list that the developer can call\n * @return {module:zrender/core/BoundingRect}  size of rect to draw the sankey view\n */\n\n\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction layoutSankey(nodes, edges, nodeWidth, nodeGap, width, height, iterations) {\n  computeNodeBreadths(nodes, edges, nodeWidth, width);\n  computeNodeDepths(nodes, edges, height, nodeGap, iterations);\n  computeEdgeDepths(nodes);\n}\n/**\n * Compute the value of each node by summing the associated edge's value\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n */\n\n\nfunction computeNodeValues(nodes) {\n  zrUtil.each(nodes, function (node) {\n    var value1 = sum(node.outEdges, getEdgeValue);\n    var value2 = sum(node.inEdges, getEdgeValue);\n    var value = Math.max(value1, value2);\n    node.setLayout({\n      value: value\n    }, true);\n  });\n}\n/**\n * Compute the x-position for each node.\n * \n * Here we use Kahn algorithm to detect cycle when we traverse\n * the node to computer the initial x position.\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param  {number} nodeWidth  the dx of the node\n * @param  {number} width  the whole width of the area to draw the view\n */\n\n\nfunction computeNodeBreadths(nodes, edges, nodeWidth, width) {\n  // Used to mark whether the edge is deleted. if it is deleted,\n  // the value is 0, otherwise it is 1.\n  var remainEdges = []; // Storage each node's indegree.\n\n  var indegreeArr = []; //Used to storage the node with indegree is equal to 0.\n\n  var zeroIndegrees = [];\n  var nextNode = [];\n  var x = 0;\n  var kx = 0;\n\n  for (var i = 0; i < edges.length; i++) {\n    remainEdges[i] = 1;\n  }\n\n  for (var i = 0; i < nodes.length; i++) {\n    indegreeArr[i] = nodes[i].inEdges.length;\n\n    if (indegreeArr[i] === 0) {\n      zeroIndegrees.push(nodes[i]);\n    }\n  }\n\n  while (zeroIndegrees.length) {\n    zrUtil.each(zeroIndegrees, function (node) {\n      node.setLayout({\n        x: x\n      }, true);\n      node.setLayout({\n        dx: nodeWidth\n      }, true);\n      zrUtil.each(node.outEdges, function (edge) {\n        var indexEdge = edges.indexOf(edge);\n        remainEdges[indexEdge] = 0;\n        var targetNode = edge.node2;\n        var nodeIndex = nodes.indexOf(targetNode);\n\n        if (--indegreeArr[nodeIndex] === 0) {\n          nextNode.push(targetNode);\n        }\n      });\n    });\n    ++x;\n    zeroIndegrees = nextNode;\n    nextNode = [];\n  }\n\n  for (var i = 0; i < remainEdges.length; i++) {}\n\n  moveSinksRight(nodes, x);\n  kx = (width - nodeWidth) / (x - 1);\n  scaleNodeBreadths(nodes, kx);\n}\n/**\n * All the node without outEgdes are assigned maximum x-position and\n *     be aligned in the last column.\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {number} x  value (x-1) use to assign to node without outEdges\n *     as x-position\n */\n\n\nfunction moveSinksRight(nodes, x) {\n  zrUtil.each(nodes, function (node) {\n    if (!node.outEdges.length) {\n      node.setLayout({\n        x: x - 1\n      }, true);\n    }\n  });\n}\n/**\n * Scale node x-position to the width\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {number} kx   multiple used to scale nodes\n */\n\n\nfunction scaleNodeBreadths(nodes, kx) {\n  zrUtil.each(nodes, function (node) {\n    var nodeX = node.getLayout().x * kx;\n    node.setLayout({\n      x: nodeX\n    }, true);\n  });\n}\n/**\n * Using Gauss-Seidel iterations method to compute the node depth(y-position)\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {module:echarts/data/Graph~Edge} edges  edge of sankey view\n * @param {number} height  the whole height of the area to draw the view\n * @param {number} nodeGap  the vertical distance between two nodes\n *     in the same column.\n * @param {number} iterations  the number of iterations for the algorithm\n */\n\n\nfunction computeNodeDepths(nodes, edges, height, nodeGap, iterations) {\n  var nodesByBreadth = nest().key(function (d) {\n    return d.getLayout().x;\n  }).sortKeys(ascending).entries(nodes).map(function (d) {\n    return d.values;\n  });\n  initializeNodeDepth(nodes, nodesByBreadth, edges, height, nodeGap);\n  resolveCollisions(nodesByBreadth, nodeGap, height);\n\n  for (var alpha = 1; iterations > 0; iterations--) {\n    // 0.99 is a experience parameter, ensure that each iterations of\n    // changes as small as possible.\n    alpha *= 0.99;\n    relaxRightToLeft(nodesByBreadth, alpha);\n    resolveCollisions(nodesByBreadth, nodeGap, height);\n    relaxLeftToRight(nodesByBreadth, alpha);\n    resolveCollisions(nodesByBreadth, nodeGap, height);\n  }\n}\n/**\n * Compute the original y-position for each node\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the nodes x-position.\n * @param {module:echarts/data/Graph~Edge} edges  edge of sankey view\n * @param {number} height  the whole height of the area to draw the view\n * @param {number} nodeGap  the vertical distance between two nodes\n */\n\n\nfunction initializeNodeDepth(nodes, nodesByBreadth, edges, height, nodeGap) {\n  var kyArray = [];\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    var n = nodes.length;\n    var sum = 0;\n    zrUtil.each(nodes, function (node) {\n      sum += node.getLayout().value;\n    });\n    var ky = (height - (n - 1) * nodeGap) / sum;\n    kyArray.push(ky);\n  });\n  kyArray.sort(function (a, b) {\n    return a - b;\n  });\n  var ky0 = kyArray[0];\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    zrUtil.each(nodes, function (node, i) {\n      node.setLayout({\n        y: i\n      }, true);\n      var nodeDy = node.getLayout().value * ky0;\n      node.setLayout({\n        dy: nodeDy\n      }, true);\n    });\n  });\n  zrUtil.each(edges, function (edge) {\n    var edgeDy = +edge.getValue() * ky0;\n    edge.setLayout({\n      dy: edgeDy\n    }, true);\n  });\n}\n/**\n * Resolve the collision of initialized depth (y-position)\n *\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the nodes x-position.\n * @param {number} nodeGap  the vertical distance between two nodes\n * @param {number} height  the whole height of the area to draw the view\n */\n\n\nfunction resolveCollisions(nodesByBreadth, nodeGap, height) {\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    var node;\n    var dy;\n    var y0 = 0;\n    var n = nodes.length;\n    var i;\n    nodes.sort(ascendingDepth);\n\n    for (i = 0; i < n; i++) {\n      node = nodes[i];\n      dy = y0 - node.getLayout().y;\n\n      if (dy > 0) {\n        var nodeY = node.getLayout().y + dy;\n        node.setLayout({\n          y: nodeY\n        }, true);\n      }\n\n      y0 = node.getLayout().y + node.getLayout().dy + nodeGap;\n    } // If the bottommost node goes outside the bounds, push it back up\n\n\n    dy = y0 - nodeGap - height;\n\n    if (dy > 0) {\n      var nodeY = node.getLayout().y - dy;\n      node.setLayout({\n        y: nodeY\n      }, true);\n      y0 = node.getLayout().y;\n\n      for (i = n - 2; i >= 0; --i) {\n        node = nodes[i];\n        dy = node.getLayout().y + node.getLayout().dy + nodeGap - y0;\n\n        if (dy > 0) {\n          nodeY = node.getLayout().y - dy;\n          node.setLayout({\n            y: nodeY\n          }, true);\n        }\n\n        y0 = node.getLayout().y;\n      }\n    }\n  });\n}\n/**\n * Change the y-position of the nodes, except most the right side nodes\n *\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the node x-position.\n * @param {number} alpha  parameter used to adjust the nodes y-position\n */\n\n\nfunction relaxRightToLeft(nodesByBreadth, alpha) {\n  zrUtil.each(nodesByBreadth.slice().reverse(), function (nodes) {\n    zrUtil.each(nodes, function (node) {\n      if (node.outEdges.length) {\n        var y = sum(node.outEdges, weightedTarget) / sum(node.outEdges, getEdgeValue);\n        var nodeY = node.getLayout().y + (y - center(node)) * alpha;\n        node.setLayout({\n          y: nodeY\n        }, true);\n      }\n    });\n  });\n}\n\nfunction weightedTarget(edge) {\n  return center(edge.node2) * edge.getValue();\n}\n/**\n * Change the y-position of the nodes, except most the left side nodes\n *\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the node x-position.\n * @param {number} alpha  parameter used to adjust the nodes y-position\n */\n\n\nfunction relaxLeftToRight(nodesByBreadth, alpha) {\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    zrUtil.each(nodes, function (node) {\n      if (node.inEdges.length) {\n        var y = sum(node.inEdges, weightedSource) / sum(node.inEdges, getEdgeValue);\n        var nodeY = node.getLayout().y + (y - center(node)) * alpha;\n        node.setLayout({\n          y: nodeY\n        }, true);\n      }\n    });\n  });\n}\n\nfunction weightedSource(edge) {\n  return center(edge.node1) * edge.getValue();\n}\n/**\n * Compute the depth(y-position) of each edge\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n */\n\n\nfunction computeEdgeDepths(nodes) {\n  zrUtil.each(nodes, function (node) {\n    node.outEdges.sort(ascendingTargetDepth);\n    node.inEdges.sort(ascendingSourceDepth);\n  });\n  zrUtil.each(nodes, function (node) {\n    var sy = 0;\n    var ty = 0;\n    zrUtil.each(node.outEdges, function (edge) {\n      edge.setLayout({\n        sy: sy\n      }, true);\n      sy += edge.getLayout().dy;\n    });\n    zrUtil.each(node.inEdges, function (edge) {\n      edge.setLayout({\n        ty: ty\n      }, true);\n      ty += edge.getLayout().dy;\n    });\n  });\n}\n\nfunction ascendingTargetDepth(a, b) {\n  return a.node2.getLayout().y - b.node2.getLayout().y;\n}\n\nfunction ascendingSourceDepth(a, b) {\n  return a.node1.getLayout().y - b.node1.getLayout().y;\n}\n\nfunction sum(array, f) {\n  var sum = 0;\n  var len = array.length;\n  var i = -1;\n\n  while (++i < len) {\n    var value = +f.call(array, array[i], i);\n\n    if (!isNaN(value)) {\n      sum += value;\n    }\n  }\n\n  return sum;\n}\n\nfunction center(node) {\n  return node.getLayout().y + node.getLayout().dy / 2;\n}\n\nfunction ascendingDepth(a, b) {\n  return a.getLayout().y - b.getLayout().y;\n}\n\nfunction ascending(a, b) {\n  return a - b;\n}\n\nfunction getEdgeValue(edge) {\n  return edge.getValue();\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar List = require(\"../../data/List\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _model = require(\"../../util/model\");\n\nvar defaultEmphasis = _model.defaultEmphasis;\n\nvar Model = require(\"../../model/Model\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\nvar createGraphFromNodeEdge = require(\"../helper/createGraphFromNodeEdge\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar GraphSeries = echarts.extendSeriesModel({\n  type: 'series.graph',\n  init: function (option) {\n    GraphSeries.superApply(this, 'init', arguments); // Provide data for legend select\n\n    this.legendDataProvider = function () {\n      return this._categoriesData;\n    };\n\n    this.fillDataTextStyle(option.edges || option.links);\n\n    this._updateCategoriesData();\n  },\n  mergeOption: function (option) {\n    GraphSeries.superApply(this, 'mergeOption', arguments);\n    this.fillDataTextStyle(option.edges || option.links);\n\n    this._updateCategoriesData();\n  },\n  mergeDefaultAndTheme: function (option) {\n    GraphSeries.superApply(this, 'mergeDefaultAndTheme', arguments);\n    defaultEmphasis(option, ['edgeLabel'], ['show']);\n  },\n  getInitialData: function (option, ecModel) {\n    var edges = option.edges || option.links || [];\n    var nodes = option.data || option.nodes || [];\n    var self = this;\n\n    if (nodes && edges) {\n      return createGraphFromNodeEdge(nodes, edges, this, true, beforeLink).data;\n    }\n\n    function beforeLink(nodeData, edgeData) {\n      // Overwrite nodeData.getItemModel to\n      nodeData.wrapMethod('getItemModel', function (model) {\n        var categoriesModels = self._categoriesModels;\n        var categoryIdx = model.getShallow('category');\n        var categoryModel = categoriesModels[categoryIdx];\n\n        if (categoryModel) {\n          categoryModel.parentModel = model.parentModel;\n          model.parentModel = categoryModel;\n        }\n\n        return model;\n      });\n      var edgeLabelModel = self.getModel('edgeLabel'); // For option `edgeLabel` can be found by label.xxx.xxx on item mode.\n\n      var fakeSeriesModel = new Model({\n        label: edgeLabelModel.option\n      }, edgeLabelModel.parentModel, ecModel);\n      var emphasisEdgeLabelModel = self.getModel('emphasis.edgeLabel');\n      var emphasisFakeSeriesModel = new Model({\n        emphasis: {\n          label: emphasisEdgeLabelModel.option\n        }\n      }, emphasisEdgeLabelModel.parentModel, ecModel);\n      edgeData.wrapMethod('getItemModel', function (model) {\n        model.customizeGetParent(edgeGetParent);\n        return model;\n      });\n\n      function edgeGetParent(path) {\n        path = this.parsePath(path);\n        return path && path[0] === 'label' ? fakeSeriesModel : path && path[0] === 'emphasis' && path[1] === 'label' ? emphasisFakeSeriesModel : this.parentModel;\n      }\n    }\n  },\n\n  /**\n   * @return {module:echarts/data/Graph}\n   */\n  getGraph: function () {\n    return this.getData().graph;\n  },\n\n  /**\n   * @return {module:echarts/data/List}\n   */\n  getEdgeData: function () {\n    return this.getGraph().edgeData;\n  },\n\n  /**\n   * @return {module:echarts/data/List}\n   */\n  getCategoriesData: function () {\n    return this._categoriesData;\n  },\n\n  /**\n   * @override\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    if (dataType === 'edge') {\n      var nodeData = this.getData();\n      var params = this.getDataParams(dataIndex, dataType);\n      var edge = nodeData.graph.getEdgeByIndex(dataIndex);\n      var sourceName = nodeData.getName(edge.node1.dataIndex);\n      var targetName = nodeData.getName(edge.node2.dataIndex);\n      var html = [];\n      sourceName != null && html.push(sourceName);\n      targetName != null && html.push(targetName);\n      html = encodeHTML(html.join(' > '));\n\n      if (params.value) {\n        html += ' : ' + encodeHTML(params.value);\n      }\n\n      return html;\n    } else {\n      // dataType === 'node' or empty\n      return GraphSeries.superApply(this, 'formatTooltip', arguments);\n    }\n  },\n  _updateCategoriesData: function () {\n    var categories = zrUtil.map(this.option.categories || [], function (category) {\n      // Data must has value\n      return category.value != null ? category : zrUtil.extend({\n        value: 0\n      }, category);\n    });\n    var categoriesData = new List(['value'], this);\n    categoriesData.initData(categories);\n    this._categoriesData = categoriesData;\n    this._categoriesModels = categoriesData.mapArray(function (idx) {\n      return categoriesData.getItemModel(idx, true);\n    });\n  },\n  setZoom: function (zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function (center) {\n    this.option.center = center;\n  },\n  isAnimationEnabled: function () {\n    return GraphSeries.superCall(this, 'isAnimationEnabled') // Not enable animation when do force layout\n    && !(this.get('layout') === 'force' && this.get('force.layoutAnimation'));\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'view',\n    // Default option for all coordinate systems\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // polarIndex: 0,\n    // geoIndex: 0,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    layout: null,\n    focusNodeAdjacency: false,\n    // Configuration of circular layout\n    circular: {\n      rotateLabel: false\n    },\n    // Configuration of force directed layout\n    force: {\n      initLayout: null,\n      // Node repulsion. Can be an array to represent range.\n      repulsion: [0, 50],\n      gravity: 0.1,\n      // Edge length. Can be an array to represent range.\n      edgeLength: 30,\n      layoutAnimation: true\n    },\n    left: 'center',\n    top: 'center',\n    // right: null,\n    // bottom: null,\n    // width: '80%',\n    // height: '80%',\n    symbol: 'circle',\n    symbolSize: 10,\n    edgeSymbol: ['none', 'none'],\n    edgeSymbolSize: 10,\n    edgeLabel: {\n      position: 'middle'\n    },\n    draggable: false,\n    roam: false,\n    // Default on center of graph\n    center: null,\n    zoom: 1,\n    // Symbol size scale ratio in roam\n    nodeScaleRatio: 0.6,\n    // cursor: null,\n    // categories: [],\n    // data: []\n    // Or\n    // nodes: []\n    //\n    // links: []\n    // Or\n    // edges: []\n    label: {\n      show: false,\n      formatter: '{b}'\n    },\n    itemStyle: {},\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      curveness: 0,\n      opacity: 0.5\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\nvar _default = GraphSeries;\nmodule.exports = _default;","var Path = require(\"../Path\");\n\nvar polyHelper = require(\"../helper/poly\");\n\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\nvar _default = Path.extend({\n  type: 'polygon',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, true);\n  }\n});\n\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar map = _util.map;\n\nvar createRenderPlanner = require(\"../chart/helper/createRenderPlanner\");\n\nvar _dataStackHelper = require(\"../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    plan: createRenderPlanner(),\n    reset: function (seriesModel) {\n      var data = seriesModel.getData();\n      var coordSys = seriesModel.coordinateSystem;\n      var pipelineContext = seriesModel.pipelineContext;\n      var isLargeRender = pipelineContext.large;\n\n      if (!coordSys) {\n        return;\n      }\n\n      var dims = map(coordSys.dimensions, function (dim) {\n        return data.mapDimension(dim);\n      }).slice(0, 2);\n      var dimLen = dims.length;\n      var stackResultDim = data.getCalculationInfo('stackResultDimension');\n\n      if (isDimensionStacked(data, dims[0]\n      /*, dims[1]*/\n      )) {\n        dims[0] = stackResultDim;\n      }\n\n      if (isDimensionStacked(data, dims[1]\n      /*, dims[0]*/\n      )) {\n        dims[1] = stackResultDim;\n      }\n\n      function progress(params, data) {\n        var segCount = params.end - params.start;\n        var points = isLargeRender && new Float32Array(segCount * dimLen);\n\n        for (var i = params.start, offset = 0, tmpIn = [], tmpOut = []; i < params.end; i++) {\n          var point;\n\n          if (dimLen === 1) {\n            var x = data.get(dims[0], i);\n            point = !isNaN(x) && coordSys.dataToPoint(x, null, tmpOut);\n          } else {\n            var x = tmpIn[0] = data.get(dims[0], i);\n            var y = tmpIn[1] = data.get(dims[1], i); // Also {Array.<number>}, not undefined to avoid if...else... statement\n\n            point = !isNaN(x) && !isNaN(y) && coordSys.dataToPoint(tmpIn, null, tmpOut);\n          }\n\n          if (isLargeRender) {\n            points[offset++] = point ? point[0] : NaN;\n            points[offset++] = point ? point[1] : NaN;\n          } else {\n            data.setItemLayout(i, point && point.slice() || [NaN, NaN]);\n          }\n        }\n\n        isLargeRender && data.setLayout('symbolPoints', points);\n      }\n\n      return dimLen && {\n        progress: progress\n      };\n    }\n  };\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echartsAPIList = ['getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed', 'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption', 'getViewOfComponentModel', 'getViewOfSeriesModel']; // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\nfunction ExtensionAPI(chartInstance) {\n  zrUtil.each(echartsAPIList, function (name) {\n    this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n  }, this);\n}\n\nvar _default = ExtensionAPI;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @payload\n * @property {string} parallelAxisId\n * @property {Array.<Array.<number>>} intervals\n */\nvar actionInfo = {\n  type: 'axisAreaSelect',\n  event: 'axisAreaSelected' // update: 'updateVisual'\n\n};\necharts.registerAction(actionInfo, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'parallelAxis',\n    query: payload\n  }, function (parallelAxisModel) {\n    parallelAxisModel.axis.model.setActiveIntervals(payload.intervals);\n  });\n});\n/**\n * @payload\n */\n\necharts.registerAction('parallelAxisExpand', function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'parallel',\n    query: payload\n  }, function (parallelModel) {\n    parallelModel.setAxisExpand(payload);\n  });\n});","var Parallel = require(\"./Parallel\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Parallel coordinate system creater.\n */\nfunction create(ecModel, api) {\n  var coordSysList = [];\n  ecModel.eachComponent('parallel', function (parallelModel, idx) {\n    var coordSys = new Parallel(parallelModel, ecModel, api);\n    coordSys.name = 'parallel_' + idx;\n    coordSys.resize(parallelModel, api);\n    parallelModel.coordinateSystem = coordSys;\n    coordSys.model = parallelModel;\n    coordSysList.push(coordSys);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.get('coordinateSystem') === 'parallel') {\n      var parallelModel = ecModel.queryComponents({\n        mainType: 'parallel',\n        index: seriesModel.get('parallelIndex'),\n        id: seriesModel.get('parallelId')\n      })[0];\n      seriesModel.coordinateSystem = parallelModel.coordinateSystem;\n    }\n  });\n  return coordSysList;\n}\n\nCoordinateSystem.register('parallel', {\n  create: create\n});","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar map = _util.map;\n\nvar _number = require(\"../util/number\");\n\nvar linearMap = _number.linearMap;\nvar getPixelPrecision = _number.getPixelPrecision;\n\nvar _axisTickLabelBuilder = require(\"./axisTickLabelBuilder\");\n\nvar createAxisTicks = _axisTickLabelBuilder.createAxisTicks;\nvar createAxisLabels = _axisTickLabelBuilder.createAxisLabels;\nvar calculateCategoryInterval = _axisTickLabelBuilder.calculateCategoryInterval;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar NORMALIZED_EXTENT = [0, 1];\n/**\n * Base class of Axis.\n * @constructor\n */\n\nvar Axis = function (dim, scale, extent) {\n  /**\n   * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'.\n   * @type {string}\n   */\n  this.dim = dim;\n  /**\n   * Axis scale\n   * @type {module:echarts/coord/scale/*}\n   */\n\n  this.scale = scale;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  this._extent = extent || [0, 0];\n  /**\n   * @type {boolean}\n   */\n\n  this.inverse = false;\n  /**\n   * Usually true when axis has a ordinal scale\n   * @type {boolean}\n   */\n\n  this.onBand = false;\n};\n\nAxis.prototype = {\n  constructor: Axis,\n\n  /**\n   * If axis extent contain given coord\n   * @param {number} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var extent = this._extent;\n    var min = Math.min(extent[0], extent[1]);\n    var max = Math.max(extent[0], extent[1]);\n    return coord >= min && coord <= max;\n  },\n\n  /**\n   * If axis extent contain given data\n   * @param {number} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.contain(this.dataToCoord(data));\n  },\n\n  /**\n   * Get coord extent.\n   * @return {Array.<number>}\n   */\n  getExtent: function () {\n    return this._extent.slice();\n  },\n\n  /**\n   * Get precision used for formatting\n   * @param {Array.<number>} [dataExtent]\n   * @return {number}\n   */\n  getPixelPrecision: function (dataExtent) {\n    return getPixelPrecision(dataExtent || this.scale.getExtent(), this._extent);\n  },\n\n  /**\n   * Set coord extent\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var extent = this._extent;\n    extent[0] = start;\n    extent[1] = end;\n  },\n\n  /**\n   * Convert data to coord. Data is the rank if it has an ordinal scale\n   * @param {number} data\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  dataToCoord: function (data, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n    data = scale.normalize(data);\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    return linearMap(data, NORMALIZED_EXTENT, extent, clamp);\n  },\n\n  /**\n   * Convert coord to data. Data is the rank if it has an ordinal scale\n   * @param {number} coord\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  coordToData: function (coord, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    var t = linearMap(coord, extent, NORMALIZED_EXTENT, clamp);\n    return this.scale.scale(t);\n  },\n\n  /**\n   * Convert pixel point to data in axis\n   * @param {Array.<number>} point\n   * @param  {boolean} clamp\n   * @return {number} data\n   */\n  pointToData: function (point, clamp) {// Should be implemented in derived class if necessary.\n  },\n\n  /**\n   * Different from `zrUtil.map(axis.getTicks(), axis.dataToCoord, axis)`,\n   * `axis.getTicksCoords` considers `onBand`, which is used by\n   * `boundaryGap:true` of category axis and splitLine and splitArea.\n   * @param {Object} [opt]\n   * @param {number} [opt.tickModel=axis.model.getModel('axisTick')]\n   * @param {boolean} [opt.clamp] If `true`, the first and the last\n   *        tick must be at the axis end points. Otherwise, clip ticks\n   *        that outside the axis extent.\n   * @return {Array.<Object>} [{\n   *     coord: ...,\n   *     tickValue: ...\n   * }, ...]\n   */\n  getTicksCoords: function (opt) {\n    opt = opt || {};\n    var tickModel = opt.tickModel || this.getTickModel();\n    var result = createAxisTicks(this, tickModel);\n    var ticks = result.ticks;\n    var ticksCoords = map(ticks, function (tickValue) {\n      return {\n        coord: this.dataToCoord(tickValue),\n        tickValue: tickValue\n      };\n    }, this);\n    var alignWithLabel = tickModel.get('alignWithLabel');\n    fixOnBandTicksCoords(this, ticksCoords, result.tickCategoryInterval, alignWithLabel, opt.clamp);\n    return ticksCoords;\n  },\n\n  /**\n   * @return {Array.<Object>} [{\n   *     formattedLabel: string,\n   *     rawLabel: axis.scale.getLabel(tickValue)\n   *     tickValue: number\n   * }, ...]\n   */\n  getViewLabels: function () {\n    return createAxisLabels(this).labels;\n  },\n\n  /**\n   * @return {module:echarts/coord/model/Model}\n   */\n  getLabelModel: function () {\n    return this.model.getModel('axisLabel');\n  },\n\n  /**\n   * Notice here we only get the default tick model. For splitLine\n   * or splitArea, we should pass the splitLineModel or splitAreaModel\n   * manually when calling `getTicksCoords`.\n   * In GL, this method may be overrided to:\n   * `axisModel.getModel('axisTick', grid3DModel.getModel('axisTick'));`\n   * @return {module:echarts/coord/model/Model}\n   */\n  getTickModel: function () {\n    return this.model.getModel('axisTick');\n  },\n\n  /**\n   * Get width of band\n   * @return {number}\n   */\n  getBandWidth: function () {\n    var axisExtent = this._extent;\n    var dataExtent = this.scale.getExtent();\n    var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0); // Fix #2728, avoid NaN when only one data.\n\n    len === 0 && (len = 1);\n    var size = Math.abs(axisExtent[1] - axisExtent[0]);\n    return Math.abs(size) / len;\n  },\n\n  /**\n   * @abstract\n   * @return {boolean} Is horizontal\n   */\n  isHorizontal: null,\n\n  /**\n   * @abstract\n   * @return {number} Get axis rotate, by degree.\n   */\n  getRotate: null,\n\n  /**\n   * Only be called in category axis.\n   * Can be overrided, consider other axes like in 3D.\n   * @return {number} Auto interval for cateogry axis tick and label\n   */\n  calculateCategoryInterval: function () {\n    return calculateCategoryInterval(this);\n  }\n};\n\nfunction fixExtentWithBands(extent, nTick) {\n  var size = extent[1] - extent[0];\n  var len = nTick;\n  var margin = size / len / 2;\n  extent[0] += margin;\n  extent[1] -= margin;\n} // If axis has labels [1, 2, 3, 4]. Bands on the axis are\n// |---1---|---2---|---3---|---4---|.\n// So the displayed ticks and splitLine/splitArea should between\n// each data item, otherwise cause misleading (e.g., split tow bars\n// of a single data item when there are two bar series).\n// Also consider if tickCategoryInterval > 0 and onBand, ticks and\n// splitLine/spliteArea should layout appropriately corresponding\n// to displayed labels. (So we should not use `getBandWidth` in this\n// case).\n\n\nfunction fixOnBandTicksCoords(axis, ticksCoords, tickCategoryInterval, alignWithLabel, clamp) {\n  var ticksLen = ticksCoords.length;\n\n  if (!axis.onBand || alignWithLabel || !ticksLen) {\n    return;\n  }\n\n  var axisExtent = axis.getExtent();\n  var last;\n\n  if (ticksLen === 1) {\n    ticksCoords[0].coord = axisExtent[0];\n    last = ticksCoords[1] = {\n      coord: axisExtent[0]\n    };\n  } else {\n    var shift = ticksCoords[1].coord - ticksCoords[0].coord;\n    each(ticksCoords, function (ticksItem) {\n      ticksItem.coord -= shift / 2;\n      var tickCategoryInterval = tickCategoryInterval || 0; // Avoid split a single data item when odd interval.\n\n      if (tickCategoryInterval % 2 > 0) {\n        ticksItem.coord -= shift / ((tickCategoryInterval + 1) * 2);\n      }\n    });\n    last = {\n      coord: ticksCoords[ticksLen - 1].coord + shift\n    };\n    ticksCoords.push(last);\n  }\n\n  var inverse = axisExtent[0] > axisExtent[1];\n\n  if (littleThan(ticksCoords[0].coord, axisExtent[0])) {\n    clamp ? ticksCoords[0].coord = axisExtent[0] : ticksCoords.shift();\n  }\n\n  if (clamp && littleThan(axisExtent[0], ticksCoords[0].coord)) {\n    ticksCoords.unshift({\n      coord: axisExtent[0]\n    });\n  }\n\n  if (littleThan(axisExtent[1], last.coord)) {\n    clamp ? last.coord = axisExtent[1] : ticksCoords.pop();\n  }\n\n  if (clamp && littleThan(last.coord, axisExtent[1])) {\n    ticksCoords.push({\n      coord: axisExtent[1]\n    });\n  }\n\n  function littleThan(a, b) {\n    return inverse ? a > b : a < b;\n  }\n}\n\nvar _default = Axis;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _model = require(\"../../util/model\");\n\nvar isNameSpecified = _model.isNameSpecified;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar LegendModel = echarts.extendComponentModel({\n  type: 'legend.plain',\n  dependencies: ['series'],\n  layoutMode: {\n    type: 'box',\n    // legend.width/height are maxWidth/maxHeight actually,\n    // whereas realy width/height is calculated by its content.\n    // (Setting {left: 10, right: 10} does not make sense).\n    // So consider the case:\n    // `setOption({legend: {left: 10});`\n    // then `setOption({legend: {right: 10});`\n    // The previous `left` should be cleared by setting `ignoreSize`.\n    ignoreSize: true\n  },\n  init: function (option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n  },\n  mergeOption: function (option) {\n    LegendModel.superCall(this, 'mergeOption', option);\n  },\n  optionUpdated: function () {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name = legendData[i].get('name');\n\n        if (this.isSelected(name)) {\n          // Force to unselect others\n          this.select(name);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  },\n  _updateData: function (ecModel) {\n    var potentialData = [];\n    var availableNames = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      var seriesName = seriesModel.name;\n      availableNames.push(seriesName);\n      var isPotential;\n\n      if (seriesModel.legendDataProvider) {\n        var data = seriesModel.legendDataProvider();\n        var names = data.mapArray(data.getName);\n\n        if (!ecModel.isSeriesFiltered(seriesModel)) {\n          availableNames = availableNames.concat(names);\n        }\n\n        if (names.length) {\n          potentialData = potentialData.concat(names);\n        } else {\n          isPotential = true;\n        }\n      } else {\n        isPotential = true;\n      }\n\n      if (isPotential && isNameSpecified(seriesModel)) {\n        potentialData.push(seriesModel.name);\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames; // If legend.data not specified in option, use availableNames as data,\n    // which is convinient for user preparing option.\n\n    var rawData = this.get('data') || potentialData;\n    var legendData = zrUtil.map(rawData, function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    /**\n     * @type {Array.<module:echarts/model/Model>}\n     * @private\n     */\n\n    this._data = legendData;\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Model>}\n   */\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @param {string} name\n   */\n  select: function (name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  },\n\n  /**\n   * @param {string} name\n   */\n  unSelect: function (name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  },\n\n  /**\n   * @param {string} name\n   */\n  toggleSelected: function (name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  },\n\n  /**\n   * @param {string} name\n   */\n  isSelected: function (name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 4,\n    show: true,\n    // 布局方式，默认为水平布局，可选为：\n    // 'horizontal' | 'vertical'\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    // 水平对齐\n    // 'auto' | 'left' | 'right'\n    // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 图例边框颜色\n    borderColor: '#ccc',\n    borderRadius: 0,\n    // 图例边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 图例内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 各个item之间的间隔，单位px，默认为10，\n    // 横向布局时为水平间隔，纵向布局时为纵向间隔\n    itemGap: 10,\n    // 图例图形宽度\n    itemWidth: 25,\n    // 图例图形高度\n    itemHeight: 14,\n    // 图例关闭时候的颜色\n    inactiveColor: '#ccc',\n    textStyle: {\n      // 图例文字颜色\n      color: '#333'\n    },\n    // formatter: '',\n    // 选择模式，默认开启图例开关\n    selectedMode: true,\n    // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n    // selected: null,\n    // 图例内容（详见legend.data，数组中每一项代表一个item\n    // data: [],\n    // Tooltip 相关配置\n    tooltip: {\n      show: false\n    }\n  }\n});\nvar _default = LegendModel;\nmodule.exports = _default;","var PI2 = Math.PI * 2;\n\nfunction normalizeRadian(angle) {\n  angle %= PI2;\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle;\n}\n\nexports.normalizeRadian = normalizeRadian;","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\nvar isString = _util.isString;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar isObject = _util.isObject;\nvar clone = _util.clone;\n\nvar _model = require(\"../../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\nvar _sourceHelper = require(\"./sourceHelper\");\n\nvar guessOrdinal = _sourceHelper.guessOrdinal;\n\nvar Source = require(\"../Source\");\n\nvar _dimensionHelper = require(\"./dimensionHelper\");\n\nvar OTHER_DIMENSIONS = _dimensionHelper.OTHER_DIMENSIONS;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @deprecated\n * Use `echarts/data/helper/createDimensions` instead.\n */\n\n/**\n * @see {module:echarts/test/ut/spec/data/completeDimensions}\n *\n * Complete the dimensions array, by user defined `dimension` and `encode`,\n * and guessing from the data structure.\n * If no 'value' dimension specified, the first no-named dimension will be\n * named as 'value'.\n *\n * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n *      provides not only dim template, but also default order.\n *      properties: 'name', 'type', 'displayName'.\n *      `name` of each item provides default coord name.\n *      [{dimsDef: [string|Object, ...]}, ...] dimsDef of sysDim item provides default dim name, and\n *                                    provide dims count that the sysDim required.\n *      [{ordinalMeta}] can be specified.\n * @param {module:echarts/data/Source|Array|Object} source or data (for compatibal with pervious)\n * @param {Object} [opt]\n * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n *      For example: ['asdf', {name, type}, ...].\n * @param {Object|HashMap} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n * @param {string} [opt.generateCoord] Generate coord dim with the given name.\n *                 If not specified, extra dim names will be:\n *                 'value', 'value0', 'value1', ...\n * @param {number} [opt.generateCoordCount] By default, the generated dim name is `generateCoord`.\n *                 If `generateCoordCount` specified, the generated dim names will be:\n *                 `generateCoord` + 0, `generateCoord` + 1, ...\n *                 can be Infinity, indicate that use all of the remain columns.\n * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n * @param {number} [opt.encodeDefaulter] If not specified, auto find the next available data dim.\n * @return {Array.<Object>} [{\n *      name: string mandatory,\n *      displayName: string, the origin name in dimsDef, see source helper.\n *                 If displayName given, the tooltip will displayed vertically.\n *      coordDim: string mandatory,\n *      coordDimIndex: number mandatory,\n *      type: string optional,\n *      otherDims: { never null/undefined\n *          tooltip: number optional,\n *          label: number optional,\n *          itemName: number optional,\n *          seriesName: number optional,\n *      },\n *      isExtraCoord: boolean true if coord is generated\n *          (not specified in encode and not series specified)\n *      other props ...\n * }]\n */\nfunction completeDimensions(sysDims, source, opt) {\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  opt = opt || {};\n  sysDims = (sysDims || []).slice();\n  var dimsDef = (opt.dimsDef || []).slice();\n  var encodeDef = createHashMap(opt.encodeDef);\n  var dataDimNameMap = createHashMap();\n  var coordDimNameMap = createHashMap(); // var valueCandidate;\n\n  var result = [];\n  var dimCount = getDimCount(source, sysDims, dimsDef, opt.dimCount); // Apply user defined dims (`name` and `type`) and init result.\n\n  for (var i = 0; i < dimCount; i++) {\n    var dimDefItem = dimsDef[i] = extend({}, isObject(dimsDef[i]) ? dimsDef[i] : {\n      name: dimsDef[i]\n    });\n    var userDimName = dimDefItem.name;\n    var resultItem = result[i] = {\n      otherDims: {}\n    }; // Name will be applied later for avoiding duplication.\n\n    if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n      // Only if `series.dimensions` is defined in option\n      // displayName, will be set, and dimension will be diplayed vertically in\n      // tooltip by default.\n      resultItem.name = resultItem.displayName = userDimName;\n      dataDimNameMap.set(userDimName, i);\n    }\n\n    dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n    dimDefItem.displayName != null && (resultItem.displayName = dimDefItem.displayName);\n  } // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n\n\n  encodeDef.each(function (dataDims, coordDim) {\n    dataDims = normalizeToArray(dataDims).slice();\n    var validDataDims = encodeDef.set(coordDim, []);\n    each(dataDims, function (resultDimIdx, idx) {\n      // The input resultDimIdx can be dim name or index.\n      isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n\n      if (resultDimIdx != null && resultDimIdx < dimCount) {\n        validDataDims[idx] = resultDimIdx;\n        applyDim(result[resultDimIdx], coordDim, idx);\n      }\n    });\n  }); // Apply templetes and default order from `sysDims`.\n\n  var availDimIdx = 0;\n  each(sysDims, function (sysDimItem, sysDimIndex) {\n    var coordDim;\n    var sysDimItem;\n    var sysDimItemDimsDef;\n    var sysDimItemOtherDims;\n\n    if (isString(sysDimItem)) {\n      coordDim = sysDimItem;\n      sysDimItem = {};\n    } else {\n      coordDim = sysDimItem.name;\n      var ordinalMeta = sysDimItem.ordinalMeta;\n      sysDimItem.ordinalMeta = null;\n      sysDimItem = clone(sysDimItem);\n      sysDimItem.ordinalMeta = ordinalMeta; // `coordDimIndex` should not be set directly.\n\n      sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemOtherDims = sysDimItem.otherDims;\n      sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n    }\n\n    var dataDims = normalizeToArray(encodeDef.get(coordDim)); // dimensions provides default dim sequences.\n\n    if (!dataDims.length) {\n      for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n        while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n          availDimIdx++;\n        }\n\n        availDimIdx < result.length && dataDims.push(availDimIdx++);\n      }\n    } // Apply templates.\n\n\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      var resultItem = result[resultDimIdx];\n      applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n\n      if (resultItem.name == null && sysDimItemDimsDef) {\n        var sysDimItemDimsDefItem = sysDimItemDimsDef[coordDimIndex];\n        !isObject(sysDimItemDimsDefItem) && (sysDimItemDimsDefItem = {\n          name: sysDimItemDimsDefItem\n        });\n        resultItem.name = resultItem.displayName = sysDimItemDimsDefItem.name;\n        resultItem.defaultTooltip = sysDimItemDimsDefItem.defaultTooltip;\n      } // FIXME refactor, currently only used in case: {otherDims: {tooltip: false}}\n\n\n      sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n    });\n  });\n\n  function applyDim(resultItem, coordDim, coordDimIndex) {\n    if (OTHER_DIMENSIONS.get(coordDim) != null) {\n      resultItem.otherDims[coordDim] = coordDimIndex;\n    } else {\n      resultItem.coordDim = coordDim;\n      resultItem.coordDimIndex = coordDimIndex;\n      coordDimNameMap.set(coordDim, true);\n    }\n  } // Make sure the first extra dim is 'value'.\n\n\n  var generateCoord = opt.generateCoord;\n  var generateCoordCount = opt.generateCoordCount;\n  var fromZero = generateCoordCount != null;\n  generateCoordCount = generateCoord ? generateCoordCount || 1 : 0;\n  var extra = generateCoord || 'value'; // Set dim `name` and other `coordDim` and other props.\n\n  for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n    var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n    var coordDim = resultItem.coordDim;\n\n    if (coordDim == null) {\n      resultItem.coordDim = genName(extra, coordDimNameMap, fromZero);\n      resultItem.coordDimIndex = 0;\n\n      if (!generateCoord || generateCoordCount <= 0) {\n        resultItem.isExtraCoord = true;\n      }\n\n      generateCoordCount--;\n    }\n\n    resultItem.name == null && (resultItem.name = genName(resultItem.coordDim, dataDimNameMap));\n\n    if (resultItem.type == null && guessOrdinal(source, resultDimIdx, resultItem.name)) {\n      resultItem.type = 'ordinal';\n    }\n  }\n\n  return result;\n} // ??? TODO\n// Originally detect dimCount by data[0]. Should we\n// optimize it to only by sysDims and dimensions and encode.\n// So only necessary dims will be initialized.\n// But\n// (1) custom series should be considered. where other dims\n// may be visited.\n// (2) sometimes user need to calcualte bubble size or use visualMap\n// on other dimensions besides coordSys needed.\n// So, dims that is not used by system, should be shared in storage?\n\n\nfunction getDimCount(source, sysDims, dimsDef, optDimCount) {\n  // Note that the result dimCount should not small than columns count\n  // of data, otherwise `dataDimNameMap` checking will be incorrect.\n  var dimCount = Math.max(source.dimensionsDetectCount || 1, sysDims.length, dimsDef.length, optDimCount || 0);\n  each(sysDims, function (sysDimItem) {\n    var sysDimItemDimsDef = sysDimItem.dimsDef;\n    sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n  });\n  return dimCount;\n}\n\nfunction genName(name, map, fromZero) {\n  if (fromZero || map.get(name) != null) {\n    var i = 0;\n\n    while (map.get(name + i) != null) {\n      i++;\n    }\n\n    name += i;\n  }\n\n  map.set(name, true);\n  return name;\n}\n\nvar _default = completeDimensions;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('radar', function (seriesModel) {\n    var data = seriesModel.getData();\n    var points = [];\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (!coordSys) {\n      return;\n    }\n\n    function pointsConverter(val, idx) {\n      points[idx] = points[idx] || [];\n      points[idx][i] = coordSys.dataToPoint(val, i);\n    }\n\n    var axes = coordSys.getIndicatorAxes();\n\n    for (var i = 0; i < axes.length; i++) {\n      data.each(data.mapDimension(axes[i].dim), pointsConverter);\n    }\n\n    data.each(function (idx) {\n      // Close polygon\n      points[idx][0] && points[idx].push(points[idx][0].slice());\n      data.setItemLayout(idx, points[idx]);\n    });\n  });\n}\n\nmodule.exports = _default;","var svgURI = 'http://www.w3.org/2000/svg';\n\nfunction createElement(name) {\n  return document.createElementNS(svgURI, name);\n}\n\nexports.createElement = createElement;","function windingLine(x0, y0, x1, y1, x, y) {\n  if (y > y0 && y > y1 || y < y0 && y < y1) {\n    return 0;\n  } // Ignore horizontal line\n\n\n  if (y1 === y0) {\n    return 0;\n  }\n\n  var dir = y1 < y0 ? 1 : -1;\n  var t = (y - y0) / (y1 - y0); // Avoid winding error when intersection point is the connect point of two line of polygon\n\n  if (t === 1 || t === 0) {\n    dir = y1 < y0 ? 0.5 : -0.5;\n  }\n\n  var x_ = t * (x1 - x0) + x0; // If (x, y) on the line, considered as \"contain\".\n\n  return x_ === x ? Infinity : x_ > x ? dir : 0;\n}\n\nmodule.exports = windingLine;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar retrieve = _util.retrieve;\nvar each = _util.each;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Helper for model references.\n * There are many manners to refer axis/coordSys.\n */\n// TODO\n// merge relevant logic to this file?\n// check: \"modelHelper\" of tooltip and \"BrushTargetManager\".\n\n/**\n * @return {Object} For example:\n * {\n *     coordSysName: 'cartesian2d',\n *     coordSysDims: ['x', 'y', ...],\n *     axisMap: HashMap({\n *         x: xAxisModel,\n *         y: yAxisModel\n *     }),\n *     categoryAxisMap: HashMap({\n *         x: xAxisModel,\n *         y: undefined\n *     }),\n *     // It also indicate that whether there is category axis.\n *     firstCategoryDimIndex: 1,\n *     // To replace user specified encode.\n * }\n */\nfunction getCoordSysDefineBySeries(seriesModel) {\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var result = {\n    coordSysName: coordSysName,\n    coordSysDims: [],\n    axisMap: createHashMap(),\n    categoryAxisMap: createHashMap()\n  };\n  var fetch = fetchers[coordSysName];\n\n  if (fetch) {\n    fetch(seriesModel, result, result.axisMap, result.categoryAxisMap);\n    return result;\n  }\n}\n\nvar fetchers = {\n  cartesian2d: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var xAxisModel = seriesModel.getReferringComponents('xAxis')[0];\n    var yAxisModel = seriesModel.getReferringComponents('yAxis')[0];\n    result.coordSysDims = ['x', 'y'];\n    axisMap.set('x', xAxisModel);\n    axisMap.set('y', yAxisModel);\n\n    if (isCategory(xAxisModel)) {\n      categoryAxisMap.set('x', xAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n\n    if (isCategory(yAxisModel)) {\n      categoryAxisMap.set('y', yAxisModel);\n      result.firstCategoryDimIndex = 1;\n    }\n  },\n  singleAxis: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var singleAxisModel = seriesModel.getReferringComponents('singleAxis')[0];\n    result.coordSysDims = ['single'];\n    axisMap.set('single', singleAxisModel);\n\n    if (isCategory(singleAxisModel)) {\n      categoryAxisMap.set('single', singleAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n  },\n  polar: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var polarModel = seriesModel.getReferringComponents('polar')[0];\n    var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n    var angleAxisModel = polarModel.findAxisModel('angleAxis');\n    result.coordSysDims = ['radius', 'angle'];\n    axisMap.set('radius', radiusAxisModel);\n    axisMap.set('angle', angleAxisModel);\n\n    if (isCategory(radiusAxisModel)) {\n      categoryAxisMap.set('radius', radiusAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n\n    if (isCategory(angleAxisModel)) {\n      categoryAxisMap.set('angle', angleAxisModel);\n      result.firstCategoryDimIndex = 1;\n    }\n  },\n  geo: function (seriesModel, result, axisMap, categoryAxisMap) {\n    result.coordSysDims = ['lng', 'lat'];\n  },\n  parallel: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var ecModel = seriesModel.ecModel;\n    var parallelModel = ecModel.getComponent('parallel', seriesModel.get('parallelIndex'));\n    var coordSysDims = result.coordSysDims = parallelModel.dimensions.slice();\n    each(parallelModel.parallelAxisIndex, function (axisIndex, index) {\n      var axisModel = ecModel.getComponent('parallelAxis', axisIndex);\n      var axisDim = coordSysDims[index];\n      axisMap.set(axisDim, axisModel);\n\n      if (isCategory(axisModel) && result.firstCategoryDimIndex == null) {\n        categoryAxisMap.set(axisDim, axisModel);\n        result.firstCategoryDimIndex = index;\n      }\n    });\n  }\n};\n\nfunction isCategory(axisModel) {\n  return axisModel.get('type') === 'category';\n}\n\nexports.getCoordSysDefineBySeries = getCoordSysDefineBySeries;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar ORIGIN_METHOD = '\\0__throttleOriginMethod';\nvar RATE = '\\0__throttleRate';\nvar THROTTLE_TYPE = '\\0__throttleType';\n/**\n * @public\n * @param {(Function)} fn\n * @param {number} [delay=0] Unit: ms.\n * @param {boolean} [debounce=false]\n *        true: If call interval less than `delay`, only the last call works.\n *        false: If call interval less than `delay, call works on fixed rate.\n * @return {(Function)} throttled fn.\n */\n\nfunction throttle(fn, delay, debounce) {\n  var currCall;\n  var lastCall = 0;\n  var lastExec = 0;\n  var timer = null;\n  var diff;\n  var scope;\n  var args;\n  var debounceNextCall;\n  delay = delay || 0;\n\n  function exec() {\n    lastExec = new Date().getTime();\n    timer = null;\n    fn.apply(scope, args || []);\n  }\n\n  var cb = function () {\n    currCall = new Date().getTime();\n    scope = this;\n    args = arguments;\n    var thisDelay = debounceNextCall || delay;\n    var thisDebounce = debounceNextCall || debounce;\n    debounceNextCall = null;\n    diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n    clearTimeout(timer); // Here we should make sure that: the `exec` SHOULD NOT be called later\n    // than a new call of `cb`, that is, preserving the command order. Consider\n    // calculating \"scale rate\" when roaming as an example. When a call of `cb`\n    // happens, either the `exec` is called dierectly, or the call is delayed.\n    // But the delayed call should never be later than next call of `cb`. Under\n    // this assurance, we can simply update view state each time `dispatchAction`\n    // triggered by user roaming, but not need to add extra code to avoid the\n    // state being \"rolled-back\".\n\n    if (thisDebounce) {\n      timer = setTimeout(exec, thisDelay);\n    } else {\n      if (diff >= 0) {\n        exec();\n      } else {\n        timer = setTimeout(exec, -diff);\n      }\n    }\n\n    lastCall = currCall;\n  };\n  /**\n   * Clear throttle.\n   * @public\n   */\n\n\n  cb.clear = function () {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  };\n  /**\n   * Enable debounce once.\n   */\n\n\n  cb.debounceNextCall = function (debounceDelay) {\n    debounceNextCall = debounceDelay;\n  };\n\n  return cb;\n}\n/**\n * Create throttle method or update throttle rate.\n *\n * @example\n * ComponentView.prototype.render = function () {\n *     ...\n *     throttle.createOrUpdate(\n *         this,\n *         '_dispatchAction',\n *         this.model.get('throttle'),\n *         'fixRate'\n *     );\n * };\n * ComponentView.prototype.remove = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n * ComponentView.prototype.dispose = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n * @param {number} [rate]\n * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n * @return {Function} throttled function.\n */\n\n\nfunction createOrUpdate(obj, fnAttr, rate, throttleType) {\n  var fn = obj[fnAttr];\n\n  if (!fn) {\n    return;\n  }\n\n  var originFn = fn[ORIGIN_METHOD] || fn;\n  var lastThrottleType = fn[THROTTLE_TYPE];\n  var lastRate = fn[RATE];\n\n  if (lastRate !== rate || lastThrottleType !== throttleType) {\n    if (rate == null || !throttleType) {\n      return obj[fnAttr] = originFn;\n    }\n\n    fn = obj[fnAttr] = throttle(originFn, rate, throttleType === 'debounce');\n    fn[ORIGIN_METHOD] = originFn;\n    fn[THROTTLE_TYPE] = throttleType;\n    fn[RATE] = rate;\n  }\n\n  return fn;\n}\n/**\n * Clear throttle. Example see throttle.createOrUpdate.\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n */\n\n\nfunction clear(obj, fnAttr) {\n  var fn = obj[fnAttr];\n\n  if (fn && fn[ORIGIN_METHOD]) {\n    obj[fnAttr] = fn[ORIGIN_METHOD];\n  }\n}\n\nexports.throttle = throttle;\nexports.createOrUpdate = createOrUpdate;\nexports.clear = clear;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendComponentView({\n  type: 'marker',\n  init: function () {\n    /**\n     * Markline grouped by series\n     * @private\n     * @type {module:zrender/core/util.HashMap}\n     */\n    this.markerGroupMap = zrUtil.createHashMap();\n  },\n  render: function (markerModel, ecModel, api) {\n    var markerGroupMap = this.markerGroupMap;\n    markerGroupMap.each(function (item) {\n      item.__keep = false;\n    });\n    var markerModelKey = this.type + 'Model';\n    ecModel.eachSeries(function (seriesModel) {\n      var markerModel = seriesModel[markerModelKey];\n      markerModel && this.renderSeries(seriesModel, markerModel, ecModel, api);\n    }, this);\n    markerGroupMap.each(function (item) {\n      !item.__keep && this.group.remove(item.group);\n    }, this);\n  },\n  renderSeries: function () {}\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _clazz = require(\"./clazz\");\n\nvar parseClassType = _clazz.parseClassType;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar base = 0;\n/**\n * @public\n * @param {string} type\n * @return {string}\n */\n\nfunction getUID(type) {\n  // Considering the case of crossing js context,\n  // use Math.random to make id as unique as possible.\n  return [type || '', base++, Math.random().toFixed(5)].join('_');\n}\n/**\n * @inner\n */\n\n\nfunction enableSubTypeDefaulter(entity) {\n  var subTypeDefaulters = {};\n\n  entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n    componentType = parseClassType(componentType);\n    subTypeDefaulters[componentType.main] = defaulter;\n  };\n\n  entity.determineSubType = function (componentType, option) {\n    var type = option.type;\n\n    if (!type) {\n      var componentTypeMain = parseClassType(componentType).main;\n\n      if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n        type = subTypeDefaulters[componentTypeMain](option);\n      }\n    }\n\n    return type;\n  };\n\n  return entity;\n}\n/**\n * Topological travel on Activity Network (Activity On Vertices).\n * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n *\n * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n *\n * If there is circle dependencey, Error will be thrown.\n *\n */\n\n\nfunction enableTopologicalTravel(entity, dependencyGetter) {\n  /**\n   * @public\n   * @param {Array.<string>} targetNameList Target Component type list.\n   *                                           Can be ['aa', 'bb', 'aa.xx']\n   * @param {Array.<string>} fullNameList By which we can build dependency graph.\n   * @param {Function} callback Params: componentType, dependencies.\n   * @param {Object} context Scope of callback.\n   */\n  entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n    if (!targetNameList.length) {\n      return;\n    }\n\n    var result = makeDepndencyGraph(fullNameList);\n    var graph = result.graph;\n    var stack = result.noEntryList;\n    var targetNameSet = {};\n    zrUtil.each(targetNameList, function (name) {\n      targetNameSet[name] = true;\n    });\n\n    while (stack.length) {\n      var currComponentType = stack.pop();\n      var currVertex = graph[currComponentType];\n      var isInTargetNameSet = !!targetNameSet[currComponentType];\n\n      if (isInTargetNameSet) {\n        callback.call(context, currComponentType, currVertex.originalDeps.slice());\n        delete targetNameSet[currComponentType];\n      }\n\n      zrUtil.each(currVertex.successor, isInTargetNameSet ? removeEdgeAndAdd : removeEdge);\n    }\n\n    zrUtil.each(targetNameSet, function () {\n      throw new Error('Circle dependency may exists');\n    });\n\n    function removeEdge(succComponentType) {\n      graph[succComponentType].entryCount--;\n\n      if (graph[succComponentType].entryCount === 0) {\n        stack.push(succComponentType);\n      }\n    } // Consider this case: legend depends on series, and we call\n    // chart.setOption({series: [...]}), where only series is in option.\n    // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n    // not be called, but only sereis.mergeOption is called. Thus legend\n    // have no chance to update its local record about series (like which\n    // name of series is available in legend).\n\n\n    function removeEdgeAndAdd(succComponentType) {\n      targetNameSet[succComponentType] = true;\n      removeEdge(succComponentType);\n    }\n  };\n  /**\n   * DepndencyGraph: {Object}\n   * key: conponentType,\n   * value: {\n   *     successor: [conponentTypes...],\n   *     originalDeps: [conponentTypes...],\n   *     entryCount: {number}\n   * }\n   */\n\n\n  function makeDepndencyGraph(fullNameList) {\n    var graph = {};\n    var noEntryList = [];\n    zrUtil.each(fullNameList, function (name) {\n      var thisItem = createDependencyGraphItem(graph, name);\n      var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n      var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n      thisItem.entryCount = availableDeps.length;\n\n      if (thisItem.entryCount === 0) {\n        noEntryList.push(name);\n      }\n\n      zrUtil.each(availableDeps, function (dependentName) {\n        if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n          thisItem.predecessor.push(dependentName);\n        }\n\n        var thatItem = createDependencyGraphItem(graph, dependentName);\n\n        if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n          thatItem.successor.push(name);\n        }\n      });\n    });\n    return {\n      graph: graph,\n      noEntryList: noEntryList\n    };\n  }\n\n  function createDependencyGraphItem(graph, name) {\n    if (!graph[name]) {\n      graph[name] = {\n        predecessor: [],\n        successor: []\n      };\n    }\n\n    return graph[name];\n  }\n\n  function getAvailableDependencies(originalDeps, fullNameList) {\n    var availableDeps = [];\n    zrUtil.each(originalDeps, function (dep) {\n      zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n    });\n    return availableDeps;\n  }\n}\n\nexports.getUID = getUID;\nexports.enableSubTypeDefaulter = enableSubTypeDefaulter;\nexports.enableTopologicalTravel = enableTopologicalTravel;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar platform = ''; // Navigator not exists in node\n\nif (typeof navigator !== 'undefined') {\n  platform = navigator.platform || '';\n}\n\nvar _default = {\n  // backgroundColor: 'rgba(0,0,0,0)',\n  // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n  // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n  // Light colors:\n  // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n  // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n  // Dark colors:\n  color: ['#c23531', '#2f4554', '#61a0a8', '#d48265', '#91c7ae', '#749f83', '#ca8622', '#bda29a', '#6e7074', '#546570', '#c4ccd3'],\n  gradientColor: ['#f6efa6', '#d88273', '#bf444c'],\n  // If xAxis and yAxis declared, grid is created by default.\n  // grid: {},\n  textStyle: {\n    // color: '#000',\n    // decoration: 'none',\n    // PENDING\n    fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n    // fontFamily: 'Arial, Verdana, sans-serif',\n    fontSize: 12,\n    fontStyle: 'normal',\n    fontWeight: 'normal'\n  },\n  // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n  // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n  // Default is source-over\n  blendMode: null,\n  animation: 'auto',\n  animationDuration: 1000,\n  animationDurationUpdate: 300,\n  animationEasing: 'exponentialOut',\n  animationEasingUpdate: 'cubicOut',\n  animationThreshold: 2000,\n  // Configuration for progressive/incremental rendering\n  progressiveThreshold: 3000,\n  progressive: 400,\n  // Threshold of if use single hover layer to optimize.\n  // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n  // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n  // which is unexpected.\n  // see example <echarts/test/heatmap-large.html>.\n  hoverLayerThreshold: 3000,\n  // See: module:echarts/scale/Time\n  useUTC: false\n};\nmodule.exports = _default;","var env = require(\"../../core/env\");\n\n// Fix weird bug in some version of IE11 (like 11.0.9600.178**),\n// where exception \"unexpected call to method or property access\"\n// might be thrown when calling ctx.fill or ctx.stroke after a path\n// whose area size is zero is drawn and ctx.clip() is called and\n// shadowBlur is set. See #4572, #3112, #5777.\n// (e.g.,\n//  ctx.moveTo(10, 10);\n//  ctx.lineTo(20, 10);\n//  ctx.closePath();\n//  ctx.clip();\n//  ctx.shadowBlur = 10;\n//  ...\n//  ctx.fill();\n// )\nvar shadowTemp = [['shadowBlur', 0], ['shadowColor', '#000'], ['shadowOffsetX', 0], ['shadowOffsetY', 0]];\n\nfunction _default(orignalBrush) {\n  // version string can be: '11.0'\n  return env.browser.ie && env.browser.version >= 11 ? function () {\n    var clipPaths = this.__clipPaths;\n    var style = this.style;\n    var modified;\n\n    if (clipPaths) {\n      for (var i = 0; i < clipPaths.length; i++) {\n        var clipPath = clipPaths[i];\n        var shape = clipPath && clipPath.shape;\n        var type = clipPath && clipPath.type;\n\n        if (shape && (type === 'sector' && shape.startAngle === shape.endAngle || type === 'rect' && (!shape.width || !shape.height))) {\n          for (var j = 0; j < shadowTemp.length; j++) {\n            // It is save to put shadowTemp static, because shadowTemp\n            // will be all modified each item brush called.\n            shadowTemp[j][2] = style[shadowTemp[j][0]];\n            style[shadowTemp[j][0]] = shadowTemp[j][1];\n          }\n\n          modified = true;\n          break;\n        }\n      }\n    }\n\n    orignalBrush.apply(this, arguments);\n\n    if (modified) {\n      for (var j = 0; j < shadowTemp.length; j++) {\n        style[shadowTemp[j][0]] = shadowTemp[j][2];\n      }\n    }\n  } : orignalBrush;\n}\n\nmodule.exports = _default;","var numberUtil = require(\"../util/number\");\n\nvar formatUtil = require(\"../util/format\");\n\nvar Scale = require(\"./Scale\");\n\nvar helper = require(\"./helper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\nvar roundNumber = numberUtil.round;\n/**\n * @alias module:echarts/coord/scale/Interval\n * @constructor\n */\n\nvar IntervalScale = Scale.extend({\n  type: 'interval',\n  _interval: 0,\n  _intervalPrecision: 2,\n  setExtent: function (start, end) {\n    var thisExtent = this._extent; //start,end may be a Number like '25',so...\n\n    if (!isNaN(start)) {\n      thisExtent[0] = parseFloat(start);\n    }\n\n    if (!isNaN(end)) {\n      thisExtent[1] = parseFloat(end);\n    }\n  },\n  unionExtent: function (other) {\n    var extent = this._extent;\n    other[0] < extent[0] && (extent[0] = other[0]);\n    other[1] > extent[1] && (extent[1] = other[1]); // unionExtent may called by it's sub classes\n\n    IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n  },\n\n  /**\n   * Get interval\n   */\n  getInterval: function () {\n    return this._interval;\n  },\n\n  /**\n   * Set interval\n   */\n  setInterval: function (interval) {\n    this._interval = interval; // Dropped auto calculated niceExtent and use user setted extent\n    // We assume user wan't to set both interval, min, max to get a better result\n\n    this._niceExtent = this._extent.slice();\n    this._intervalPrecision = helper.getIntervalPrecision(interval);\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    return helper.intervalScaleGetTicks(this._interval, this._extent, this._niceExtent, this._intervalPrecision);\n  },\n\n  /**\n   * @param {number} data\n   * @param {Object} [opt]\n   * @param {number|string} [opt.precision] If 'auto', use nice presision.\n   * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n   * @return {string}\n   */\n  getLabel: function (data, opt) {\n    if (data == null) {\n      return '';\n    }\n\n    var precision = opt && opt.precision;\n\n    if (precision == null) {\n      precision = numberUtil.getPrecisionSafe(data) || 0;\n    } else if (precision === 'auto') {\n      // Should be more precise then tick.\n      precision = this._intervalPrecision;\n    } // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n    // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n\n\n    data = roundNumber(data, precision, true);\n    return formatUtil.addCommas(data);\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   *\n   * @param {number} [splitNumber = 5] Desired number of ticks\n   * @param {number} [minInterval]\n   * @param {number} [maxInterval]\n   */\n  niceTicks: function (splitNumber, minInterval, maxInterval) {\n    splitNumber = splitNumber || 5;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (!isFinite(span)) {\n      return;\n    } // User may set axis min 0 and data are all negative\n    // FIXME If it needs to reverse ?\n\n\n    if (span < 0) {\n      span = -span;\n      extent.reverse();\n    }\n\n    var result = helper.intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval);\n    this._intervalPrecision = result.intervalPrecision;\n    this._interval = result.interval;\n    this._niceExtent = result.niceTickExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @param {Object} opt\n   * @param {number} [opt.splitNumber = 5] Given approx tick number\n   * @param {boolean} [opt.fixMin=false]\n   * @param {boolean} [opt.fixMax=false]\n   * @param {boolean} [opt.minInterval]\n   * @param {boolean} [opt.maxInterval]\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      if (extent[0] !== 0) {\n        // Expand extent\n        var expandSize = extent[0]; // In the fowllowing case\n        //      Axis has been fixed max 100\n        //      Plus data are all 100 and axis extent are [100, 100].\n        // Extend to the both side will cause expanded max is larger than fixed max.\n        // So only expand to the smaller side.\n\n        if (!opt.fixMax) {\n          extent[1] += expandSize / 2;\n          extent[0] -= expandSize / 2;\n        } else {\n          extent[0] -= expandSize / 2;\n        }\n      } else {\n        extent[1] = 1;\n      }\n    }\n\n    var span = extent[1] - extent[0]; // If there are no data and extent are [Infinity, -Infinity]\n\n    if (!isFinite(span)) {\n      extent[0] = 0;\n      extent[1] = 1;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n    }\n  }\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nIntervalScale.create = function () {\n  return new IntervalScale();\n};\n\nvar _default = IntervalScale;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Scale = require(\"./Scale\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar IntervalScale = require(\"./Interval\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n// Use some method of IntervalScale\nvar scaleProto = Scale.prototype;\nvar intervalScaleProto = IntervalScale.prototype;\nvar getPrecisionSafe = numberUtil.getPrecisionSafe;\nvar roundingErrorFix = numberUtil.round;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar mathPow = Math.pow;\nvar mathLog = Math.log;\nvar LogScale = Scale.extend({\n  type: 'log',\n  base: 10,\n  $constructor: function () {\n    Scale.apply(this, arguments);\n    this._originalScale = new IntervalScale();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    var originalScale = this._originalScale;\n    var extent = this._extent;\n    var originalExtent = originalScale.getExtent();\n    return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n      var powVal = numberUtil.round(mathPow(this.base, val)); // Fix #4158\n\n      powVal = val === extent[0] && originalScale.__fixMin ? fixRoundingError(powVal, originalExtent[0]) : powVal;\n      powVal = val === extent[1] && originalScale.__fixMax ? fixRoundingError(powVal, originalExtent[1]) : powVal;\n      return powVal;\n    }, this);\n  },\n\n  /**\n   * @param {number} val\n   * @return {string}\n   */\n  getLabel: intervalScaleProto.getLabel,\n\n  /**\n   * @param  {number} val\n   * @return {number}\n   */\n  scale: function (val) {\n    val = scaleProto.scale.call(this, val);\n    return mathPow(this.base, val);\n  },\n\n  /**\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var base = this.base;\n    start = mathLog(start) / mathLog(base);\n    end = mathLog(end) / mathLog(base);\n    intervalScaleProto.setExtent.call(this, start, end);\n  },\n\n  /**\n   * @return {number} end\n   */\n  getExtent: function () {\n    var base = this.base;\n    var extent = scaleProto.getExtent.call(this);\n    extent[0] = mathPow(base, extent[0]);\n    extent[1] = mathPow(base, extent[1]); // Fix #4158\n\n    var originalScale = this._originalScale;\n    var originalExtent = originalScale.getExtent();\n    originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n    originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n    return extent;\n  },\n\n  /**\n   * @param  {Array.<number>} extent\n   */\n  unionExtent: function (extent) {\n    this._originalScale.unionExtent(extent);\n\n    var base = this.base;\n    extent[0] = mathLog(extent[0]) / mathLog(base);\n    extent[1] = mathLog(extent[1]) / mathLog(base);\n    scaleProto.unionExtent.call(this, extent);\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    // TODO\n    // filter value that <= 0\n    this.unionExtent(data.getApproximateExtent(dim));\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   * @param  {number} [approxTickNum = 10] Given approx tick number\n   */\n  niceTicks: function (approxTickNum) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (span === Infinity || span <= 0) {\n      return;\n    }\n\n    var interval = numberUtil.quantity(span);\n    var err = approxTickNum / span * interval; // Filter ticks to get closer to the desired count.\n\n    if (err <= 0.5) {\n      interval *= 10;\n    } // Interval should be integer\n\n\n    while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n      interval *= 10;\n    }\n\n    var niceExtent = [numberUtil.round(mathCeil(extent[0] / interval) * interval), numberUtil.round(mathFloor(extent[1] / interval) * interval)];\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @override\n   */\n  niceExtent: function (opt) {\n    intervalScaleProto.niceExtent.call(this, opt);\n    var originalScale = this._originalScale;\n    originalScale.__fixMin = opt.fixMin;\n    originalScale.__fixMax = opt.fixMax;\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  LogScale.prototype[methodName] = function (val) {\n    val = mathLog(val) / mathLog(this.base);\n    return scaleProto[methodName].call(this, val);\n  };\n});\n\nLogScale.create = function () {\n  return new LogScale();\n};\n\nfunction fixRoundingError(val, originalVal) {\n  return roundingErrorFix(val, getPrecisionSafe(originalVal));\n}\n\nvar _default = LogScale;\nmodule.exports = _default;","var Path = require(\"../Path\");\n\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\nvar _default = Path.extend({\n  type: 'arc',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"../component/radar\");\n\nrequire(\"./radar/RadarSeries\");\n\nrequire(\"./radar/RadarView\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar radarLayout = require(\"./radar/radarLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\nvar backwardCompat = require(\"./radar/backwardCompat\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Must use radar component\necharts.registerVisual(dataColor('radar'));\necharts.registerVisual(visualSymbol('radar', 'circle'));\necharts.registerLayout(radarLayout);\necharts.registerProcessor(dataFilter('radar'));\necharts.registerPreprocessor(backwardCompat);","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar isObject = _util.isObject;\nvar map = _util.map;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @constructor\n * @param {Object} [opt]\n * @param {Object} [opt.categories=[]]\n * @param {Object} [opt.needCollect=false]\n * @param {Object} [opt.deduplication=false]\n */\nfunction OrdinalMeta(opt) {\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n  this.categories = opt.categories || [];\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._needCollect = opt.needCollect;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._deduplication = opt.deduplication;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._map;\n}\n/**\n * @param {module:echarts/model/Model} axisModel\n * @return {module:echarts/data/OrdinalMeta}\n */\n\n\nOrdinalMeta.createByAxisModel = function (axisModel) {\n  var option = axisModel.option;\n  var data = option.data;\n  var categories = data && map(data, getName);\n  return new OrdinalMeta({\n    categories: categories,\n    needCollect: !categories,\n    // deduplication is default in axis.\n    deduplication: option.dedplication !== false\n  });\n};\n\nvar proto = OrdinalMeta.prototype;\n/**\n * @param {string} category\n * @return {number} ordinal\n */\n\nproto.getOrdinal = function (category) {\n  return getOrCreateMap(this).get(category);\n};\n/**\n * @param {*} category\n * @return {number} The ordinal. If not found, return NaN.\n */\n\n\nproto.parseAndCollect = function (category) {\n  var index;\n  var needCollect = this._needCollect; // The value of category dim can be the index of the given category set.\n  // This feature is only supported when !needCollect, because we should\n  // consider a common case: a value is 2017, which is a number but is\n  // expected to be tread as a category. This case usually happen in dataset,\n  // where it happent to be no need of the index feature.\n\n  if (typeof category !== 'string' && !needCollect) {\n    return category;\n  } // Optimize for the scenario:\n  // category is ['2012-01-01', '2012-01-02', ...], where the input\n  // data has been ensured not duplicate and is large data.\n  // Notice, if a dataset dimension provide categroies, usually echarts\n  // should remove duplication except user tell echarts dont do that\n  // (set axis.deduplication = false), because echarts do not know whether\n  // the values in the category dimension has duplication (consider the\n  // parallel-aqi example)\n\n\n  if (needCollect && !this._deduplication) {\n    index = this.categories.length;\n    this.categories[index] = category;\n    return index;\n  }\n\n  var map = getOrCreateMap(this);\n  index = map.get(category);\n\n  if (index == null) {\n    if (needCollect) {\n      index = this.categories.length;\n      this.categories[index] = category;\n      map.set(category, index);\n    } else {\n      index = NaN;\n    }\n  }\n\n  return index;\n}; // Consider big data, do not create map until needed.\n\n\nfunction getOrCreateMap(ordinalMeta) {\n  return ordinalMeta._map || (ordinalMeta._map = createHashMap(ordinalMeta.categories));\n}\n\nfunction getName(obj) {\n  if (isObject(obj) && obj.value != null) {\n    return obj.value;\n  } else {\n    return obj + '';\n  }\n}\n\nvar _default = OrdinalMeta;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorUtil = require(\"zrender/lib/tool/color\");\n\nvar List = require(\"../../data/List\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar markerHelper = require(\"./markerHelper\");\n\nvar MarkerView = require(\"./MarkerView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO Better on polar\nvar markAreaTransform = function (seriesModel, coordSys, maModel, item) {\n  var lt = markerHelper.dataTransform(seriesModel, item[0]);\n  var rb = markerHelper.dataTransform(seriesModel, item[1]);\n  var retrieve = zrUtil.retrieve; // FIXME make sure lt is less than rb\n\n  var ltCoord = lt.coord;\n  var rbCoord = rb.coord;\n  ltCoord[0] = retrieve(ltCoord[0], -Infinity);\n  ltCoord[1] = retrieve(ltCoord[1], -Infinity);\n  rbCoord[0] = retrieve(rbCoord[0], Infinity);\n  rbCoord[1] = retrieve(rbCoord[1], Infinity); // Merge option into one\n\n  var result = zrUtil.mergeAll([{}, lt, rb]);\n  result.coord = [lt.coord, rb.coord];\n  result.x0 = lt.x;\n  result.y0 = lt.y;\n  result.x1 = rb.x;\n  result.y1 = rb.y;\n  return result;\n};\n\nfunction isInifinity(val) {\n  return !isNaN(val) && !isFinite(val);\n} // If a markArea has one dim\n\n\nfunction ifMarkLineHasOnlyDim(dimIndex, fromCoord, toCoord, coordSys) {\n  var otherDimIndex = 1 - dimIndex;\n  return isInifinity(fromCoord[otherDimIndex]) && isInifinity(toCoord[otherDimIndex]);\n}\n\nfunction markAreaFilter(coordSys, item) {\n  var fromCoord = item.coord[0];\n  var toCoord = item.coord[1];\n\n  if (coordSys.type === 'cartesian2d') {\n    // In case\n    // {\n    //  markArea: {\n    //    data: [{ yAxis: 2 }]\n    //  }\n    // }\n    if (fromCoord && toCoord && (ifMarkLineHasOnlyDim(1, fromCoord, toCoord, coordSys) || ifMarkLineHasOnlyDim(0, fromCoord, toCoord, coordSys))) {\n      return true;\n    }\n  }\n\n  return markerHelper.dataFilter(coordSys, {\n    coord: fromCoord,\n    x: item.x0,\n    y: item.y0\n  }) || markerHelper.dataFilter(coordSys, {\n    coord: toCoord,\n    x: item.x1,\n    y: item.y1\n  });\n} // dims can be ['x0', 'y0'], ['x1', 'y1'], ['x0', 'y1'], ['x1', 'y0']\n\n\nfunction getSingleMarkerEndPoint(data, idx, dims, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  var itemModel = data.getItemModel(idx);\n  var point;\n  var xPx = numberUtil.parsePercent(itemModel.get(dims[0]), api.getWidth());\n  var yPx = numberUtil.parsePercent(itemModel.get(dims[1]), api.getHeight());\n\n  if (!isNaN(xPx) && !isNaN(yPx)) {\n    point = [xPx, yPx];\n  } else {\n    // Chart like bar may have there own marker positioning logic\n    if (seriesModel.getMarkerPosition) {\n      // Use the getMarkerPoisition\n      point = seriesModel.getMarkerPosition(data.getValues(dims, idx));\n    } else {\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n      var pt = [x, y];\n      coordSys.clampData && coordSys.clampData(pt, pt);\n      point = coordSys.dataToPoint(pt, true);\n    }\n\n    if (coordSys.type === 'cartesian2d') {\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n\n      if (isInifinity(x)) {\n        point[0] = xAxis.toGlobalCoord(xAxis.getExtent()[dims[0] === 'x0' ? 0 : 1]);\n      } else if (isInifinity(y)) {\n        point[1] = yAxis.toGlobalCoord(yAxis.getExtent()[dims[1] === 'y0' ? 0 : 1]);\n      }\n    } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n  }\n\n  return point;\n}\n\nvar dimPermutations = [['x0', 'y0'], ['x1', 'y0'], ['x1', 'y1'], ['x0', 'y1']];\nMarkerView.extend({\n  type: 'markArea',\n  // updateLayout: function (markAreaModel, ecModel, api) {\n  //     ecModel.eachSeries(function (seriesModel) {\n  //         var maModel = seriesModel.markAreaModel;\n  //         if (maModel) {\n  //             var areaData = maModel.getData();\n  //             areaData.each(function (idx) {\n  //                 var points = zrUtil.map(dimPermutations, function (dim) {\n  //                     return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\n  //                 });\n  //                 // Layout\n  //                 areaData.setItemLayout(idx, points);\n  //                 var el = areaData.getItemGraphicEl(idx);\n  //                 el.setShape('points', points);\n  //             });\n  //         }\n  //     }, this);\n  // },\n  updateTransform: function (markAreaModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var maModel = seriesModel.markAreaModel;\n\n      if (maModel) {\n        var areaData = maModel.getData();\n        areaData.each(function (idx) {\n          var points = zrUtil.map(dimPermutations, function (dim) {\n            return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\n          }); // Layout\n\n          areaData.setItemLayout(idx, points);\n          var el = areaData.getItemGraphicEl(idx);\n          el.setShape('points', points);\n        });\n      }\n    }, this);\n  },\n  renderSeries: function (seriesModel, maModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesId = seriesModel.id;\n    var seriesData = seriesModel.getData();\n    var areaGroupMap = this.markerGroupMap;\n    var polygonGroup = areaGroupMap.get(seriesId) || areaGroupMap.set(seriesId, {\n      group: new graphic.Group()\n    });\n    this.group.add(polygonGroup.group);\n    polygonGroup.__keep = true;\n    var areaData = createList(coordSys, seriesModel, maModel); // Line data for tooltip and formatter\n\n    maModel.setData(areaData); // Update visual and layout of line\n\n    areaData.each(function (idx) {\n      // Layout\n      areaData.setItemLayout(idx, zrUtil.map(dimPermutations, function (dim) {\n        return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\n      })); // Visual\n\n      areaData.setItemVisual(idx, {\n        color: seriesData.getVisual('color')\n      });\n    });\n    areaData.diff(polygonGroup.__data).add(function (idx) {\n      var polygon = new graphic.Polygon({\n        shape: {\n          points: areaData.getItemLayout(idx)\n        }\n      });\n      areaData.setItemGraphicEl(idx, polygon);\n      polygonGroup.group.add(polygon);\n    }).update(function (newIdx, oldIdx) {\n      var polygon = polygonGroup.__data.getItemGraphicEl(oldIdx);\n\n      graphic.updateProps(polygon, {\n        shape: {\n          points: areaData.getItemLayout(newIdx)\n        }\n      }, maModel, newIdx);\n      polygonGroup.group.add(polygon);\n      areaData.setItemGraphicEl(newIdx, polygon);\n    }).remove(function (idx) {\n      var polygon = polygonGroup.__data.getItemGraphicEl(idx);\n\n      polygonGroup.group.remove(polygon);\n    }).execute();\n    areaData.eachItemGraphicEl(function (polygon, idx) {\n      var itemModel = areaData.getItemModel(idx);\n      var labelModel = itemModel.getModel('label');\n      var labelHoverModel = itemModel.getModel('emphasis.label');\n      var color = areaData.getItemVisual(idx, 'color');\n      polygon.useStyle(zrUtil.defaults(itemModel.getModel('itemStyle').getItemStyle(), {\n        fill: colorUtil.modifyAlpha(color, 0.4),\n        stroke: color\n      }));\n      polygon.hoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n      graphic.setLabelStyle(polygon.style, polygon.hoverStyle, labelModel, labelHoverModel, {\n        labelFetcher: maModel,\n        labelDataIndex: idx,\n        defaultText: areaData.getName(idx) || '',\n        isRectText: true,\n        autoColor: color\n      });\n      graphic.setHoverStyle(polygon, {});\n      polygon.dataModel = maModel;\n    });\n    polygonGroup.__data = areaData;\n    polygonGroup.group.silent = maModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} coordSys\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\nfunction createList(coordSys, seriesModel, maModel) {\n  var coordDimsInfos;\n  var areaData;\n  var dims = ['x0', 'y0', 'x1', 'y1'];\n\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var data = seriesModel.getData();\n      var info = data.getDimensionInfo(data.mapDimension(coordDim)) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      return zrUtil.defaults({\n        name: coordDim\n      }, info);\n    });\n    areaData = new List(zrUtil.map(dims, function (dim, idx) {\n      return {\n        name: dim,\n        type: coordDimsInfos[idx % 2].type\n      };\n    }), maModel);\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n    areaData = new List(coordDimsInfos, maModel);\n  }\n\n  var optData = zrUtil.map(maModel.get('data'), zrUtil.curry(markAreaTransform, seriesModel, coordSys, maModel));\n\n  if (coordSys) {\n    optData = zrUtil.filter(optData, zrUtil.curry(markAreaFilter, coordSys));\n  }\n\n  var dimValueGetter = coordSys ? function (item, dimName, dataIndex, dimIndex) {\n    return item.coord[Math.floor(dimIndex / 2)][dimIndex % 2];\n  } : function (item) {\n    return item.value;\n  };\n  areaData.initData(optData, null, dimValueGetter);\n  areaData.hasItemOption = true;\n  return areaData;\n}","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar featureManager = require(\"./featureManager\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar ToolboxModel = echarts.extendComponentModel({\n  type: 'toolbox',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  optionUpdated: function () {\n    ToolboxModel.superApply(this, 'optionUpdated', arguments);\n    zrUtil.each(this.option.feature, function (featureOpt, featureName) {\n      var Feature = featureManager.get(featureName);\n      Feature && zrUtil.merge(featureOpt, Feature.defaultOption);\n    });\n  },\n  defaultOption: {\n    show: true,\n    z: 6,\n    zlevel: 0,\n    orient: 'horizontal',\n    left: 'right',\n    top: 'top',\n    // right\n    // bottom\n    backgroundColor: 'transparent',\n    borderColor: '#ccc',\n    borderRadius: 0,\n    borderWidth: 0,\n    padding: 5,\n    itemSize: 15,\n    itemGap: 8,\n    showTitle: true,\n    iconStyle: {\n      borderColor: '#666',\n      color: 'none'\n    },\n    emphasis: {\n      iconStyle: {\n        borderColor: '#3E98C5'\n      } // textStyle: {},\n      // feature\n\n    }\n  }\n});\nvar _default = ToolboxModel;\nmodule.exports = _default;","require(\"./AxisModel\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\nvar _default = ComponentModel.extend({\n  type: 'grid',\n  dependencies: ['xAxis', 'yAxis'],\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Grid}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    show: false,\n    zlevel: 0,\n    z: 0,\n    left: '10%',\n    top: 60,\n    right: '10%',\n    bottom: 60,\n    // If grid size contain label\n    containLabel: false,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderWidth: 1,\n    borderColor: '#ccc'\n  }\n});\n\nmodule.exports = _default;","require(\"./graphic\");\n\nvar _zrender = require(\"../zrender\");\n\nvar registerPainter = _zrender.registerPainter;\n\nvar Painter = require(\"./Painter\");\n\nregisterPainter('svg', Painter);","require(\"../coord/calendar/Calendar\");\n\nrequire(\"../coord/calendar/CalendarModel\");\n\nrequire(\"./calendar/CalendarView\");","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Avoid typo.\nvar SOURCE_FORMAT_ORIGINAL = 'original';\nvar SOURCE_FORMAT_ARRAY_ROWS = 'arrayRows';\nvar SOURCE_FORMAT_OBJECT_ROWS = 'objectRows';\nvar SOURCE_FORMAT_KEYED_COLUMNS = 'keyedColumns';\nvar SOURCE_FORMAT_UNKNOWN = 'unknown'; // ??? CHANGE A NAME\n\nvar SOURCE_FORMAT_TYPED_ARRAY = 'typedArray';\nvar SERIES_LAYOUT_BY_COLUMN = 'column';\nvar SERIES_LAYOUT_BY_ROW = 'row';\nexports.SOURCE_FORMAT_ORIGINAL = SOURCE_FORMAT_ORIGINAL;\nexports.SOURCE_FORMAT_ARRAY_ROWS = SOURCE_FORMAT_ARRAY_ROWS;\nexports.SOURCE_FORMAT_OBJECT_ROWS = SOURCE_FORMAT_OBJECT_ROWS;\nexports.SOURCE_FORMAT_KEYED_COLUMNS = SOURCE_FORMAT_KEYED_COLUMNS;\nexports.SOURCE_FORMAT_UNKNOWN = SOURCE_FORMAT_UNKNOWN;\nexports.SOURCE_FORMAT_TYPED_ARRAY = SOURCE_FORMAT_TYPED_ARRAY;\nexports.SERIES_LAYOUT_BY_COLUMN = SERIES_LAYOUT_BY_COLUMN;\nexports.SERIES_LAYOUT_BY_ROW = SERIES_LAYOUT_BY_ROW;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (legendModels && legendModels.length) {\n    ecModel.filterSeries(function (series) {\n      // If in any legend component the status is not selected.\n      // Because in legend series is assumed selected when it is not in the legend data.\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(series.name)) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n\nmodule.exports = _default;","var VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar isArray = zrUtil.isArray;\nvar ITEM_STYLE_NORMAL = 'itemStyle';\nvar _default = {\n  seriesType: 'treemap',\n  reset: function (seriesModel, ecModel, api, payload) {\n    var tree = seriesModel.getData().tree;\n    var root = tree.root;\n    var seriesItemStyleModel = seriesModel.getModel(ITEM_STYLE_NORMAL);\n\n    if (root.isRemoved()) {\n      return;\n    }\n\n    var levelItemStyles = zrUtil.map(tree.levelModels, function (levelModel) {\n      return levelModel ? levelModel.get(ITEM_STYLE_NORMAL) : null;\n    });\n    travelTree(root, // Visual should calculate from tree root but not view root.\n    {}, levelItemStyles, seriesItemStyleModel, seriesModel.getViewRoot().getAncestors(), seriesModel);\n  }\n};\n\nfunction travelTree(node, designatedVisual, levelItemStyles, seriesItemStyleModel, viewRootAncestors, seriesModel) {\n  var nodeModel = node.getModel();\n  var nodeLayout = node.getLayout(); // Optimize\n\n  if (!nodeLayout || nodeLayout.invisible || !nodeLayout.isInView) {\n    return;\n  }\n\n  var nodeItemStyleModel = node.getModel(ITEM_STYLE_NORMAL);\n  var levelItemStyle = levelItemStyles[node.depth];\n  var visuals = buildVisuals(nodeItemStyleModel, designatedVisual, levelItemStyle, seriesItemStyleModel); // calculate border color\n\n  var borderColor = nodeItemStyleModel.get('borderColor');\n  var borderColorSaturation = nodeItemStyleModel.get('borderColorSaturation');\n  var thisNodeColor;\n\n  if (borderColorSaturation != null) {\n    // For performance, do not always execute 'calculateColor'.\n    thisNodeColor = calculateColor(visuals, node);\n    borderColor = calculateBorderColor(borderColorSaturation, thisNodeColor);\n  }\n\n  node.setVisual('borderColor', borderColor);\n  var viewChildren = node.viewChildren;\n\n  if (!viewChildren || !viewChildren.length) {\n    thisNodeColor = calculateColor(visuals, node); // Apply visual to this node.\n\n    node.setVisual('color', thisNodeColor);\n  } else {\n    var mapping = buildVisualMapping(node, nodeModel, nodeLayout, nodeItemStyleModel, visuals, viewChildren); // Designate visual to children.\n\n    zrUtil.each(viewChildren, function (child, index) {\n      // If higher than viewRoot, only ancestors of viewRoot is needed to visit.\n      if (child.depth >= viewRootAncestors.length || child === viewRootAncestors[child.depth]) {\n        var childVisual = mapVisual(nodeModel, visuals, child, index, mapping, seriesModel);\n        travelTree(child, childVisual, levelItemStyles, seriesItemStyleModel, viewRootAncestors, seriesModel);\n      }\n    });\n  }\n}\n\nfunction buildVisuals(nodeItemStyleModel, designatedVisual, levelItemStyle, seriesItemStyleModel) {\n  var visuals = zrUtil.extend({}, designatedVisual);\n  zrUtil.each(['color', 'colorAlpha', 'colorSaturation'], function (visualName) {\n    // Priority: thisNode > thisLevel > parentNodeDesignated > seriesModel\n    var val = nodeItemStyleModel.get(visualName, true); // Ignore parent\n\n    val == null && levelItemStyle && (val = levelItemStyle[visualName]);\n    val == null && (val = designatedVisual[visualName]);\n    val == null && (val = seriesItemStyleModel.get(visualName));\n    val != null && (visuals[visualName] = val);\n  });\n  return visuals;\n}\n\nfunction calculateColor(visuals) {\n  var color = getValueVisualDefine(visuals, 'color');\n\n  if (color) {\n    var colorAlpha = getValueVisualDefine(visuals, 'colorAlpha');\n    var colorSaturation = getValueVisualDefine(visuals, 'colorSaturation');\n\n    if (colorSaturation) {\n      color = zrColor.modifyHSL(color, null, null, colorSaturation);\n    }\n\n    if (colorAlpha) {\n      color = zrColor.modifyAlpha(color, colorAlpha);\n    }\n\n    return color;\n  }\n}\n\nfunction calculateBorderColor(borderColorSaturation, thisNodeColor) {\n  return thisNodeColor != null ? zrColor.modifyHSL(thisNodeColor, null, null, borderColorSaturation) : null;\n}\n\nfunction getValueVisualDefine(visuals, name) {\n  var value = visuals[name];\n\n  if (value != null && value !== 'none') {\n    return value;\n  }\n}\n\nfunction buildVisualMapping(node, nodeModel, nodeLayout, nodeItemStyleModel, visuals, viewChildren) {\n  if (!viewChildren || !viewChildren.length) {\n    return;\n  }\n\n  var rangeVisual = getRangeVisual(nodeModel, 'color') || visuals.color != null && visuals.color !== 'none' && (getRangeVisual(nodeModel, 'colorAlpha') || getRangeVisual(nodeModel, 'colorSaturation'));\n\n  if (!rangeVisual) {\n    return;\n  }\n\n  var visualMin = nodeModel.get('visualMin');\n  var visualMax = nodeModel.get('visualMax');\n  var dataExtent = nodeLayout.dataExtent.slice();\n  visualMin != null && visualMin < dataExtent[0] && (dataExtent[0] = visualMin);\n  visualMax != null && visualMax > dataExtent[1] && (dataExtent[1] = visualMax);\n  var colorMappingBy = nodeModel.get('colorMappingBy');\n  var opt = {\n    type: rangeVisual.name,\n    dataExtent: dataExtent,\n    visual: rangeVisual.range\n  };\n\n  if (opt.type === 'color' && (colorMappingBy === 'index' || colorMappingBy === 'id')) {\n    opt.mappingMethod = 'category';\n    opt.loop = true; // categories is ordinal, so do not set opt.categories.\n  } else {\n    opt.mappingMethod = 'linear';\n  }\n\n  var mapping = new VisualMapping(opt);\n  mapping.__drColorMappingBy = colorMappingBy;\n  return mapping;\n} // Notice: If we dont have the attribute 'colorRange', but only use\n// attribute 'color' to represent both concepts of 'colorRange' and 'color',\n// (It means 'colorRange' when 'color' is Array, means 'color' when not array),\n// this problem will be encountered:\n// If a level-1 node dont have children, and its siblings has children,\n// and colorRange is set on level-1, then the node can not be colored.\n// So we separate 'colorRange' and 'color' to different attributes.\n\n\nfunction getRangeVisual(nodeModel, name) {\n  // 'colorRange', 'colorARange', 'colorSRange'.\n  // If not exsits on this node, fetch from levels and series.\n  var range = nodeModel.get(name);\n  return isArray(range) && range.length ? {\n    name: name,\n    range: range\n  } : null;\n}\n\nfunction mapVisual(nodeModel, visuals, child, index, mapping, seriesModel) {\n  var childVisuals = zrUtil.extend({}, visuals);\n\n  if (mapping) {\n    var mappingType = mapping.type;\n    var colorMappingBy = mappingType === 'color' && mapping.__drColorMappingBy;\n    var value = colorMappingBy === 'index' ? index : colorMappingBy === 'id' ? seriesModel.mapIdToIndex(child.getId()) : child.getValue(nodeModel.get('visualDimension'));\n    childVisuals[mappingType] = mapping.mapValueToVisual(value);\n  }\n\n  return childVisuals;\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar indexOf = zrUtil.indexOf;\n\nfunction hasXOrY(item) {\n  return !(isNaN(parseFloat(item.x)) && isNaN(parseFloat(item.y)));\n}\n\nfunction hasXAndY(item) {\n  return !isNaN(parseFloat(item.x)) && !isNaN(parseFloat(item.y));\n} // Make it simple, do not visit all stacked value to count precision.\n// function getPrecision(data, valueAxisDim, dataIndex) {\n//     var precision = -1;\n//     var stackedDim = data.mapDimension(valueAxisDim);\n//     do {\n//         precision = Math.max(\n//             numberUtil.getPrecision(data.get(stackedDim, dataIndex)),\n//             precision\n//         );\n//         var stackedOnSeries = data.getCalculationInfo('stackedOnSeries');\n//         if (stackedOnSeries) {\n//             var byValue = data.get(data.getCalculationInfo('stackedByDimension'), dataIndex);\n//             data = stackedOnSeries.getData();\n//             dataIndex = data.indexOf(data.getCalculationInfo('stackedByDimension'), byValue);\n//             stackedDim = data.getCalculationInfo('stackedDimension');\n//         }\n//         else {\n//             data = null;\n//         }\n//     } while (data);\n//     return precision;\n// }\n\n\nfunction markerTypeCalculatorWithExtent(mlType, data, otherDataDim, targetDataDim, otherCoordIndex, targetCoordIndex) {\n  var coordArr = [];\n  var stacked = isDimensionStacked(data, targetDataDim\n  /*, otherDataDim*/\n  );\n  var calcDataDim = stacked ? data.getCalculationInfo('stackResultDimension') : targetDataDim;\n  var value = numCalculate(data, calcDataDim, mlType);\n  var dataIndex = data.indicesOfNearest(calcDataDim, value)[0];\n  coordArr[otherCoordIndex] = data.get(otherDataDim, dataIndex);\n  coordArr[targetCoordIndex] = data.get(targetDataDim, dataIndex); // Make it simple, do not visit all stacked value to count precision.\n\n  var precision = numberUtil.getPrecision(data.get(targetDataDim, dataIndex));\n  precision = Math.min(precision, 20);\n\n  if (precision >= 0) {\n    coordArr[targetCoordIndex] = +coordArr[targetCoordIndex].toFixed(precision);\n  }\n\n  return coordArr;\n}\n\nvar curry = zrUtil.curry; // TODO Specified percent\n\nvar markerTypeCalculator = {\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  min: curry(markerTypeCalculatorWithExtent, 'min'),\n\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  max: curry(markerTypeCalculatorWithExtent, 'max'),\n\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  average: curry(markerTypeCalculatorWithExtent, 'average')\n};\n/**\n * Transform markPoint data item to format used in List by do the following\n * 1. Calculate statistic like `max`, `min`, `average`\n * 2. Convert `item.xAxis`, `item.yAxis` to `item.coord` array\n * @param  {module:echarts/model/Series} seriesModel\n * @param  {module:echarts/coord/*} [coordSys]\n * @param  {Object} item\n * @return {Object}\n */\n\nfunction dataTransform(seriesModel, item) {\n  var data = seriesModel.getData();\n  var coordSys = seriesModel.coordinateSystem; // 1. If not specify the position with pixel directly\n  // 2. If `coord` is not a data array. Which uses `xAxis`,\n  // `yAxis` to specify the coord on each dimension\n  // parseFloat first because item.x and item.y can be percent string like '20%'\n\n  if (item && !hasXAndY(item) && !zrUtil.isArray(item.coord) && coordSys) {\n    var dims = coordSys.dimensions;\n    var axisInfo = getAxisInfo(item, data, coordSys, seriesModel); // Clone the option\n    // Transform the properties xAxis, yAxis, radiusAxis, angleAxis, geoCoord to value\n\n    item = zrUtil.clone(item);\n\n    if (item.type && markerTypeCalculator[item.type] && axisInfo.baseAxis && axisInfo.valueAxis) {\n      var otherCoordIndex = indexOf(dims, axisInfo.baseAxis.dim);\n      var targetCoordIndex = indexOf(dims, axisInfo.valueAxis.dim);\n      item.coord = markerTypeCalculator[item.type](data, axisInfo.baseDataDim, axisInfo.valueDataDim, otherCoordIndex, targetCoordIndex); // Force to use the value of calculated value.\n\n      item.value = item.coord[targetCoordIndex];\n    } else {\n      // FIXME Only has one of xAxis and yAxis.\n      var coord = [item.xAxis != null ? item.xAxis : item.radiusAxis, item.yAxis != null ? item.yAxis : item.angleAxis]; // Each coord support max, min, average\n\n      for (var i = 0; i < 2; i++) {\n        if (markerTypeCalculator[coord[i]]) {\n          coord[i] = numCalculate(data, data.mapDimension(dims[i]), coord[i]);\n        }\n      }\n\n      item.coord = coord;\n    }\n  }\n\n  return item;\n}\n\nfunction getAxisInfo(item, data, coordSys, seriesModel) {\n  var ret = {};\n\n  if (item.valueIndex != null || item.valueDim != null) {\n    ret.valueDataDim = item.valueIndex != null ? data.getDimension(item.valueIndex) : item.valueDim;\n    ret.valueAxis = coordSys.getAxis(dataDimToCoordDim(seriesModel, ret.valueDataDim));\n    ret.baseAxis = coordSys.getOtherAxis(ret.valueAxis);\n    ret.baseDataDim = data.mapDimension(ret.baseAxis.dim);\n  } else {\n    ret.baseAxis = seriesModel.getBaseAxis();\n    ret.valueAxis = coordSys.getOtherAxis(ret.baseAxis);\n    ret.baseDataDim = data.mapDimension(ret.baseAxis.dim);\n    ret.valueDataDim = data.mapDimension(ret.valueAxis.dim);\n  }\n\n  return ret;\n}\n\nfunction dataDimToCoordDim(seriesModel, dataDim) {\n  var data = seriesModel.getData();\n  var dimensions = data.dimensions;\n  dataDim = data.getDimension(dataDim);\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimItem = data.getDimensionInfo(dimensions[i]);\n\n    if (dimItem.name === dataDim) {\n      return dimItem.coordDim;\n    }\n  }\n}\n/**\n * Filter data which is out of coordinateSystem range\n * [dataFilter description]\n * @param  {module:echarts/coord/*} [coordSys]\n * @param  {Object} item\n * @return {boolean}\n */\n\n\nfunction dataFilter(coordSys, item) {\n  // Alwalys return true if there is no coordSys\n  return coordSys && coordSys.containData && item.coord && !hasXOrY(item) ? coordSys.containData(item.coord) : true;\n}\n\nfunction dimValueGetter(item, dimName, dataIndex, dimIndex) {\n  // x, y, radius, angle\n  if (dimIndex < 2) {\n    return item.coord && item.coord[dimIndex];\n  }\n\n  return item.value;\n}\n\nfunction numCalculate(data, valueDataDim, type) {\n  if (type === 'average') {\n    var sum = 0;\n    var count = 0;\n    data.each(valueDataDim, function (val, idx) {\n      if (!isNaN(val)) {\n        sum += val;\n        count++;\n      }\n    });\n    return sum / count;\n  } else if (type === 'median') {\n    return data.getMedian(valueDataDim);\n  } else {\n    // max & min\n    return data.getDataExtent(valueDataDim, true)[type === 'max' ? 1 : 0];\n  }\n}\n\nexports.dataTransform = dataTransform;\nexports.getAxisInfo = getAxisInfo;\nexports.dataFilter = dataFilter;\nexports.dimValueGetter = dimValueGetter;\nexports.numCalculate = numCalculate;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction RadiusAxis(scale, radiusExtent) {\n  Axis.call(this, 'radius', scale, radiusExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = 'category';\n}\n\nRadiusAxis.prototype = {\n  constructor: RadiusAxis,\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.polar.pointToData(point, clamp)[this.dim === 'radius' ? 0 : 1];\n  },\n  dataToRadius: Axis.prototype.dataToCoord,\n  radiusToData: Axis.prototype.coordToData\n};\nzrUtil.inherits(RadiusAxis, Axis);\nvar _default = RadiusAxis;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar Tree = require(\"../../data/Tree\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\n\nvar _treeHelper = require(\"../helper/treeHelper\");\n\nvar wrapTreePathInfo = _treeHelper.wrapTreePathInfo;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.treemap',\n  layoutMode: 'box',\n  dependencies: ['grid', 'polar'],\n\n  /**\n   * @type {module:echarts/data/Tree~Node}\n   */\n  _viewRoot: null,\n  defaultOption: {\n    // Disable progressive rendering\n    progressive: 0,\n    hoverLayerThreshold: Infinity,\n    // center: ['50%', '50%'],          // not supported in ec3.\n    // size: ['80%', '80%'],            // deprecated, compatible with ec2.\n    left: 'center',\n    top: 'middle',\n    right: null,\n    bottom: null,\n    width: '80%',\n    height: '80%',\n    sort: true,\n    // Can be null or false or true\n    // (order by desc default, asc not supported yet (strange effect))\n    clipWindow: 'origin',\n    // Size of clipped window when zooming. 'origin' or 'fullscreen'\n    squareRatio: 0.5 * (1 + Math.sqrt(5)),\n    // golden ratio\n    leafDepth: null,\n    // Nodes on depth from root are regarded as leaves.\n    // Count from zero (zero represents only view root).\n    drillDownIcon: '▶',\n    // Use html character temporarily because it is complicated\n    // to align specialized icon. ▷▶❒❐▼✚\n    zoomToNodeRatio: 0.32 * 0.32,\n    // Be effective when using zoomToNode. Specify the proportion of the\n    // target node area in the view area.\n    roam: true,\n    // true, false, 'scale' or 'zoom', 'move'.\n    nodeClick: 'zoomToNode',\n    // Leaf node click behaviour: 'zoomToNode', 'link', false.\n    // If leafDepth is set and clicking a node which has children but\n    // be on left depth, the behaviour would be changing root. Otherwise\n    // use behavious defined above.\n    animation: true,\n    animationDurationUpdate: 900,\n    animationEasing: 'quinticInOut',\n    breadcrumb: {\n      show: true,\n      height: 22,\n      left: 'center',\n      top: 'bottom',\n      // right\n      // bottom\n      emptyItemWidth: 25,\n      // Width of empty node.\n      itemStyle: {\n        color: 'rgba(0,0,0,0.7)',\n        //'#5793f3',\n        borderColor: 'rgba(255,255,255,0.7)',\n        borderWidth: 1,\n        shadowColor: 'rgba(150,150,150,1)',\n        shadowBlur: 3,\n        shadowOffsetX: 0,\n        shadowOffsetY: 0,\n        textStyle: {\n          color: '#fff'\n        }\n      },\n      emphasis: {\n        textStyle: {}\n      }\n    },\n    label: {\n      show: true,\n      // Do not use textDistance, for ellipsis rect just the same as treemap node rect.\n      distance: 0,\n      padding: 5,\n      position: 'inside',\n      // Can be [5, '5%'] or position stirng like 'insideTopLeft', ...\n      // formatter: null,\n      color: '#fff',\n      ellipsis: true // align\n      // verticalAlign\n\n    },\n    upperLabel: {\n      // Label when node is parent.\n      show: false,\n      position: [0, '50%'],\n      height: 20,\n      // formatter: null,\n      color: '#fff',\n      ellipsis: true,\n      // align: null,\n      verticalAlign: 'middle'\n    },\n    itemStyle: {\n      color: null,\n      // Can be 'none' if not necessary.\n      colorAlpha: null,\n      // Can be 'none' if not necessary.\n      colorSaturation: null,\n      // Can be 'none' if not necessary.\n      borderWidth: 0,\n      gapWidth: 0,\n      borderColor: '#fff',\n      borderColorSaturation: null // If specified, borderColor will be ineffective, and the\n      // border color is evaluated by color of current node and\n      // borderColorSaturation.\n\n    },\n    emphasis: {\n      upperLabel: {\n        show: true,\n        position: [0, '50%'],\n        color: '#fff',\n        ellipsis: true,\n        verticalAlign: 'middle'\n      }\n    },\n    visualDimension: 0,\n    // Can be 0, 1, 2, 3.\n    visualMin: null,\n    visualMax: null,\n    color: [],\n    // + treemapSeries.color should not be modified. Please only modified\n    // level[n].color (if necessary).\n    // + Specify color list of each level. level[0].color would be global\n    // color list if not specified. (see method `setDefault`).\n    // + But set as a empty array to forbid fetch color from global palette\n    // when using nodeModel.get('color'), otherwise nodes on deep level\n    // will always has color palette set and are not able to inherit color\n    // from parent node.\n    // + TreemapSeries.color can not be set as 'none', otherwise effect\n    // legend color fetching (see seriesColor.js).\n    colorAlpha: null,\n    // Array. Specify color alpha range of each level, like [0.2, 0.8]\n    colorSaturation: null,\n    // Array. Specify color saturation of each level, like [0.2, 0.5]\n    colorMappingBy: 'index',\n    // 'value' or 'index' or 'id'.\n    visibleMin: 10,\n    // If area less than this threshold (unit: pixel^2), node will not\n    // be rendered. Only works when sort is 'asc' or 'desc'.\n    childrenVisibleMin: null,\n    // If area of a node less than this threshold (unit: pixel^2),\n    // grandchildren will not show.\n    // Why grandchildren? If not grandchildren but children,\n    // some siblings show children and some not,\n    // the appearance may be mess and not consistent,\n    levels: [] // Each item: {\n    //     visibleMin, itemStyle, visualDimension, label\n    // }\n    // data: {\n    //      value: [],\n    //      children: [],\n    //      link: 'http://xxx.xxx.xxx',\n    //      target: 'blank' or 'self'\n    // }\n\n  },\n\n  /**\n   * @override\n   */\n  getInitialData: function (option, ecModel) {\n    // Create a virtual root.\n    var root = {\n      name: option.name,\n      children: option.data\n    };\n    completeTreeValue(root);\n    var levels = option.levels || [];\n    levels = option.levels = setDefault(levels, ecModel);\n    var treeOption = {};\n    treeOption.levels = levels; // Make sure always a new tree is created when setOption,\n    // in TreemapView, we check whether oldTree === newTree\n    // to choose mappings approach among old shapes and new shapes.\n\n    return Tree.createTree(root, this, treeOption).data;\n  },\n  optionUpdated: function () {\n    this.resetViewRoot();\n  },\n\n  /**\n   * @override\n   * @param {number} dataIndex\n   * @param {boolean} [mutipleSeries=false]\n   */\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var value = this.getRawValue(dataIndex);\n    var formattedValue = zrUtil.isArray(value) ? addCommas(value[0]) : addCommas(value);\n    var name = data.getName(dataIndex);\n    return encodeHTML(name + ': ' + formattedValue);\n  },\n\n  /**\n   * Add tree path to tooltip param\n   *\n   * @override\n   * @param {number} dataIndex\n   * @return {Object}\n   */\n  getDataParams: function (dataIndex) {\n    var params = SeriesModel.prototype.getDataParams.apply(this, arguments);\n    var node = this.getData().tree.getNodeByDataIndex(dataIndex);\n    params.treePathInfo = wrapTreePathInfo(node, this);\n    return params;\n  },\n\n  /**\n   * @public\n   * @param {Object} layoutInfo {\n   *                                x: containerGroup x\n   *                                y: containerGroup y\n   *                                width: containerGroup width\n   *                                height: containerGroup height\n   *                            }\n   */\n  setLayoutInfo: function (layoutInfo) {\n    /**\n     * @readOnly\n     * @type {Object}\n     */\n    this.layoutInfo = this.layoutInfo || {};\n    zrUtil.extend(this.layoutInfo, layoutInfo);\n  },\n\n  /**\n   * @param  {string} id\n   * @return {number} index\n   */\n  mapIdToIndex: function (id) {\n    // A feature is implemented:\n    // index is monotone increasing with the sequence of\n    // input id at the first time.\n    // This feature can make sure that each data item and its\n    // mapped color have the same index between data list and\n    // color list at the beginning, which is useful for user\n    // to adjust data-color mapping.\n\n    /**\n     * @private\n     * @type {Object}\n     */\n    var idIndexMap = this._idIndexMap;\n\n    if (!idIndexMap) {\n      idIndexMap = this._idIndexMap = zrUtil.createHashMap();\n      /**\n       * @private\n       * @type {number}\n       */\n\n      this._idIndexMapCount = 0;\n    }\n\n    var index = idIndexMap.get(id);\n\n    if (index == null) {\n      idIndexMap.set(id, index = this._idIndexMapCount++);\n    }\n\n    return index;\n  },\n  getViewRoot: function () {\n    return this._viewRoot;\n  },\n\n  /**\n   * @param {module:echarts/data/Tree~Node} [viewRoot]\n   */\n  resetViewRoot: function (viewRoot) {\n    viewRoot ? this._viewRoot = viewRoot : viewRoot = this._viewRoot;\n    var root = this.getRawData().tree.root;\n\n    if (!viewRoot || viewRoot !== root && !root.contains(viewRoot)) {\n      this._viewRoot = root;\n    }\n  }\n});\n/**\n * @param {Object} dataNode\n */\n\n\nfunction completeTreeValue(dataNode) {\n  // Postorder travel tree.\n  // If value of none-leaf node is not set,\n  // calculate it by suming up the value of all children.\n  var sum = 0;\n  zrUtil.each(dataNode.children, function (child) {\n    completeTreeValue(child);\n    var childValue = child.value;\n    zrUtil.isArray(childValue) && (childValue = childValue[0]);\n    sum += childValue;\n  });\n  var thisValue = dataNode.value;\n\n  if (zrUtil.isArray(thisValue)) {\n    thisValue = thisValue[0];\n  }\n\n  if (thisValue == null || isNaN(thisValue)) {\n    thisValue = sum;\n  } // Value should not less than 0.\n\n\n  if (thisValue < 0) {\n    thisValue = 0;\n  }\n\n  zrUtil.isArray(dataNode.value) ? dataNode.value[0] = thisValue : dataNode.value = thisValue;\n}\n/**\n * set default to level configuration\n */\n\n\nfunction setDefault(levels, ecModel) {\n  var globalColorList = ecModel.get('color');\n\n  if (!globalColorList) {\n    return;\n  }\n\n  levels = levels || [];\n  var hasColorDefine;\n  zrUtil.each(levels, function (levelDefine) {\n    var model = new Model(levelDefine);\n    var modelColor = model.get('color');\n\n    if (model.get('itemStyle.color') || modelColor && modelColor !== 'none') {\n      hasColorDefine = true;\n    }\n  });\n\n  if (!hasColorDefine) {\n    var level0 = levels[0] || (levels[0] = {});\n    level0.color = globalColorList.slice();\n  }\n\n  return levels;\n}\n\nmodule.exports = _default;","var ComponentView = require(\"../../view/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = ComponentView.extend({\n  type: 'timeline'\n});\n\nmodule.exports = _default;","var numberUtil = require(\"../util/number\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * For testable.\n */\nvar roundNumber = numberUtil.round;\n/**\n * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n *                                Should be extent[0] < extent[1].\n * @param {number} splitNumber splitNumber should be >= 1.\n * @param {number} [minInterval]\n * @param {number} [maxInterval]\n * @return {Object} {interval, intervalPrecision, niceTickExtent}\n */\n\nfunction intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval) {\n  var result = {};\n  var span = extent[1] - extent[0];\n  var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n\n  if (minInterval != null && interval < minInterval) {\n    interval = result.interval = minInterval;\n  }\n\n  if (maxInterval != null && interval > maxInterval) {\n    interval = result.interval = maxInterval;\n  } // Tow more digital for tick.\n\n\n  var precision = result.intervalPrecision = getIntervalPrecision(interval); // Niced extent inside original extent\n\n  var niceTickExtent = result.niceTickExtent = [roundNumber(Math.ceil(extent[0] / interval) * interval, precision), roundNumber(Math.floor(extent[1] / interval) * interval, precision)];\n  fixExtent(niceTickExtent, extent);\n  return result;\n}\n/**\n * @param {number} interval\n * @return {number} interval precision\n */\n\n\nfunction getIntervalPrecision(interval) {\n  // Tow more digital for tick.\n  return numberUtil.getPrecisionSafe(interval) + 2;\n}\n\nfunction clamp(niceTickExtent, idx, extent) {\n  niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n} // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n\n\nfunction fixExtent(niceTickExtent, extent) {\n  !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n  !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n  clamp(niceTickExtent, 0, extent);\n  clamp(niceTickExtent, 1, extent);\n\n  if (niceTickExtent[0] > niceTickExtent[1]) {\n    niceTickExtent[0] = niceTickExtent[1];\n  }\n}\n\nfunction intervalScaleGetTicks(interval, extent, niceTickExtent, intervalPrecision) {\n  var ticks = []; // If interval is 0, return [];\n\n  if (!interval) {\n    return ticks;\n  } // Consider this case: using dataZoom toolbox, zoom and zoom.\n\n\n  var safeLimit = 10000;\n\n  if (extent[0] < niceTickExtent[0]) {\n    ticks.push(extent[0]);\n  }\n\n  var tick = niceTickExtent[0];\n\n  while (tick <= niceTickExtent[1]) {\n    ticks.push(tick); // Avoid rounding error\n\n    tick = roundNumber(tick + interval, intervalPrecision);\n\n    if (tick === ticks[ticks.length - 1]) {\n      // Consider out of safe float point, e.g.,\n      // -3711126.9907707 + 2e-10 === -3711126.9907707\n      break;\n    }\n\n    if (ticks.length > safeLimit) {\n      return [];\n    }\n  } // Consider this case: the last item of ticks is smaller\n  // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n\n\n  if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n    ticks.push(extent[1]);\n  }\n\n  return ticks;\n}\n\nexports.intervalScaleNiceTicks = intervalScaleNiceTicks;\nexports.getIntervalPrecision = getIntervalPrecision;\nexports.fixExtent = fixExtent;\nexports.intervalScaleGetTicks = intervalScaleGetTicks;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(option) {\n  // Save geoCoord\n  var mapSeries = [];\n  zrUtil.each(option.series, function (seriesOpt) {\n    if (seriesOpt && seriesOpt.type === 'map') {\n      mapSeries.push(seriesOpt);\n      seriesOpt.map = seriesOpt.map || seriesOpt.mapType; // Put x, y, width, height, x2, y2 in the top level\n\n      zrUtil.defaults(seriesOpt, seriesOpt.mapLocation);\n    }\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _barGrid = require(\"../layout/barGrid\");\n\nvar layout = _barGrid.layout;\nvar largeLayout = _barGrid.largeLayout;\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./bar/BarSeries\");\n\nrequire(\"./bar/BarView\");\n\nrequire(\"../component/gridSimple\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// In case developer forget to include grid component\necharts.registerLayout(zrUtil.curry(layout, 'bar')); // Should after normal bar layout, otherwise it is blocked by normal bar layout.\n\necharts.registerLayout(largeLayout);\necharts.registerVisual({\n  seriesType: 'bar',\n  reset: function (seriesModel) {\n    // Visual coding for legend\n    seriesModel.getData().setVisual('legendSymbol', 'roundRect');\n  }\n});","var vec2 = require(\"zrender/lib/core/vector\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction circularLayout(seriesModel) {\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (coordSys && coordSys.type !== 'view') {\n    return;\n  }\n\n  var rect = coordSys.getBoundingRect();\n  var nodeData = seriesModel.getData();\n  var graph = nodeData.graph;\n  var angle = 0;\n  var sum = nodeData.getSum('value');\n  var unitAngle = Math.PI * 2 / (sum || nodeData.count());\n  var cx = rect.width / 2 + rect.x;\n  var cy = rect.height / 2 + rect.y;\n  var r = Math.min(rect.width, rect.height) / 2;\n  graph.eachNode(function (node) {\n    var value = node.getValue('value');\n    angle += unitAngle * (sum ? value : 1) / 2;\n    node.setLayout([r * Math.cos(angle) + cx, r * Math.sin(angle) + cy]);\n    angle += unitAngle * (sum ? value : 1) / 2;\n  });\n  nodeData.setLayout({\n    cx: cx,\n    cy: cy\n  });\n  graph.eachEdge(function (edge) {\n    var curveness = edge.getModel().get('lineStyle.curveness') || 0;\n    var p1 = vec2.clone(edge.node1.getLayout());\n    var p2 = vec2.clone(edge.node2.getLayout());\n    var cp1;\n    var x12 = (p1[0] + p2[0]) / 2;\n    var y12 = (p1[1] + p2[1]) / 2;\n\n    if (+curveness) {\n      curveness *= 3;\n      cp1 = [cx * curveness + x12 * (1 - curveness), cy * curveness + y12 * (1 - curveness)];\n    }\n\n    edge.setLayout([p1, p2, cp1]);\n  });\n}\n\nexports.circularLayout = circularLayout;","var echarts = require(\"../echarts\");\n\nrequire(\"./marker/MarkLineModel\");\n\nrequire(\"./marker/MarkLineView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerPreprocessor(function (opt) {\n  // Make sure markLine component is enabled\n  opt.markLine = opt.markLine || {};\n});","/**\n * 线段包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  var _a = 0;\n  var _b = x0; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l || y < y0 - _l && y < y1 - _l || x > x0 + _l && x > x1 + _l || x < x0 - _l && x < x1 - _l) {\n    return false;\n  }\n\n  if (x0 !== x1) {\n    _a = (y0 - y1) / (x0 - x1);\n    _b = (x0 * y1 - x1 * y0) / (x0 - x1);\n  } else {\n    return Math.abs(x - x0) <= _l / 2;\n  }\n\n  var tmp = _a * x - y + _b;\n\n  var _s = tmp * tmp / (_a * _a + 1);\n\n  return _s <= _l / 2 * _l / 2;\n}\n\nexports.containStroke = containStroke;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar LineDraw = require(\"../helper/LineDraw\");\n\nvar RoamController = require(\"../../component/helper/RoamController\");\n\nvar roamHelper = require(\"../../component/helper/roamHelper\");\n\nvar _cursorHelper = require(\"../../component/helper/cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar adjustEdge = require(\"./adjustEdge\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar nodeOpacityPath = ['itemStyle', 'opacity'];\nvar lineOpacityPath = ['lineStyle', 'opacity'];\n\nfunction getItemOpacity(item, opacityPath) {\n  return item.getVisual('opacity') || item.getModel().get(opacityPath);\n}\n\nfunction fadeOutItem(item, opacityPath, opacityRatio) {\n  var el = item.getGraphicEl();\n  var opacity = getItemOpacity(item, opacityPath);\n\n  if (opacityRatio != null) {\n    opacity == null && (opacity = 1);\n    opacity *= opacityRatio;\n  }\n\n  el.downplay && el.downplay();\n  el.traverse(function (child) {\n    if (child.type !== 'group') {\n      child.setStyle('opacity', opacity);\n    }\n  });\n}\n\nfunction fadeInItem(item, opacityPath) {\n  var opacity = getItemOpacity(item, opacityPath);\n  var el = item.getGraphicEl();\n  el.highlight && el.highlight();\n  el.traverse(function (child) {\n    if (child.type !== 'group') {\n      child.setStyle('opacity', opacity);\n    }\n  });\n}\n\nvar _default = echarts.extendChartView({\n  type: 'graph',\n  init: function (ecModel, api) {\n    var symbolDraw = new SymbolDraw();\n    var lineDraw = new LineDraw();\n    var group = this.group;\n    this._controller = new RoamController(api.getZr());\n    this._controllerHost = {\n      target: group\n    };\n    group.add(symbolDraw.group);\n    group.add(lineDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineDraw = lineDraw;\n    this._firstRender = true;\n  },\n  render: function (seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    this._model = seriesModel;\n    this._nodeScaleRatio = seriesModel.get('nodeScaleRatio');\n    var symbolDraw = this._symbolDraw;\n    var lineDraw = this._lineDraw;\n    var group = this.group;\n\n    if (coordSys.type === 'view') {\n      var groupNewProp = {\n        position: coordSys.position,\n        scale: coordSys.scale\n      };\n\n      if (this._firstRender) {\n        group.attr(groupNewProp);\n      } else {\n        graphic.updateProps(group, groupNewProp, seriesModel);\n      }\n    } // Fix edge contact point with node\n\n\n    adjustEdge(seriesModel.getGraph(), this._getNodeGlobalScale(seriesModel));\n    var data = seriesModel.getData();\n    symbolDraw.updateData(data);\n    var edgeData = seriesModel.getEdgeData();\n    lineDraw.updateData(edgeData);\n\n    this._updateNodeAndLinkScale();\n\n    this._updateController(seriesModel, ecModel, api);\n\n    clearTimeout(this._layoutTimeout);\n    var forceLayout = seriesModel.forceLayout;\n    var layoutAnimation = seriesModel.get('force.layoutAnimation');\n\n    if (forceLayout) {\n      this._startForceLayoutIteration(forceLayout, layoutAnimation);\n    }\n\n    data.eachItemGraphicEl(function (el, idx) {\n      var itemModel = data.getItemModel(idx); // Update draggable\n\n      el.off('drag').off('dragend');\n      var draggable = data.getItemModel(idx).get('draggable');\n\n      if (draggable) {\n        el.on('drag', function () {\n          if (forceLayout) {\n            forceLayout.warmUp();\n            !this._layouting && this._startForceLayoutIteration(forceLayout, layoutAnimation);\n            forceLayout.setFixed(idx); // Write position back to layout\n\n            data.setItemLayout(idx, el.position);\n          }\n        }, this).on('dragend', function () {\n          if (forceLayout) {\n            forceLayout.setUnfixed(idx);\n          }\n        }, this);\n      }\n\n      el.setDraggable(draggable && forceLayout);\n      el.off('mouseover', el.__focusNodeAdjacency);\n      el.off('mouseout', el.__unfocusNodeAdjacency);\n\n      if (itemModel.get('focusNodeAdjacency')) {\n        el.on('mouseover', el.__focusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'focusNodeAdjacency',\n            seriesId: seriesModel.id,\n            dataIndex: el.dataIndex\n          });\n        });\n        el.on('mouseout', el.__unfocusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'unfocusNodeAdjacency',\n            seriesId: seriesModel.id\n          });\n        });\n      }\n    }, this);\n    data.graph.eachEdge(function (edge) {\n      var el = edge.getGraphicEl();\n      el.off('mouseover', el.__focusNodeAdjacency);\n      el.off('mouseout', el.__unfocusNodeAdjacency);\n\n      if (edge.getModel().get('focusNodeAdjacency')) {\n        el.on('mouseover', el.__focusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'focusNodeAdjacency',\n            seriesId: seriesModel.id,\n            edgeDataIndex: edge.dataIndex\n          });\n        });\n        el.on('mouseout', el.__unfocusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'unfocusNodeAdjacency',\n            seriesId: seriesModel.id\n          });\n        });\n      }\n    });\n    var circularRotateLabel = seriesModel.get('layout') === 'circular' && seriesModel.get('circular.rotateLabel');\n    var cx = data.getLayout('cx');\n    var cy = data.getLayout('cy');\n    data.eachItemGraphicEl(function (el, idx) {\n      var symbolPath = el.getSymbolPath();\n\n      if (circularRotateLabel) {\n        var pos = data.getItemLayout(idx);\n        var rad = Math.atan2(pos[1] - cy, pos[0] - cx);\n\n        if (rad < 0) {\n          rad = Math.PI * 2 + rad;\n        }\n\n        var isLeft = pos[0] < cx;\n\n        if (isLeft) {\n          rad = rad - Math.PI;\n        }\n\n        var textPosition = isLeft ? 'left' : 'right';\n        symbolPath.setStyle({\n          textRotation: -rad,\n          textPosition: textPosition,\n          textOrigin: 'center'\n        });\n        symbolPath.hoverStyle && (symbolPath.hoverStyle.textPosition = textPosition);\n      } else {\n        symbolPath.setStyle({\n          textRotation: 0\n        });\n      }\n    });\n    this._firstRender = false;\n  },\n  dispose: function () {\n    this._controller && this._controller.dispose();\n    this._controllerHost = {};\n  },\n  focusNodeAdjacency: function (seriesModel, ecModel, api, payload) {\n    var data = this._model.getData();\n\n    var graph = data.graph;\n    var dataIndex = payload.dataIndex;\n    var edgeDataIndex = payload.edgeDataIndex;\n    var node = graph.getNodeByIndex(dataIndex);\n    var edge = graph.getEdgeByIndex(edgeDataIndex);\n\n    if (!node && !edge) {\n      return;\n    }\n\n    graph.eachNode(function (node) {\n      fadeOutItem(node, nodeOpacityPath, 0.1);\n    });\n    graph.eachEdge(function (edge) {\n      fadeOutItem(edge, lineOpacityPath, 0.1);\n    });\n\n    if (node) {\n      fadeInItem(node, nodeOpacityPath);\n      zrUtil.each(node.edges, function (adjacentEdge) {\n        if (adjacentEdge.dataIndex < 0) {\n          return;\n        }\n\n        fadeInItem(adjacentEdge, lineOpacityPath);\n        fadeInItem(adjacentEdge.node1, nodeOpacityPath);\n        fadeInItem(adjacentEdge.node2, nodeOpacityPath);\n      });\n    }\n\n    if (edge) {\n      fadeInItem(edge, lineOpacityPath);\n      fadeInItem(edge.node1, nodeOpacityPath);\n      fadeInItem(edge.node2, nodeOpacityPath);\n    }\n  },\n  unfocusNodeAdjacency: function (seriesModel, ecModel, api, payload) {\n    var graph = this._model.getData().graph;\n\n    graph.eachNode(function (node) {\n      fadeOutItem(node, nodeOpacityPath);\n    });\n    graph.eachEdge(function (edge) {\n      fadeOutItem(edge, lineOpacityPath);\n    });\n  },\n  _startForceLayoutIteration: function (forceLayout, layoutAnimation) {\n    var self = this;\n\n    (function step() {\n      forceLayout.step(function (stopped) {\n        self.updateLayout(self._model);\n        (self._layouting = !stopped) && (layoutAnimation ? self._layoutTimeout = setTimeout(step, 16) : step());\n      });\n    })();\n  },\n  _updateController: function (seriesModel, ecModel, api) {\n    var controller = this._controller;\n    var controllerHost = this._controllerHost;\n    var group = this.group;\n    controller.setPointerChecker(function (e, x, y) {\n      var rect = group.getBoundingRect();\n      rect.applyTransform(group.transform);\n      return rect.contain(x, y) && !onIrrelevantElement(e, api, seriesModel);\n    });\n\n    if (seriesModel.coordinateSystem.type !== 'view') {\n      controller.disable();\n      return;\n    }\n\n    controller.enable(seriesModel.get('roam'));\n    controllerHost.zoomLimit = seriesModel.get('scaleLimit');\n    controllerHost.zoom = seriesModel.coordinateSystem.getZoom();\n    controller.off('pan').off('zoom').on('pan', function (dx, dy) {\n      roamHelper.updateViewOnPan(controllerHost, dx, dy);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'graphRoam',\n        dx: dx,\n        dy: dy\n      });\n    }).on('zoom', function (zoom, mouseX, mouseY) {\n      roamHelper.updateViewOnZoom(controllerHost, zoom, mouseX, mouseY);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'graphRoam',\n        zoom: zoom,\n        originX: mouseX,\n        originY: mouseY\n      });\n\n      this._updateNodeAndLinkScale();\n\n      adjustEdge(seriesModel.getGraph(), this._getNodeGlobalScale(seriesModel));\n\n      this._lineDraw.updateLayout();\n    }, this);\n  },\n  _updateNodeAndLinkScale: function () {\n    var seriesModel = this._model;\n    var data = seriesModel.getData();\n\n    var nodeScale = this._getNodeGlobalScale(seriesModel);\n\n    var invScale = [nodeScale, nodeScale];\n    data.eachItemGraphicEl(function (el, idx) {\n      el.attr('scale', invScale);\n    });\n  },\n  _getNodeGlobalScale: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys.type !== 'view') {\n      return 1;\n    }\n\n    var nodeScaleRatio = this._nodeScaleRatio;\n    var groupScale = coordSys.scale;\n    var groupZoom = groupScale && groupScale[0] || 1; // Scale node when zoom changes\n\n    var roamZoom = coordSys.getZoom();\n    var nodeScale = (roamZoom - 1) * nodeScaleRatio + 1;\n    return nodeScale / groupZoom;\n  },\n  updateLayout: function (seriesModel) {\n    adjustEdge(seriesModel.getGraph(), this._getNodeGlobalScale(seriesModel));\n\n    this._symbolDraw.updateLayout();\n\n    this._lineDraw.updateLayout();\n  },\n  remove: function (ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove();\n    this._lineDraw && this._lineDraw.remove();\n  }\n});\n\nmodule.exports = _default;","var makeStyleMapper = require(\"./makeStyleMapper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar getAreaStyle = makeStyleMapper([['fill', 'color'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['opacity'], ['shadowColor']]);\nvar _default = {\n  getAreaStyle: function (excludes, includes) {\n    return getAreaStyle(this, excludes, includes);\n  }\n};\nmodule.exports = _default;","var vec2 = require(\"./vector\");\n\nvar matrix = require(\"./matrix\");\n\n/**\n * @module echarts/core/BoundingRect\n */\nvar v2ApplyTransform = vec2.applyTransform;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\n/**\n * @alias module:echarts/core/BoundingRect\n */\n\nfunction BoundingRect(x, y, width, height) {\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n  /**\n   * @type {number}\n   */\n\n\n  this.x = x;\n  /**\n   * @type {number}\n   */\n\n  this.y = y;\n  /**\n   * @type {number}\n   */\n\n  this.width = width;\n  /**\n   * @type {number}\n   */\n\n  this.height = height;\n}\n\nBoundingRect.prototype = {\n  constructor: BoundingRect,\n\n  /**\n   * @param {module:echarts/core/BoundingRect} other\n   */\n  union: function (other) {\n    var x = mathMin(other.x, this.x);\n    var y = mathMin(other.y, this.y);\n    this.width = mathMax(other.x + other.width, this.x + this.width) - x;\n    this.height = mathMax(other.y + other.height, this.y + this.height) - y;\n    this.x = x;\n    this.y = y;\n  },\n\n  /**\n   * @param {Array.<number>} m\n   * @methods\n   */\n  applyTransform: function () {\n    var lt = [];\n    var rb = [];\n    var lb = [];\n    var rt = [];\n    return function (m) {\n      // In case usage like this\n      // el.getBoundingRect().applyTransform(el.transform)\n      // And element has no transform\n      if (!m) {\n        return;\n      }\n\n      lt[0] = lb[0] = this.x;\n      lt[1] = rt[1] = this.y;\n      rb[0] = rt[0] = this.x + this.width;\n      rb[1] = lb[1] = this.y + this.height;\n      v2ApplyTransform(lt, lt, m);\n      v2ApplyTransform(rb, rb, m);\n      v2ApplyTransform(lb, lb, m);\n      v2ApplyTransform(rt, rt, m);\n      this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n      this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n      var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n      var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n      this.width = maxX - this.x;\n      this.height = maxY - this.y;\n    };\n  }(),\n\n  /**\n   * Calculate matrix of transforming from self to target rect\n   * @param  {module:zrender/core/BoundingRect} b\n   * @return {Array.<number>}\n   */\n  calculateTransform: function (b) {\n    var a = this;\n    var sx = b.width / a.width;\n    var sy = b.height / a.height;\n    var m = matrix.create(); // 矩阵右乘\n\n    matrix.translate(m, m, [-a.x, -a.y]);\n    matrix.scale(m, m, [sx, sy]);\n    matrix.translate(m, m, [b.x, b.y]);\n    return m;\n  },\n\n  /**\n   * @param {(module:echarts/core/BoundingRect|Object)} b\n   * @return {boolean}\n   */\n  intersect: function (b) {\n    if (!b) {\n      return false;\n    }\n\n    if (!(b instanceof BoundingRect)) {\n      // Normalize negative width/height.\n      b = BoundingRect.create(b);\n    }\n\n    var a = this;\n    var ax0 = a.x;\n    var ax1 = a.x + a.width;\n    var ay0 = a.y;\n    var ay1 = a.y + a.height;\n    var bx0 = b.x;\n    var bx1 = b.x + b.width;\n    var by0 = b.y;\n    var by1 = b.y + b.height;\n    return !(ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n  },\n  contain: function (x, y) {\n    var rect = this;\n    return x >= rect.x && x <= rect.x + rect.width && y >= rect.y && y <= rect.y + rect.height;\n  },\n\n  /**\n   * @return {module:echarts/core/BoundingRect}\n   */\n  clone: function () {\n    return new BoundingRect(this.x, this.y, this.width, this.height);\n  },\n\n  /**\n   * Copy from another rect\n   */\n  copy: function (other) {\n    this.x = other.x;\n    this.y = other.y;\n    this.width = other.width;\n    this.height = other.height;\n  },\n  plain: function () {\n    return {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height\n    };\n  }\n};\n/**\n * @param {Object|module:zrender/core/BoundingRect} rect\n * @param {number} rect.x\n * @param {number} rect.y\n * @param {number} rect.width\n * @param {number} rect.height\n * @return {module:zrender/core/BoundingRect}\n */\n\nBoundingRect.create = function (rect) {\n  return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n};\n\nvar _default = BoundingRect;\nmodule.exports = _default;","var _default = typeof window !== 'undefined' && (window.requestAnimationFrame && window.requestAnimationFrame.bind(window) || // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\nwindow.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window) || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame) || function (func) {\n  setTimeout(func, 16);\n};\n\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Pick color from palette for each data item.\n// Applicable for charts that require applying color palette\n// in data level (like pie, funnel, chord).\nfunction _default(seriesType) {\n  return {\n    getTargetSeries: function (ecModel) {\n      // Pie and funnel may use diferrent scope\n      var paletteScope = {};\n      var seiresModelMap = createHashMap();\n      ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n        seriesModel.__paletteScope = paletteScope;\n        seiresModelMap.set(seriesModel.uid, seriesModel);\n      });\n      return seiresModelMap;\n    },\n    reset: function (seriesModel, ecModel) {\n      var dataAll = seriesModel.getRawData();\n      var idxMap = {};\n      var data = seriesModel.getData();\n      data.each(function (idx) {\n        var rawIdx = data.getRawIndex(idx);\n        idxMap[rawIdx] = idx;\n      });\n      dataAll.each(function (rawIdx) {\n        var filteredIdx = idxMap[rawIdx]; // If series.itemStyle.normal.color is a function. itemVisual may be encoded\n\n        var singleDataColor = filteredIdx != null && data.getItemVisual(filteredIdx, 'color', true);\n\n        if (!singleDataColor) {\n          // FIXME Performance\n          var itemModel = dataAll.getItemModel(rawIdx);\n          var color = itemModel.get('itemStyle.color') || seriesModel.getColorFromPalette(dataAll.getName(rawIdx) || rawIdx + '', seriesModel.__paletteScope, dataAll.count()); // Legend may use the visual info in data before processed\n\n          dataAll.setItemVisual(rawIdx, 'color', color); // Data is not filtered\n\n          if (filteredIdx != null) {\n            data.setItemVisual(filteredIdx, 'color', color);\n          }\n        } else {\n          // Set data all color for legend\n          dataAll.setItemVisual(rawIdx, 'color', singleDataColor);\n        }\n      });\n    }\n  };\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PI = Math.PI;\n/**\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} [opts]\n * @param {string} [opts.text]\n * @param {string} [opts.color]\n * @param {string} [opts.textColor]\n * @return {module:zrender/Element}\n */\n\nfunction _default(api, opts) {\n  opts = opts || {};\n  zrUtil.defaults(opts, {\n    text: 'loading',\n    color: '#c23531',\n    textColor: '#000',\n    maskColor: 'rgba(255, 255, 255, 0.8)',\n    zlevel: 0\n  });\n  var mask = new graphic.Rect({\n    style: {\n      fill: opts.maskColor\n    },\n    zlevel: opts.zlevel,\n    z: 10000\n  });\n  var arc = new graphic.Arc({\n    shape: {\n      startAngle: -PI / 2,\n      endAngle: -PI / 2 + 0.1,\n      r: 10\n    },\n    style: {\n      stroke: opts.color,\n      lineCap: 'round',\n      lineWidth: 5\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  var labelRect = new graphic.Rect({\n    style: {\n      fill: 'none',\n      text: opts.text,\n      textPosition: 'right',\n      textDistance: 10,\n      textFill: opts.textColor\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  arc.animateShape(true).when(1000, {\n    endAngle: PI * 3 / 2\n  }).start('circularInOut');\n  arc.animateShape(true).when(1000, {\n    startAngle: PI * 3 / 2\n  }).delay(300).start('circularInOut');\n  var group = new graphic.Group();\n  group.add(arc);\n  group.add(labelRect);\n  group.add(mask); // Inject resize\n\n  group.resize = function () {\n    var cx = api.getWidth() / 2;\n    var cy = api.getHeight() / 2;\n    arc.setShape({\n      cx: cx,\n      cy: cy\n    });\n    var r = arc.shape.r;\n    labelRect.setShape({\n      x: cx - r,\n      y: cy - r,\n      width: r * 2,\n      height: r * 2\n    });\n    mask.setShape({\n      x: 0,\n      y: 0,\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  };\n\n  group.resize();\n  return group;\n}\n\nmodule.exports = _default;","var _util = require(\"./util\");\n\nvar normalizeRadian = _util.normalizeRadian;\nvar PI2 = Math.PI * 2;\n/**\n * 圆弧描边包含判断\n * @param  {number}  cx\n * @param  {number}  cy\n * @param  {number}  r\n * @param  {number}  startAngle\n * @param  {number}  endAngle\n * @param  {boolean}  anticlockwise\n * @param  {number} lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {Boolean}\n */\n\nfunction containStroke(cx, cy, r, startAngle, endAngle, anticlockwise, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  x -= cx;\n  y -= cy;\n  var d = Math.sqrt(x * x + y * y);\n\n  if (d - _l > r || d + _l < r) {\n    return false;\n  }\n\n  if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n    // Is a circle\n    return true;\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var angle = Math.atan2(y, x);\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle;\n}\n\nexports.containStroke = containStroke;","var _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar map = _util.map;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {Object} coordSys\n * @param {module:echarts/data/List} data\n * @param {string} valueOrigin lineSeries.option.areaStyle.origin\n */\nfunction prepareDataCoordInfo(coordSys, data, valueOrigin) {\n  var baseAxis = coordSys.getBaseAxis();\n  var valueAxis = coordSys.getOtherAxis(baseAxis);\n  var valueStart = getValueStart(valueAxis, valueOrigin);\n  var baseAxisDim = baseAxis.dim;\n  var valueAxisDim = valueAxis.dim;\n  var valueDim = data.mapDimension(valueAxisDim);\n  var baseDim = data.mapDimension(baseAxisDim);\n  var baseDataOffset = valueAxisDim === 'x' || valueAxisDim === 'radius' ? 1 : 0;\n  var dims = map(coordSys.dimensions, function (coordDim) {\n    return data.mapDimension(coordDim);\n  });\n  var stacked;\n  var stackResultDim = data.getCalculationInfo('stackResultDimension');\n\n  if (stacked |= isDimensionStacked(data, dims[0]\n  /*, dims[1]*/\n  )) {\n    // jshint ignore:line\n    dims[0] = stackResultDim;\n  }\n\n  if (stacked |= isDimensionStacked(data, dims[1]\n  /*, dims[0]*/\n  )) {\n    // jshint ignore:line\n    dims[1] = stackResultDim;\n  }\n\n  return {\n    dataDimsForPoint: dims,\n    valueStart: valueStart,\n    valueAxisDim: valueAxisDim,\n    baseAxisDim: baseAxisDim,\n    stacked: !!stacked,\n    valueDim: valueDim,\n    baseDim: baseDim,\n    baseDataOffset: baseDataOffset,\n    stackedOverDimension: data.getCalculationInfo('stackedOverDimension')\n  };\n}\n\nfunction getValueStart(valueAxis, valueOrigin) {\n  var valueStart = 0;\n  var extent = valueAxis.scale.getExtent();\n\n  if (valueOrigin === 'start') {\n    valueStart = extent[0];\n  } else if (valueOrigin === 'end') {\n    valueStart = extent[1];\n  } // auto\n  else {\n      // Both positive\n      if (extent[0] > 0) {\n        valueStart = extent[0];\n      } // Both negative\n      else if (extent[1] < 0) {\n          valueStart = extent[1];\n        } // If is one positive, and one negative, onZero shall be true\n\n    }\n\n  return valueStart;\n}\n\nfunction getStackedOnPoint(dataCoordInfo, coordSys, data, idx) {\n  var value = NaN;\n\n  if (dataCoordInfo.stacked) {\n    value = data.get(data.getCalculationInfo('stackedOverDimension'), idx);\n  }\n\n  if (isNaN(value)) {\n    value = dataCoordInfo.valueStart;\n  }\n\n  var baseDataOffset = dataCoordInfo.baseDataOffset;\n  var stackedData = [];\n  stackedData[baseDataOffset] = data.get(dataCoordInfo.baseDim, idx);\n  stackedData[1 - baseDataOffset] = value;\n  return coordSys.dataToPoint(stackedData);\n}\n\nexports.prepareDataCoordInfo = prepareDataCoordInfo;\nexports.getStackedOnPoint = getStackedOnPoint;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n(function (root, factory) {if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define(['exports', 'echarts'], factory);\n    } else if (typeof exports === 'object' && typeof exports.nodeName !== 'string') {\n        // CommonJS\n        factory(exports, require('echarts'));\n    } else {\n        // Browser globals\n        factory({}, root.echarts);\n    }\n}(this, function (exports, echarts) {\n    var log = function (msg) {\n        if (typeof console !== 'undefined') {\n            console && console.error && console.error(msg);\n        }\n    };\n    if (!echarts) {\n        log('ECharts is not Loaded');\n        return;\n    }\n\n    var colorPalette = [\n        '#c12e34','#e6b600','#0098d9','#2b821d',\n        '#005eaa','#339ca8','#cda819','#32a487'\n    ];\n\n    var theme = {\n\n        color: colorPalette,\n\n        title: {\n            textStyle: {\n                fontWeight: 'normal'\n            }\n        },\n\n        visualMap: {\n            color:['#1790cf','#a2d4e6']\n        },\n\n        toolbox: {\n            iconStyle: {\n                normal: {\n                    borderColor: '#06467c'\n                }\n            }\n        },\n\n        tooltip: {\n            backgroundColor: 'rgba(0,0,0,0.6)'\n        },\n\n        dataZoom: {\n            dataBackgroundColor: '#dedede',\n            fillerColor: 'rgba(154,217,247,0.2)',\n            handleColor: '#005eaa'\n        },\n\n        timeline: {\n            lineStyle: {\n                color: '#005eaa'\n            },\n            controlStyle: {\n                normal: {\n                    color: '#005eaa',\n                    borderColor: '#005eaa'\n                }\n            }\n        },\n\n        candlestick: {\n            itemStyle: {\n                normal: {\n                    color: '#c12e34',\n                    color0: '#2b821d',\n                    lineStyle: {\n                        width: 1,\n                        color: '#c12e34',\n                        color0: '#2b821d'\n                    }\n                }\n            }\n        },\n\n        graph: {\n            color: colorPalette\n        },\n\n        map: {\n            label: {\n                normal: {\n                    textStyle: {\n                        color: '#c12e34'\n                    }\n                },\n                emphasis: {\n                    textStyle: {\n                        color: '#c12e34'\n                    }\n                }\n            },\n            itemStyle: {\n                normal: {\n                    borderColor: '#eee',\n                    areaColor: '#ddd'\n                },\n                emphasis: {\n                    areaColor: '#e6b600'\n                }\n            }\n        },\n\n        gauge: {\n            axisLine: {\n                show: true,\n                lineStyle: {\n                    color: [[0.2, '#2b821d'],[0.8, '#005eaa'],[1, '#c12e34']],\n                    width: 5\n                }\n            },\n            axisTick: {\n                splitNumber: 10,\n                length:8,\n                lineStyle: {\n                    color: 'auto'\n                }\n            },\n            axisLabel: {\n                textStyle: {\n                    color: 'auto'\n                }\n            },\n            splitLine: {\n                length: 12,\n                lineStyle: {\n                    color: 'auto'\n                }\n            },\n            pointer: {\n                length: '90%',\n                width: 3,\n                color: 'auto'\n            },\n            title: {\n                textStyle: {\n                    color: '#333'\n                }\n            },\n            detail: {\n                textStyle: {\n                    color: 'auto'\n                }\n            }\n        }\n    };\n    echarts.registerTheme('shine', theme);\n}));","var Definable = require(\"./Definable\");\n\nvar zrUtil = require(\"../../core/util\");\n\nvar matrix = require(\"../../core/matrix\");\n\n/**\n * @file Manages SVG clipPath elements.\n * @author Zhang Wenli\n */\n\n/**\n * Manages SVG clipPath elements.\n *\n * @class\n * @extends Definable\n * @param   {number}     zrId    zrender instance id\n * @param   {SVGElement} svgRoot root of SVG document\n */\nfunction ClippathManager(zrId, svgRoot) {\n  Definable.call(this, zrId, svgRoot, 'clipPath', '__clippath_in_use__');\n}\n\nzrUtil.inherits(ClippathManager, Definable);\n/**\n * Update clipPath.\n *\n * @param {Displayable} displayable displayable element\n */\n\nClippathManager.prototype.update = function (displayable) {\n  var svgEl = this.getSvgElement(displayable);\n\n  if (svgEl) {\n    this.updateDom(svgEl, displayable.__clipPaths, false);\n  }\n\n  var textEl = this.getTextSvgElement(displayable);\n\n  if (textEl) {\n    // Make another clipPath for text, since it's transform\n    // matrix is not the same with svgElement\n    this.updateDom(textEl, displayable.__clipPaths, true);\n  }\n\n  this.markUsed(displayable);\n};\n/**\n * Create an SVGElement of displayable and create a <clipPath> of its\n * clipPath\n *\n * @param {Displayable} parentEl  parent element\n * @param {ClipPath[]}  clipPaths clipPaths of parent element\n * @param {boolean}     isText    if parent element is Text\n */\n\n\nClippathManager.prototype.updateDom = function (parentEl, clipPaths, isText) {\n  if (clipPaths && clipPaths.length > 0) {\n    // Has clipPath, create <clipPath> with the first clipPath\n    var defs = this.getDefs(true);\n    var clipPath = clipPaths[0];\n    var clipPathEl;\n    var id;\n    var dom = isText ? '_textDom' : '_dom';\n\n    if (clipPath[dom]) {\n      // Use a dom that is already in <defs>\n      id = clipPath[dom].getAttribute('id');\n      clipPathEl = clipPath[dom]; // Use a dom that is already in <defs>\n\n      if (!defs.contains(clipPathEl)) {\n        // This happens when set old clipPath that has\n        // been previously removed\n        defs.appendChild(clipPathEl);\n      }\n    } else {\n      // New <clipPath>\n      id = 'zr' + this._zrId + '-clip-' + this.nextId;\n      ++this.nextId;\n      clipPathEl = this.createElement('clipPath');\n      clipPathEl.setAttribute('id', id);\n      defs.appendChild(clipPathEl);\n      clipPath[dom] = clipPathEl;\n    } // Build path and add to <clipPath>\n\n\n    var svgProxy = this.getSvgProxy(clipPath);\n\n    if (clipPath.transform && clipPath.parent.invTransform && !isText) {\n      /**\n       * If a clipPath has a parent with transform, the transform\n       * of parent should not be considered when setting transform\n       * of clipPath. So we need to transform back from parent's\n       * transform, which is done by multiplying parent's inverse\n       * transform.\n       */\n      // Store old transform\n      var transform = Array.prototype.slice.call(clipPath.transform); // Transform back from parent, and brush path\n\n      matrix.mul(clipPath.transform, clipPath.parent.invTransform, clipPath.transform);\n      svgProxy.brush(clipPath); // Set back transform of clipPath\n\n      clipPath.transform = transform;\n    } else {\n      svgProxy.brush(clipPath);\n    }\n\n    var pathEl = this.getSvgElement(clipPath);\n    clipPathEl.innerHTML = '';\n    /**\n     * Use `cloneNode()` here to appendChild to multiple parents,\n     * which may happend when Text and other shapes are using the same\n     * clipPath. Since Text will create an extra clipPath DOM due to\n     * different transform rules.\n     */\n\n    clipPathEl.appendChild(pathEl.cloneNode());\n    parentEl.setAttribute('clip-path', 'url(#' + id + ')');\n\n    if (clipPaths.length > 1) {\n      // Make the other clipPaths recursively\n      this.updateDom(clipPathEl, clipPaths.slice(1), isText);\n    }\n  } else {\n    // No clipPath\n    if (parentEl) {\n      parentEl.setAttribute('clip-path', 'none');\n    }\n  }\n};\n/**\n * Mark a single clipPath to be used\n *\n * @param {Displayable} displayable displayable element\n */\n\n\nClippathManager.prototype.markUsed = function (displayable) {\n  var that = this;\n\n  if (displayable.__clipPaths && displayable.__clipPaths.length > 0) {\n    zrUtil.each(displayable.__clipPaths, function (clipPath) {\n      if (clipPath._dom) {\n        Definable.prototype.markUsed.call(that, clipPath._dom);\n      }\n\n      if (clipPath._textDom) {\n        Definable.prototype.markUsed.call(that, clipPath._textDom);\n      }\n    });\n  }\n};\n\nvar _default = ClippathManager;\nmodule.exports = _default;","var _vector = require(\"../../core/vector\");\n\nvar v2Min = _vector.min;\nvar v2Max = _vector.max;\nvar v2Scale = _vector.scale;\nvar v2Distance = _vector.distance;\nvar v2Add = _vector.add;\nvar v2Clone = _vector.clone;\nvar v2Sub = _vector.sub;\n\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * 贝塞尔平滑曲线\n * @alias module:zrender/shape/util/smoothBezier\n * @param {Array} points 线段顶点数组\n * @param {number} smooth 平滑等级, 0-1\n * @param {boolean} isLoop\n * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n *                           整个折线的包围盒做一个并集用来约束控制点。\n * @param {Array} 计算出来的控制点数组\n */\nfunction _default(points, smooth, isLoop, constraint) {\n  var cps = [];\n  var v = [];\n  var v1 = [];\n  var v2 = [];\n  var prevPoint;\n  var nextPoint;\n  var min, max;\n\n  if (constraint) {\n    min = [Infinity, Infinity];\n    max = [-Infinity, -Infinity];\n\n    for (var i = 0, len = points.length; i < len; i++) {\n      v2Min(min, min, points[i]);\n      v2Max(max, max, points[i]);\n    } // 与指定的包围盒做并集\n\n\n    v2Min(min, min, constraint[0]);\n    v2Max(max, max, constraint[1]);\n  }\n\n  for (var i = 0, len = points.length; i < len; i++) {\n    var point = points[i];\n\n    if (isLoop) {\n      prevPoint = points[i ? i - 1 : len - 1];\n      nextPoint = points[(i + 1) % len];\n    } else {\n      if (i === 0 || i === len - 1) {\n        cps.push(v2Clone(points[i]));\n        continue;\n      } else {\n        prevPoint = points[i - 1];\n        nextPoint = points[i + 1];\n      }\n    }\n\n    v2Sub(v, nextPoint, prevPoint); // use degree to scale the handle length\n\n    v2Scale(v, v, smooth);\n    var d0 = v2Distance(point, prevPoint);\n    var d1 = v2Distance(point, nextPoint);\n    var sum = d0 + d1;\n\n    if (sum !== 0) {\n      d0 /= sum;\n      d1 /= sum;\n    }\n\n    v2Scale(v1, v, -d0);\n    v2Scale(v2, v, d1);\n    var cp0 = v2Add([], point, v1);\n    var cp1 = v2Add([], point, v2);\n\n    if (constraint) {\n      v2Max(cp0, cp0, min);\n      v2Min(cp0, cp0, max);\n      v2Max(cp1, cp1, min);\n      v2Min(cp1, cp1, max);\n    }\n\n    cps.push(cp0);\n    cps.push(cp1);\n  }\n\n  if (isLoop) {\n    cps.push(cps.shift());\n  }\n\n  return cps;\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar MAX_SAFE_INTEGER = _number.MAX_SAFE_INTEGER;\n\nvar layout = require(\"../../util/layout\");\n\nvar helper = require(\"../helper/treeHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar retrieveValue = zrUtil.retrieve;\nvar each = zrUtil.each;\nvar PATH_BORDER_WIDTH = ['itemStyle', 'borderWidth'];\nvar PATH_GAP_WIDTH = ['itemStyle', 'gapWidth'];\nvar PATH_UPPER_LABEL_SHOW = ['upperLabel', 'show'];\nvar PATH_UPPER_LABEL_HEIGHT = ['upperLabel', 'height'];\n/**\n * @public\n */\n\nvar _default = {\n  seriesType: 'treemap',\n  reset: function (seriesModel, ecModel, api, payload) {\n    // Layout result in each node:\n    // {x, y, width, height, area, borderWidth}\n    var ecWidth = api.getWidth();\n    var ecHeight = api.getHeight();\n    var seriesOption = seriesModel.option;\n    var layoutInfo = layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n    var size = seriesOption.size || []; // Compatible with ec2.\n\n    var containerWidth = parsePercent(retrieveValue(layoutInfo.width, size[0]), ecWidth);\n    var containerHeight = parsePercent(retrieveValue(layoutInfo.height, size[1]), ecHeight); // Fetch payload info.\n\n    var payloadType = payload && payload.type;\n    var types = ['treemapZoomToNode', 'treemapRootToNode'];\n    var targetInfo = helper.retrieveTargetInfo(payload, types, seriesModel);\n    var rootRect = payloadType === 'treemapRender' || payloadType === 'treemapMove' ? payload.rootRect : null;\n    var viewRoot = seriesModel.getViewRoot();\n    var viewAbovePath = helper.getPathToRoot(viewRoot);\n\n    if (payloadType !== 'treemapMove') {\n      var rootSize = payloadType === 'treemapZoomToNode' ? estimateRootSize(seriesModel, targetInfo, viewRoot, containerWidth, containerHeight) : rootRect ? [rootRect.width, rootRect.height] : [containerWidth, containerHeight];\n      var sort = seriesOption.sort;\n\n      if (sort && sort !== 'asc' && sort !== 'desc') {\n        sort = 'desc';\n      }\n\n      var options = {\n        squareRatio: seriesOption.squareRatio,\n        sort: sort,\n        leafDepth: seriesOption.leafDepth\n      }; // layout should be cleared because using updateView but not update.\n\n      viewRoot.hostTree.clearLayouts(); // TODO\n      // optimize: if out of view clip, do not layout.\n      // But take care that if do not render node out of view clip,\n      // how to calculate start po\n\n      var viewRootLayout = {\n        x: 0,\n        y: 0,\n        width: rootSize[0],\n        height: rootSize[1],\n        area: rootSize[0] * rootSize[1]\n      };\n      viewRoot.setLayout(viewRootLayout);\n      squarify(viewRoot, options, false, 0); // Supplement layout.\n\n      var viewRootLayout = viewRoot.getLayout();\n      each(viewAbovePath, function (node, index) {\n        var childValue = (viewAbovePath[index + 1] || viewRoot).getValue();\n        node.setLayout(zrUtil.extend({\n          dataExtent: [childValue, childValue],\n          borderWidth: 0,\n          upperHeight: 0\n        }, viewRootLayout));\n      });\n    }\n\n    var treeRoot = seriesModel.getData().tree.root;\n    treeRoot.setLayout(calculateRootPosition(layoutInfo, rootRect, targetInfo), true);\n    seriesModel.setLayoutInfo(layoutInfo); // FIXME\n    // 现在没有clip功能，暂时取ec高宽。\n\n    prunning(treeRoot, // Transform to base element coordinate system.\n    new BoundingRect(-layoutInfo.x, -layoutInfo.y, ecWidth, ecHeight), viewAbovePath, viewRoot, 0);\n  }\n};\n/**\n * Layout treemap with squarify algorithm.\n * @see https://graphics.ethz.ch/teaching/scivis_common/Literature/squarifiedTreeMaps.pdf\n * @see https://github.com/mbostock/d3/blob/master/src/layout/treemap.js\n *\n * @protected\n * @param {module:echarts/data/Tree~TreeNode} node\n * @param {Object} options\n * @param {string} options.sort 'asc' or 'desc'\n * @param {number} options.squareRatio\n * @param {boolean} hideChildren\n * @param {number} depth\n */\n\nfunction squarify(node, options, hideChildren, depth) {\n  var width;\n  var height;\n\n  if (node.isRemoved()) {\n    return;\n  }\n\n  var thisLayout = node.getLayout();\n  width = thisLayout.width;\n  height = thisLayout.height; // Considering border and gap\n\n  var nodeModel = node.getModel();\n  var borderWidth = nodeModel.get(PATH_BORDER_WIDTH);\n  var halfGapWidth = nodeModel.get(PATH_GAP_WIDTH) / 2;\n  var upperLabelHeight = getUpperLabelHeight(nodeModel);\n  var upperHeight = Math.max(borderWidth, upperLabelHeight);\n  var layoutOffset = borderWidth - halfGapWidth;\n  var layoutOffsetUpper = upperHeight - halfGapWidth;\n  var nodeModel = node.getModel();\n  node.setLayout({\n    borderWidth: borderWidth,\n    upperHeight: upperHeight,\n    upperLabelHeight: upperLabelHeight\n  }, true);\n  width = mathMax(width - 2 * layoutOffset, 0);\n  height = mathMax(height - layoutOffset - layoutOffsetUpper, 0);\n  var totalArea = width * height;\n  var viewChildren = initChildren(node, nodeModel, totalArea, options, hideChildren, depth);\n\n  if (!viewChildren.length) {\n    return;\n  }\n\n  var rect = {\n    x: layoutOffset,\n    y: layoutOffsetUpper,\n    width: width,\n    height: height\n  };\n  var rowFixedLength = mathMin(width, height);\n  var best = Infinity; // the best row score so far\n\n  var row = [];\n  row.area = 0;\n\n  for (var i = 0, len = viewChildren.length; i < len;) {\n    var child = viewChildren[i];\n    row.push(child);\n    row.area += child.getLayout().area;\n    var score = worst(row, rowFixedLength, options.squareRatio); // continue with this orientation\n\n    if (score <= best) {\n      i++;\n      best = score;\n    } // abort, and try a different orientation\n    else {\n        row.area -= row.pop().getLayout().area;\n        position(row, rowFixedLength, rect, halfGapWidth, false);\n        rowFixedLength = mathMin(rect.width, rect.height);\n        row.length = row.area = 0;\n        best = Infinity;\n      }\n  }\n\n  if (row.length) {\n    position(row, rowFixedLength, rect, halfGapWidth, true);\n  }\n\n  if (!hideChildren) {\n    var childrenVisibleMin = nodeModel.get('childrenVisibleMin');\n\n    if (childrenVisibleMin != null && totalArea < childrenVisibleMin) {\n      hideChildren = true;\n    }\n  }\n\n  for (var i = 0, len = viewChildren.length; i < len; i++) {\n    squarify(viewChildren[i], options, hideChildren, depth + 1);\n  }\n}\n/**\n * Set area to each child, and calculate data extent for visual coding.\n */\n\n\nfunction initChildren(node, nodeModel, totalArea, options, hideChildren, depth) {\n  var viewChildren = node.children || [];\n  var orderBy = options.sort;\n  orderBy !== 'asc' && orderBy !== 'desc' && (orderBy = null);\n  var overLeafDepth = options.leafDepth != null && options.leafDepth <= depth; // leafDepth has higher priority.\n\n  if (hideChildren && !overLeafDepth) {\n    return node.viewChildren = [];\n  } // Sort children, order by desc.\n\n\n  viewChildren = zrUtil.filter(viewChildren, function (child) {\n    return !child.isRemoved();\n  });\n  sort(viewChildren, orderBy);\n  var info = statistic(nodeModel, viewChildren, orderBy);\n\n  if (info.sum === 0) {\n    return node.viewChildren = [];\n  }\n\n  info.sum = filterByThreshold(nodeModel, totalArea, info.sum, orderBy, viewChildren);\n\n  if (info.sum === 0) {\n    return node.viewChildren = [];\n  } // Set area to each child.\n\n\n  for (var i = 0, len = viewChildren.length; i < len; i++) {\n    var area = viewChildren[i].getValue() / info.sum * totalArea; // Do not use setLayout({...}, true), because it is needed to clear last layout.\n\n    viewChildren[i].setLayout({\n      area: area\n    });\n  }\n\n  if (overLeafDepth) {\n    viewChildren.length && node.setLayout({\n      isLeafRoot: true\n    }, true);\n    viewChildren.length = 0;\n  }\n\n  node.viewChildren = viewChildren;\n  node.setLayout({\n    dataExtent: info.dataExtent\n  }, true);\n  return viewChildren;\n}\n/**\n * Consider 'visibleMin'. Modify viewChildren and get new sum.\n */\n\n\nfunction filterByThreshold(nodeModel, totalArea, sum, orderBy, orderedChildren) {\n  // visibleMin is not supported yet when no option.sort.\n  if (!orderBy) {\n    return sum;\n  }\n\n  var visibleMin = nodeModel.get('visibleMin');\n  var len = orderedChildren.length;\n  var deletePoint = len; // Always travel from little value to big value.\n\n  for (var i = len - 1; i >= 0; i--) {\n    var value = orderedChildren[orderBy === 'asc' ? len - i - 1 : i].getValue();\n\n    if (value / sum * totalArea < visibleMin) {\n      deletePoint = i;\n      sum -= value;\n    }\n  }\n\n  orderBy === 'asc' ? orderedChildren.splice(0, len - deletePoint) : orderedChildren.splice(deletePoint, len - deletePoint);\n  return sum;\n}\n/**\n * Sort\n */\n\n\nfunction sort(viewChildren, orderBy) {\n  if (orderBy) {\n    viewChildren.sort(function (a, b) {\n      var diff = orderBy === 'asc' ? a.getValue() - b.getValue() : b.getValue() - a.getValue();\n      return diff === 0 ? orderBy === 'asc' ? a.dataIndex - b.dataIndex : b.dataIndex - a.dataIndex : diff;\n    });\n  }\n\n  return viewChildren;\n}\n/**\n * Statistic\n */\n\n\nfunction statistic(nodeModel, children, orderBy) {\n  // Calculate sum.\n  var sum = 0;\n\n  for (var i = 0, len = children.length; i < len; i++) {\n    sum += children[i].getValue();\n  } // Statistic data extent for latter visual coding.\n  // Notice: data extent should be calculate based on raw children\n  // but not filtered view children, otherwise visual mapping will not\n  // be stable when zoom (where children is filtered by visibleMin).\n\n\n  var dimension = nodeModel.get('visualDimension');\n  var dataExtent; // The same as area dimension.\n\n  if (!children || !children.length) {\n    dataExtent = [NaN, NaN];\n  } else if (dimension === 'value' && orderBy) {\n    dataExtent = [children[children.length - 1].getValue(), children[0].getValue()];\n    orderBy === 'asc' && dataExtent.reverse();\n  } // Other dimension.\n  else {\n      var dataExtent = [Infinity, -Infinity];\n      each(children, function (child) {\n        var value = child.getValue(dimension);\n        value < dataExtent[0] && (dataExtent[0] = value);\n        value > dataExtent[1] && (dataExtent[1] = value);\n      });\n    }\n\n  return {\n    sum: sum,\n    dataExtent: dataExtent\n  };\n}\n/**\n * Computes the score for the specified row,\n * as the worst aspect ratio.\n */\n\n\nfunction worst(row, rowFixedLength, ratio) {\n  var areaMax = 0;\n  var areaMin = Infinity;\n\n  for (var i = 0, area, len = row.length; i < len; i++) {\n    area = row[i].getLayout().area;\n\n    if (area) {\n      area < areaMin && (areaMin = area);\n      area > areaMax && (areaMax = area);\n    }\n  }\n\n  var squareArea = row.area * row.area;\n  var f = rowFixedLength * rowFixedLength * ratio;\n  return squareArea ? mathMax(f * areaMax / squareArea, squareArea / (f * areaMin)) : Infinity;\n}\n/**\n * Positions the specified row of nodes. Modifies `rect`.\n */\n\n\nfunction position(row, rowFixedLength, rect, halfGapWidth, flush) {\n  // When rowFixedLength === rect.width,\n  // it is horizontal subdivision,\n  // rowFixedLength is the width of the subdivision,\n  // rowOtherLength is the height of the subdivision,\n  // and nodes will be positioned from left to right.\n  // wh[idx0WhenH] means: when horizontal,\n  //      wh[idx0WhenH] => wh[0] => 'width'.\n  //      xy[idx1WhenH] => xy[1] => 'y'.\n  var idx0WhenH = rowFixedLength === rect.width ? 0 : 1;\n  var idx1WhenH = 1 - idx0WhenH;\n  var xy = ['x', 'y'];\n  var wh = ['width', 'height'];\n  var last = rect[xy[idx0WhenH]];\n  var rowOtherLength = rowFixedLength ? row.area / rowFixedLength : 0;\n\n  if (flush || rowOtherLength > rect[wh[idx1WhenH]]) {\n    rowOtherLength = rect[wh[idx1WhenH]]; // over+underflow\n  }\n\n  for (var i = 0, rowLen = row.length; i < rowLen; i++) {\n    var node = row[i];\n    var nodeLayout = {};\n    var step = rowOtherLength ? node.getLayout().area / rowOtherLength : 0;\n    var wh1 = nodeLayout[wh[idx1WhenH]] = mathMax(rowOtherLength - 2 * halfGapWidth, 0); // We use Math.max/min to avoid negative width/height when considering gap width.\n\n    var remain = rect[xy[idx0WhenH]] + rect[wh[idx0WhenH]] - last;\n    var modWH = i === rowLen - 1 || remain < step ? remain : step;\n    var wh0 = nodeLayout[wh[idx0WhenH]] = mathMax(modWH - 2 * halfGapWidth, 0);\n    nodeLayout[xy[idx1WhenH]] = rect[xy[idx1WhenH]] + mathMin(halfGapWidth, wh1 / 2);\n    nodeLayout[xy[idx0WhenH]] = last + mathMin(halfGapWidth, wh0 / 2);\n    last += modWH;\n    node.setLayout(nodeLayout, true);\n  }\n\n  rect[xy[idx1WhenH]] += rowOtherLength;\n  rect[wh[idx1WhenH]] -= rowOtherLength;\n} // Return [containerWidth, containerHeight] as defualt.\n\n\nfunction estimateRootSize(seriesModel, targetInfo, viewRoot, containerWidth, containerHeight) {\n  // If targetInfo.node exists, we zoom to the node,\n  // so estimate whold width and heigth by target node.\n  var currNode = (targetInfo || {}).node;\n  var defaultSize = [containerWidth, containerHeight];\n\n  if (!currNode || currNode === viewRoot) {\n    return defaultSize;\n  }\n\n  var parent;\n  var viewArea = containerWidth * containerHeight;\n  var area = viewArea * seriesModel.option.zoomToNodeRatio;\n\n  while (parent = currNode.parentNode) {\n    // jshint ignore:line\n    var sum = 0;\n    var siblings = parent.children;\n\n    for (var i = 0, len = siblings.length; i < len; i++) {\n      sum += siblings[i].getValue();\n    }\n\n    var currNodeValue = currNode.getValue();\n\n    if (currNodeValue === 0) {\n      return defaultSize;\n    }\n\n    area *= sum / currNodeValue; // Considering border, suppose aspect ratio is 1.\n\n    var parentModel = parent.getModel();\n    var borderWidth = parentModel.get(PATH_BORDER_WIDTH);\n    var upperHeight = Math.max(borderWidth, getUpperLabelHeight(parentModel, borderWidth));\n    area += 4 * borderWidth * borderWidth + (3 * borderWidth + upperHeight) * Math.pow(area, 0.5);\n    area > MAX_SAFE_INTEGER && (area = MAX_SAFE_INTEGER);\n    currNode = parent;\n  }\n\n  area < viewArea && (area = viewArea);\n  var scale = Math.pow(area / viewArea, 0.5);\n  return [containerWidth * scale, containerHeight * scale];\n} // Root postion base on coord of containerGroup\n\n\nfunction calculateRootPosition(layoutInfo, rootRect, targetInfo) {\n  if (rootRect) {\n    return {\n      x: rootRect.x,\n      y: rootRect.y\n    };\n  }\n\n  var defaultPosition = {\n    x: 0,\n    y: 0\n  };\n\n  if (!targetInfo) {\n    return defaultPosition;\n  } // If targetInfo is fetched by 'retrieveTargetInfo',\n  // old tree and new tree are the same tree,\n  // so the node still exists and we can visit it.\n\n\n  var targetNode = targetInfo.node;\n  var layout = targetNode.getLayout();\n\n  if (!layout) {\n    return defaultPosition;\n  } // Transform coord from local to container.\n\n\n  var targetCenter = [layout.width / 2, layout.height / 2];\n  var node = targetNode;\n\n  while (node) {\n    var nodeLayout = node.getLayout();\n    targetCenter[0] += nodeLayout.x;\n    targetCenter[1] += nodeLayout.y;\n    node = node.parentNode;\n  }\n\n  return {\n    x: layoutInfo.width / 2 - targetCenter[0],\n    y: layoutInfo.height / 2 - targetCenter[1]\n  };\n} // Mark nodes visible for prunning when visual coding and rendering.\n// Prunning depends on layout and root position, so we have to do it after layout.\n\n\nfunction prunning(node, clipRect, viewAbovePath, viewRoot, depth) {\n  var nodeLayout = node.getLayout();\n  var nodeInViewAbovePath = viewAbovePath[depth];\n  var isAboveViewRoot = nodeInViewAbovePath && nodeInViewAbovePath === node;\n\n  if (nodeInViewAbovePath && !isAboveViewRoot || depth === viewAbovePath.length && node !== viewRoot) {\n    return;\n  }\n\n  node.setLayout({\n    // isInView means: viewRoot sub tree + viewAbovePath\n    isInView: true,\n    // invisible only means: outside view clip so that the node can not\n    // see but still layout for animation preparation but not render.\n    invisible: !isAboveViewRoot && !clipRect.intersect(nodeLayout),\n    isAboveViewRoot: isAboveViewRoot\n  }, true); // Transform to child coordinate.\n\n  var childClipRect = new BoundingRect(clipRect.x - nodeLayout.x, clipRect.y - nodeLayout.y, clipRect.width, clipRect.height);\n  each(node.viewChildren || [], function (child) {\n    prunning(child, childClipRect, viewAbovePath, viewRoot, depth + 1);\n  });\n}\n\nfunction getUpperLabelHeight(model) {\n  return model.get(PATH_UPPER_LABEL_SHOW) ? model.get(PATH_UPPER_LABEL_HEIGHT) : 0;\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _dataStackHelper = require(\"../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\nvar createRenderPlanner = require(\"../chart/helper/createRenderPlanner\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar STACK_PREFIX = '__ec_stack_';\nvar LARGE_BAR_MIN_WIDTH = 0.5;\nvar LargeArr = typeof Float32Array !== 'undefined' ? Float32Array : Array;\n\nfunction getSeriesStackId(seriesModel) {\n  return seriesModel.get('stack') || STACK_PREFIX + seriesModel.seriesIndex;\n}\n\nfunction getAxisKey(axis) {\n  return axis.dim + axis.index;\n}\n/**\n * @param {Object} opt\n * @param {module:echarts/coord/Axis} opt.axis Only support category axis currently.\n * @param {number} opt.count Positive interger.\n * @param {number} [opt.barWidth]\n * @param {number} [opt.barMaxWidth]\n * @param {number} [opt.barGap]\n * @param {number} [opt.barCategoryGap]\n * @return {Object} {width, offset, offsetCenter} If axis.type is not 'category', return undefined.\n */\n\n\nfunction getLayoutOnAxis(opt) {\n  var params = [];\n  var baseAxis = opt.axis;\n  var axisKey = 'axis0';\n\n  if (baseAxis.type !== 'category') {\n    return;\n  }\n\n  var bandWidth = baseAxis.getBandWidth();\n\n  for (var i = 0; i < opt.count || 0; i++) {\n    params.push(zrUtil.defaults({\n      bandWidth: bandWidth,\n      axisKey: axisKey,\n      stackId: STACK_PREFIX + i\n    }, opt));\n  }\n\n  var widthAndOffsets = doCalBarWidthAndOffset(params);\n  var result = [];\n\n  for (var i = 0; i < opt.count; i++) {\n    var item = widthAndOffsets[axisKey][STACK_PREFIX + i];\n    item.offsetCenter = item.offset + item.width / 2;\n    result.push(item);\n  }\n\n  return result;\n}\n\nfunction prepareLayoutBarSeries(seriesType, ecModel) {\n  var seriesModels = [];\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    // Check series coordinate, do layout for cartesian2d only\n    if (isOnCartesian(seriesModel) && !isInLargeMode(seriesModel)) {\n      seriesModels.push(seriesModel);\n    }\n  });\n  return seriesModels;\n}\n\nfunction makeColumnLayout(barSeries) {\n  var seriesInfoList = [];\n  zrUtil.each(barSeries, function (seriesModel) {\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var axisExtent = baseAxis.getExtent();\n    var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : Math.abs(axisExtent[1] - axisExtent[0]) / data.count();\n    var barWidth = parsePercent(seriesModel.get('barWidth'), bandWidth);\n    var barMaxWidth = parsePercent(seriesModel.get('barMaxWidth'), bandWidth);\n    var barGap = seriesModel.get('barGap');\n    var barCategoryGap = seriesModel.get('barCategoryGap');\n    seriesInfoList.push({\n      bandWidth: bandWidth,\n      barWidth: barWidth,\n      barMaxWidth: barMaxWidth,\n      barGap: barGap,\n      barCategoryGap: barCategoryGap,\n      axisKey: getAxisKey(baseAxis),\n      stackId: getSeriesStackId(seriesModel)\n    });\n  });\n  return doCalBarWidthAndOffset(seriesInfoList);\n}\n\nfunction doCalBarWidthAndOffset(seriesInfoList) {\n  // Columns info on each category axis. Key is cartesian name\n  var columnsMap = {};\n  zrUtil.each(seriesInfoList, function (seriesInfo, idx) {\n    var axisKey = seriesInfo.axisKey;\n    var bandWidth = seriesInfo.bandWidth;\n    var columnsOnAxis = columnsMap[axisKey] || {\n      bandWidth: bandWidth,\n      remainedWidth: bandWidth,\n      autoWidthCount: 0,\n      categoryGap: '20%',\n      gap: '30%',\n      stacks: {}\n    };\n    var stacks = columnsOnAxis.stacks;\n    columnsMap[axisKey] = columnsOnAxis;\n    var stackId = seriesInfo.stackId;\n\n    if (!stacks[stackId]) {\n      columnsOnAxis.autoWidthCount++;\n    }\n\n    stacks[stackId] = stacks[stackId] || {\n      width: 0,\n      maxWidth: 0\n    }; // Caution: In a single coordinate system, these barGrid attributes\n    // will be shared by series. Consider that they have default values,\n    // only the attributes set on the last series will work.\n    // Do not change this fact unless there will be a break change.\n    // TODO\n\n    var barWidth = seriesInfo.barWidth;\n\n    if (barWidth && !stacks[stackId].width) {\n      // See #6312, do not restrict width.\n      stacks[stackId].width = barWidth;\n      barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n      columnsOnAxis.remainedWidth -= barWidth;\n    }\n\n    var barMaxWidth = seriesInfo.barMaxWidth;\n    barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n    var barGap = seriesInfo.barGap;\n    barGap != null && (columnsOnAxis.gap = barGap);\n    var barCategoryGap = seriesInfo.barCategoryGap;\n    barCategoryGap != null && (columnsOnAxis.categoryGap = barCategoryGap);\n  });\n  var result = {};\n  zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n    result[coordSysName] = {};\n    var stacks = columnsOnAxis.stacks;\n    var bandWidth = columnsOnAxis.bandWidth;\n    var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n    var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n    var remainedWidth = columnsOnAxis.remainedWidth;\n    var autoWidthCount = columnsOnAxis.autoWidthCount;\n    var autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0); // Find if any auto calculated bar exceeded maxBarWidth\n\n    zrUtil.each(stacks, function (column, stack) {\n      var maxWidth = column.maxWidth;\n\n      if (maxWidth && maxWidth < autoWidth) {\n        maxWidth = Math.min(maxWidth, remainedWidth);\n\n        if (column.width) {\n          maxWidth = Math.min(maxWidth, column.width);\n        }\n\n        remainedWidth -= maxWidth;\n        column.width = maxWidth;\n        autoWidthCount--;\n      }\n    }); // Recalculate width again\n\n    autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0);\n    var widthSum = 0;\n    var lastColumn;\n    zrUtil.each(stacks, function (column, idx) {\n      if (!column.width) {\n        column.width = autoWidth;\n      }\n\n      lastColumn = column;\n      widthSum += column.width * (1 + barGapPercent);\n    });\n\n    if (lastColumn) {\n      widthSum -= lastColumn.width * barGapPercent;\n    }\n\n    var offset = -widthSum / 2;\n    zrUtil.each(stacks, function (column, stackId) {\n      result[coordSysName][stackId] = result[coordSysName][stackId] || {\n        offset: offset,\n        width: column.width\n      };\n      offset += column.width * (1 + barGapPercent);\n    });\n  });\n  return result;\n}\n/**\n * @param {Object} barWidthAndOffset The result of makeColumnLayout\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Series} [seriesModel] If not provided, return all.\n * @return {Object} {stackId: {offset, width}} or {offset, width} if seriesModel provided.\n */\n\n\nfunction retrieveColumnLayout(barWidthAndOffset, axis, seriesModel) {\n  if (barWidthAndOffset && axis) {\n    var result = barWidthAndOffset[getAxisKey(axis)];\n\n    if (result != null && seriesModel != null) {\n      result = result[getSeriesStackId(seriesModel)];\n    }\n\n    return result;\n  }\n}\n/**\n * @param {string} seriesType\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction layout(seriesType, ecModel) {\n  var seriesModels = prepareLayoutBarSeries(seriesType, ecModel);\n  var barWidthAndOffset = makeColumnLayout(seriesModels);\n  var lastStackCoords = {};\n  var lastStackCoordsOrigin = {};\n  zrUtil.each(seriesModels, function (seriesModel) {\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var stackId = getSeriesStackId(seriesModel);\n    var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n    var columnOffset = columnLayoutInfo.offset;\n    var columnWidth = columnLayoutInfo.width;\n    var valueAxis = cartesian.getOtherAxis(baseAxis);\n    var barMinHeight = seriesModel.get('barMinHeight') || 0;\n    lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n    lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\n\n    data.setLayout({\n      offset: columnOffset,\n      size: columnWidth\n    });\n    var valueDim = data.mapDimension(valueAxis.dim);\n    var baseDim = data.mapDimension(baseAxis.dim);\n    var stacked = isDimensionStacked(data, valueDim\n    /*, baseDim*/\n    );\n    var isValueAxisH = valueAxis.isHorizontal();\n    var valueAxisStart = getValueAxisStart(baseAxis, valueAxis, stacked);\n\n    for (var idx = 0, len = data.count(); idx < len; idx++) {\n      var value = data.get(valueDim, idx);\n      var baseValue = data.get(baseDim, idx);\n\n      if (isNaN(value)) {\n        continue;\n      }\n\n      var sign = value >= 0 ? 'p' : 'n';\n      var baseCoord = valueAxisStart; // Because of the barMinHeight, we can not use the value in\n      // stackResultDimension directly.\n\n      if (stacked) {\n        // Only ordinal axis can be stacked.\n        if (!lastStackCoords[stackId][baseValue]) {\n          lastStackCoords[stackId][baseValue] = {\n            p: valueAxisStart,\n            // Positive stack\n            n: valueAxisStart // Negative stack\n\n          };\n        } // Should also consider #4243\n\n\n        baseCoord = lastStackCoords[stackId][baseValue][sign];\n      }\n\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (isValueAxisH) {\n        var coord = cartesian.dataToPoint([value, baseValue]);\n        x = baseCoord;\n        y = coord[1] + columnOffset;\n        width = coord[0] - valueAxisStart;\n        height = columnWidth;\n\n        if (Math.abs(width) < barMinHeight) {\n          width = (width < 0 ? -1 : 1) * barMinHeight;\n        }\n\n        stacked && (lastStackCoords[stackId][baseValue][sign] += width);\n      } else {\n        var coord = cartesian.dataToPoint([baseValue, value]);\n        x = coord[0] + columnOffset;\n        y = baseCoord;\n        width = columnWidth;\n        height = coord[1] - valueAxisStart;\n\n        if (Math.abs(height) < barMinHeight) {\n          // Include zero to has a positive bar\n          height = (height <= 0 ? -1 : 1) * barMinHeight;\n        }\n\n        stacked && (lastStackCoords[stackId][baseValue][sign] += height);\n      }\n\n      data.setItemLayout(idx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      });\n    }\n  }, this);\n} // TODO: Do not support stack in large mode yet.\n\n\nvar largeLayout = {\n  seriesType: 'bar',\n  plan: createRenderPlanner(),\n  reset: function (seriesModel) {\n    if (!isOnCartesian(seriesModel) || !isInLargeMode(seriesModel)) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var valueAxis = cartesian.getOtherAxis(baseAxis);\n    var valueDim = data.mapDimension(valueAxis.dim);\n    var baseDim = data.mapDimension(baseAxis.dim);\n    var valueAxisHorizontal = valueAxis.isHorizontal();\n    var valueDimIdx = valueAxisHorizontal ? 0 : 1;\n    var barWidth = retrieveColumnLayout(makeColumnLayout([seriesModel]), baseAxis, seriesModel).width;\n\n    if (!(barWidth > LARGE_BAR_MIN_WIDTH)) {\n      // jshint ignore:line\n      barWidth = LARGE_BAR_MIN_WIDTH;\n    }\n\n    return {\n      progress: progress\n    };\n\n    function progress(params, data) {\n      var largePoints = new LargeArr(params.count * 2);\n      var dataIndex;\n      var coord = [];\n      var valuePair = [];\n      var offset = 0;\n\n      while ((dataIndex = params.next()) != null) {\n        valuePair[valueDimIdx] = data.get(valueDim, dataIndex);\n        valuePair[1 - valueDimIdx] = data.get(baseDim, dataIndex);\n        coord = cartesian.dataToPoint(valuePair, null, coord);\n        largePoints[offset++] = coord[0];\n        largePoints[offset++] = coord[1];\n      }\n\n      data.setLayout({\n        largePoints: largePoints,\n        barWidth: barWidth,\n        valueAxisStart: getValueAxisStart(baseAxis, valueAxis, false),\n        valueAxisHorizontal: valueAxisHorizontal\n      });\n    }\n  }\n};\n\nfunction isOnCartesian(seriesModel) {\n  return seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'cartesian2d';\n}\n\nfunction isInLargeMode(seriesModel) {\n  return seriesModel.pipelineContext && seriesModel.pipelineContext.large;\n}\n\nfunction getValueAxisStart(baseAxis, valueAxis, stacked) {\n  return zrUtil.indexOf(baseAxis.getAxesOnZeroOf(), valueAxis) >= 0 || stacked ? valueAxis.toGlobalCoord(valueAxis.dataToCoord(0)) : valueAxis.getGlobalExtent()[0];\n}\n\nexports.getLayoutOnAxis = getLayoutOnAxis;\nexports.prepareLayoutBarSeries = prepareLayoutBarSeries;\nexports.makeColumnLayout = makeColumnLayout;\nexports.retrieveColumnLayout = retrieveColumnLayout;\nexports.layout = layout;\nexports.largeLayout = largeLayout;","var textHelper = require(\"../helper/text\");\n\nvar BoundingRect = require(\"../../core/BoundingRect\");\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\nvar tmpRect = new BoundingRect();\n\nvar RectText = function () {};\n\nRectText.prototype = {\n  constructor: RectText,\n\n  /**\n   * Draw text in a rect with specified position.\n   * @param  {CanvasRenderingContext2D} ctx\n   * @param  {Object} rect Displayable rect\n   */\n  drawRectText: function (ctx, rect) {\n    var style = this.style;\n    rect = style.textRect || rect; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    } // FIXME\n\n\n    ctx.save(); // Transform rect to view space\n\n    var transform = this.transform;\n\n    if (!style.transformText) {\n      if (transform) {\n        tmpRect.copy(rect);\n        tmpRect.applyTransform(transform);\n        rect = tmpRect;\n      }\n    } else {\n      this.setTransform(ctx);\n    } // transformText and textRotation can not be used at the same time.\n\n\n    textHelper.renderText(this, ctx, text, style, rect);\n    ctx.restore();\n  }\n};\nvar _default = RectText;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisDefault = require(\"./axisDefault\");\n\nvar ComponentModel = require(\"../model/Component\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n\nvar OrdinalMeta = require(\"../data/OrdinalMeta\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME axisType is fixed ?\nvar AXIS_TYPES = ['value', 'category', 'time', 'log'];\n/**\n * Generate sub axis model class\n * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n * @param {module:echarts/model/Component} BaseAxisModelClass\n * @param {Function} axisTypeDefaulter\n * @param {Object} [extraDefaultOption]\n */\n\nfunction _default(axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n  zrUtil.each(AXIS_TYPES, function (axisType) {\n    BaseAxisModelClass.extend({\n      /**\n       * @readOnly\n       */\n      type: axisName + 'Axis.' + axisType,\n      mergeDefaultAndTheme: function (option, ecModel) {\n        var layoutMode = this.layoutMode;\n        var inputPositionParams = layoutMode ? getLayoutParams(option) : {};\n        var themeModel = ecModel.getTheme();\n        zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n        zrUtil.merge(option, this.getDefaultOption());\n        option.type = axisTypeDefaulter(axisName, option);\n\n        if (layoutMode) {\n          mergeLayoutParam(option, inputPositionParams, layoutMode);\n        }\n      },\n\n      /**\n       * @override\n       */\n      optionUpdated: function () {\n        var thisOption = this.option;\n\n        if (thisOption.type === 'category') {\n          this.__ordinalMeta = OrdinalMeta.createByAxisModel(this);\n        }\n      },\n\n      /**\n       * Should not be called before all of 'getInitailData' finished.\n       * Because categories are collected during initializing data.\n       */\n      getCategories: function (rawData) {\n        var option = this.option; // FIXME\n        // warning if called before all of 'getInitailData' finished.\n\n        if (option.type === 'category') {\n          if (rawData) {\n            return option.data;\n          }\n\n          return this.__ordinalMeta.categories;\n        }\n      },\n      getOrdinalMeta: function () {\n        return this.__ordinalMeta;\n      },\n      defaultOption: zrUtil.mergeAll([{}, axisDefault[axisType + 'Axis'], extraDefaultOption], true)\n    });\n  });\n  ComponentModel.registerSubTypeDefaulter(axisName + 'Axis', zrUtil.curry(axisTypeDefaulter, axisName));\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar helper = require(\"./helper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerAction('dataZoom', function (payload, ecModel) {\n  var linkedNodesFinder = helper.createLinkedNodesFinder(zrUtil.bind(ecModel.eachComponent, ecModel, 'dataZoom'), helper.eachAxisDim, function (model, dimNames) {\n    return model.get(dimNames.axisIndex);\n  });\n  var effectedModels = [];\n  ecModel.eachComponent({\n    mainType: 'dataZoom',\n    query: payload\n  }, function (model, index) {\n    effectedModels.push.apply(effectedModels, linkedNodesFinder(model).nodes);\n  });\n  zrUtil.each(effectedModels, function (dataZoomModel, index) {\n    dataZoomModel.setRawRange({\n      start: payload.start,\n      end: payload.end,\n      startValue: payload.startValue,\n      endValue: payload.endValue\n    });\n  });\n});","var graphic = require(\"../../util/graphic\");\n\nvar IncrementalDisplayable = require(\"zrender/lib/graphic/IncrementalDisplayable\");\n\nvar lineContain = require(\"zrender/lib/contain/line\");\n\nvar quadraticContain = require(\"zrender/lib/contain/quadratic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO Batch by color\nvar LargeLineShape = graphic.extendShape({\n  shape: {\n    polyline: false,\n    curveness: 0,\n    segs: []\n  },\n  buildPath: function (path, shape) {\n    var segs = shape.segs;\n    var curveness = shape.curveness;\n\n    if (shape.polyline) {\n      for (var i = 0; i < segs.length;) {\n        var count = segs[i++];\n\n        if (count > 0) {\n          path.moveTo(segs[i++], segs[i++]);\n\n          for (var k = 1; k < count; k++) {\n            path.lineTo(segs[i++], segs[i++]);\n          }\n        }\n      }\n    } else {\n      for (var i = 0; i < segs.length;) {\n        var x0 = segs[i++];\n        var y0 = segs[i++];\n        var x1 = segs[i++];\n        var y1 = segs[i++];\n        path.moveTo(x0, y0);\n\n        if (curveness > 0) {\n          var x2 = (x0 + x1) / 2 - (y0 - y1) * curveness;\n          var y2 = (y0 + y1) / 2 - (x1 - x0) * curveness;\n          path.quadraticCurveTo(x2, y2, x1, y1);\n        } else {\n          path.lineTo(x1, y1);\n        }\n      }\n    }\n  },\n  findDataIndex: function (x, y) {\n    var shape = this.shape;\n    var segs = shape.segs;\n    var curveness = shape.curveness;\n\n    if (shape.polyline) {\n      var dataIndex = 0;\n\n      for (var i = 0; i < segs.length;) {\n        var count = segs[i++];\n\n        if (count > 0) {\n          var x0 = segs[i++];\n          var y0 = segs[i++];\n\n          for (var k = 1; k < count; k++) {\n            var x1 = segs[i++];\n            var y1 = segs[i++];\n\n            if (lineContain.containStroke(x0, y0, x1, y1)) {\n              return dataIndex;\n            }\n          }\n        }\n\n        dataIndex++;\n      }\n    } else {\n      var dataIndex = 0;\n\n      for (var i = 0; i < segs.length;) {\n        var x0 = segs[i++];\n        var y0 = segs[i++];\n        var x1 = segs[i++];\n        var y1 = segs[i++];\n\n        if (curveness > 0) {\n          var x2 = (x0 + x1) / 2 - (y0 - y1) * curveness;\n          var y2 = (y0 + y1) / 2 - (x1 - x0) * curveness;\n\n          if (quadraticContain.containStroke(x0, y0, x2, y2, x1, y1)) {\n            return dataIndex;\n          }\n        } else {\n          if (lineContain.containStroke(x0, y0, x1, y1)) {\n            return dataIndex;\n          }\n        }\n\n        dataIndex++;\n      }\n    }\n\n    return -1;\n  }\n});\n\nfunction LargeLineDraw() {\n  this.group = new graphic.Group();\n}\n\nvar largeLineProto = LargeLineDraw.prototype;\n\nlargeLineProto.isPersistent = function () {\n  return !this._incremental;\n};\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n */\n\n\nlargeLineProto.updateData = function (data) {\n  this.group.removeAll();\n  var lineEl = new LargeLineShape({\n    rectHover: true,\n    cursor: 'default'\n  });\n  lineEl.setShape({\n    segs: data.getLayout('linesPoints')\n  });\n\n  this._setCommon(lineEl, data); // Add back\n\n\n  this.group.add(lineEl);\n  this._incremental = null;\n};\n/**\n * @override\n */\n\n\nlargeLineProto.incrementalPrepareUpdate = function (data) {\n  this.group.removeAll();\n\n  this._clearIncremental();\n\n  if (data.count() > 5e5) {\n    if (!this._incremental) {\n      this._incremental = new IncrementalDisplayable({\n        silent: true\n      });\n    }\n\n    this.group.add(this._incremental);\n  } else {\n    this._incremental = null;\n  }\n};\n/**\n * @override\n */\n\n\nlargeLineProto.incrementalUpdate = function (taskParams, data) {\n  var lineEl = new LargeLineShape();\n  lineEl.setShape({\n    segs: data.getLayout('linesPoints')\n  });\n\n  this._setCommon(lineEl, data, !!this._incremental);\n\n  if (!this._incremental) {\n    lineEl.rectHover = true;\n    lineEl.cursor = 'default';\n    lineEl.__startIndex = taskParams.start;\n    this.group.add(lineEl);\n  } else {\n    this._incremental.addDisplayable(lineEl, true);\n  }\n};\n/**\n * @override\n */\n\n\nlargeLineProto.remove = function () {\n  this._clearIncremental();\n\n  this._incremental = null;\n  this.group.removeAll();\n};\n\nlargeLineProto._setCommon = function (lineEl, data, isIncremental) {\n  var hostModel = data.hostModel;\n  lineEl.setShape({\n    polyline: hostModel.get('polyline'),\n    curveness: hostModel.get('lineStyle.curveness')\n  });\n  lineEl.useStyle(hostModel.getModel('lineStyle').getLineStyle());\n  lineEl.style.strokeNoScale = true;\n  var visualColor = data.getVisual('color');\n\n  if (visualColor) {\n    lineEl.setStyle('stroke', visualColor);\n  }\n\n  lineEl.setStyle('fill');\n\n  if (!isIncremental) {\n    // Enable tooltip\n    // PENDING May have performance issue when path is extremely large\n    lineEl.seriesIndex = hostModel.seriesIndex;\n    lineEl.on('mousemove', function (e) {\n      lineEl.dataIndex = null;\n      var dataIndex = lineEl.findDataIndex(e.offsetX, e.offsetY);\n\n      if (dataIndex > 0) {\n        // Provide dataIndex for tooltip\n        lineEl.dataIndex = dataIndex + lineEl.__startIndex;\n      }\n    });\n  }\n};\n\nlargeLineProto._clearIncremental = function () {\n  var incremental = this._incremental;\n\n  if (incremental) {\n    incremental.clearDisplaybles();\n  }\n};\n\nvar _default = LargeLineDraw;\nmodule.exports = _default;","var SeriesModel = require(\"../../model/Series\");\n\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar RadarSeries = SeriesModel.extend({\n  type: 'series.radar',\n  dependencies: ['radar'],\n  // Overwrite\n  init: function (option) {\n    RadarSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n  },\n  getInitialData: function (option, ecModel) {\n    return createListSimply(this, {\n      generateCoord: 'indicator_',\n      generateCoordCount: Infinity\n    });\n  },\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var coordSys = this.coordinateSystem;\n    var indicatorAxes = coordSys.getIndicatorAxes();\n    var name = this.getData().getName(dataIndex);\n    return encodeHTML(name === '' ? this.name : name) + '<br/>' + zrUtil.map(indicatorAxes, function (axis, idx) {\n      var val = data.get(data.mapDimension(axis.dim), dataIndex);\n      return encodeHTML(axis.name + ' : ' + val);\n    }).join('<br />');\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'radar',\n    legendHoverLink: true,\n    radarIndex: 0,\n    lineStyle: {\n      width: 2,\n      type: 'solid'\n    },\n    label: {\n      position: 'top'\n    },\n    // areaStyle: {\n    // },\n    // itemStyle: {}\n    symbol: 'emptyCircle',\n    symbolSize: 4 // symbolRotate: null\n\n  }\n});\nvar _default = RadarSeries;\nmodule.exports = _default;","var Component = require(\"../../model/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nComponent.registerSubTypeDefaulter('timeline', function () {\n  // Only slider now.\n  return 'slider';\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"./graphic\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Symbol factory\n\n/**\n * Triangle shape\n * @inner\n */\nvar Triangle = graphic.extendShape({\n  type: 'triangle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy + height);\n    path.lineTo(cx - width, cy + height);\n    path.closePath();\n  }\n});\n/**\n * Diamond shape\n * @inner\n */\n\nvar Diamond = graphic.extendShape({\n  type: 'diamond',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy);\n    path.lineTo(cx, cy + height);\n    path.lineTo(cx - width, cy);\n    path.closePath();\n  }\n});\n/**\n * Pin shape\n * @inner\n */\n\nvar Pin = graphic.extendShape({\n  type: 'pin',\n  shape: {\n    // x, y on the cusp\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var w = shape.width / 5 * 3; // Height must be larger than width\n\n    var h = Math.max(w, shape.height);\n    var r = w / 2; // Dist on y with tangent point and circle center\n\n    var dy = r * r / (h - r);\n    var cy = y - h + r + dy;\n    var angle = Math.asin(dy / r); // Dist on x with tangent point and circle center\n\n    var dx = Math.cos(angle) * r;\n    var tanX = Math.sin(angle);\n    var tanY = Math.cos(angle);\n    var cpLen = r * 0.6;\n    var cpLen2 = r * 0.7;\n    path.moveTo(x - dx, cy + dy);\n    path.arc(x, cy, r, Math.PI - angle, Math.PI * 2 + angle);\n    path.bezierCurveTo(x + dx - tanX * cpLen, cy + dy + tanY * cpLen, x, y - cpLen2, x, y);\n    path.bezierCurveTo(x, y - cpLen2, x - dx + tanX * cpLen, cy + dy + tanY * cpLen, x - dx, cy + dy);\n    path.closePath();\n  }\n});\n/**\n * Arrow shape\n * @inner\n */\n\nvar Arrow = graphic.extendShape({\n  type: 'arrow',\n  shape: {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var height = shape.height;\n    var width = shape.width;\n    var x = shape.x;\n    var y = shape.y;\n    var dx = width / 3 * 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + dx, y + height);\n    ctx.lineTo(x, y + height / 4 * 3);\n    ctx.lineTo(x - dx, y + height);\n    ctx.lineTo(x, y);\n    ctx.closePath();\n  }\n});\n/**\n * Map of path contructors\n * @type {Object.<string, module:zrender/graphic/Path>}\n */\n\nvar symbolCtors = {\n  line: graphic.Line,\n  rect: graphic.Rect,\n  roundRect: graphic.Rect,\n  square: graphic.Rect,\n  circle: graphic.Circle,\n  diamond: Diamond,\n  pin: Pin,\n  arrow: Arrow,\n  triangle: Triangle\n};\nvar symbolShapeMakers = {\n  line: function (x, y, w, h, shape) {\n    // FIXME\n    shape.x1 = x;\n    shape.y1 = y + h / 2;\n    shape.x2 = x + w;\n    shape.y2 = y + h / 2;\n  },\n  rect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n  },\n  roundRect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n    shape.r = Math.min(w, h) / 4;\n  },\n  square: function (x, y, w, h, shape) {\n    var size = Math.min(w, h);\n    shape.x = x;\n    shape.y = y;\n    shape.width = size;\n    shape.height = size;\n  },\n  circle: function (x, y, w, h, shape) {\n    // Put circle in the center of square\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.r = Math.min(w, h) / 2;\n  },\n  diamond: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  pin: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  arrow: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  triangle: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  }\n};\nvar symbolBuildProxies = {};\nzrUtil.each(symbolCtors, function (Ctor, name) {\n  symbolBuildProxies[name] = new Ctor();\n});\nvar SymbolClz = graphic.extendShape({\n  type: 'symbol',\n  shape: {\n    symbolType: '',\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  beforeBrush: function () {\n    var style = this.style;\n    var shape = this.shape; // FIXME\n\n    if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n      style.textPosition = ['50%', '40%'];\n      style.textAlign = 'center';\n      style.textVerticalAlign = 'middle';\n    }\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    var symbolType = shape.symbolType;\n    var proxySymbol = symbolBuildProxies[symbolType];\n\n    if (shape.symbolType !== 'none') {\n      if (!proxySymbol) {\n        // Default rect\n        symbolType = 'rect';\n        proxySymbol = symbolBuildProxies[symbolType];\n      }\n\n      symbolShapeMakers[symbolType](shape.x, shape.y, shape.width, shape.height, proxySymbol.shape);\n      proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n    }\n  }\n}); // Provide setColor helper method to avoid determine if set the fill or stroke outside\n\nfunction symbolPathSetColor(color, innerColor) {\n  if (this.type !== 'image') {\n    var symbolStyle = this.style;\n    var symbolShape = this.shape;\n\n    if (symbolShape && symbolShape.symbolType === 'line') {\n      symbolStyle.stroke = color;\n    } else if (this.__isEmptyBrush) {\n      symbolStyle.stroke = color;\n      symbolStyle.fill = innerColor || '#fff';\n    } else {\n      // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n      symbolStyle.fill && (symbolStyle.fill = color);\n      symbolStyle.stroke && (symbolStyle.stroke = color);\n    }\n\n    this.dirty(false);\n  }\n}\n/**\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n * @param {string} symbolType\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {string} color\n * @param {boolean} [keepAspect=false] whether to keep the ratio of w/h,\n *                            for path and image only.\n */\n\n\nfunction createSymbol(symbolType, x, y, w, h, color, keepAspect) {\n  // TODO Support image object, DynamicImage.\n  var isEmpty = symbolType.indexOf('empty') === 0;\n\n  if (isEmpty) {\n    symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n  }\n\n  var symbolPath;\n\n  if (symbolType.indexOf('image://') === 0) {\n    symbolPath = graphic.makeImage(symbolType.slice(8), new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else if (symbolType.indexOf('path://') === 0) {\n    symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else {\n    symbolPath = new SymbolClz({\n      shape: {\n        symbolType: symbolType,\n        x: x,\n        y: y,\n        width: w,\n        height: h\n      }\n    });\n  }\n\n  symbolPath.__isEmptyBrush = isEmpty;\n  symbolPath.setColor = symbolPathSetColor;\n  symbolPath.setColor(color);\n  return symbolPath;\n}\n\nexports.createSymbol = createSymbol;","var DataZoomModel = require(\"./DataZoomModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = DataZoomModel.extend({\n  type: 'dataZoom.inside',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    disabled: false,\n    // Whether disable this inside zoom.\n    zoomLock: false,\n    // Whether disable zoom but only pan.\n    zoomOnMouseWheel: true,\n    // Can be: true / false / 'shift' / 'ctrl' / 'alt'.\n    moveOnMouseMove: true,\n    // Can be: true / false / 'shift' / 'ctrl' / 'alt'.\n    preventDefaultMouseMove: true\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./lines/LinesSeries\");\n\nrequire(\"./lines/LinesView\");\n\nvar linesLayout = require(\"./lines/linesLayout\");\n\nvar linesVisual = require(\"./lines/linesVisual\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerLayout(linesLayout);\necharts.registerVisual(linesVisual);","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Fix for 钓鱼岛\n// var Region = require('../Region');\n// var zrUtil = require('zrender/src/core/util');\n// var geoCoord = [126, 25];\nvar points = [[[123.45165252685547, 25.73527164402261], [123.49731445312499, 25.73527164402261], [123.49731445312499, 25.750734064600884], [123.45165252685547, 25.750734064600884], [123.45165252685547, 25.73527164402261]]];\n\nfunction _default(geo) {\n  if (geo.map === 'china') {\n    for (var i = 0, len = geo.regions.length; i < len; ++i) {\n      if (geo.regions[i].name === '台湾') {\n        geo.regions[i].geometries.push({\n          type: 'polygon',\n          exterior: points[0]\n        });\n      }\n    }\n  }\n}\n\nmodule.exports = _default;","var PointerPath = require(\"./PointerPath\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar round = _number.round;\nvar linearMap = _number.linearMap;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction parsePosition(seriesModel, api) {\n  var center = seriesModel.get('center');\n  var width = api.getWidth();\n  var height = api.getHeight();\n  var size = Math.min(width, height);\n  var cx = parsePercent(center[0], api.getWidth());\n  var cy = parsePercent(center[1], api.getHeight());\n  var r = parsePercent(seriesModel.get('radius'), size / 2);\n  return {\n    cx: cx,\n    cy: cy,\n    r: r\n  };\n}\n\nfunction formatLabel(label, labelFormatter) {\n  if (labelFormatter) {\n    if (typeof labelFormatter === 'string') {\n      label = labelFormatter.replace('{value}', label != null ? label : '');\n    } else if (typeof labelFormatter === 'function') {\n      label = labelFormatter(label);\n    }\n  }\n\n  return label;\n}\n\nvar PI2 = Math.PI * 2;\nvar GaugeView = ChartView.extend({\n  type: 'gauge',\n  render: function (seriesModel, ecModel, api) {\n    this.group.removeAll();\n    var colorList = seriesModel.get('axisLine.lineStyle.color');\n    var posInfo = parsePosition(seriesModel, api);\n\n    this._renderMain(seriesModel, ecModel, api, colorList, posInfo);\n  },\n  dispose: function () {},\n  _renderMain: function (seriesModel, ecModel, api, colorList, posInfo) {\n    var group = this.group;\n    var axisLineModel = seriesModel.getModel('axisLine');\n    var lineStyleModel = axisLineModel.getModel('lineStyle');\n    var clockwise = seriesModel.get('clockwise');\n    var startAngle = -seriesModel.get('startAngle') / 180 * Math.PI;\n    var endAngle = -seriesModel.get('endAngle') / 180 * Math.PI;\n    var angleRangeSpan = (endAngle - startAngle) % PI2;\n    var prevEndAngle = startAngle;\n    var axisLineWidth = lineStyleModel.get('width');\n\n    for (var i = 0; i < colorList.length; i++) {\n      // Clamp\n      var percent = Math.min(Math.max(colorList[i][0], 0), 1);\n      var endAngle = startAngle + angleRangeSpan * percent;\n      var sector = new graphic.Sector({\n        shape: {\n          startAngle: prevEndAngle,\n          endAngle: endAngle,\n          cx: posInfo.cx,\n          cy: posInfo.cy,\n          clockwise: clockwise,\n          r0: posInfo.r - axisLineWidth,\n          r: posInfo.r\n        },\n        silent: true\n      });\n      sector.setStyle({\n        fill: colorList[i][1]\n      });\n      sector.setStyle(lineStyleModel.getLineStyle( // Because we use sector to simulate arc\n      // so the properties for stroking are useless\n      ['color', 'borderWidth', 'borderColor']));\n      group.add(sector);\n      prevEndAngle = endAngle;\n    }\n\n    var getColor = function (percent) {\n      // Less than 0\n      if (percent <= 0) {\n        return colorList[0][1];\n      }\n\n      for (var i = 0; i < colorList.length; i++) {\n        if (colorList[i][0] >= percent && (i === 0 ? 0 : colorList[i - 1][0]) < percent) {\n          return colorList[i][1];\n        }\n      } // More than 1\n\n\n      return colorList[i - 1][1];\n    };\n\n    if (!clockwise) {\n      var tmp = startAngle;\n      startAngle = endAngle;\n      endAngle = tmp;\n    }\n\n    this._renderTicks(seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise);\n\n    this._renderPointer(seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise);\n\n    this._renderTitle(seriesModel, ecModel, api, getColor, posInfo);\n\n    this._renderDetail(seriesModel, ecModel, api, getColor, posInfo);\n  },\n  _renderTicks: function (seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise) {\n    var group = this.group;\n    var cx = posInfo.cx;\n    var cy = posInfo.cy;\n    var r = posInfo.r;\n    var minVal = +seriesModel.get('min');\n    var maxVal = +seriesModel.get('max');\n    var splitLineModel = seriesModel.getModel('splitLine');\n    var tickModel = seriesModel.getModel('axisTick');\n    var labelModel = seriesModel.getModel('axisLabel');\n    var splitNumber = seriesModel.get('splitNumber');\n    var subSplitNumber = tickModel.get('splitNumber');\n    var splitLineLen = parsePercent(splitLineModel.get('length'), r);\n    var tickLen = parsePercent(tickModel.get('length'), r);\n    var angle = startAngle;\n    var step = (endAngle - startAngle) / splitNumber;\n    var subStep = step / subSplitNumber;\n    var splitLineStyle = splitLineModel.getModel('lineStyle').getLineStyle();\n    var tickLineStyle = tickModel.getModel('lineStyle').getLineStyle();\n\n    for (var i = 0; i <= splitNumber; i++) {\n      var unitX = Math.cos(angle);\n      var unitY = Math.sin(angle); // Split line\n\n      if (splitLineModel.get('show')) {\n        var splitLine = new graphic.Line({\n          shape: {\n            x1: unitX * r + cx,\n            y1: unitY * r + cy,\n            x2: unitX * (r - splitLineLen) + cx,\n            y2: unitY * (r - splitLineLen) + cy\n          },\n          style: splitLineStyle,\n          silent: true\n        });\n\n        if (splitLineStyle.stroke === 'auto') {\n          splitLine.setStyle({\n            stroke: getColor(i / splitNumber)\n          });\n        }\n\n        group.add(splitLine);\n      } // Label\n\n\n      if (labelModel.get('show')) {\n        var label = formatLabel(round(i / splitNumber * (maxVal - minVal) + minVal), labelModel.get('formatter'));\n        var distance = labelModel.get('distance');\n        var autoColor = getColor(i / splitNumber);\n        group.add(new graphic.Text({\n          style: graphic.setTextStyle({}, labelModel, {\n            text: label,\n            x: unitX * (r - splitLineLen - distance) + cx,\n            y: unitY * (r - splitLineLen - distance) + cy,\n            textVerticalAlign: unitY < -0.4 ? 'top' : unitY > 0.4 ? 'bottom' : 'middle',\n            textAlign: unitX < -0.4 ? 'left' : unitX > 0.4 ? 'right' : 'center'\n          }, {\n            autoColor: autoColor\n          }),\n          silent: true\n        }));\n      } // Axis tick\n\n\n      if (tickModel.get('show') && i !== splitNumber) {\n        for (var j = 0; j <= subSplitNumber; j++) {\n          var unitX = Math.cos(angle);\n          var unitY = Math.sin(angle);\n          var tickLine = new graphic.Line({\n            shape: {\n              x1: unitX * r + cx,\n              y1: unitY * r + cy,\n              x2: unitX * (r - tickLen) + cx,\n              y2: unitY * (r - tickLen) + cy\n            },\n            silent: true,\n            style: tickLineStyle\n          });\n\n          if (tickLineStyle.stroke === 'auto') {\n            tickLine.setStyle({\n              stroke: getColor((i + j / subSplitNumber) / splitNumber)\n            });\n          }\n\n          group.add(tickLine);\n          angle += subStep;\n        }\n\n        angle -= subStep;\n      } else {\n        angle += step;\n      }\n    }\n  },\n  _renderPointer: function (seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise) {\n    var group = this.group;\n    var oldData = this._data;\n\n    if (!seriesModel.get('pointer.show')) {\n      // Remove old element\n      oldData && oldData.eachItemGraphicEl(function (el) {\n        group.remove(el);\n      });\n      return;\n    }\n\n    var valueExtent = [+seriesModel.get('min'), +seriesModel.get('max')];\n    var angleExtent = [startAngle, endAngle];\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    data.diff(oldData).add(function (idx) {\n      var pointer = new PointerPath({\n        shape: {\n          angle: startAngle\n        }\n      });\n      graphic.initProps(pointer, {\n        shape: {\n          angle: linearMap(data.get(valueDim, idx), valueExtent, angleExtent, true)\n        }\n      }, seriesModel);\n      group.add(pointer);\n      data.setItemGraphicEl(idx, pointer);\n    }).update(function (newIdx, oldIdx) {\n      var pointer = oldData.getItemGraphicEl(oldIdx);\n      graphic.updateProps(pointer, {\n        shape: {\n          angle: linearMap(data.get(valueDim, newIdx), valueExtent, angleExtent, true)\n        }\n      }, seriesModel);\n      group.add(pointer);\n      data.setItemGraphicEl(newIdx, pointer);\n    }).remove(function (idx) {\n      var pointer = oldData.getItemGraphicEl(idx);\n      group.remove(pointer);\n    }).execute();\n    data.eachItemGraphicEl(function (pointer, idx) {\n      var itemModel = data.getItemModel(idx);\n      var pointerModel = itemModel.getModel('pointer');\n      pointer.setShape({\n        x: posInfo.cx,\n        y: posInfo.cy,\n        width: parsePercent(pointerModel.get('width'), posInfo.r),\n        r: parsePercent(pointerModel.get('length'), posInfo.r)\n      });\n      pointer.useStyle(itemModel.getModel('itemStyle').getItemStyle());\n\n      if (pointer.style.fill === 'auto') {\n        pointer.setStyle('fill', getColor(linearMap(data.get(valueDim, idx), valueExtent, [0, 1], true)));\n      }\n\n      graphic.setHoverStyle(pointer, itemModel.getModel('emphasis.itemStyle').getItemStyle());\n    });\n    this._data = data;\n  },\n  _renderTitle: function (seriesModel, ecModel, api, getColor, posInfo) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var titleModel = seriesModel.getModel('title');\n\n    if (titleModel.get('show')) {\n      var offsetCenter = titleModel.get('offsetCenter');\n      var x = posInfo.cx + parsePercent(offsetCenter[0], posInfo.r);\n      var y = posInfo.cy + parsePercent(offsetCenter[1], posInfo.r);\n      var minVal = +seriesModel.get('min');\n      var maxVal = +seriesModel.get('max');\n      var value = seriesModel.getData().get(valueDim, 0);\n      var autoColor = getColor(linearMap(value, [minVal, maxVal], [0, 1], true));\n      this.group.add(new graphic.Text({\n        silent: true,\n        style: graphic.setTextStyle({}, titleModel, {\n          x: x,\n          y: y,\n          // FIXME First data name ?\n          text: data.getName(0),\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        }, {\n          autoColor: autoColor,\n          forceRich: true\n        })\n      }));\n    }\n  },\n  _renderDetail: function (seriesModel, ecModel, api, getColor, posInfo) {\n    var detailModel = seriesModel.getModel('detail');\n    var minVal = +seriesModel.get('min');\n    var maxVal = +seriesModel.get('max');\n\n    if (detailModel.get('show')) {\n      var offsetCenter = detailModel.get('offsetCenter');\n      var x = posInfo.cx + parsePercent(offsetCenter[0], posInfo.r);\n      var y = posInfo.cy + parsePercent(offsetCenter[1], posInfo.r);\n      var width = parsePercent(detailModel.get('width'), posInfo.r);\n      var height = parsePercent(detailModel.get('height'), posInfo.r);\n      var data = seriesModel.getData();\n      var value = data.get(data.mapDimension('value'), 0);\n      var autoColor = getColor(linearMap(value, [minVal, maxVal], [0, 1], true));\n      this.group.add(new graphic.Text({\n        silent: true,\n        style: graphic.setTextStyle({}, detailModel, {\n          x: x,\n          y: y,\n          text: formatLabel( // FIXME First data name ?\n          value, detailModel.get('formatter')),\n          textWidth: isNaN(width) ? null : width,\n          textHeight: isNaN(height) ? null : height,\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        }, {\n          autoColor: autoColor,\n          forceRich: true\n        })\n      }));\n    }\n  }\n});\nvar _default = GaugeView;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./funnel/FunnelSeries\");\n\nrequire(\"./funnel/FunnelView\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar funnelLayout = require(\"./funnel/funnelLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerVisual(dataColor('funnel'));\necharts.registerLayout(funnelLayout);\necharts.registerProcessor(dataFilter('funnel'));","var echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar ATTR = '\\0_ec_interaction_mutex';\n\nfunction take(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  store[resourceKey] = userKey;\n}\n\nfunction release(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  var uKey = store[resourceKey];\n\n  if (uKey === userKey) {\n    store[resourceKey] = null;\n  }\n}\n\nfunction isTaken(zr, resourceKey) {\n  return !!getStore(zr)[resourceKey];\n}\n\nfunction getStore(zr) {\n  return zr[ATTR] || (zr[ATTR] = {});\n}\n/**\n * payload: {\n *     type: 'takeGlobalCursor',\n *     key: 'dataZoomSelect', or 'brush', or ...,\n *         If no userKey, release global cursor.\n * }\n */\n\n\necharts.registerAction({\n  type: 'takeGlobalCursor',\n  event: 'globalCursorTaken',\n  update: 'update'\n}, function () {});\nexports.take = take;\nexports.release = release;\nexports.isTaken = isTaken;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar MapDraw = require(\"../../component/helper/MapDraw\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendChartView({\n  type: 'map',\n  render: function (mapModel, ecModel, api, payload) {\n    // Not render if it is an toggleSelect action from self\n    if (payload && payload.type === 'mapToggleSelect' && payload.from === this.uid) {\n      return;\n    }\n\n    var group = this.group;\n    group.removeAll();\n\n    if (mapModel.getHostGeoModel()) {\n      return;\n    } // Not update map if it is an roam action from self\n\n\n    if (!(payload && payload.type === 'geoRoam' && payload.componentType === 'series' && payload.seriesId === mapModel.id)) {\n      if (mapModel.needsDrawMap) {\n        var mapDraw = this._mapDraw || new MapDraw(api, true);\n        group.add(mapDraw.group);\n        mapDraw.draw(mapModel, ecModel, api, this, payload);\n        this._mapDraw = mapDraw;\n      } else {\n        // Remove drawed map\n        this._mapDraw && this._mapDraw.remove();\n        this._mapDraw = null;\n      }\n    } else {\n      var mapDraw = this._mapDraw;\n      mapDraw && group.add(mapDraw.group);\n    }\n\n    mapModel.get('showLegendSymbol') && ecModel.getComponent('legend') && this._renderSymbols(mapModel, ecModel, api);\n  },\n  remove: function () {\n    this._mapDraw && this._mapDraw.remove();\n    this._mapDraw = null;\n    this.group.removeAll();\n  },\n  dispose: function () {\n    this._mapDraw && this._mapDraw.remove();\n    this._mapDraw = null;\n  },\n  _renderSymbols: function (mapModel, ecModel, api) {\n    var originalData = mapModel.originalData;\n    var group = this.group;\n    originalData.each(originalData.mapDimension('value'), function (value, idx) {\n      if (isNaN(value)) {\n        return;\n      }\n\n      var layout = originalData.getItemLayout(idx);\n\n      if (!layout || !layout.point) {\n        // Not exists in map\n        return;\n      }\n\n      var point = layout.point;\n      var offset = layout.offset;\n      var circle = new graphic.Circle({\n        style: {\n          // Because the special of map draw.\n          // Which needs statistic of multiple series and draw on one map.\n          // And each series also need a symbol with legend color\n          //\n          // Layout and visual are put one the different data\n          fill: mapModel.getData().getVisual('color')\n        },\n        shape: {\n          cx: point[0] + offset * 9,\n          cy: point[1],\n          r: 3\n        },\n        silent: true,\n        // Do not overlap the first series, on which labels are displayed.\n        z2: !offset ? 10 : 8\n      }); // First data on the same region\n\n      if (!offset) {\n        var fullData = mapModel.mainSeries.getData();\n        var name = originalData.getName(idx);\n        var fullIndex = fullData.indexOfName(name);\n        var itemModel = originalData.getItemModel(idx);\n        var labelModel = itemModel.getModel('label');\n        var hoverLabelModel = itemModel.getModel('emphasis.label');\n        var polygonGroups = fullData.getItemGraphicEl(fullIndex);\n        var normalText = zrUtil.retrieve2(mapModel.getFormattedLabel(idx, 'normal'), name);\n        var emphasisText = zrUtil.retrieve2(mapModel.getFormattedLabel(idx, 'emphasis'), normalText);\n\n        var onEmphasis = function () {\n          var hoverStyle = graphic.setTextStyle({}, hoverLabelModel, {\n            text: hoverLabelModel.get('show') ? emphasisText : null\n          }, {\n            isRectText: true,\n            useInsideStyle: false\n          }, true);\n          circle.style.extendFrom(hoverStyle); // Make label upper than others if overlaps.\n\n          circle.__mapOriginalZ2 = circle.z2;\n          circle.z2 += 1;\n        };\n\n        var onNormal = function () {\n          graphic.setTextStyle(circle.style, labelModel, {\n            text: labelModel.get('show') ? normalText : null,\n            textPosition: labelModel.getShallow('position') || 'bottom'\n          }, {\n            isRectText: true,\n            useInsideStyle: false\n          });\n\n          if (circle.__mapOriginalZ2 != null) {\n            circle.z2 = circle.__mapOriginalZ2;\n            circle.__mapOriginalZ2 = null;\n          }\n        };\n\n        polygonGroups.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n        onNormal();\n      }\n\n      group.add(circle);\n    });\n  }\n});\n\nmodule.exports = _default;","var _util = require(\"../../core/util\");\n\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar each = _util.each;\nvar normalizeCssArray = _util.normalizeCssArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\n\nvar textContain = require(\"../../contain/text\");\n\nvar roundRectHelper = require(\"./roundRect\");\n\nvar imageHelper = require(\"./image\");\n\nvar fixShadow = require(\"./fixShadow\");\n\n// TODO: Have not support 'start', 'end' yet.\nvar VALID_TEXT_ALIGN = {\n  left: 1,\n  right: 1,\n  center: 1\n};\nvar VALID_TEXT_VERTICAL_ALIGN = {\n  top: 1,\n  bottom: 1,\n  middle: 1\n};\n/**\n * @param {module:zrender/graphic/Style} style\n * @return {module:zrender/graphic/Style} The input style.\n */\n\nfunction normalizeTextStyle(style) {\n  normalizeStyle(style);\n  each(style.rich, normalizeStyle);\n  return style;\n}\n\nfunction normalizeStyle(style) {\n  if (style) {\n    style.font = textContain.makeFont(style);\n    var textAlign = style.textAlign;\n    textAlign === 'middle' && (textAlign = 'center');\n    style.textAlign = textAlign == null || VALID_TEXT_ALIGN[textAlign] ? textAlign : 'left'; // Compatible with textBaseline.\n\n    var textVerticalAlign = style.textVerticalAlign || style.textBaseline;\n    textVerticalAlign === 'center' && (textVerticalAlign = 'middle');\n    style.textVerticalAlign = textVerticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[textVerticalAlign] ? textVerticalAlign : 'top';\n    var textPadding = style.textPadding;\n\n    if (textPadding) {\n      style.textPadding = normalizeCssArray(style.textPadding);\n    }\n  }\n}\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {string} text\n * @param {module:zrender/graphic/Style} style\n * @param {Object|boolean} [rect] {x, y, width, height}\n *                  If set false, rect text is not used.\n */\n\n\nfunction renderText(hostEl, ctx, text, style, rect) {\n  style.rich ? renderRichText(hostEl, ctx, text, style, rect) : renderPlainText(hostEl, ctx, text, style, rect);\n}\n\nfunction renderPlainText(hostEl, ctx, text, style, rect) {\n  var font = setCtx(ctx, 'font', style.font || textContain.DEFAULT_FONT);\n  var textPadding = style.textPadding;\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parsePlainText(text, font, textPadding, style.truncate);\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var textLines = contentBlock.lines;\n  var lineHeight = contentBlock.lineHeight;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var textX = baseX;\n  var textY = boxY;\n  var needDrawBg = needDrawBackground(style);\n\n  if (needDrawBg || textPadding) {\n    // Consider performance, do not call getTextWidth util necessary.\n    var textWidth = textContain.getWidth(text, font);\n    var outerWidth = textWidth;\n    textPadding && (outerWidth += textPadding[1] + textPadding[3]);\n    var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n    needDrawBg && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n    if (textPadding) {\n      textX = getTextXForPadding(baseX, textAlign, textPadding);\n      textY += textPadding[0];\n    }\n  }\n\n  setCtx(ctx, 'textAlign', textAlign || 'left'); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle'); // Always set shadowBlur and shadowOffset to avoid leak from displayable.\n\n  setCtx(ctx, 'shadowBlur', style.textShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textShadowOffsetY || 0); // `textBaseline` is set as 'middle'.\n\n  textY += lineHeight / 2;\n  var textStrokeWidth = style.textStrokeWidth;\n  var textStroke = getStroke(style.textStroke, textStrokeWidth);\n  var textFill = getFill(style.textFill);\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n  }\n\n  for (var i = 0; i < textLines.length; i++) {\n    // Fill after stroke so the outline will not cover the main part.\n    textStroke && ctx.strokeText(textLines[i], textX, textY);\n    textFill && ctx.fillText(textLines[i], textX, textY);\n    textY += lineHeight;\n  }\n}\n\nfunction renderRichText(hostEl, ctx, text, style, rect) {\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parseRichText(text, style);\n  }\n\n  drawRichText(hostEl, ctx, contentBlock, style, rect);\n}\n\nfunction drawRichText(hostEl, ctx, contentBlock, style, rect) {\n  var contentWidth = contentBlock.width;\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var textPadding = style.textPadding;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var xLeft = boxX;\n  var lineTop = boxY;\n\n  if (textPadding) {\n    xLeft += textPadding[3];\n    lineTop += textPadding[0];\n  }\n\n  var xRight = xLeft + contentWidth;\n  needDrawBackground(style) && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n  for (var i = 0; i < contentBlock.lines.length; i++) {\n    var line = contentBlock.lines[i];\n    var tokens = line.tokens;\n    var tokenCount = tokens.length;\n    var lineHeight = line.lineHeight;\n    var usedWidth = line.width;\n    var leftIndex = 0;\n    var lineXLeft = xLeft;\n    var lineXRight = xRight;\n    var rightIndex = tokenCount - 1;\n    var token;\n\n    while (leftIndex < tokenCount && (token = tokens[leftIndex], !token.textAlign || token.textAlign === 'left')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft, 'left');\n      usedWidth -= token.width;\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    while (rightIndex >= 0 && (token = tokens[rightIndex], token.textAlign === 'right')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXRight, 'right');\n      usedWidth -= token.width;\n      lineXRight -= token.width;\n      rightIndex--;\n    } // The other tokens are placed as textAlign 'center' if there is enough space.\n\n\n    lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - usedWidth) / 2;\n\n    while (leftIndex <= rightIndex) {\n      token = tokens[leftIndex]; // Consider width specified by user, use 'center' rather than 'left'.\n\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center');\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    lineTop += lineHeight;\n  }\n}\n\nfunction applyTextRotation(ctx, style, rect, x, y) {\n  // textRotation only apply in RectText.\n  if (rect && style.textRotation) {\n    var origin = style.textOrigin;\n\n    if (origin === 'center') {\n      x = rect.width / 2 + rect.x;\n      y = rect.height / 2 + rect.y;\n    } else if (origin) {\n      x = origin[0] + rect.x;\n      y = origin[1] + rect.y;\n    }\n\n    ctx.translate(x, y); // Positive: anticlockwise\n\n    ctx.rotate(-style.textRotation);\n    ctx.translate(-x, -y);\n  }\n}\n\nfunction placeToken(hostEl, ctx, token, style, lineHeight, lineTop, x, textAlign) {\n  var tokenStyle = style.rich[token.styleName] || {}; // 'ctx.textBaseline' is always set as 'middle', for sake of\n  // the bias of \"Microsoft YaHei\".\n\n  var textVerticalAlign = token.textVerticalAlign;\n  var y = lineTop + lineHeight / 2;\n\n  if (textVerticalAlign === 'top') {\n    y = lineTop + token.height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y = lineTop + lineHeight - token.height / 2;\n  }\n\n  !token.isLineHolder && needDrawBackground(tokenStyle) && drawBackground(hostEl, ctx, tokenStyle, textAlign === 'right' ? x - token.width : textAlign === 'center' ? x - token.width / 2 : x, y - token.height / 2, token.width, token.height);\n  var textPadding = token.textPadding;\n\n  if (textPadding) {\n    x = getTextXForPadding(x, textAlign, textPadding);\n    y -= token.height / 2 - textPadding[2] - token.textHeight / 2;\n  }\n\n  setCtx(ctx, 'shadowBlur', retrieve3(tokenStyle.textShadowBlur, style.textShadowBlur, 0));\n  setCtx(ctx, 'shadowColor', tokenStyle.textShadowColor || style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', retrieve3(tokenStyle.textShadowOffsetX, style.textShadowOffsetX, 0));\n  setCtx(ctx, 'shadowOffsetY', retrieve3(tokenStyle.textShadowOffsetY, style.textShadowOffsetY, 0));\n  setCtx(ctx, 'textAlign', textAlign); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle');\n  setCtx(ctx, 'font', token.font || textContain.DEFAULT_FONT);\n  var textStroke = getStroke(tokenStyle.textStroke || style.textStroke, textStrokeWidth);\n  var textFill = getFill(tokenStyle.textFill || style.textFill);\n  var textStrokeWidth = retrieve2(tokenStyle.textStrokeWidth, style.textStrokeWidth); // Fill after stroke so the outline will not cover the main part.\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n    ctx.strokeText(token.text, x, y);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n    ctx.fillText(token.text, x, y);\n  }\n}\n\nfunction needDrawBackground(style) {\n  return style.textBackgroundColor || style.textBorderWidth && style.textBorderColor;\n} // style: {textBackgroundColor, textBorderWidth, textBorderColor, textBorderRadius}\n// shape: {x, y, width, height}\n\n\nfunction drawBackground(hostEl, ctx, style, x, y, width, height) {\n  var textBackgroundColor = style.textBackgroundColor;\n  var textBorderWidth = style.textBorderWidth;\n  var textBorderColor = style.textBorderColor;\n  var isPlainBg = isString(textBackgroundColor);\n  setCtx(ctx, 'shadowBlur', style.textBoxShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textBoxShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textBoxShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textBoxShadowOffsetY || 0);\n\n  if (isPlainBg || textBorderWidth && textBorderColor) {\n    ctx.beginPath();\n    var textBorderRadius = style.textBorderRadius;\n\n    if (!textBorderRadius) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        r: textBorderRadius\n      });\n    }\n\n    ctx.closePath();\n  }\n\n  if (isPlainBg) {\n    setCtx(ctx, 'fillStyle', textBackgroundColor);\n    ctx.fill();\n  } else if (isObject(textBackgroundColor)) {\n    var image = textBackgroundColor.image;\n    image = imageHelper.createOrUpdateImage(image, null, hostEl, onBgImageLoaded, textBackgroundColor);\n\n    if (image && imageHelper.isImageReady(image)) {\n      ctx.drawImage(image, x, y, width, height);\n    }\n  }\n\n  if (textBorderWidth && textBorderColor) {\n    setCtx(ctx, 'lineWidth', textBorderWidth);\n    setCtx(ctx, 'strokeStyle', textBorderColor);\n    ctx.stroke();\n  }\n}\n\nfunction onBgImageLoaded(image, textBackgroundColor) {\n  // Replace image, so that `contain/text.js#parseRichText`\n  // will get correct result in next tick.\n  textBackgroundColor.image = image;\n}\n\nfunction getBoxPosition(blockHeiht, style, rect) {\n  var baseX = style.x || 0;\n  var baseY = style.y || 0;\n  var textAlign = style.textAlign;\n  var textVerticalAlign = style.textVerticalAlign; // Text position represented by coord\n\n  if (rect) {\n    var textPosition = style.textPosition;\n\n    if (textPosition instanceof Array) {\n      // Percent\n      baseX = rect.x + parsePercent(textPosition[0], rect.width);\n      baseY = rect.y + parsePercent(textPosition[1], rect.height);\n    } else {\n      var res = textContain.adjustTextPositionOnRect(textPosition, rect, style.textDistance);\n      baseX = res.x;\n      baseY = res.y; // Default align and baseline when has textPosition\n\n      textAlign = textAlign || res.textAlign;\n      textVerticalAlign = textVerticalAlign || res.textVerticalAlign;\n    } // textOffset is only support in RectText, otherwise\n    // we have to adjust boundingRect for textOffset.\n\n\n    var textOffset = style.textOffset;\n\n    if (textOffset) {\n      baseX += textOffset[0];\n      baseY += textOffset[1];\n    }\n  }\n\n  return {\n    baseX: baseX,\n    baseY: baseY,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction setCtx(ctx, prop, value) {\n  ctx[prop] = fixShadow(ctx, prop, value);\n  return ctx[prop];\n}\n/**\n * @param {string} [stroke] If specified, do not check style.textStroke.\n * @param {string} [lineWidth] If specified, do not check style.textStroke.\n * @param {number} style\n */\n\n\nfunction getStroke(stroke, lineWidth) {\n  return stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none' ? null // TODO pattern and gradient?\n  : stroke.image || stroke.colorStops ? '#000' : stroke;\n}\n\nfunction getFill(fill) {\n  return fill == null || fill === 'none' ? null // TODO pattern and gradient?\n  : fill.image || fill.colorStops ? '#000' : fill;\n}\n\nfunction parsePercent(value, maxValue) {\n  if (typeof value === 'string') {\n    if (value.lastIndexOf('%') >= 0) {\n      return parseFloat(value) / 100 * maxValue;\n    }\n\n    return parseFloat(value);\n  }\n\n  return value;\n}\n\nfunction getTextXForPadding(x, textAlign, textPadding) {\n  return textAlign === 'right' ? x - textPadding[1] : textAlign === 'center' ? x + textPadding[3] / 2 - textPadding[1] / 2 : x + textPadding[3];\n}\n/**\n * @param {string} text\n * @param {module:zrender/Style} style\n * @return {boolean}\n */\n\n\nfunction needDrawText(text, style) {\n  return text != null && (text || style.textBackgroundColor || style.textBorderWidth && style.textBorderColor || style.textPadding);\n}\n\nexports.normalizeTextStyle = normalizeTextStyle;\nexports.renderText = renderText;\nexports.getStroke = getStroke;\nexports.getFill = getFill;\nexports.needDrawText = needDrawText;","var echarts = require(\"../../echarts\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar LargeSymbolDraw = require(\"../helper/LargeSymbolDraw\");\n\nvar pointsLayout = require(\"../../layout/points\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.extendChartView({\n  type: 'scatter',\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var symbolDraw = this._updateSymbolDraw(data, seriesModel);\n\n    symbolDraw.updateData(data);\n    this._finished = true;\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var symbolDraw = this._updateSymbolDraw(data, seriesModel);\n\n    symbolDraw.incrementalPrepareUpdate(data);\n    this._finished = false;\n  },\n  incrementalRender: function (taskParams, seriesModel, ecModel) {\n    this._symbolDraw.incrementalUpdate(taskParams, seriesModel.getData());\n\n    this._finished = taskParams.end === seriesModel.getData().count();\n  },\n  updateTransform: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData(); // Must mark group dirty and make sure the incremental layer will be cleared\n    // PENDING\n\n    this.group.dirty();\n\n    if (!this._finished || data.count() > 1e4 || !this._symbolDraw.isPersistent()) {\n      return {\n        update: true\n      };\n    } else {\n      var res = pointsLayout().reset(seriesModel);\n\n      if (res.progress) {\n        res.progress({\n          start: 0,\n          end: data.count()\n        }, data);\n      }\n\n      this._symbolDraw.updateLayout(data);\n    }\n  },\n  _updateSymbolDraw: function (data, seriesModel) {\n    var symbolDraw = this._symbolDraw;\n    var pipelineContext = seriesModel.pipelineContext;\n    var isLargeDraw = pipelineContext.large;\n\n    if (!symbolDraw || isLargeDraw !== this._isLargeDraw) {\n      symbolDraw && symbolDraw.remove();\n      symbolDraw = this._symbolDraw = isLargeDraw ? new LargeSymbolDraw() : new SymbolDraw();\n      this._isLargeDraw = isLargeDraw;\n      this.group.removeAll();\n    }\n\n    this.group.add(symbolDraw.group);\n    return symbolDraw;\n  },\n  remove: function (ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove(true);\n    this._symbolDraw = null;\n  },\n  dispose: function () {}\n});","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar opacityAccessPath = ['lineStyle', 'normal', 'opacity'];\nvar _default = {\n  seriesType: 'parallel',\n  reset: function (seriesModel, ecModel, api) {\n    var itemStyleModel = seriesModel.getModel('itemStyle');\n    var lineStyleModel = seriesModel.getModel('lineStyle');\n    var globalColors = ecModel.get('color');\n    var color = lineStyleModel.get('color') || itemStyleModel.get('color') || globalColors[seriesModel.seriesIndex % globalColors.length];\n    var inactiveOpacity = seriesModel.get('inactiveOpacity');\n    var activeOpacity = seriesModel.get('activeOpacity');\n    var lineStyle = seriesModel.getModel('lineStyle').getLineStyle();\n    var coordSys = seriesModel.coordinateSystem;\n    var data = seriesModel.getData();\n    var opacityMap = {\n      normal: lineStyle.opacity,\n      active: activeOpacity,\n      inactive: inactiveOpacity\n    };\n    data.setVisual('color', color);\n\n    function progress(params, data) {\n      coordSys.eachActiveState(data, function (activeState, dataIndex) {\n        var opacity = opacityMap[activeState];\n\n        if (activeState === 'normal' && data.hasItemOption) {\n          var itemOpacity = data.getItemModel(dataIndex).get(opacityAccessPath, true);\n          itemOpacity != null && (opacity = itemOpacity);\n        }\n\n        data.setItemVisual(dataIndex, 'opacity', opacity);\n      }, params.start, params.end);\n    }\n\n    return {\n      progress: progress\n    };\n  }\n};\nmodule.exports = _default;","var env = require(\"../core/env\");\n\nvar _vector = require(\"../core/vector\");\n\nvar applyTransform = _vector.applyTransform;\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\nvar colorTool = require(\"../tool/color\");\n\nvar textContain = require(\"../contain/text\");\n\nvar textHelper = require(\"../graphic/helper/text\");\n\nvar RectText = require(\"../graphic/mixin/RectText\");\n\nvar Displayable = require(\"../graphic/Displayable\");\n\nvar ZImage = require(\"../graphic/Image\");\n\nvar Text = require(\"../graphic/Text\");\n\nvar Path = require(\"../graphic/Path\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar Gradient = require(\"../graphic/Gradient\");\n\nvar vmlCore = require(\"./core\");\n\n// http://www.w3.org/TR/NOTE-VML\n// TODO Use proxy like svg instead of overwrite brush methods\nvar CMD = PathProxy.CMD;\nvar round = Math.round;\nvar sqrt = Math.sqrt;\nvar abs = Math.abs;\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar mathMax = Math.max;\n\nif (!env.canvasSupported) {\n  var comma = ',';\n  var imageTransformPrefix = 'progid:DXImageTransform.Microsoft';\n  var Z = 21600;\n  var Z2 = Z / 2;\n  var ZLEVEL_BASE = 100000;\n  var Z_BASE = 1000;\n\n  var initRootElStyle = function (el) {\n    el.style.cssText = 'position:absolute;left:0;top:0;width:1px;height:1px;';\n    el.coordsize = Z + ',' + Z;\n    el.coordorigin = '0,0';\n  };\n\n  var encodeHtmlAttribute = function (s) {\n    return String(s).replace(/&/g, '&amp;').replace(/\"/g, '&quot;');\n  };\n\n  var rgb2Str = function (r, g, b) {\n    return 'rgb(' + [r, g, b].join(',') + ')';\n  };\n\n  var append = function (parent, child) {\n    if (child && parent && child.parentNode !== parent) {\n      parent.appendChild(child);\n    }\n  };\n\n  var remove = function (parent, child) {\n    if (child && parent && child.parentNode === parent) {\n      parent.removeChild(child);\n    }\n  };\n\n  var getZIndex = function (zlevel, z, z2) {\n    // z 的取值范围为 [0, 1000]\n    return (parseFloat(zlevel) || 0) * ZLEVEL_BASE + (parseFloat(z) || 0) * Z_BASE + z2;\n  };\n\n  var parsePercent = function (value, maxValue) {\n    if (typeof value === 'string') {\n      if (value.lastIndexOf('%') >= 0) {\n        return parseFloat(value) / 100 * maxValue;\n      }\n\n      return parseFloat(value);\n    }\n\n    return value;\n  };\n  /***************************************************\n   * PATH\n   **************************************************/\n\n\n  var setColorAndOpacity = function (el, color, opacity) {\n    var colorArr = colorTool.parse(color);\n    opacity = +opacity;\n\n    if (isNaN(opacity)) {\n      opacity = 1;\n    }\n\n    if (colorArr) {\n      el.color = rgb2Str(colorArr[0], colorArr[1], colorArr[2]);\n      el.opacity = opacity * colorArr[3];\n    }\n  };\n\n  var getColorAndAlpha = function (color) {\n    var colorArr = colorTool.parse(color);\n    return [rgb2Str(colorArr[0], colorArr[1], colorArr[2]), colorArr[3]];\n  };\n\n  var updateFillNode = function (el, style, zrEl) {\n    // TODO pattern\n    var fill = style.fill;\n\n    if (fill != null) {\n      // Modified from excanvas\n      if (fill instanceof Gradient) {\n        var gradientType;\n        var angle = 0;\n        var focus = [0, 0]; // additional offset\n\n        var shift = 0; // scale factor for offset\n\n        var expansion = 1;\n        var rect = zrEl.getBoundingRect();\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n\n        if (fill.type === 'linear') {\n          gradientType = 'gradient';\n          var transform = zrEl.transform;\n          var p0 = [fill.x * rectWidth, fill.y * rectHeight];\n          var p1 = [fill.x2 * rectWidth, fill.y2 * rectHeight];\n\n          if (transform) {\n            applyTransform(p0, p0, transform);\n            applyTransform(p1, p1, transform);\n          }\n\n          var dx = p1[0] - p0[0];\n          var dy = p1[1] - p0[1];\n          angle = Math.atan2(dx, dy) * 180 / Math.PI; // The angle should be a non-negative number.\n\n          if (angle < 0) {\n            angle += 360;\n          } // Very small angles produce an unexpected result because they are\n          // converted to a scientific notation string.\n\n\n          if (angle < 1e-6) {\n            angle = 0;\n          }\n        } else {\n          gradientType = 'gradientradial';\n          var p0 = [fill.x * rectWidth, fill.y * rectHeight];\n          var transform = zrEl.transform;\n          var scale = zrEl.scale;\n          var width = rectWidth;\n          var height = rectHeight;\n          focus = [// Percent in bounding rect\n          (p0[0] - rect.x) / width, (p0[1] - rect.y) / height];\n\n          if (transform) {\n            applyTransform(p0, p0, transform);\n          }\n\n          width /= scale[0] * Z;\n          height /= scale[1] * Z;\n          var dimension = mathMax(width, height);\n          shift = 2 * 0 / dimension;\n          expansion = 2 * fill.r / dimension - shift;\n        } // We need to sort the color stops in ascending order by offset,\n        // otherwise IE won't interpret it correctly.\n\n\n        var stops = fill.colorStops.slice();\n        stops.sort(function (cs1, cs2) {\n          return cs1.offset - cs2.offset;\n        });\n        var length = stops.length; // Color and alpha list of first and last stop\n\n        var colorAndAlphaList = [];\n        var colors = [];\n\n        for (var i = 0; i < length; i++) {\n          var stop = stops[i];\n          var colorAndAlpha = getColorAndAlpha(stop.color);\n          colors.push(stop.offset * expansion + shift + ' ' + colorAndAlpha[0]);\n\n          if (i === 0 || i === length - 1) {\n            colorAndAlphaList.push(colorAndAlpha);\n          }\n        }\n\n        if (length >= 2) {\n          var color1 = colorAndAlphaList[0][0];\n          var color2 = colorAndAlphaList[1][0];\n          var opacity1 = colorAndAlphaList[0][1] * style.opacity;\n          var opacity2 = colorAndAlphaList[1][1] * style.opacity;\n          el.type = gradientType;\n          el.method = 'none';\n          el.focus = '100%';\n          el.angle = angle;\n          el.color = color1;\n          el.color2 = color2;\n          el.colors = colors.join(','); // When colors attribute is used, the meanings of opacity and o:opacity2\n          // are reversed.\n\n          el.opacity = opacity2; // FIXME g_o_:opacity ?\n\n          el.opacity2 = opacity1;\n        }\n\n        if (gradientType === 'radial') {\n          el.focusposition = focus.join(',');\n        }\n      } else {\n        // FIXME Change from Gradient fill to color fill\n        setColorAndOpacity(el, fill, style.opacity);\n      }\n    }\n  };\n\n  var updateStrokeNode = function (el, style) {\n    // if (style.lineJoin != null) {\n    //     el.joinstyle = style.lineJoin;\n    // }\n    // if (style.miterLimit != null) {\n    //     el.miterlimit = style.miterLimit * Z;\n    // }\n    // if (style.lineCap != null) {\n    //     el.endcap = style.lineCap;\n    // }\n    if (style.lineDash != null) {\n      el.dashstyle = style.lineDash.join(' ');\n    }\n\n    if (style.stroke != null && !(style.stroke instanceof Gradient)) {\n      setColorAndOpacity(el, style.stroke, style.opacity);\n    }\n  };\n\n  var updateFillAndStroke = function (vmlEl, type, style, zrEl) {\n    var isFill = type == 'fill';\n    var el = vmlEl.getElementsByTagName(type)[0]; // Stroke must have lineWidth\n\n    if (style[type] != null && style[type] !== 'none' && (isFill || !isFill && style.lineWidth)) {\n      vmlEl[isFill ? 'filled' : 'stroked'] = 'true'; // FIXME Remove before updating, or set `colors` will throw error\n\n      if (style[type] instanceof Gradient) {\n        remove(vmlEl, el);\n      }\n\n      if (!el) {\n        el = vmlCore.createNode(type);\n      }\n\n      isFill ? updateFillNode(el, style, zrEl) : updateStrokeNode(el, style);\n      append(vmlEl, el);\n    } else {\n      vmlEl[isFill ? 'filled' : 'stroked'] = 'false';\n      remove(vmlEl, el);\n    }\n  };\n\n  var points = [[], [], []];\n\n  var pathDataToString = function (path, m) {\n    var M = CMD.M;\n    var C = CMD.C;\n    var L = CMD.L;\n    var A = CMD.A;\n    var Q = CMD.Q;\n    var str = [];\n    var nPoint;\n    var cmdStr;\n    var cmd;\n    var i;\n    var xi;\n    var yi;\n    var data = path.data;\n    var dataLength = path.len();\n\n    for (i = 0; i < dataLength;) {\n      cmd = data[i++];\n      cmdStr = '';\n      nPoint = 0;\n\n      switch (cmd) {\n        case M:\n          cmdStr = ' m ';\n          nPoint = 1;\n          xi = data[i++];\n          yi = data[i++];\n          points[0][0] = xi;\n          points[0][1] = yi;\n          break;\n\n        case L:\n          cmdStr = ' l ';\n          nPoint = 1;\n          xi = data[i++];\n          yi = data[i++];\n          points[0][0] = xi;\n          points[0][1] = yi;\n          break;\n\n        case Q:\n        case C:\n          cmdStr = ' c ';\n          nPoint = 3;\n          var x1 = data[i++];\n          var y1 = data[i++];\n          var x2 = data[i++];\n          var y2 = data[i++];\n          var x3;\n          var y3;\n\n          if (cmd === Q) {\n            // Convert quadratic to cubic using degree elevation\n            x3 = x2;\n            y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (xi + 2 * x1) / 3;\n            y1 = (yi + 2 * y1) / 3;\n          } else {\n            x3 = data[i++];\n            y3 = data[i++];\n          }\n\n          points[0][0] = x1;\n          points[0][1] = y1;\n          points[1][0] = x2;\n          points[1][1] = y2;\n          points[2][0] = x3;\n          points[2][1] = y3;\n          xi = x3;\n          yi = y3;\n          break;\n\n        case A:\n          var x = 0;\n          var y = 0;\n          var sx = 1;\n          var sy = 1;\n          var angle = 0;\n\n          if (m) {\n            // Extract SRT from matrix\n            x = m[4];\n            y = m[5];\n            sx = sqrt(m[0] * m[0] + m[1] * m[1]);\n            sy = sqrt(m[2] * m[2] + m[3] * m[3]);\n            angle = Math.atan2(-m[1] / sy, m[0] / sx);\n          }\n\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++] + angle;\n          var endAngle = data[i++] + startAngle + angle; // FIXME\n          // var psi = data[i++];\n\n          i++;\n          var clockwise = data[i++];\n          var x0 = cx + cos(startAngle) * rx;\n          var y0 = cy + sin(startAngle) * ry;\n          var x1 = cx + cos(endAngle) * rx;\n          var y1 = cy + sin(endAngle) * ry;\n          var type = clockwise ? ' wa ' : ' at ';\n\n          if (Math.abs(x0 - x1) < 1e-4) {\n            // IE won't render arches drawn counter clockwise if x0 == x1.\n            if (Math.abs(endAngle - startAngle) > 1e-2) {\n              // Offset x0 by 1/80 of a pixel. Use something\n              // that can be represented in binary\n              if (clockwise) {\n                x0 += 270 / Z;\n              }\n            } else {\n              // Avoid case draw full circle\n              if (Math.abs(y0 - cy) < 1e-4) {\n                if (clockwise && x0 < cx || !clockwise && x0 > cx) {\n                  y1 -= 270 / Z;\n                } else {\n                  y1 += 270 / Z;\n                }\n              } else if (clockwise && y0 < cy || !clockwise && y0 > cy) {\n                x1 += 270 / Z;\n              } else {\n                x1 -= 270 / Z;\n              }\n            }\n          }\n\n          str.push(type, round(((cx - rx) * sx + x) * Z - Z2), comma, round(((cy - ry) * sy + y) * Z - Z2), comma, round(((cx + rx) * sx + x) * Z - Z2), comma, round(((cy + ry) * sy + y) * Z - Z2), comma, round((x0 * sx + x) * Z - Z2), comma, round((y0 * sy + y) * Z - Z2), comma, round((x1 * sx + x) * Z - Z2), comma, round((y1 * sy + y) * Z - Z2));\n          xi = x1;\n          yi = y1;\n          break;\n\n        case CMD.R:\n          var p0 = points[0];\n          var p1 = points[1]; // x0, y0\n\n          p0[0] = data[i++];\n          p0[1] = data[i++]; // x1, y1\n\n          p1[0] = p0[0] + data[i++];\n          p1[1] = p0[1] + data[i++];\n\n          if (m) {\n            applyTransform(p0, p0, m);\n            applyTransform(p1, p1, m);\n          }\n\n          p0[0] = round(p0[0] * Z - Z2);\n          p1[0] = round(p1[0] * Z - Z2);\n          p0[1] = round(p0[1] * Z - Z2);\n          p1[1] = round(p1[1] * Z - Z2);\n          str.push( // x0, y0\n          ' m ', p0[0], comma, p0[1], // x1, y0\n          ' l ', p1[0], comma, p0[1], // x1, y1\n          ' l ', p1[0], comma, p1[1], // x0, y1\n          ' l ', p0[0], comma, p1[1]);\n          break;\n\n        case CMD.Z:\n          // FIXME Update xi, yi\n          str.push(' x ');\n      }\n\n      if (nPoint > 0) {\n        str.push(cmdStr);\n\n        for (var k = 0; k < nPoint; k++) {\n          var p = points[k];\n          m && applyTransform(p, p, m); // 不 round 会非常慢\n\n          str.push(round(p[0] * Z - Z2), comma, round(p[1] * Z - Z2), k < nPoint - 1 ? comma : '');\n        }\n      }\n    }\n\n    return str.join('');\n  }; // Rewrite the original path method\n\n\n  Path.prototype.brushVML = function (vmlRoot) {\n    var style = this.style;\n    var vmlEl = this._vmlEl;\n\n    if (!vmlEl) {\n      vmlEl = vmlCore.createNode('shape');\n      initRootElStyle(vmlEl);\n      this._vmlEl = vmlEl;\n    }\n\n    updateFillAndStroke(vmlEl, 'fill', style, this);\n    updateFillAndStroke(vmlEl, 'stroke', style, this);\n    var m = this.transform;\n    var needTransform = m != null;\n    var strokeEl = vmlEl.getElementsByTagName('stroke')[0];\n\n    if (strokeEl) {\n      var lineWidth = style.lineWidth; // Get the line scale.\n      // Determinant of this.m_ means how much the area is enlarged by the\n      // transformation. So its square root can be used as a scale factor\n      // for width.\n\n      if (needTransform && !style.strokeNoScale) {\n        var det = m[0] * m[3] - m[1] * m[2];\n        lineWidth *= sqrt(abs(det));\n      }\n\n      strokeEl.weight = lineWidth + 'px';\n    }\n\n    var path = this.path || (this.path = new PathProxy());\n\n    if (this.__dirtyPath) {\n      path.beginPath();\n      this.buildPath(path, this.shape);\n      path.toStatic();\n      this.__dirtyPath = false;\n    }\n\n    vmlEl.path = pathDataToString(path, this.transform);\n    vmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2); // Append to root\n\n    append(vmlRoot, vmlEl); // Text\n\n    if (style.text != null) {\n      this.drawRectText(vmlRoot, this.getBoundingRect());\n    } else {\n      this.removeRectText(vmlRoot);\n    }\n  };\n\n  Path.prototype.onRemove = function (vmlRoot) {\n    remove(vmlRoot, this._vmlEl);\n    this.removeRectText(vmlRoot);\n  };\n\n  Path.prototype.onAdd = function (vmlRoot) {\n    append(vmlRoot, this._vmlEl);\n    this.appendRectText(vmlRoot);\n  };\n  /***************************************************\n   * IMAGE\n   **************************************************/\n\n\n  var isImage = function (img) {\n    // FIXME img instanceof Image 如果 img 是一个字符串的时候，IE8 下会报错\n    return typeof img === 'object' && img.tagName && img.tagName.toUpperCase() === 'IMG'; // return img instanceof Image;\n  }; // Rewrite the original path method\n\n\n  ZImage.prototype.brushVML = function (vmlRoot) {\n    var style = this.style;\n    var image = style.image; // Image original width, height\n\n    var ow;\n    var oh;\n\n    if (isImage(image)) {\n      var src = image.src;\n\n      if (src === this._imageSrc) {\n        ow = this._imageWidth;\n        oh = this._imageHeight;\n      } else {\n        var imageRuntimeStyle = image.runtimeStyle;\n        var oldRuntimeWidth = imageRuntimeStyle.width;\n        var oldRuntimeHeight = imageRuntimeStyle.height;\n        imageRuntimeStyle.width = 'auto';\n        imageRuntimeStyle.height = 'auto'; // get the original size\n\n        ow = image.width;\n        oh = image.height; // and remove overides\n\n        imageRuntimeStyle.width = oldRuntimeWidth;\n        imageRuntimeStyle.height = oldRuntimeHeight; // Caching image original width, height and src\n\n        this._imageSrc = src;\n        this._imageWidth = ow;\n        this._imageHeight = oh;\n      }\n\n      image = src;\n    } else {\n      if (image === this._imageSrc) {\n        ow = this._imageWidth;\n        oh = this._imageHeight;\n      }\n    }\n\n    if (!image) {\n      return;\n    }\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var dw = style.width;\n    var dh = style.height;\n    var sw = style.sWidth;\n    var sh = style.sHeight;\n    var sx = style.sx || 0;\n    var sy = style.sy || 0;\n    var hasCrop = sw && sh;\n    var vmlEl = this._vmlEl;\n\n    if (!vmlEl) {\n      // FIXME 使用 group 在 left, top 都不是 0 的时候就无法显示了。\n      // vmlEl = vmlCore.createNode('group');\n      vmlEl = vmlCore.doc.createElement('div');\n      initRootElStyle(vmlEl);\n      this._vmlEl = vmlEl;\n    }\n\n    var vmlElStyle = vmlEl.style;\n    var hasRotation = false;\n    var m;\n    var scaleX = 1;\n    var scaleY = 1;\n\n    if (this.transform) {\n      m = this.transform;\n      scaleX = sqrt(m[0] * m[0] + m[1] * m[1]);\n      scaleY = sqrt(m[2] * m[2] + m[3] * m[3]);\n      hasRotation = m[1] || m[2];\n    }\n\n    if (hasRotation) {\n      // If filters are necessary (rotation exists), create them\n      // filters are bog-slow, so only create them if abbsolutely necessary\n      // The following check doesn't account for skews (which don't exist\n      // in the canvas spec (yet) anyway.\n      // From excanvas\n      var p0 = [x, y];\n      var p1 = [x + dw, y];\n      var p2 = [x, y + dh];\n      var p3 = [x + dw, y + dh];\n      applyTransform(p0, p0, m);\n      applyTransform(p1, p1, m);\n      applyTransform(p2, p2, m);\n      applyTransform(p3, p3, m);\n      var maxX = mathMax(p0[0], p1[0], p2[0], p3[0]);\n      var maxY = mathMax(p0[1], p1[1], p2[1], p3[1]);\n      var transformFilter = [];\n      transformFilter.push('M11=', m[0] / scaleX, comma, 'M12=', m[2] / scaleY, comma, 'M21=', m[1] / scaleX, comma, 'M22=', m[3] / scaleY, comma, 'Dx=', round(x * scaleX + m[4]), comma, 'Dy=', round(y * scaleY + m[5]));\n      vmlElStyle.padding = '0 ' + round(maxX) + 'px ' + round(maxY) + 'px 0'; // FIXME DXImageTransform 在 IE11 的兼容模式下不起作用\n\n      vmlElStyle.filter = imageTransformPrefix + '.Matrix(' + transformFilter.join('') + ', SizingMethod=clip)';\n    } else {\n      if (m) {\n        x = x * scaleX + m[4];\n        y = y * scaleY + m[5];\n      }\n\n      vmlElStyle.filter = '';\n      vmlElStyle.left = round(x) + 'px';\n      vmlElStyle.top = round(y) + 'px';\n    }\n\n    var imageEl = this._imageEl;\n    var cropEl = this._cropEl;\n\n    if (!imageEl) {\n      imageEl = vmlCore.doc.createElement('div');\n      this._imageEl = imageEl;\n    }\n\n    var imageELStyle = imageEl.style;\n\n    if (hasCrop) {\n      // Needs know image original width and height\n      if (!(ow && oh)) {\n        var tmpImage = new Image();\n        var self = this;\n\n        tmpImage.onload = function () {\n          tmpImage.onload = null;\n          ow = tmpImage.width;\n          oh = tmpImage.height; // Adjust image width and height to fit the ratio destinationSize / sourceSize\n\n          imageELStyle.width = round(scaleX * ow * dw / sw) + 'px';\n          imageELStyle.height = round(scaleY * oh * dh / sh) + 'px'; // Caching image original width, height and src\n\n          self._imageWidth = ow;\n          self._imageHeight = oh;\n          self._imageSrc = image;\n        };\n\n        tmpImage.src = image;\n      } else {\n        imageELStyle.width = round(scaleX * ow * dw / sw) + 'px';\n        imageELStyle.height = round(scaleY * oh * dh / sh) + 'px';\n      }\n\n      if (!cropEl) {\n        cropEl = vmlCore.doc.createElement('div');\n        cropEl.style.overflow = 'hidden';\n        this._cropEl = cropEl;\n      }\n\n      var cropElStyle = cropEl.style;\n      cropElStyle.width = round((dw + sx * dw / sw) * scaleX);\n      cropElStyle.height = round((dh + sy * dh / sh) * scaleY);\n      cropElStyle.filter = imageTransformPrefix + '.Matrix(Dx=' + -sx * dw / sw * scaleX + ',Dy=' + -sy * dh / sh * scaleY + ')';\n\n      if (!cropEl.parentNode) {\n        vmlEl.appendChild(cropEl);\n      }\n\n      if (imageEl.parentNode != cropEl) {\n        cropEl.appendChild(imageEl);\n      }\n    } else {\n      imageELStyle.width = round(scaleX * dw) + 'px';\n      imageELStyle.height = round(scaleY * dh) + 'px';\n      vmlEl.appendChild(imageEl);\n\n      if (cropEl && cropEl.parentNode) {\n        vmlEl.removeChild(cropEl);\n        this._cropEl = null;\n      }\n    }\n\n    var filterStr = '';\n    var alpha = style.opacity;\n\n    if (alpha < 1) {\n      filterStr += '.Alpha(opacity=' + round(alpha * 100) + ') ';\n    }\n\n    filterStr += imageTransformPrefix + '.AlphaImageLoader(src=' + image + ', SizingMethod=scale)';\n    imageELStyle.filter = filterStr;\n    vmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2); // Append to root\n\n    append(vmlRoot, vmlEl); // Text\n\n    if (style.text != null) {\n      this.drawRectText(vmlRoot, this.getBoundingRect());\n    }\n  };\n\n  ZImage.prototype.onRemove = function (vmlRoot) {\n    remove(vmlRoot, this._vmlEl);\n    this._vmlEl = null;\n    this._cropEl = null;\n    this._imageEl = null;\n    this.removeRectText(vmlRoot);\n  };\n\n  ZImage.prototype.onAdd = function (vmlRoot) {\n    append(vmlRoot, this._vmlEl);\n    this.appendRectText(vmlRoot);\n  };\n  /***************************************************\n   * TEXT\n   **************************************************/\n\n\n  var DEFAULT_STYLE_NORMAL = 'normal';\n  var fontStyleCache = {};\n  var fontStyleCacheCount = 0;\n  var MAX_FONT_CACHE_SIZE = 100;\n  var fontEl = document.createElement('div');\n\n  var getFontStyle = function (fontString) {\n    var fontStyle = fontStyleCache[fontString];\n\n    if (!fontStyle) {\n      // Clear cache\n      if (fontStyleCacheCount > MAX_FONT_CACHE_SIZE) {\n        fontStyleCacheCount = 0;\n        fontStyleCache = {};\n      }\n\n      var style = fontEl.style;\n      var fontFamily;\n\n      try {\n        style.font = fontString;\n        fontFamily = style.fontFamily.split(',')[0];\n      } catch (e) {}\n\n      fontStyle = {\n        style: style.fontStyle || DEFAULT_STYLE_NORMAL,\n        variant: style.fontVariant || DEFAULT_STYLE_NORMAL,\n        weight: style.fontWeight || DEFAULT_STYLE_NORMAL,\n        size: parseFloat(style.fontSize || 12) | 0,\n        family: fontFamily || 'Microsoft YaHei'\n      };\n      fontStyleCache[fontString] = fontStyle;\n      fontStyleCacheCount++;\n    }\n\n    return fontStyle;\n  };\n\n  var textMeasureEl; // Overwrite measure text method\n\n  textContain.$override('measureText', function (text, textFont) {\n    var doc = vmlCore.doc;\n\n    if (!textMeasureEl) {\n      textMeasureEl = doc.createElement('div');\n      textMeasureEl.style.cssText = 'position:absolute;top:-20000px;left:0;' + 'padding:0;margin:0;border:none;white-space:pre;';\n      vmlCore.doc.body.appendChild(textMeasureEl);\n    }\n\n    try {\n      textMeasureEl.style.font = textFont;\n    } catch (ex) {// Ignore failures to set to invalid font.\n    }\n\n    textMeasureEl.innerHTML = ''; // Don't use innerHTML or innerText because they allow markup/whitespace.\n\n    textMeasureEl.appendChild(doc.createTextNode(text));\n    return {\n      width: textMeasureEl.offsetWidth\n    };\n  });\n  var tmpRect = new BoundingRect();\n\n  var drawRectText = function (vmlRoot, rect, textRect, fromTextEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!text) {\n      return;\n    } // Convert rich text to plain text. Rich text is not supported in\n    // IE8-, but tags in rich text template will be removed.\n\n\n    if (style.rich) {\n      var contentBlock = textContain.parseRichText(text, style);\n      text = [];\n\n      for (var i = 0; i < contentBlock.lines.length; i++) {\n        var tokens = contentBlock.lines[i].tokens;\n        var textLine = [];\n\n        for (var j = 0; j < tokens.length; j++) {\n          textLine.push(tokens[j].text);\n        }\n\n        text.push(textLine.join(''));\n      }\n\n      text = text.join('\\n');\n    }\n\n    var x;\n    var y;\n    var align = style.textAlign;\n    var verticalAlign = style.textVerticalAlign;\n    var fontStyle = getFontStyle(style.font); // FIXME encodeHtmlAttribute ?\n\n    var font = fontStyle.style + ' ' + fontStyle.variant + ' ' + fontStyle.weight + ' ' + fontStyle.size + 'px \"' + fontStyle.family + '\"';\n    textRect = textRect || textContain.getBoundingRect(text, font, align, verticalAlign); // Transform rect to view space\n\n    var m = this.transform; // Ignore transform for text in other element\n\n    if (m && !fromTextEl) {\n      tmpRect.copy(rect);\n      tmpRect.applyTransform(m);\n      rect = tmpRect;\n    }\n\n    if (!fromTextEl) {\n      var textPosition = style.textPosition;\n      var distance = style.textDistance; // Text position represented by coord\n\n      if (textPosition instanceof Array) {\n        x = rect.x + parsePercent(textPosition[0], rect.width);\n        y = rect.y + parsePercent(textPosition[1], rect.height);\n        align = align || 'left';\n      } else {\n        var res = textContain.adjustTextPositionOnRect(textPosition, rect, distance);\n        x = res.x;\n        y = res.y; // Default align and baseline when has textPosition\n\n        align = align || res.textAlign;\n        verticalAlign = verticalAlign || res.textVerticalAlign;\n      }\n    } else {\n      x = rect.x;\n      y = rect.y;\n    }\n\n    x = textContain.adjustTextX(x, textRect.width, align);\n    y = textContain.adjustTextY(y, textRect.height, verticalAlign); // Force baseline 'middle'\n\n    y += textRect.height / 2; // var fontSize = fontStyle.size;\n    // 1.75 is an arbitrary number, as there is no info about the text baseline\n    // switch (baseline) {\n    // case 'hanging':\n    // case 'top':\n    //     y += fontSize / 1.75;\n    //     break;\n    //     case 'middle':\n    //         break;\n    //     default:\n    //     // case null:\n    //     // case 'alphabetic':\n    //     // case 'ideographic':\n    //     // case 'bottom':\n    //         y -= fontSize / 2.25;\n    //         break;\n    // }\n    // switch (align) {\n    //     case 'left':\n    //         break;\n    //     case 'center':\n    //         x -= textRect.width / 2;\n    //         break;\n    //     case 'right':\n    //         x -= textRect.width;\n    //         break;\n    // case 'end':\n    // align = elementStyle.direction == 'ltr' ? 'right' : 'left';\n    // break;\n    // case 'start':\n    // align = elementStyle.direction == 'rtl' ? 'right' : 'left';\n    // break;\n    // default:\n    //     align = 'left';\n    // }\n\n    var createNode = vmlCore.createNode;\n    var textVmlEl = this._textVmlEl;\n    var pathEl;\n    var textPathEl;\n    var skewEl;\n\n    if (!textVmlEl) {\n      textVmlEl = createNode('line');\n      pathEl = createNode('path');\n      textPathEl = createNode('textpath');\n      skewEl = createNode('skew'); // FIXME Why here is not cammel case\n      // Align 'center' seems wrong\n\n      textPathEl.style['v-text-align'] = 'left';\n      initRootElStyle(textVmlEl);\n      pathEl.textpathok = true;\n      textPathEl.on = true;\n      textVmlEl.from = '0 0';\n      textVmlEl.to = '1000 0.05';\n      append(textVmlEl, skewEl);\n      append(textVmlEl, pathEl);\n      append(textVmlEl, textPathEl);\n      this._textVmlEl = textVmlEl;\n    } else {\n      // 这里是在前面 appendChild 保证顺序的前提下\n      skewEl = textVmlEl.firstChild;\n      pathEl = skewEl.nextSibling;\n      textPathEl = pathEl.nextSibling;\n    }\n\n    var coords = [x, y];\n    var textVmlElStyle = textVmlEl.style; // Ignore transform for text in other element\n\n    if (m && fromTextEl) {\n      applyTransform(coords, coords, m);\n      skewEl.on = true;\n      skewEl.matrix = m[0].toFixed(3) + comma + m[2].toFixed(3) + comma + m[1].toFixed(3) + comma + m[3].toFixed(3) + ',0,0'; // Text position\n\n      skewEl.offset = (round(coords[0]) || 0) + ',' + (round(coords[1]) || 0); // Left top point as origin\n\n      skewEl.origin = '0 0';\n      textVmlElStyle.left = '0px';\n      textVmlElStyle.top = '0px';\n    } else {\n      skewEl.on = false;\n      textVmlElStyle.left = round(x) + 'px';\n      textVmlElStyle.top = round(y) + 'px';\n    }\n\n    textPathEl.string = encodeHtmlAttribute(text); // TODO\n\n    try {\n      textPathEl.style.font = font;\n    } // Error font format\n    catch (e) {}\n\n    updateFillAndStroke(textVmlEl, 'fill', {\n      fill: style.textFill,\n      opacity: style.opacity\n    }, this);\n    updateFillAndStroke(textVmlEl, 'stroke', {\n      stroke: style.textStroke,\n      opacity: style.opacity,\n      lineDash: style.lineDash\n    }, this);\n    textVmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2); // Attached to root\n\n    append(vmlRoot, textVmlEl);\n  };\n\n  var removeRectText = function (vmlRoot) {\n    remove(vmlRoot, this._textVmlEl);\n    this._textVmlEl = null;\n  };\n\n  var appendRectText = function (vmlRoot) {\n    append(vmlRoot, this._textVmlEl);\n  };\n\n  var list = [RectText, Displayable, ZImage, Path, Text]; // In case Displayable has been mixed in RectText\n\n  for (var i = 0; i < list.length; i++) {\n    var proto = list[i].prototype;\n    proto.drawRectText = drawRectText;\n    proto.removeRectText = removeRectText;\n    proto.appendRectText = appendRectText;\n  }\n\n  Text.prototype.brushVML = function (vmlRoot) {\n    var style = this.style;\n\n    if (style.text != null) {\n      this.drawRectText(vmlRoot, {\n        x: style.x || 0,\n        y: style.y || 0,\n        width: 0,\n        height: 0\n      }, this.getBoundingRect(), true);\n    } else {\n      this.removeRectText(vmlRoot);\n    }\n  };\n\n  Text.prototype.onRemove = function (vmlRoot) {\n    this.removeRectText(vmlRoot);\n  };\n\n  Text.prototype.onAdd = function (vmlRoot) {\n    this.appendRectText(vmlRoot);\n  };\n}","var polygonContain = require(\"zrender/lib/contain/polygon\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Key of the first level is brushType: `line`, `rect`, `polygon`.\n// Key of the second level is chart element type: `point`, `rect`.\n// See moudule:echarts/component/helper/BrushController\n// function param:\n//      {Object} itemLayout fetch from data.getItemLayout(dataIndex)\n//      {Object} selectors {point: selector, rect: selector, ...}\n//      {Object} area {range: [[], [], ..], boudingRect}\n// function return:\n//      {boolean} Whether in the given brush.\nvar selector = {\n  lineX: getLineSelectors(0),\n  lineY: getLineSelectors(1),\n  rect: {\n    point: function (itemLayout, selectors, area) {\n      return itemLayout && area.boundingRect.contain(itemLayout[0], itemLayout[1]);\n    },\n    rect: function (itemLayout, selectors, area) {\n      return itemLayout && area.boundingRect.intersect(itemLayout);\n    }\n  },\n  polygon: {\n    point: function (itemLayout, selectors, area) {\n      return itemLayout && area.boundingRect.contain(itemLayout[0], itemLayout[1]) && polygonContain.contain(area.range, itemLayout[0], itemLayout[1]);\n    },\n    rect: function (itemLayout, selectors, area) {\n      var points = area.range;\n\n      if (!itemLayout || points.length <= 1) {\n        return false;\n      }\n\n      var x = itemLayout.x;\n      var y = itemLayout.y;\n      var width = itemLayout.width;\n      var height = itemLayout.height;\n      var p = points[0];\n\n      if (polygonContain.contain(points, x, y) || polygonContain.contain(points, x + width, y) || polygonContain.contain(points, x, y + height) || polygonContain.contain(points, x + width, y + height) || BoundingRect.create(itemLayout).contain(p[0], p[1]) || lineIntersectPolygon(x, y, x + width, y, points) || lineIntersectPolygon(x, y, x, y + height, points) || lineIntersectPolygon(x + width, y, x + width, y + height, points) || lineIntersectPolygon(x, y + height, x + width, y + height, points)) {\n        return true;\n      }\n    }\n  }\n};\n\nfunction getLineSelectors(xyIndex) {\n  var xy = ['x', 'y'];\n  var wh = ['width', 'height'];\n  return {\n    point: function (itemLayout, selectors, area) {\n      if (itemLayout) {\n        var range = area.range;\n        var p = itemLayout[xyIndex];\n        return inLineRange(p, range);\n      }\n    },\n    rect: function (itemLayout, selectors, area) {\n      if (itemLayout) {\n        var range = area.range;\n        var layoutRange = [itemLayout[xy[xyIndex]], itemLayout[xy[xyIndex]] + itemLayout[wh[xyIndex]]];\n        layoutRange[1] < layoutRange[0] && layoutRange.reverse();\n        return inLineRange(layoutRange[0], range) || inLineRange(layoutRange[1], range) || inLineRange(range[0], layoutRange) || inLineRange(range[1], layoutRange);\n      }\n    }\n  };\n}\n\nfunction inLineRange(p, range) {\n  return range[0] <= p && p <= range[1];\n}\n\nfunction lineIntersectPolygon(lx, ly, l2x, l2y, points) {\n  for (var i = 0, p2 = points[points.length - 1]; i < points.length; i++) {\n    var p = points[i];\n\n    if (lineIntersect(lx, ly, l2x, l2y, p[0], p[1], p2[0], p2[1])) {\n      return true;\n    }\n\n    p2 = p;\n  }\n} // Code from <http://blog.csdn.net/rickliuxiao/article/details/6259322> with some fix.\n// See <https://en.wikipedia.org/wiki/Line%E2%80%93line_intersection>\n\n\nfunction lineIntersect(a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y) {\n  var delta = determinant(a2x - a1x, b1x - b2x, a2y - a1y, b1y - b2y);\n\n  if (nearZero(delta)) {\n    // parallel\n    return false;\n  }\n\n  var namenda = determinant(b1x - a1x, b1x - b2x, b1y - a1y, b1y - b2y) / delta;\n\n  if (namenda < 0 || namenda > 1) {\n    return false;\n  }\n\n  var miu = determinant(a2x - a1x, b1x - a1x, a2y - a1y, b1y - a1y) / delta;\n\n  if (miu < 0 || miu > 1) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction nearZero(val) {\n  return val <= 1e-6 && val >= -1e-6;\n}\n\nfunction determinant(v1, v2, v3, v4) {\n  return v1 * v4 - v2 * v3;\n}\n\nvar _default = selector;\nmodule.exports = _default;","var MarkerModel = require(\"./MarkerModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = MarkerModel.extend({\n  type: 'markPoint',\n  defaultOption: {\n    zlevel: 0,\n    z: 5,\n    symbol: 'pin',\n    symbolSize: 50,\n    //symbolRotate: 0,\n    //symbolOffset: [0, 0]\n    tooltip: {\n      trigger: 'item'\n    },\n    label: {\n      show: true,\n      position: 'inside'\n    },\n    itemStyle: {\n      borderWidth: 2\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendComponentModel({\n  type: 'tooltip',\n  dependencies: ['axisPointer'],\n  defaultOption: {\n    zlevel: 0,\n    z: 8,\n    show: true,\n    // tooltip主体内容\n    showContent: true,\n    // 'trigger' only works on coordinate system.\n    // 'item' | 'axis' | 'none'\n    trigger: 'item',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: 'mousemove|click',\n    alwaysShowContent: false,\n    displayMode: 'single',\n    // 'single' | 'multipleByCoordSys'\n    // 位置 {Array} | {Function}\n    // position: null\n    // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n    // align: null,\n    // verticalAlign: null,\n    // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n    confine: false,\n    // 内容格式器：{string}（Template） ¦ {Function}\n    // formatter: null\n    showDelay: 0,\n    // 隐藏延迟，单位ms\n    hideDelay: 100,\n    // 动画变换时间，单位s\n    transitionDuration: 0.4,\n    enterable: false,\n    // 提示背景颜色，默认为透明度为0.7的黑色\n    backgroundColor: 'rgba(50,50,50,0.7)',\n    // 提示边框颜色\n    borderColor: '#333',\n    // 提示边框圆角，单位px，默认为4\n    borderRadius: 4,\n    // 提示边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 提示内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // Extra css text\n    extraCssText: '',\n    // 坐标轴指示器，坐标轴触发有效\n    axisPointer: {\n      // 默认为直线\n      // 可选为：'line' | 'shadow' | 'cross'\n      type: 'line',\n      // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n      // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n      // 默认 'auto'，会选择类型为 category 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n      // 极坐标系会默认选择 angle 轴\n      axis: 'auto',\n      animation: 'auto',\n      animationDurationUpdate: 200,\n      animationEasingUpdate: 'exponentialOut',\n      crossStyle: {\n        color: '#999',\n        width: 1,\n        type: 'dashed',\n        // TODO formatter\n        textStyle: {} // lineStyle and shadowStyle should not be specified here,\n        // otherwise it will always override those styles on option.axisPointer.\n\n      }\n    },\n    textStyle: {\n      color: '#fff',\n      fontSize: 14\n    }\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction AngleAxis(scale, angleExtent) {\n  angleExtent = angleExtent || [0, 360];\n  Axis.call(this, 'angle', scale, angleExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = 'category';\n}\n\nAngleAxis.prototype = {\n  constructor: AngleAxis,\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.polar.pointToData(point, clamp)[this.dim === 'radius' ? 0 : 1];\n  },\n  dataToAngle: Axis.prototype.dataToCoord,\n  angleToData: Axis.prototype.coordToData\n};\nzrUtil.inherits(AngleAxis, Axis);\nvar _default = AngleAxis;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar Tree = require(\"../../data/Tree\");\n\nvar _treeHelper = require(\"../helper/treeHelper\");\n\nvar wrapTreePathInfo = _treeHelper.wrapTreePathInfo;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.sunburst',\n\n  /**\n   * @type {module:echarts/data/Tree~Node}\n   */\n  _viewRoot: null,\n  getInitialData: function (option, ecModel) {\n    // Create a virtual root.\n    var root = {\n      name: option.name,\n      children: option.data\n    };\n    completeTreeValue(root);\n    var levels = option.levels || []; // levels = option.levels = setDefault(levels, ecModel);\n\n    var treeOption = {};\n    treeOption.levels = levels; // Make sure always a new tree is created when setOption,\n    // in TreemapView, we check whether oldTree === newTree\n    // to choose mappings approach among old shapes and new shapes.\n\n    return Tree.createTree(root, this, treeOption).data;\n  },\n  optionUpdated: function () {\n    this.resetViewRoot();\n  },\n\n  /*\n   * @override\n   */\n  getDataParams: function (dataIndex) {\n    var params = SeriesModel.prototype.getDataParams.apply(this, arguments);\n    var node = this.getData().tree.getNodeByDataIndex(dataIndex);\n    params.treePathInfo = wrapTreePathInfo(node, this);\n    return params;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    radius: [0, '75%'],\n    // 默认顺时针\n    clockwise: true,\n    startAngle: 90,\n    // 最小角度改为0\n    minAngle: 0,\n    percentPrecision: 2,\n    // If still show when all data zero.\n    stillShowZeroSum: true,\n    // Policy of highlighting pieces when hover on one\n    // Valid values: 'none' (for not downplay others), 'descendant',\n    // 'ancestor', 'self'\n    highlightPolicy: 'descendant',\n    // 'rootToNode', 'link', or false\n    nodeClick: 'rootToNode',\n    renderLabelForZeroData: false,\n    label: {\n      // could be: 'radial', 'tangential', or 'none'\n      rotate: 'radial',\n      show: true,\n      opacity: 1,\n      // 'left' is for inner side of inside, and 'right' is for outter\n      // side for inside\n      align: 'center',\n      position: 'inside',\n      distance: 5,\n      silent: true,\n      emphasis: {}\n    },\n    itemStyle: {\n      borderWidth: 1,\n      borderColor: 'white',\n      opacity: 1,\n      emphasis: {},\n      highlight: {\n        opacity: 1\n      },\n      downplay: {\n        opacity: 0.9\n      }\n    },\n    // Animation type canbe expansion, scale\n    animationType: 'expansion',\n    animationDuration: 1000,\n    animationDurationUpdate: 500,\n    animationEasing: 'cubicOut',\n    data: [],\n    levels: [],\n\n    /**\n     * Sort order.\n     *\n     * Valid values: 'desc', 'asc', null, or callback function.\n     * 'desc' and 'asc' for descend and ascendant order;\n     * null for not sorting;\n     * example of callback function:\n     * function(nodeA, nodeB) {\n     *     return nodeA.getValue() - nodeB.getValue();\n     * }\n     */\n    sort: 'desc'\n  },\n  getViewRoot: function () {\n    return this._viewRoot;\n  },\n\n  /**\n   * @param {module:echarts/data/Tree~Node} [viewRoot]\n   */\n  resetViewRoot: function (viewRoot) {\n    viewRoot ? this._viewRoot = viewRoot : viewRoot = this._viewRoot;\n    var root = this.getRawData().tree.root;\n\n    if (!viewRoot || viewRoot !== root && !root.contains(viewRoot)) {\n      this._viewRoot = root;\n    }\n  }\n});\n/**\n * @param {Object} dataNode\n */\n\n\nfunction completeTreeValue(dataNode) {\n  // Postorder travel tree.\n  // If value of none-leaf node is not set,\n  // calculate it by suming up the value of all children.\n  var sum = 0;\n  zrUtil.each(dataNode.children, function (child) {\n    completeTreeValue(child);\n    var childValue = child.value;\n    zrUtil.isArray(childValue) && (childValue = childValue[0]);\n    sum += childValue;\n  });\n  var thisValue = dataNode.value;\n\n  if (zrUtil.isArray(thisValue)) {\n    thisValue = thisValue[0];\n  }\n\n  if (thisValue == null || isNaN(thisValue)) {\n    thisValue = sum;\n  } // Value should not less than 0.\n\n\n  if (thisValue < 0) {\n    thisValue = 0;\n  }\n\n  zrUtil.isArray(dataNode.value) ? dataNode.value[0] = thisValue : dataNode.value = thisValue;\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction dataToCoordSize(dataSize, dataItem) {\n  // dataItem is necessary in log axis.\n  dataItem = dataItem || [0, 0];\n  return zrUtil.map(['x', 'y'], function (dim, dimIdx) {\n    var axis = this.getAxis(dim);\n    var val = dataItem[dimIdx];\n    var halfSize = dataSize[dimIdx] / 2;\n    return axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis.dataToCoord(val - halfSize) - axis.dataToCoord(val + halfSize));\n  }, this);\n}\n\nfunction _default(coordSys) {\n  var rect = coordSys.grid.getRect();\n  return {\n    coordSys: {\n      // The name exposed to user is always 'cartesian2d' but not 'grid'.\n      type: 'cartesian2d',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    api: {\n      coord: function (data) {\n        // do not provide \"out\" param\n        return coordSys.dataToPoint(data);\n      },\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./bar/PictorialBarSeries\");\n\nrequire(\"./bar/PictorialBarView\");\n\nvar _barGrid = require(\"../layout/barGrid\");\n\nvar layout = _barGrid.layout;\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nrequire(\"../component/gridSimple\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// In case developer forget to include grid component\necharts.registerLayout(zrUtil.curry(layout, 'pictorialBar'));\necharts.registerVisual(visualSymbol('pictorialBar', 'roundRect'));","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar VISUAL_PRIORITY = echarts.PRIORITY.VISUAL.COMPONENT;\necharts.registerVisual(VISUAL_PRIORITY, {\n  createOnAllSeries: true,\n  reset: function (seriesModel, ecModel) {\n    var resetDefines = [];\n    ecModel.eachComponent('visualMap', function (visualMapModel) {\n      var pipelineContext = seriesModel.pipelineContext;\n\n      if (!visualMapModel.isTargetSeries(seriesModel) || pipelineContext && pipelineContext.large) {\n        return;\n      }\n\n      resetDefines.push(visualSolution.incrementalApplyVisual(visualMapModel.stateList, visualMapModel.targetVisuals, zrUtil.bind(visualMapModel.getValueState, visualMapModel), visualMapModel.getDataDimension(seriesModel.getData())));\n    });\n    return resetDefines;\n  }\n}); // Only support color.\n\necharts.registerVisual(VISUAL_PRIORITY, {\n  createOnAllSeries: true,\n  reset: function (seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var visualMetaList = [];\n    ecModel.eachComponent('visualMap', function (visualMapModel) {\n      if (visualMapModel.isTargetSeries(seriesModel)) {\n        var visualMeta = visualMapModel.getVisualMeta(zrUtil.bind(getColorVisual, null, seriesModel, visualMapModel)) || {\n          stops: [],\n          outerColors: []\n        };\n        var concreteDim = visualMapModel.getDataDimension(data);\n        var dimInfo = data.getDimensionInfo(concreteDim);\n\n        if (dimInfo != null) {\n          // visualMeta.dimension should be dimension index, but not concrete dimension.\n          visualMeta.dimension = dimInfo.index;\n          visualMetaList.push(visualMeta);\n        }\n      }\n    }); // console.log(JSON.stringify(visualMetaList.map(a => a.stops)));\n\n    seriesModel.getData().setVisual('visualMeta', visualMetaList);\n  }\n}); // FIXME\n// performance and export for heatmap?\n// value can be Infinity or -Infinity\n\nfunction getColorVisual(seriesModel, visualMapModel, value, valueState) {\n  var mappings = visualMapModel.targetVisuals[valueState];\n  var visualTypes = VisualMapping.prepareVisualTypes(mappings);\n  var resultVisual = {\n    color: seriesModel.getData().getVisual('color') // default color.\n\n  };\n\n  for (var i = 0, len = visualTypes.length; i < len; i++) {\n    var type = visualTypes[i];\n    var mapping = mappings[type === 'opacity' ? '__alphaForOpacity' : type];\n    mapping && mapping.applyVisual(value, getVisual, setVisual);\n  }\n\n  return resultVisual.color;\n\n  function getVisual(key) {\n    return resultVisual[key];\n  }\n\n  function setVisual(key, value) {\n    resultVisual[key] = value;\n  }\n}","var util = require(\"./core/util\");\n\nvar env = require(\"./core/env\");\n\nvar Group = require(\"./container/Group\");\n\nvar timsort = require(\"./core/timsort\");\n\n// Use timsort because in most case elements are partially sorted\n// https://jsfiddle.net/pissang/jr4x7mdm/8/\nfunction shapeCompareFunc(a, b) {\n  if (a.zlevel === b.zlevel) {\n    if (a.z === b.z) {\n      // if (a.z2 === b.z2) {\n      //     // FIXME Slow has renderidx compare\n      //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n      //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n      //     return a.__renderidx - b.__renderidx;\n      // }\n      return a.z2 - b.z2;\n    }\n\n    return a.z - b.z;\n  }\n\n  return a.zlevel - b.zlevel;\n}\n/**\n * 内容仓库 (M)\n * @alias module:zrender/Storage\n * @constructor\n */\n\n\nvar Storage = function () {\n  // jshint ignore:line\n  this._roots = [];\n  this._displayList = [];\n  this._displayListLen = 0;\n};\n\nStorage.prototype = {\n  constructor: Storage,\n\n  /**\n   * @param  {Function} cb\n   *\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._roots.length; i++) {\n      this._roots[i].traverse(cb, context);\n    }\n  },\n\n  /**\n   * 返回所有图形的绘制队列\n   * @param {boolean} [update=false] 是否在返回前更新该数组\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n   *\n   * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n   * @return {Array.<module:zrender/graphic/Displayable>}\n   */\n  getDisplayList: function (update, includeIgnore) {\n    includeIgnore = includeIgnore || false;\n\n    if (update) {\n      this.updateDisplayList(includeIgnore);\n    }\n\n    return this._displayList;\n  },\n\n  /**\n   * 更新图形的绘制队列。\n   * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n   * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n   */\n  updateDisplayList: function (includeIgnore) {\n    this._displayListLen = 0;\n    var roots = this._roots;\n    var displayList = this._displayList;\n\n    for (var i = 0, len = roots.length; i < len; i++) {\n      this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n    }\n\n    displayList.length = this._displayListLen;\n    env.canvasSupported && timsort(displayList, shapeCompareFunc);\n  },\n  _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n    if (el.ignore && !includeIgnore) {\n      return;\n    }\n\n    el.beforeUpdate();\n\n    if (el.__dirty) {\n      el.update();\n    }\n\n    el.afterUpdate();\n    var userSetClipPath = el.clipPath;\n\n    if (userSetClipPath) {\n      // FIXME 效率影响\n      if (clipPaths) {\n        clipPaths = clipPaths.slice();\n      } else {\n        clipPaths = [];\n      }\n\n      var currentClipPath = userSetClipPath;\n      var parentClipPath = el; // Recursively add clip path\n\n      while (currentClipPath) {\n        // clipPath 的变换是基于使用这个 clipPath 的元素\n        currentClipPath.parent = parentClipPath;\n        currentClipPath.updateTransform();\n        clipPaths.push(currentClipPath);\n        parentClipPath = currentClipPath;\n        currentClipPath = currentClipPath.clipPath;\n      }\n    }\n\n    if (el.isGroup) {\n      var children = el._children;\n\n      for (var i = 0; i < children.length; i++) {\n        var child = children[i]; // Force to mark as dirty if group is dirty\n        // FIXME __dirtyPath ?\n\n        if (el.__dirty) {\n          child.__dirty = true;\n        }\n\n        this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n      } // Mark group clean here\n\n\n      el.__dirty = false;\n    } else {\n      el.__clipPaths = clipPaths;\n      this._displayList[this._displayListLen++] = el;\n    }\n  },\n\n  /**\n   * 添加图形(Shape)或者组(Group)到根节点\n   * @param {module:zrender/Element} el\n   */\n  addRoot: function (el) {\n    if (el.__storage === this) {\n      return;\n    }\n\n    if (el instanceof Group) {\n      el.addChildrenToStorage(this);\n    }\n\n    this.addToStorage(el);\n\n    this._roots.push(el);\n  },\n\n  /**\n   * 删除指定的图形(Shape)或者组(Group)\n   * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n   */\n  delRoot: function (el) {\n    if (el == null) {\n      // 不指定el清空\n      for (var i = 0; i < this._roots.length; i++) {\n        var root = this._roots[i];\n\n        if (root instanceof Group) {\n          root.delChildrenFromStorage(this);\n        }\n      }\n\n      this._roots = [];\n      this._displayList = [];\n      this._displayListLen = 0;\n      return;\n    }\n\n    if (el instanceof Array) {\n      for (var i = 0, l = el.length; i < l; i++) {\n        this.delRoot(el[i]);\n      }\n\n      return;\n    }\n\n    var idx = util.indexOf(this._roots, el);\n\n    if (idx >= 0) {\n      this.delFromStorage(el);\n\n      this._roots.splice(idx, 1);\n\n      if (el instanceof Group) {\n        el.delChildrenFromStorage(this);\n      }\n    }\n  },\n  addToStorage: function (el) {\n    if (el) {\n      el.__storage = this;\n      el.dirty(false);\n    }\n\n    return this;\n  },\n  delFromStorage: function (el) {\n    if (el) {\n      el.__storage = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * 清空并且释放Storage\n   */\n  dispose: function () {\n    this._renderList = this._roots = null;\n  },\n  displayableSortFunc: shapeCompareFunc\n};\nvar _default = Storage;\nmodule.exports = _default;","var Path = require(\"../Path\");\n\nvar vec2 = require(\"../../core/vector\");\n\nvar _curve = require(\"../../core/curve\");\n\nvar quadraticSubdivide = _curve.quadraticSubdivide;\nvar cubicSubdivide = _curve.cubicSubdivide;\nvar quadraticAt = _curve.quadraticAt;\nvar cubicAt = _curve.cubicAt;\nvar quadraticDerivativeAt = _curve.quadraticDerivativeAt;\nvar cubicDerivativeAt = _curve.cubicDerivativeAt;\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\nvar out = [];\n\nfunction someVectorAt(shape, t, isTangent) {\n  var cpx2 = shape.cpx2;\n  var cpy2 = shape.cpy2;\n\n  if (cpx2 === null || cpy2 === null) {\n    return [(isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t), (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)];\n  } else {\n    return [(isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t), (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)];\n  }\n}\n\nvar _default = Path.extend({\n  type: 'bezier-curve',\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    // cpx2: 0,\n    // cpy2: 0\n    // Curve show percent, for animating\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var cpx1 = shape.cpx1;\n    var cpy1 = shape.cpy1;\n    var cpx2 = shape.cpx2;\n    var cpy2 = shape.cpy2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (cpx2 == null || cpy2 == null) {\n      if (percent < 1) {\n        quadraticSubdivide(x1, cpx1, x2, percent, out);\n        cpx1 = out[1];\n        x2 = out[2];\n        quadraticSubdivide(y1, cpy1, y2, percent, out);\n        cpy1 = out[1];\n        y2 = out[2];\n      }\n\n      ctx.quadraticCurveTo(cpx1, cpy1, x2, y2);\n    } else {\n      if (percent < 1) {\n        cubicSubdivide(x1, cpx1, cpx2, x2, percent, out);\n        cpx1 = out[1];\n        cpx2 = out[2];\n        x2 = out[3];\n        cubicSubdivide(y1, cpy1, cpy2, y2, percent, out);\n        cpy1 = out[1];\n        cpy2 = out[2];\n        y2 = out[3];\n      }\n\n      ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n    }\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  pointAt: function (t) {\n    return someVectorAt(this.shape, t, false);\n  },\n\n  /**\n   * Get tangent at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  tangentAt: function (t) {\n    var p = someVectorAt(this.shape, t, true);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;","var _circularLayoutHelper = require(\"./circularLayoutHelper\");\n\nvar circularLayout = _circularLayoutHelper.circularLayout;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    if (seriesModel.get('layout') === 'circular') {\n      circularLayout(seriesModel);\n    }\n  });\n}\n\nmodule.exports = _default;","var SeriesModel = require(\"../../model/Series\");\n\nvar createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar _dimensionHelper = require(\"../../data/helper/dimensionHelper\");\n\nvar getDimensionTypeByAxis = _dimensionHelper.getDimensionTypeByAxis;\n\nvar List = require(\"../../data/List\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\nvar nest = require(\"../../util/array/nest\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file  Define the themeRiver view's series model\n * @author Deqing Li(annong035@gmail.com)\n */\nvar DATA_NAME_INDEX = 2;\nvar ThemeRiverSeries = SeriesModel.extend({\n  type: 'series.themeRiver',\n  dependencies: ['singleAxis'],\n\n  /**\n   * @readOnly\n   * @type {module:zrender/core/util#HashMap}\n   */\n  nameMap: null,\n\n  /**\n   * @override\n   */\n  init: function (option) {\n    ThemeRiverSeries.superApply(this, 'init', arguments); // Put this function here is for the sake of consistency of code style.\n    // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n  },\n\n  /**\n   * If there is no value of a certain point in the time for some event,set it value to 0.\n   *\n   * @param {Array} data  initial data in the option\n   * @return {Array}\n   */\n  fixData: function (data) {\n    var rawDataLength = data.length; // grouped data by name\n\n    var dataByName = nest().key(function (dataItem) {\n      return dataItem[2];\n    }).entries(data); // data group in each layer\n\n    var layData = zrUtil.map(dataByName, function (d) {\n      return {\n        name: d.key,\n        dataList: d.values\n      };\n    });\n    var layerNum = layData.length;\n    var largestLayer = -1;\n    var index = -1;\n\n    for (var i = 0; i < layerNum; ++i) {\n      var len = layData[i].dataList.length;\n\n      if (len > largestLayer) {\n        largestLayer = len;\n        index = i;\n      }\n    }\n\n    for (var k = 0; k < layerNum; ++k) {\n      if (k === index) {\n        continue;\n      }\n\n      var name = layData[k].name;\n\n      for (var j = 0; j < largestLayer; ++j) {\n        var timeValue = layData[index].dataList[j][0];\n        var length = layData[k].dataList.length;\n        var keyIndex = -1;\n\n        for (var l = 0; l < length; ++l) {\n          var value = layData[k].dataList[l][0];\n\n          if (value === timeValue) {\n            keyIndex = l;\n            break;\n          }\n        }\n\n        if (keyIndex === -1) {\n          data[rawDataLength] = [];\n          data[rawDataLength][0] = timeValue;\n          data[rawDataLength][1] = 0;\n          data[rawDataLength][2] = name;\n          rawDataLength++;\n        }\n      }\n    }\n\n    return data;\n  },\n\n  /**\n   * @override\n   * @param  {Object} option  the initial option that user gived\n   * @param  {module:echarts/model/Model} ecModel  the model object for themeRiver option\n   * @return {module:echarts/data/List}\n   */\n  getInitialData: function (option, ecModel) {\n    var singleAxisModel = ecModel.queryComponents({\n      mainType: 'singleAxis',\n      index: this.get('singleAxisIndex'),\n      id: this.get('singleAxisId')\n    })[0];\n    var axisType = singleAxisModel.get('type'); // filter the data item with the value of label is undefined\n\n    var filterData = zrUtil.filter(option.data, function (dataItem) {\n      return dataItem[2] !== undefined;\n    }); // ??? TODO design a stage to transfer data for themeRiver and lines?\n\n    var data = this.fixData(filterData || []);\n    var nameList = [];\n    var nameMap = this.nameMap = zrUtil.createHashMap();\n    var count = 0;\n\n    for (var i = 0; i < data.length; ++i) {\n      nameList.push(data[i][DATA_NAME_INDEX]);\n\n      if (!nameMap.get(data[i][DATA_NAME_INDEX])) {\n        nameMap.set(data[i][DATA_NAME_INDEX], count);\n        count++;\n      }\n    }\n\n    var dimensionsInfo = createDimensions(data, {\n      coordDimensions: ['single'],\n      dimensionsDefine: [{\n        name: 'time',\n        type: getDimensionTypeByAxis(axisType)\n      }, {\n        name: 'value',\n        type: 'float'\n      }, {\n        name: 'name',\n        type: 'ordinal'\n      }],\n      encodeDefine: {\n        single: 0,\n        value: 1,\n        itemName: 2\n      }\n    });\n    var list = new List(dimensionsInfo, this);\n    list.initData(data);\n    return list;\n  },\n\n  /**\n   * The raw data is divided into multiple layers and each layer\n   *     has same name.\n   *\n   * @return {Array.<Array.<number>>}\n   */\n  getLayerSeries: function () {\n    var data = this.getData();\n    var lenCount = data.count();\n    var indexArr = [];\n\n    for (var i = 0; i < lenCount; ++i) {\n      indexArr[i] = i;\n    } // data group by name\n\n\n    var dataByName = nest().key(function (index) {\n      return data.get('name', index);\n    }).entries(indexArr);\n    var layerSeries = zrUtil.map(dataByName, function (d) {\n      return {\n        name: d.key,\n        indices: d.values\n      };\n    });\n    var timeDim = data.mapDimension('single');\n\n    for (var j = 0; j < layerSeries.length; ++j) {\n      layerSeries[j].indices.sort(comparer);\n    }\n\n    function comparer(index1, index2) {\n      return data.get(timeDim, index1) - data.get(timeDim, index2);\n    }\n\n    return layerSeries;\n  },\n\n  /**\n   * Get data indices for show tooltip content\n   *\n   * @param {Array.<string>|string} dim  single coordinate dimension\n   * @param {number} value axis value\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis  single Axis used\n   *     the themeRiver.\n   * @return {Object} {dataIndices, nestestValue}\n   */\n  getAxisTooltipData: function (dim, value, baseAxis) {\n    if (!zrUtil.isArray(dim)) {\n      dim = dim ? [dim] : [];\n    }\n\n    var data = this.getData();\n    var layerSeries = this.getLayerSeries();\n    var indices = [];\n    var layerNum = layerSeries.length;\n    var nestestValue;\n\n    for (var i = 0; i < layerNum; ++i) {\n      var minDist = Number.MAX_VALUE;\n      var nearestIdx = -1;\n      var pointNum = layerSeries[i].indices.length;\n\n      for (var j = 0; j < pointNum; ++j) {\n        var theValue = data.get(dim[0], layerSeries[i].indices[j]);\n        var dist = Math.abs(theValue - value);\n\n        if (dist <= minDist) {\n          nestestValue = theValue;\n          minDist = dist;\n          nearestIdx = layerSeries[i].indices[j];\n        }\n      }\n\n      indices.push(nearestIdx);\n    }\n\n    return {\n      dataIndices: indices,\n      nestestValue: nestestValue\n    };\n  },\n\n  /**\n   * @override\n   * @param {number} dataIndex  index of data\n   */\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var htmlName = data.getName(dataIndex);\n    var htmlValue = data.get(data.mapDimension('value'), dataIndex);\n\n    if (isNaN(htmlValue) || htmlValue == null) {\n      htmlValue = '-';\n    }\n\n    return encodeHTML(htmlName + ' : ' + htmlValue);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'singleAxis',\n    // gap in axis's orthogonal orientation\n    boundaryGap: ['10%', '10%'],\n    // legendHoverLink: true,\n    singleAxisIndex: 0,\n    animationEasing: 'linear',\n    label: {\n      margin: 4,\n      show: true,\n      position: 'left',\n      color: '#000',\n      fontSize: 11\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\nvar _default = ThemeRiverSeries;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar LineDraw = require(\"../helper/LineDraw\");\n\nvar EffectLine = require(\"../helper/EffectLine\");\n\nvar Line = require(\"../helper/Line\");\n\nvar Polyline = require(\"../helper/Polyline\");\n\nvar EffectPolyline = require(\"../helper/EffectPolyline\");\n\nvar LargeLineDraw = require(\"../helper/LargeLineDraw\");\n\nvar linesLayout = require(\"./linesLayout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendChartView({\n  type: 'lines',\n  init: function () {},\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var lineDraw = this._updateLineDraw(data, seriesModel);\n\n    var zlevel = seriesModel.get('zlevel');\n    var trailLength = seriesModel.get('effect.trailLength');\n    var zr = api.getZr(); // Avoid the drag cause ghost shadow\n    // FIXME Better way ?\n    // SVG doesn't support\n\n    var isSvg = zr.painter.getType() === 'svg';\n\n    if (!isSvg) {\n      zr.painter.getLayer(zlevel).clear(true);\n    } // Config layer with motion blur\n\n\n    if (this._lastZlevel != null && !isSvg) {\n      zr.configLayer(this._lastZlevel, {\n        motionBlur: false\n      });\n    }\n\n    if (this._showEffect(seriesModel) && trailLength) {\n      if (!isSvg) {\n        zr.configLayer(zlevel, {\n          motionBlur: true,\n          lastFrameAlpha: Math.max(Math.min(trailLength / 10 + 0.9, 1), 0)\n        });\n      }\n    }\n\n    lineDraw.updateData(data);\n    this._lastZlevel = zlevel;\n    this._finished = true;\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var lineDraw = this._updateLineDraw(data, seriesModel);\n\n    lineDraw.incrementalPrepareUpdate(data);\n\n    this._clearLayer(api);\n\n    this._finished = false;\n  },\n  incrementalRender: function (taskParams, seriesModel, ecModel) {\n    this._lineDraw.incrementalUpdate(taskParams, seriesModel.getData());\n\n    this._finished = taskParams.end === seriesModel.getData().count();\n  },\n  updateTransform: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var pipelineContext = seriesModel.pipelineContext;\n\n    if (!this._finished || pipelineContext.large || pipelineContext.progressiveRender) {\n      // TODO Don't have to do update in large mode. Only do it when there are millions of data.\n      return {\n        update: true\n      };\n    } else {\n      // TODO Use same logic with ScatterView.\n      // Manually update layout\n      var res = linesLayout.reset(seriesModel);\n\n      if (res.progress) {\n        res.progress({\n          start: 0,\n          end: data.count()\n        }, data);\n      }\n\n      this._lineDraw.updateLayout();\n\n      this._clearLayer(api);\n    }\n  },\n  _updateLineDraw: function (data, seriesModel) {\n    var lineDraw = this._lineDraw;\n\n    var hasEffect = this._showEffect(seriesModel);\n\n    var isPolyline = !!seriesModel.get('polyline');\n    var pipelineContext = seriesModel.pipelineContext;\n    var isLargeDraw = pipelineContext.large;\n\n    if (!lineDraw || hasEffect !== this._hasEffet || isPolyline !== this._isPolyline || isLargeDraw !== this._isLargeDraw) {\n      if (lineDraw) {\n        lineDraw.remove();\n      }\n\n      lineDraw = this._lineDraw = isLargeDraw ? new LargeLineDraw() : new LineDraw(isPolyline ? hasEffect ? EffectPolyline : Polyline : hasEffect ? EffectLine : Line);\n      this._hasEffet = hasEffect;\n      this._isPolyline = isPolyline;\n      this._isLargeDraw = isLargeDraw;\n      this.group.removeAll();\n    }\n\n    this.group.add(lineDraw.group);\n    return lineDraw;\n  },\n  _showEffect: function (seriesModel) {\n    return !!seriesModel.get('effect.show');\n  },\n  _clearLayer: function (api) {\n    // Not use motion when dragging or zooming\n    var zr = api.getZr();\n    var isSvg = zr.painter.getType() === 'svg';\n\n    if (!isSvg && this._lastZlevel != null) {\n      zr.painter.getLayer(this._lastZlevel).clear(true);\n    }\n  },\n  remove: function (ecModel, api) {\n    this._lineDraw && this._lineDraw.remove();\n    this._lineDraw = null; // Clear motion when lineDraw is removed\n\n    this._clearLayer(api);\n  },\n  dispose: function () {}\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar DEFAULT_TOOLBOX_BTNS = ['rect', 'polygon', 'keep', 'clear'];\n\nfunction _default(option, isNew) {\n  var brushComponents = option && option.brush;\n\n  if (!zrUtil.isArray(brushComponents)) {\n    brushComponents = brushComponents ? [brushComponents] : [];\n  }\n\n  if (!brushComponents.length) {\n    return;\n  }\n\n  var brushComponentSpecifiedBtns = [];\n  zrUtil.each(brushComponents, function (brushOpt) {\n    var tbs = brushOpt.hasOwnProperty('toolbox') ? brushOpt.toolbox : [];\n\n    if (tbs instanceof Array) {\n      brushComponentSpecifiedBtns = brushComponentSpecifiedBtns.concat(tbs);\n    }\n  });\n  var toolbox = option && option.toolbox;\n\n  if (zrUtil.isArray(toolbox)) {\n    toolbox = toolbox[0];\n  }\n\n  if (!toolbox) {\n    toolbox = {\n      feature: {}\n    };\n    option.toolbox = [toolbox];\n  }\n\n  var toolboxFeature = toolbox.feature || (toolbox.feature = {});\n  var toolboxBrush = toolboxFeature.brush || (toolboxFeature.brush = {});\n  var brushTypes = toolboxBrush.type || (toolboxBrush.type = []);\n  brushTypes.push.apply(brushTypes, brushComponentSpecifiedBtns);\n  removeDuplicate(brushTypes);\n\n  if (isNew && !brushTypes.length) {\n    brushTypes.push.apply(brushTypes, DEFAULT_TOOLBOX_BTNS);\n  }\n}\n\nfunction removeDuplicate(arr) {\n  var map = {};\n  zrUtil.each(arr, function (val) {\n    map[val] = 1;\n  });\n  arr.length = 0;\n  zrUtil.each(map, function (flag, val) {\n    arr.push(val);\n  });\n}\n\nmodule.exports = _default;","require(\"../coord/cartesian/AxisModel\");\n\nrequire(\"./axis/CartesianAxisView\");","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\nvar helper = require(\"../helper/treeHelper\");\n\nvar Breadcrumb = require(\"./Breadcrumb\");\n\nvar RoamController = require(\"../../component/helper/RoamController\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar animationUtil = require(\"../../util/animation\");\n\nvar makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar bind = zrUtil.bind;\nvar Group = graphic.Group;\nvar Rect = graphic.Rect;\nvar each = zrUtil.each;\nvar DRAG_THRESHOLD = 3;\nvar PATH_LABEL_NOAMAL = ['label'];\nvar PATH_LABEL_EMPHASIS = ['emphasis', 'label'];\nvar PATH_UPPERLABEL_NORMAL = ['upperLabel'];\nvar PATH_UPPERLABEL_EMPHASIS = ['emphasis', 'upperLabel'];\nvar Z_BASE = 10; // Should bigger than every z.\n\nvar Z_BG = 1;\nvar Z_CONTENT = 2;\nvar getItemStyleEmphasis = makeStyleMapper([['fill', 'color'], // `borderColor` and `borderWidth` has been occupied,\n// so use `stroke` to indicate the stroke of the rect.\n['stroke', 'strokeColor'], ['lineWidth', 'strokeWidth'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\n\nvar getItemStyleNormal = function (model) {\n  // Normal style props should include emphasis style props.\n  var itemStyle = getItemStyleEmphasis(model); // Clear styles set by emphasis.\n\n  itemStyle.stroke = itemStyle.fill = itemStyle.lineWidth = null;\n  return itemStyle;\n};\n\nvar _default = echarts.extendChartView({\n  type: 'treemap',\n\n  /**\n   * @override\n   */\n  init: function (o, api) {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this._containerGroup;\n    /**\n     * @private\n     * @type {Object.<string, Array.<module:zrender/container/Group>>}\n     */\n\n    this._storage = createStorage();\n    /**\n     * @private\n     * @type {module:echarts/data/Tree}\n     */\n\n    this._oldTree;\n    /**\n     * @private\n     * @type {module:echarts/chart/treemap/Breadcrumb}\n     */\n\n    this._breadcrumb;\n    /**\n     * @private\n     * @type {module:echarts/component/helper/RoamController}\n     */\n\n    this._controller;\n    /**\n     * 'ready', 'animating'\n     * @private\n     */\n\n    this._state = 'ready';\n  },\n\n  /**\n   * @override\n   */\n  render: function (seriesModel, ecModel, api, payload) {\n    var models = ecModel.findComponents({\n      mainType: 'series',\n      subType: 'treemap',\n      query: payload\n    });\n\n    if (zrUtil.indexOf(models, seriesModel) < 0) {\n      return;\n    }\n\n    this.seriesModel = seriesModel;\n    this.api = api;\n    this.ecModel = ecModel;\n    var types = ['treemapZoomToNode', 'treemapRootToNode'];\n    var targetInfo = helper.retrieveTargetInfo(payload, types, seriesModel);\n    var payloadType = payload && payload.type;\n    var layoutInfo = seriesModel.layoutInfo;\n    var isInit = !this._oldTree;\n    var thisStorage = this._storage; // Mark new root when action is treemapRootToNode.\n\n    var reRoot = payloadType === 'treemapRootToNode' && targetInfo && thisStorage ? {\n      rootNodeGroup: thisStorage.nodeGroup[targetInfo.node.getRawIndex()],\n      direction: payload.direction\n    } : null;\n\n    var containerGroup = this._giveContainerGroup(layoutInfo);\n\n    var renderResult = this._doRender(containerGroup, seriesModel, reRoot);\n\n    !isInit && (!payloadType || payloadType === 'treemapZoomToNode' || payloadType === 'treemapRootToNode') ? this._doAnimation(containerGroup, renderResult, seriesModel, reRoot) : renderResult.renderFinally();\n\n    this._resetController(api);\n\n    this._renderBreadcrumb(seriesModel, api, targetInfo);\n  },\n\n  /**\n   * @private\n   */\n  _giveContainerGroup: function (layoutInfo) {\n    var containerGroup = this._containerGroup;\n\n    if (!containerGroup) {\n      // FIXME\n      // 加一层containerGroup是为了clip，但是现在clip功能并没有实现。\n      containerGroup = this._containerGroup = new Group();\n\n      this._initEvents(containerGroup);\n\n      this.group.add(containerGroup);\n    }\n\n    containerGroup.attr('position', [layoutInfo.x, layoutInfo.y]);\n    return containerGroup;\n  },\n\n  /**\n   * @private\n   */\n  _doRender: function (containerGroup, seriesModel, reRoot) {\n    var thisTree = seriesModel.getData().tree;\n    var oldTree = this._oldTree; // Clear last shape records.\n\n    var lastsForAnimation = createStorage();\n    var thisStorage = createStorage();\n    var oldStorage = this._storage;\n    var willInvisibleEls = [];\n    var doRenderNode = zrUtil.curry(renderNode, seriesModel, thisStorage, oldStorage, reRoot, lastsForAnimation, willInvisibleEls); // Notice: when thisTree and oldTree are the same tree (see list.cloneShallow),\n    // the oldTree is actually losted, so we can not find all of the old graphic\n    // elements from tree. So we use this stragegy: make element storage, move\n    // from old storage to new storage, clear old storage.\n\n    dualTravel(thisTree.root ? [thisTree.root] : [], oldTree && oldTree.root ? [oldTree.root] : [], containerGroup, thisTree === oldTree || !oldTree, 0); // Process all removing.\n\n    var willDeleteEls = clearStorage(oldStorage);\n    this._oldTree = thisTree;\n    this._storage = thisStorage;\n    return {\n      lastsForAnimation: lastsForAnimation,\n      willDeleteEls: willDeleteEls,\n      renderFinally: renderFinally\n    };\n\n    function dualTravel(thisViewChildren, oldViewChildren, parentGroup, sameTree, depth) {\n      // When 'render' is triggered by action,\n      // 'this' and 'old' may be the same tree,\n      // we use rawIndex in that case.\n      if (sameTree) {\n        oldViewChildren = thisViewChildren;\n        each(thisViewChildren, function (child, index) {\n          !child.isRemoved() && processNode(index, index);\n        });\n      } // Diff hierarchically (diff only in each subtree, but not whole).\n      // because, consistency of view is important.\n      else {\n          new DataDiffer(oldViewChildren, thisViewChildren, getKey, getKey).add(processNode).update(processNode).remove(zrUtil.curry(processNode, null)).execute();\n        }\n\n      function getKey(node) {\n        // Identify by name or raw index.\n        return node.getId();\n      }\n\n      function processNode(newIndex, oldIndex) {\n        var thisNode = newIndex != null ? thisViewChildren[newIndex] : null;\n        var oldNode = oldIndex != null ? oldViewChildren[oldIndex] : null;\n        var group = doRenderNode(thisNode, oldNode, parentGroup, depth);\n        group && dualTravel(thisNode && thisNode.viewChildren || [], oldNode && oldNode.viewChildren || [], group, sameTree, depth + 1);\n      }\n    }\n\n    function clearStorage(storage) {\n      var willDeleteEls = createStorage();\n      storage && each(storage, function (store, storageName) {\n        var delEls = willDeleteEls[storageName];\n        each(store, function (el) {\n          el && (delEls.push(el), el.__tmWillDelete = 1);\n        });\n      });\n      return willDeleteEls;\n    }\n\n    function renderFinally() {\n      each(willDeleteEls, function (els) {\n        each(els, function (el) {\n          el.parent && el.parent.remove(el);\n        });\n      });\n      each(willInvisibleEls, function (el) {\n        el.invisible = true; // Setting invisible is for optimizing, so no need to set dirty,\n        // just mark as invisible.\n\n        el.dirty();\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _doAnimation: function (containerGroup, renderResult, seriesModel, reRoot) {\n    if (!seriesModel.get('animation')) {\n      return;\n    }\n\n    var duration = seriesModel.get('animationDurationUpdate');\n    var easing = seriesModel.get('animationEasing');\n    var animationWrap = animationUtil.createWrap(); // Make delete animations.\n\n    each(renderResult.willDeleteEls, function (store, storageName) {\n      each(store, function (el, rawIndex) {\n        if (el.invisible) {\n          return;\n        }\n\n        var parent = el.parent; // Always has parent, and parent is nodeGroup.\n\n        var target;\n\n        if (reRoot && reRoot.direction === 'drillDown') {\n          target = parent === reRoot.rootNodeGroup // This is the content element of view root.\n          // Only `content` will enter this branch, because\n          // `background` and `nodeGroup` will not be deleted.\n          ? {\n            shape: {\n              x: 0,\n              y: 0,\n              width: parent.__tmNodeWidth,\n              height: parent.__tmNodeHeight\n            },\n            style: {\n              opacity: 0\n            } // Others.\n\n          } : {\n            style: {\n              opacity: 0\n            }\n          };\n        } else {\n          var targetX = 0;\n          var targetY = 0;\n\n          if (!parent.__tmWillDelete) {\n            // Let node animate to right-bottom corner, cooperating with fadeout,\n            // which is appropriate for user understanding.\n            // Divided by 2 for reRoot rolling up effect.\n            targetX = parent.__tmNodeWidth / 2;\n            targetY = parent.__tmNodeHeight / 2;\n          }\n\n          target = storageName === 'nodeGroup' ? {\n            position: [targetX, targetY],\n            style: {\n              opacity: 0\n            }\n          } : {\n            shape: {\n              x: targetX,\n              y: targetY,\n              width: 0,\n              height: 0\n            },\n            style: {\n              opacity: 0\n            }\n          };\n        }\n\n        target && animationWrap.add(el, target, duration, easing);\n      });\n    }); // Make other animations\n\n    each(this._storage, function (store, storageName) {\n      each(store, function (el, rawIndex) {\n        var last = renderResult.lastsForAnimation[storageName][rawIndex];\n        var target = {};\n\n        if (!last) {\n          return;\n        }\n\n        if (storageName === 'nodeGroup') {\n          if (last.old) {\n            target.position = el.position.slice();\n            el.attr('position', last.old);\n          }\n        } else {\n          if (last.old) {\n            target.shape = zrUtil.extend({}, el.shape);\n            el.setShape(last.old);\n          }\n\n          if (last.fadein) {\n            el.setStyle('opacity', 0);\n            target.style = {\n              opacity: 1\n            };\n          } // When animation is stopped for succedent animation starting,\n          // el.style.opacity might not be 1\n          else if (el.style.opacity !== 1) {\n              target.style = {\n                opacity: 1\n              };\n            }\n        }\n\n        animationWrap.add(el, target, duration, easing);\n      });\n    }, this);\n    this._state = 'animating';\n    animationWrap.done(bind(function () {\n      this._state = 'ready';\n      renderResult.renderFinally();\n    }, this)).start();\n  },\n\n  /**\n   * @private\n   */\n  _resetController: function (api) {\n    var controller = this._controller; // Init controller.\n\n    if (!controller) {\n      controller = this._controller = new RoamController(api.getZr());\n      controller.enable(this.seriesModel.get('roam'));\n      controller.on('pan', bind(this._onPan, this));\n      controller.on('zoom', bind(this._onZoom, this));\n    }\n\n    var rect = new BoundingRect(0, 0, api.getWidth(), api.getHeight());\n    controller.setPointerChecker(function (e, x, y) {\n      return rect.contain(x, y);\n    });\n  },\n\n  /**\n   * @private\n   */\n  _clearController: function () {\n    var controller = this._controller;\n\n    if (controller) {\n      controller.dispose();\n      controller = null;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _onPan: function (dx, dy) {\n    if (this._state !== 'animating' && (Math.abs(dx) > DRAG_THRESHOLD || Math.abs(dy) > DRAG_THRESHOLD)) {\n      // These param must not be cached.\n      var root = this.seriesModel.getData().tree.root;\n\n      if (!root) {\n        return;\n      }\n\n      var rootLayout = root.getLayout();\n\n      if (!rootLayout) {\n        return;\n      }\n\n      this.api.dispatchAction({\n        type: 'treemapMove',\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        rootRect: {\n          x: rootLayout.x + dx,\n          y: rootLayout.y + dy,\n          width: rootLayout.width,\n          height: rootLayout.height\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _onZoom: function (scale, mouseX, mouseY) {\n    if (this._state !== 'animating') {\n      // These param must not be cached.\n      var root = this.seriesModel.getData().tree.root;\n\n      if (!root) {\n        return;\n      }\n\n      var rootLayout = root.getLayout();\n\n      if (!rootLayout) {\n        return;\n      }\n\n      var rect = new BoundingRect(rootLayout.x, rootLayout.y, rootLayout.width, rootLayout.height);\n      var layoutInfo = this.seriesModel.layoutInfo; // Transform mouse coord from global to containerGroup.\n\n      mouseX -= layoutInfo.x;\n      mouseY -= layoutInfo.y; // Scale root bounding rect.\n\n      var m = matrix.create();\n      matrix.translate(m, m, [-mouseX, -mouseY]);\n      matrix.scale(m, m, [scale, scale]);\n      matrix.translate(m, m, [mouseX, mouseY]);\n      rect.applyTransform(m);\n      this.api.dispatchAction({\n        type: 'treemapRender',\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        rootRect: {\n          x: rect.x,\n          y: rect.y,\n          width: rect.width,\n          height: rect.height\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _initEvents: function (containerGroup) {\n    containerGroup.on('click', function (e) {\n      if (this._state !== 'ready') {\n        return;\n      }\n\n      var nodeClick = this.seriesModel.get('nodeClick', true);\n\n      if (!nodeClick) {\n        return;\n      }\n\n      var targetInfo = this.findTarget(e.offsetX, e.offsetY);\n\n      if (!targetInfo) {\n        return;\n      }\n\n      var node = targetInfo.node;\n\n      if (node.getLayout().isLeafRoot) {\n        this._rootToNode(targetInfo);\n      } else {\n        if (nodeClick === 'zoomToNode') {\n          this._zoomToNode(targetInfo);\n        } else if (nodeClick === 'link') {\n          var itemModel = node.hostTree.data.getItemModel(node.dataIndex);\n          var link = itemModel.get('link', true);\n          var linkTarget = itemModel.get('target', true) || 'blank';\n          link && window.open(link, linkTarget);\n        }\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _renderBreadcrumb: function (seriesModel, api, targetInfo) {\n    if (!targetInfo) {\n      targetInfo = seriesModel.get('leafDepth', true) != null ? {\n        node: seriesModel.getViewRoot() // FIXME\n        // better way?\n        // Find breadcrumb tail on center of containerGroup.\n\n      } : this.findTarget(api.getWidth() / 2, api.getHeight() / 2);\n\n      if (!targetInfo) {\n        targetInfo = {\n          node: seriesModel.getData().tree.root\n        };\n      }\n    }\n\n    (this._breadcrumb || (this._breadcrumb = new Breadcrumb(this.group))).render(seriesModel, api, targetInfo.node, bind(onSelect, this));\n\n    function onSelect(node) {\n      if (this._state !== 'animating') {\n        helper.aboveViewRoot(seriesModel.getViewRoot(), node) ? this._rootToNode({\n          node: node\n        }) : this._zoomToNode({\n          node: node\n        });\n      }\n    }\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._clearController();\n\n    this._containerGroup && this._containerGroup.removeAll();\n    this._storage = createStorage();\n    this._state = 'ready';\n    this._breadcrumb && this._breadcrumb.remove();\n  },\n  dispose: function () {\n    this._clearController();\n  },\n\n  /**\n   * @private\n   */\n  _zoomToNode: function (targetInfo) {\n    this.api.dispatchAction({\n      type: 'treemapZoomToNode',\n      from: this.uid,\n      seriesId: this.seriesModel.id,\n      targetNode: targetInfo.node\n    });\n  },\n\n  /**\n   * @private\n   */\n  _rootToNode: function (targetInfo) {\n    this.api.dispatchAction({\n      type: 'treemapRootToNode',\n      from: this.uid,\n      seriesId: this.seriesModel.id,\n      targetNode: targetInfo.node\n    });\n  },\n\n  /**\n   * @public\n   * @param {number} x Global coord x.\n   * @param {number} y Global coord y.\n   * @return {Object} info If not found, return undefined;\n   * @return {number} info.node Target node.\n   * @return {number} info.offsetX x refer to target node.\n   * @return {number} info.offsetY y refer to target node.\n   */\n  findTarget: function (x, y) {\n    var targetInfo;\n    var viewRoot = this.seriesModel.getViewRoot();\n    viewRoot.eachNode({\n      attr: 'viewChildren',\n      order: 'preorder'\n    }, function (node) {\n      var bgEl = this._storage.background[node.getRawIndex()]; // If invisible, there might be no element.\n\n\n      if (bgEl) {\n        var point = bgEl.transformCoordToLocal(x, y);\n        var shape = bgEl.shape; // For performance consideration, dont use 'getBoundingRect'.\n\n        if (shape.x <= point[0] && point[0] <= shape.x + shape.width && shape.y <= point[1] && point[1] <= shape.y + shape.height) {\n          targetInfo = {\n            node: node,\n            offsetX: point[0],\n            offsetY: point[1]\n          };\n        } else {\n          return false; // Suppress visit subtree.\n        }\n      }\n    }, this);\n    return targetInfo;\n  }\n});\n/**\n * @inner\n */\n\n\nfunction createStorage() {\n  return {\n    nodeGroup: [],\n    background: [],\n    content: []\n  };\n}\n/**\n * @inner\n * @return Return undefined means do not travel further.\n */\n\n\nfunction renderNode(seriesModel, thisStorage, oldStorage, reRoot, lastsForAnimation, willInvisibleEls, thisNode, oldNode, parentGroup, depth) {\n  // Whether under viewRoot.\n  if (!thisNode) {\n    // Deleting nodes will be performed finally. This method just find\n    // element from old storage, or create new element, set them to new\n    // storage, and set styles.\n    return;\n  } // -------------------------------------------------------------------\n  // Start of closure variables available in \"Procedures in renderNode\".\n\n\n  var thisLayout = thisNode.getLayout();\n\n  if (!thisLayout || !thisLayout.isInView) {\n    return;\n  }\n\n  var thisWidth = thisLayout.width;\n  var thisHeight = thisLayout.height;\n  var borderWidth = thisLayout.borderWidth;\n  var thisInvisible = thisLayout.invisible;\n  var thisRawIndex = thisNode.getRawIndex();\n  var oldRawIndex = oldNode && oldNode.getRawIndex();\n  var thisViewChildren = thisNode.viewChildren;\n  var upperHeight = thisLayout.upperHeight;\n  var isParent = thisViewChildren && thisViewChildren.length;\n  var itemStyleNormalModel = thisNode.getModel('itemStyle');\n  var itemStyleEmphasisModel = thisNode.getModel('emphasis.itemStyle'); // End of closure ariables available in \"Procedures in renderNode\".\n  // -----------------------------------------------------------------\n  // Node group\n\n  var group = giveGraphic('nodeGroup', Group);\n\n  if (!group) {\n    return;\n  }\n\n  parentGroup.add(group); // x,y are not set when el is above view root.\n\n  group.attr('position', [thisLayout.x || 0, thisLayout.y || 0]);\n  group.__tmNodeWidth = thisWidth;\n  group.__tmNodeHeight = thisHeight;\n\n  if (thisLayout.isAboveViewRoot) {\n    return group;\n  } // Background\n\n\n  var bg = giveGraphic('background', Rect, depth, Z_BG);\n  bg && renderBackground(group, bg, isParent && thisLayout.upperHeight); // No children, render content.\n\n  if (!isParent) {\n    var content = giveGraphic('content', Rect, depth, Z_CONTENT);\n    content && renderContent(group, content);\n  }\n\n  return group; // ----------------------------\n  // | Procedures in renderNode |\n  // ----------------------------\n\n  function renderBackground(group, bg, useUpperLabel) {\n    // For tooltip.\n    bg.dataIndex = thisNode.dataIndex;\n    bg.seriesIndex = seriesModel.seriesIndex;\n    bg.setShape({\n      x: 0,\n      y: 0,\n      width: thisWidth,\n      height: thisHeight\n    });\n    var visualBorderColor = thisNode.getVisual('borderColor', true);\n    var emphasisBorderColor = itemStyleEmphasisModel.get('borderColor');\n    updateStyle(bg, function () {\n      var normalStyle = getItemStyleNormal(itemStyleNormalModel);\n      normalStyle.fill = visualBorderColor;\n      var emphasisStyle = getItemStyleEmphasis(itemStyleEmphasisModel);\n      emphasisStyle.fill = emphasisBorderColor;\n\n      if (useUpperLabel) {\n        var upperLabelWidth = thisWidth - 2 * borderWidth;\n        prepareText(normalStyle, emphasisStyle, visualBorderColor, upperLabelWidth, upperHeight, {\n          x: borderWidth,\n          y: 0,\n          width: upperLabelWidth,\n          height: upperHeight\n        });\n      } // For old bg.\n      else {\n          normalStyle.text = emphasisStyle.text = null;\n        }\n\n      bg.setStyle(normalStyle);\n      graphic.setHoverStyle(bg, emphasisStyle);\n    });\n    group.add(bg);\n  }\n\n  function renderContent(group, content) {\n    // For tooltip.\n    content.dataIndex = thisNode.dataIndex;\n    content.seriesIndex = seriesModel.seriesIndex;\n    var contentWidth = Math.max(thisWidth - 2 * borderWidth, 0);\n    var contentHeight = Math.max(thisHeight - 2 * borderWidth, 0);\n    content.culling = true;\n    content.setShape({\n      x: borderWidth,\n      y: borderWidth,\n      width: contentWidth,\n      height: contentHeight\n    });\n    var visualColor = thisNode.getVisual('color', true);\n    updateStyle(content, function () {\n      var normalStyle = getItemStyleNormal(itemStyleNormalModel);\n      normalStyle.fill = visualColor;\n      var emphasisStyle = getItemStyleEmphasis(itemStyleEmphasisModel);\n      prepareText(normalStyle, emphasisStyle, visualColor, contentWidth, contentHeight);\n      content.setStyle(normalStyle);\n      graphic.setHoverStyle(content, emphasisStyle);\n    });\n    group.add(content);\n  }\n\n  function updateStyle(element, cb) {\n    if (!thisInvisible) {\n      // If invisible, do not set visual, otherwise the element will\n      // change immediately before animation. We think it is OK to\n      // remain its origin color when moving out of the view window.\n      cb();\n\n      if (!element.__tmWillVisible) {\n        element.invisible = false;\n      }\n    } else {\n      // Delay invisible setting utill animation finished,\n      // avoid element vanish suddenly before animation.\n      !element.invisible && willInvisibleEls.push(element);\n    }\n  }\n\n  function prepareText(normalStyle, emphasisStyle, visualColor, width, height, upperLabelRect) {\n    var nodeModel = thisNode.getModel();\n    var text = zrUtil.retrieve(seriesModel.getFormattedLabel(thisNode.dataIndex, 'normal', null, null, upperLabelRect ? 'upperLabel' : 'label'), nodeModel.get('name'));\n\n    if (!upperLabelRect && thisLayout.isLeafRoot) {\n      var iconChar = seriesModel.get('drillDownIcon', true);\n      text = iconChar ? iconChar + ' ' + text : text;\n    }\n\n    var normalLabelModel = nodeModel.getModel(upperLabelRect ? PATH_UPPERLABEL_NORMAL : PATH_LABEL_NOAMAL);\n    var emphasisLabelModel = nodeModel.getModel(upperLabelRect ? PATH_UPPERLABEL_EMPHASIS : PATH_LABEL_EMPHASIS);\n    var isShow = normalLabelModel.getShallow('show');\n    graphic.setLabelStyle(normalStyle, emphasisStyle, normalLabelModel, emphasisLabelModel, {\n      defaultText: isShow ? text : null,\n      autoColor: visualColor,\n      isRectText: true\n    });\n    upperLabelRect && (normalStyle.textRect = zrUtil.clone(upperLabelRect));\n    normalStyle.truncate = isShow && normalLabelModel.get('ellipsis') ? {\n      outerWidth: width,\n      outerHeight: height,\n      minChar: 2\n    } : null;\n  }\n\n  function giveGraphic(storageName, Ctor, depth, z) {\n    var element = oldRawIndex != null && oldStorage[storageName][oldRawIndex];\n    var lasts = lastsForAnimation[storageName];\n\n    if (element) {\n      // Remove from oldStorage\n      oldStorage[storageName][oldRawIndex] = null;\n      prepareAnimationWhenHasOld(lasts, element, storageName);\n    } // If invisible and no old element, do not create new element (for optimizing).\n    else if (!thisInvisible) {\n        element = new Ctor({\n          z: calculateZ(depth, z)\n        });\n        element.__tmDepth = depth;\n        element.__tmStorageName = storageName;\n        prepareAnimationWhenNoOld(lasts, element, storageName);\n      } // Set to thisStorage\n\n\n    return thisStorage[storageName][thisRawIndex] = element;\n  }\n\n  function prepareAnimationWhenHasOld(lasts, element, storageName) {\n    var lastCfg = lasts[thisRawIndex] = {};\n    lastCfg.old = storageName === 'nodeGroup' ? element.position.slice() : zrUtil.extend({}, element.shape);\n  } // If a element is new, we need to find the animation start point carefully,\n  // otherwise it will looks strange when 'zoomToNode'.\n\n\n  function prepareAnimationWhenNoOld(lasts, element, storageName) {\n    var lastCfg = lasts[thisRawIndex] = {};\n    var parentNode = thisNode.parentNode;\n\n    if (parentNode && (!reRoot || reRoot.direction === 'drillDown')) {\n      var parentOldX = 0;\n      var parentOldY = 0; // New nodes appear from right-bottom corner in 'zoomToNode' animation.\n      // For convenience, get old bounding rect from background.\n\n      var parentOldBg = lastsForAnimation.background[parentNode.getRawIndex()];\n\n      if (!reRoot && parentOldBg && parentOldBg.old) {\n        parentOldX = parentOldBg.old.width;\n        parentOldY = parentOldBg.old.height;\n      } // When no parent old shape found, its parent is new too,\n      // so we can just use {x:0, y:0}.\n\n\n      lastCfg.old = storageName === 'nodeGroup' ? [0, parentOldY] : {\n        x: parentOldX,\n        y: parentOldY,\n        width: 0,\n        height: 0\n      };\n    } // Fade in, user can be aware that these nodes are new.\n\n\n    lastCfg.fadein = storageName !== 'nodeGroup';\n  }\n} // We can not set all backgroud with the same z, Because the behaviour of\n// drill down and roll up differ background creation sequence from tree\n// hierarchy sequence, which cause that lowser background element overlap\n// upper ones. So we calculate z based on depth.\n// Moreover, we try to shrink down z interval to [0, 1] to avoid that\n// treemap with large z overlaps other components.\n\n\nfunction calculateZ(depth, zInLevel) {\n  var zb = depth * Z_BASE + zInLevel;\n  return (zb - 1) / zb;\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar BrushController = require(\"../helper/BrushController\");\n\nvar brushHelper = require(\"../helper/brushHelper\");\n\nvar graphic = require(\"../../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar elementList = ['axisLine', 'axisTickLabel', 'axisName'];\nvar AxisView = echarts.extendComponentView({\n  type: 'parallelAxis',\n\n  /**\n   * @override\n   */\n  init: function (ecModel, api) {\n    AxisView.superApply(this, 'init', arguments);\n    /**\n     * @type {module:echarts/component/helper/BrushController}\n     */\n\n    (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this));\n  },\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    if (fromAxisAreaSelect(axisModel, ecModel, payload)) {\n      return;\n    }\n\n    this.axisModel = axisModel;\n    this.api = api;\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var coordSysModel = getCoordSysModel(axisModel, ecModel);\n    var coordSys = coordSysModel.coordinateSystem;\n    var areaSelectStyle = axisModel.getAreaSelectStyle();\n    var areaWidth = areaSelectStyle.width;\n    var dim = axisModel.axis.dim;\n    var axisLayout = coordSys.getAxisLayout(dim);\n    var builderOpt = zrUtil.extend({\n      strokeContainThreshold: areaWidth\n    }, axisLayout);\n    var axisBuilder = new AxisBuilder(axisModel, builderOpt);\n    zrUtil.each(elementList, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    this._refreshBrushController(builderOpt, areaSelectStyle, axisModel, coordSysModel, areaWidth, api);\n\n    var animationModel = payload && payload.animation === false ? null : axisModel;\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, animationModel);\n  },\n  // /**\n  //  * @override\n  //  */\n  // updateVisual: function (axisModel, ecModel, api, payload) {\n  //     this._brushController && this._brushController\n  //         .updateCovers(getCoverInfoList(axisModel));\n  // },\n  _refreshBrushController: function (builderOpt, areaSelectStyle, axisModel, coordSysModel, areaWidth, api) {\n    // After filtering, axis may change, select area needs to be update.\n    var extent = axisModel.axis.getExtent();\n    var extentLen = extent[1] - extent[0];\n    var extra = Math.min(30, Math.abs(extentLen) * 0.1); // Arbitrary value.\n    // width/height might be negative, which will be\n    // normalized in BoundingRect.\n\n    var rect = graphic.BoundingRect.create({\n      x: extent[0],\n      y: -areaWidth / 2,\n      width: extentLen,\n      height: areaWidth\n    });\n    rect.x -= extra;\n    rect.width += 2 * extra;\n\n    this._brushController.mount({\n      enableGlobalPan: true,\n      rotation: builderOpt.rotation,\n      position: builderOpt.position\n    }).setPanels([{\n      panelId: 'pl',\n      clipPath: brushHelper.makeRectPanelClipPath(rect),\n      isTargetByCursor: brushHelper.makeRectIsTargetByCursor(rect, api, coordSysModel),\n      getLinearBrushOtherExtent: brushHelper.makeLinearBrushOtherExtent(rect, 0)\n    }]).enableBrush({\n      brushType: 'lineX',\n      brushStyle: areaSelectStyle,\n      removeOnClick: true\n    }).updateCovers(getCoverInfoList(axisModel));\n  },\n  _onBrush: function (coverInfoList, opt) {\n    // Do not cache these object, because the mey be changed.\n    var axisModel = this.axisModel;\n    var axis = axisModel.axis;\n    var intervals = zrUtil.map(coverInfoList, function (coverInfo) {\n      return [axis.coordToData(coverInfo.range[0], true), axis.coordToData(coverInfo.range[1], true)];\n    }); // If realtime is true, action is not dispatched on drag end, because\n    // the drag end emits the same params with the last drag move event,\n    // and may have some delay when using touch pad.\n\n    if (!axisModel.option.realtime === opt.isEnd || opt.removeOnClick) {\n      // jshint ignore:line\n      this.api.dispatchAction({\n        type: 'axisAreaSelect',\n        parallelAxisId: axisModel.id,\n        intervals: intervals\n      });\n    }\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._brushController.dispose();\n  }\n});\n\nfunction fromAxisAreaSelect(axisModel, ecModel, payload) {\n  return payload && payload.type === 'axisAreaSelect' && ecModel.findComponents({\n    mainType: 'parallelAxis',\n    query: payload\n  })[0] === axisModel;\n}\n\nfunction getCoverInfoList(axisModel) {\n  var axis = axisModel.axis;\n  return zrUtil.map(axisModel.activeIntervals, function (interval) {\n    return {\n      brushType: 'lineX',\n      panelId: 'pl',\n      range: [axis.dataToCoord(interval[0], true), axis.dataToCoord(interval[1], true)]\n    };\n  });\n}\n\nfunction getCoordSysModel(axisModel, ecModel) {\n  return ecModel.getComponent('parallel', axisModel.get('parallelIndex'));\n}\n\nvar _default = AxisView;\nmodule.exports = _default;","require(\"./toolbox/ToolboxModel\");\n\nrequire(\"./toolbox/ToolboxView\");\n\nrequire(\"./toolbox/feature/SaveAsImage\");\n\nrequire(\"./toolbox/feature/MagicType\");\n\nrequire(\"./toolbox/feature/DataView\");\n\nrequire(\"./toolbox/feature/DataZoom\");\n\nrequire(\"./toolbox/feature/Restore\");","var Group = require(\"zrender/lib/container/Group\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar Component = function () {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewComponent');\n};\n\nComponent.prototype = {\n  constructor: Component,\n  init: function (ecModel, api) {},\n  render: function (componentModel, ecModel, api, payload) {},\n  dispose: function () {}\n};\nvar componentProto = Component.prototype;\n\ncomponentProto.updateView = componentProto.updateLayout = componentProto.updateVisual = function (seriesModel, ecModel, api, payload) {// Do nothing;\n}; // Enable Component.extend.\n\n\nclazzUtil.enableClassExtend(Component); // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Component, {\n  registerWhenExtend: true\n});\nvar _default = Component;\nmodule.exports = _default;","var Definable = require(\"./Definable\");\n\nvar zrUtil = require(\"../../core/util\");\n\nvar zrLog = require(\"../../core/log\");\n\n/**\n * @file Manages SVG gradient elements.\n * @author Zhang Wenli\n */\n\n/**\n * Manages SVG gradient elements.\n *\n * @class\n * @extends Definable\n * @param   {number}     zrId    zrender instance id\n * @param   {SVGElement} svgRoot root of SVG document\n */\nfunction GradientManager(zrId, svgRoot) {\n  Definable.call(this, zrId, svgRoot, ['linearGradient', 'radialGradient'], '__gradient_in_use__');\n}\n\nzrUtil.inherits(GradientManager, Definable);\n/**\n * Create new gradient DOM for fill or stroke if not exist,\n * but will not update gradient if exists.\n *\n * @param {SvgElement}  svgElement   SVG element to paint\n * @param {Displayable} displayable  zrender displayable element\n */\n\nGradientManager.prototype.addWithoutUpdate = function (svgElement, displayable) {\n  if (displayable && displayable.style) {\n    var that = this;\n    zrUtil.each(['fill', 'stroke'], function (fillOrStroke) {\n      if (displayable.style[fillOrStroke] && (displayable.style[fillOrStroke].type === 'linear' || displayable.style[fillOrStroke].type === 'radial')) {\n        var gradient = displayable.style[fillOrStroke];\n        var defs = that.getDefs(true); // Create dom in <defs> if not exists\n\n        var dom;\n\n        if (gradient._dom) {\n          // Gradient exists\n          dom = gradient._dom;\n\n          if (!defs.contains(gradient._dom)) {\n            // _dom is no longer in defs, recreate\n            that.addDom(dom);\n          }\n        } else {\n          // New dom\n          dom = that.add(gradient);\n        }\n\n        that.markUsed(displayable);\n        var id = dom.getAttribute('id');\n        svgElement.setAttribute(fillOrStroke, 'url(#' + id + ')');\n      }\n    });\n  }\n};\n/**\n * Add a new gradient tag in <defs>\n *\n * @param   {Gradient} gradient zr gradient instance\n * @return {SVGLinearGradientElement | SVGRadialGradientElement}\n *                            created DOM\n */\n\n\nGradientManager.prototype.add = function (gradient) {\n  var dom;\n\n  if (gradient.type === 'linear') {\n    dom = this.createElement('linearGradient');\n  } else if (gradient.type === 'radial') {\n    dom = this.createElement('radialGradient');\n  } else {\n    zrLog('Illegal gradient type.');\n    return null;\n  } // Set dom id with gradient id, since each gradient instance\n  // will have no more than one dom element.\n  // id may exists before for those dirty elements, in which case\n  // id should remain the same, and other attributes should be\n  // updated.\n\n\n  gradient.id = gradient.id || this.nextId++;\n  dom.setAttribute('id', 'zr' + this._zrId + '-gradient-' + gradient.id);\n  this.updateDom(gradient, dom);\n  this.addDom(dom);\n  return dom;\n};\n/**\n * Update gradient.\n *\n * @param {Gradient} gradient zr gradient instance\n */\n\n\nGradientManager.prototype.update = function (gradient) {\n  var that = this;\n  Definable.prototype.update.call(this, gradient, function () {\n    var type = gradient.type;\n    var tagName = gradient._dom.tagName;\n\n    if (type === 'linear' && tagName === 'linearGradient' || type === 'radial' && tagName === 'radialGradient') {\n      // Gradient type is not changed, update gradient\n      that.updateDom(gradient, gradient._dom);\n    } else {\n      // Remove and re-create if type is changed\n      that.removeDom(gradient);\n      that.add(gradient);\n    }\n  });\n};\n/**\n * Update gradient dom\n *\n * @param {Gradient} gradient zr gradient instance\n * @param {SVGLinearGradientElement | SVGRadialGradientElement} dom\n *                            DOM to update\n */\n\n\nGradientManager.prototype.updateDom = function (gradient, dom) {\n  if (gradient.type === 'linear') {\n    dom.setAttribute('x1', gradient.x);\n    dom.setAttribute('y1', gradient.y);\n    dom.setAttribute('x2', gradient.x2);\n    dom.setAttribute('y2', gradient.y2);\n  } else if (gradient.type === 'radial') {\n    dom.setAttribute('cx', gradient.x);\n    dom.setAttribute('cy', gradient.y);\n    dom.setAttribute('r', gradient.r);\n  } else {\n    zrLog('Illegal gradient type.');\n    return;\n  }\n\n  if (gradient.global) {\n    // x1, x2, y1, y2 in range of 0 to canvas width or height\n    dom.setAttribute('gradientUnits', 'userSpaceOnUse');\n  } else {\n    // x1, x2, y1, y2 in range of 0 to 1\n    dom.setAttribute('gradientUnits', 'objectBoundingBox');\n  } // Remove color stops if exists\n\n\n  dom.innerHTML = ''; // Add color stops\n\n  var colors = gradient.colorStops;\n\n  for (var i = 0, len = colors.length; i < len; ++i) {\n    var stop = this.createElement('stop');\n    stop.setAttribute('offset', colors[i].offset * 100 + '%');\n    stop.setAttribute('stop-color', colors[i].color);\n    dom.appendChild(stop);\n  } // Store dom element in gradient, to avoid creating multiple\n  // dom instances for the same gradient element\n\n\n  gradient._dom = dom;\n};\n/**\n * Mark a single gradient to be used\n *\n * @param {Displayable} displayable displayable element\n */\n\n\nGradientManager.prototype.markUsed = function (displayable) {\n  if (displayable.style) {\n    var gradient = displayable.style.fill;\n\n    if (gradient && gradient._dom) {\n      Definable.prototype.markUsed.call(this, gradient._dom);\n    }\n\n    gradient = displayable.style.stroke;\n\n    if (gradient && gradient._dom) {\n      Definable.prototype.markUsed.call(this, gradient._dom);\n    }\n  }\n};\n\nvar _default = GradientManager;\nmodule.exports = _default;","var completeDimensions = require(\"./completeDimensions\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Substitute `completeDimensions`.\n * `completeDimensions` is to be deprecated.\n */\n\n/**\n * @param {module:echarts/data/Source|module:echarts/data/List} source or data.\n * @param {Object|Array} [opt]\n * @param {Array.<string|Object>} [opt.coordDimensions=[]]\n * @param {number} [opt.dimensionsCount]\n * @param {string} [opt.generateCoord]\n * @param {string} [opt.generateCoordCount]\n * @param {Array.<string|Object>} [opt.dimensionsDefine=source.dimensionsDefine] Overwrite source define.\n * @param {Object|HashMap} [opt.encodeDefine=source.encodeDefine] Overwrite source define.\n * @return {Array.<Object>} dimensionsInfo\n */\nfunction _default(source, opt) {\n  opt = opt || {};\n  return completeDimensions(opt.coordDimensions || [], source, {\n    dimsDef: opt.dimensionsDefine || source.dimensionsDefine,\n    encodeDef: opt.encodeDefine || source.encodeDefine,\n    dimCount: opt.dimensionsCount,\n    generateCoord: opt.generateCoord,\n    generateCoordCount: opt.generateCoordCount\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\n\nfunction _default(option) {\n  var visualMap = option && option.visualMap;\n\n  if (!zrUtil.isArray(visualMap)) {\n    visualMap = visualMap ? [visualMap] : [];\n  }\n\n  each(visualMap, function (opt) {\n    if (!opt) {\n      return;\n    } // rename splitList to pieces\n\n\n    if (has(opt, 'splitList') && !has(opt, 'pieces')) {\n      opt.pieces = opt.splitList;\n      delete opt.splitList;\n    }\n\n    var pieces = opt.pieces;\n\n    if (pieces && zrUtil.isArray(pieces)) {\n      each(pieces, function (piece) {\n        if (zrUtil.isObject(piece)) {\n          if (has(piece, 'start') && !has(piece, 'min')) {\n            piece.min = piece.start;\n          }\n\n          if (has(piece, 'end') && !has(piece, 'max')) {\n            piece.max = piece.end;\n          }\n        }\n      });\n    }\n  });\n}\n\nfunction has(obj, name) {\n  return obj && obj.hasOwnProperty && obj.hasOwnProperty(name);\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar AxisView = require(\"./AxisView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar elementList = ['axisLine', 'axisLabel', 'axisTick', 'splitLine', 'splitArea'];\n\nfunction getAxisLineShape(polar, rExtent, angle) {\n  rExtent[1] > rExtent[0] && (rExtent = rExtent.slice().reverse());\n  var start = polar.coordToPoint([rExtent[0], angle]);\n  var end = polar.coordToPoint([rExtent[1], angle]);\n  return {\n    x1: start[0],\n    y1: start[1],\n    x2: end[0],\n    y2: end[1]\n  };\n}\n\nfunction getRadiusIdx(polar) {\n  var radiusAxis = polar.getRadiusAxis();\n  return radiusAxis.inverse ? 0 : 1;\n} // Remove the last tick which will overlap the first tick\n\n\nfunction fixAngleOverlap(list) {\n  var firstItem = list[0];\n  var lastItem = list[list.length - 1];\n\n  if (firstItem && lastItem && Math.abs(Math.abs(firstItem.coord - lastItem.coord) - 360) < 1e-4) {\n    list.pop();\n  }\n}\n\nvar _default = AxisView.extend({\n  type: 'angleAxis',\n  axisPointerClass: 'PolarAxisPointer',\n  render: function (angleAxisModel, ecModel) {\n    this.group.removeAll();\n\n    if (!angleAxisModel.get('show')) {\n      return;\n    }\n\n    var angleAxis = angleAxisModel.axis;\n    var polar = angleAxis.polar;\n    var radiusExtent = polar.getRadiusAxis().getExtent();\n    var ticksAngles = angleAxis.getTicksCoords();\n    var labels = zrUtil.map(angleAxis.getViewLabels(), function (labelItem) {\n      var labelItem = zrUtil.clone(labelItem);\n      labelItem.coord = angleAxis.dataToCoord(labelItem.tickValue);\n      return labelItem;\n    });\n    fixAngleOverlap(labels);\n    fixAngleOverlap(ticksAngles);\n    zrUtil.each(elementList, function (name) {\n      if (angleAxisModel.get(name + '.show') && (!angleAxis.scale.isBlank() || name === 'axisLine')) {\n        this['_' + name](angleAxisModel, polar, ticksAngles, radiusExtent, labels);\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _axisLine: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var lineStyleModel = angleAxisModel.getModel('axisLine.lineStyle');\n    var circle = new graphic.Circle({\n      shape: {\n        cx: polar.cx,\n        cy: polar.cy,\n        r: radiusExtent[getRadiusIdx(polar)]\n      },\n      style: lineStyleModel.getLineStyle(),\n      z2: 1,\n      silent: true\n    });\n    circle.style.fill = null;\n    this.group.add(circle);\n  },\n\n  /**\n   * @private\n   */\n  _axisTick: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var tickModel = angleAxisModel.getModel('axisTick');\n    var tickLen = (tickModel.get('inside') ? -1 : 1) * tickModel.get('length');\n    var radius = radiusExtent[getRadiusIdx(polar)];\n    var lines = zrUtil.map(ticksAngles, function (tickAngleItem) {\n      return new graphic.Line({\n        shape: getAxisLineShape(polar, [radius, radius + tickLen], tickAngleItem.coord)\n      });\n    });\n    this.group.add(graphic.mergePath(lines, {\n      style: zrUtil.defaults(tickModel.getModel('lineStyle').getLineStyle(), {\n        stroke: angleAxisModel.get('axisLine.lineStyle.color')\n      })\n    }));\n  },\n\n  /**\n   * @private\n   */\n  _axisLabel: function (angleAxisModel, polar, ticksAngles, radiusExtent, labels) {\n    var rawCategoryData = angleAxisModel.getCategories(true);\n    var commonLabelModel = angleAxisModel.getModel('axisLabel');\n    var labelMargin = commonLabelModel.get('margin'); // Use length of ticksAngles because it may remove the last tick to avoid overlapping\n\n    zrUtil.each(labels, function (labelItem, idx) {\n      var labelModel = commonLabelModel;\n      var tickValue = labelItem.tickValue;\n      var r = radiusExtent[getRadiusIdx(polar)];\n      var p = polar.coordToPoint([r + labelMargin, labelItem.coord]);\n      var cx = polar.cx;\n      var cy = polar.cy;\n      var labelTextAlign = Math.abs(p[0] - cx) / r < 0.3 ? 'center' : p[0] > cx ? 'left' : 'right';\n      var labelTextVerticalAlign = Math.abs(p[1] - cy) / r < 0.3 ? 'middle' : p[1] > cy ? 'top' : 'bottom';\n\n      if (rawCategoryData && rawCategoryData[tickValue] && rawCategoryData[tickValue].textStyle) {\n        labelModel = new Model(rawCategoryData[tickValue].textStyle, commonLabelModel, commonLabelModel.ecModel);\n      }\n\n      var textEl = new graphic.Text({\n        silent: true\n      });\n      this.group.add(textEl);\n      graphic.setTextStyle(textEl.style, labelModel, {\n        x: p[0],\n        y: p[1],\n        textFill: labelModel.getTextColor() || angleAxisModel.get('axisLine.lineStyle.color'),\n        text: labelItem.formattedLabel,\n        textAlign: labelTextAlign,\n        textVerticalAlign: labelTextVerticalAlign\n      });\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _splitLine: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var splitLineModel = angleAxisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineCount = 0;\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var splitLines = [];\n\n    for (var i = 0; i < ticksAngles.length; i++) {\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Line({\n        shape: getAxisLineShape(polar, radiusExtent, ticksAngles[i].coord)\n      }));\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitLines.length; i++) {\n      this.group.add(graphic.mergePath(splitLines[i], {\n        style: zrUtil.defaults({\n          stroke: lineColors[i % lineColors.length]\n        }, lineStyleModel.getLineStyle()),\n        silent: true,\n        z: angleAxisModel.get('z')\n      }));\n    }\n  },\n\n  /**\n   * @private\n   */\n  _splitArea: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    if (!ticksAngles.length) {\n      return;\n    }\n\n    var splitAreaModel = angleAxisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var lineCount = 0;\n    areaColors = areaColors instanceof Array ? areaColors : [areaColors];\n    var splitAreas = [];\n    var RADIAN = Math.PI / 180;\n    var prevAngle = -ticksAngles[0].coord * RADIAN;\n    var r0 = Math.min(radiusExtent[0], radiusExtent[1]);\n    var r1 = Math.max(radiusExtent[0], radiusExtent[1]);\n    var clockwise = angleAxisModel.get('clockwise');\n\n    for (var i = 1; i < ticksAngles.length; i++) {\n      var colorIndex = lineCount++ % areaColors.length;\n      splitAreas[colorIndex] = splitAreas[colorIndex] || [];\n      splitAreas[colorIndex].push(new graphic.Sector({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r0: r0,\n          r: r1,\n          startAngle: prevAngle,\n          endAngle: -ticksAngles[i].coord * RADIAN,\n          clockwise: clockwise\n        },\n        silent: true\n      }));\n      prevAngle = -ticksAngles[i].coord * RADIAN;\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitAreas.length; i++) {\n      this.group.add(graphic.mergePath(splitAreas[i], {\n        style: zrUtil.defaults({\n          fill: areaColors[i % areaColors.length]\n        }, areaStyleModel.getAreaStyle()),\n        silent: true\n      }));\n    }\n  }\n});\n\nmodule.exports = _default;","var makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar getBarItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], // Compatitable with 2\n['stroke', 'barBorderColor'], ['lineWidth', 'barBorderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getBarItemStyle: function (excludes) {\n    var style = getBarItemStyle(this, excludes);\n\n    if (this.getBorderLineDash) {\n      var lineDash = this.getBorderLineDash();\n      lineDash && (style.lineDash = lineDash);\n    }\n\n    return style;\n  }\n};\nmodule.exports = _default;","var zrender = require(\"zrender/lib/zrender\");\n\nexports.zrender = zrender;\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nexports.matrix = matrix;\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nexports.vector = vector;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nexports.color = colorTool;\n\nvar graphic = require(\"./util/graphic\");\n\nexports.graphic = graphic;\n\nvar numberUtil = require(\"./util/number\");\n\nexports.number = numberUtil;\n\nvar formatUtil = require(\"./util/format\");\n\nexports.format = formatUtil;\n\nvar _throttle = require(\"./util/throttle\");\n\nvar throttle = _throttle.throttle;\nexports.throttle = _throttle.throttle;\n\nvar ecHelper = require(\"./helper\");\n\nexports.helper = ecHelper;\n\nvar parseGeoJSON = require(\"./coord/geo/parseGeoJson\");\n\nexports.parseGeoJSON = parseGeoJSON;\n\nvar _List = require(\"./data/List\");\n\nexports.List = _List;\n\nvar _Model = require(\"./model/Model\");\n\nexports.Model = _Model;\n\nvar _Axis = require(\"./coord/Axis\");\n\nexports.Axis = _Axis;\n\nvar _env = require(\"zrender/lib/core/env\");\n\nexports.env = _env;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Do not mount those modules on 'src/echarts' for better tree shaking.\n */\nvar parseGeoJson = parseGeoJSON;\nvar ecUtil = {};\nzrUtil.each(['map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter', 'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction', 'extend', 'defaults', 'clone', 'merge'], function (name) {\n  ecUtil[name] = zrUtil[name];\n});\nexports.parseGeoJson = parseGeoJson;\nexports.util = ecUtil;","var textContain = require(\"zrender/lib/contain/text\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME emphasis label position is not same with normal label position\nfunction adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight) {\n  list.sort(function (a, b) {\n    return a.y - b.y;\n  }); // 压\n\n  function shiftDown(start, end, delta, dir) {\n    for (var j = start; j < end; j++) {\n      list[j].y += delta;\n\n      if (j > start && j + 1 < end && list[j + 1].y > list[j].y + list[j].height) {\n        shiftUp(j, delta / 2);\n        return;\n      }\n    }\n\n    shiftUp(end - 1, delta / 2);\n  } // 弹\n\n\n  function shiftUp(end, delta) {\n    for (var j = end; j >= 0; j--) {\n      list[j].y -= delta;\n\n      if (j > 0 && list[j].y > list[j - 1].y + list[j - 1].height) {\n        break;\n      }\n    }\n  }\n\n  function changeX(list, isDownList, cx, cy, r, dir) {\n    var lastDeltaX = dir > 0 ? isDownList // 右侧\n    ? Number.MAX_VALUE // 下\n    : 0 // 上\n    : isDownList // 左侧\n    ? Number.MAX_VALUE // 下\n    : 0; // 上\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      // Not change x for center label\n      if (list[i].position === 'center') {\n        continue;\n      }\n\n      var deltaY = Math.abs(list[i].y - cy);\n      var length = list[i].len;\n      var length2 = list[i].len2;\n      var deltaX = deltaY < r + length ? Math.sqrt((r + length + length2) * (r + length + length2) - deltaY * deltaY) : Math.abs(list[i].x - cx);\n\n      if (isDownList && deltaX >= lastDeltaX) {\n        // 右下，左下\n        deltaX = lastDeltaX - 10;\n      }\n\n      if (!isDownList && deltaX <= lastDeltaX) {\n        // 右上，左上\n        deltaX = lastDeltaX + 10;\n      }\n\n      list[i].x = cx + deltaX * dir;\n      lastDeltaX = deltaX;\n    }\n  }\n\n  var lastY = 0;\n  var delta;\n  var len = list.length;\n  var upList = [];\n  var downList = [];\n\n  for (var i = 0; i < len; i++) {\n    delta = list[i].y - lastY;\n\n    if (delta < 0) {\n      shiftDown(i, len, -delta, dir);\n    }\n\n    lastY = list[i].y + list[i].height;\n  }\n\n  if (viewHeight - lastY < 0) {\n    shiftUp(len - 1, lastY - viewHeight);\n  }\n\n  for (var i = 0; i < len; i++) {\n    if (list[i].y >= cy) {\n      downList.push(list[i]);\n    } else {\n      upList.push(list[i]);\n    }\n  }\n\n  changeX(upList, false, cx, cy, r, dir);\n  changeX(downList, true, cx, cy, r, dir);\n}\n\nfunction avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight) {\n  var leftList = [];\n  var rightList = [];\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    if (labelLayoutList[i].x < cx) {\n      leftList.push(labelLayoutList[i]);\n    } else {\n      rightList.push(labelLayoutList[i]);\n    }\n  }\n\n  adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight);\n  adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight);\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    var linePoints = labelLayoutList[i].linePoints;\n\n    if (linePoints) {\n      var dist = linePoints[1][0] - linePoints[2][0];\n\n      if (labelLayoutList[i].x < cx) {\n        linePoints[2][0] = labelLayoutList[i].x + 3;\n      } else {\n        linePoints[2][0] = labelLayoutList[i].x - 3;\n      }\n\n      linePoints[1][1] = linePoints[2][1] = labelLayoutList[i].y;\n      linePoints[1][0] = linePoints[2][0] + dist;\n    }\n  }\n}\n\nfunction _default(seriesModel, r, viewWidth, viewHeight) {\n  var data = seriesModel.getData();\n  var labelLayoutList = [];\n  var cx;\n  var cy;\n  var hasLabelRotate = false;\n  data.each(function (idx) {\n    var layout = data.getItemLayout(idx);\n    var itemModel = data.getItemModel(idx);\n    var labelModel = itemModel.getModel('label'); // Use position in normal or emphasis\n\n    var labelPosition = labelModel.get('position') || itemModel.get('emphasis.label.position');\n    var labelLineModel = itemModel.getModel('labelLine');\n    var labelLineLen = labelLineModel.get('length');\n    var labelLineLen2 = labelLineModel.get('length2');\n    var midAngle = (layout.startAngle + layout.endAngle) / 2;\n    var dx = Math.cos(midAngle);\n    var dy = Math.sin(midAngle);\n    var textX;\n    var textY;\n    var linePoints;\n    var textAlign;\n    cx = layout.cx;\n    cy = layout.cy;\n    var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n\n    if (labelPosition === 'center') {\n      textX = layout.cx;\n      textY = layout.cy;\n      textAlign = 'center';\n    } else {\n      var x1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dx : layout.r * dx) + cx;\n      var y1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dy : layout.r * dy) + cy;\n      textX = x1 + dx * 3;\n      textY = y1 + dy * 3;\n\n      if (!isLabelInside) {\n        // For roseType\n        var x2 = x1 + dx * (labelLineLen + r - layout.r);\n        var y2 = y1 + dy * (labelLineLen + r - layout.r);\n        var x3 = x2 + (dx < 0 ? -1 : 1) * labelLineLen2;\n        var y3 = y2;\n        textX = x3 + (dx < 0 ? -5 : 5);\n        textY = y3;\n        linePoints = [[x1, y1], [x2, y2], [x3, y3]];\n      }\n\n      textAlign = isLabelInside ? 'center' : dx > 0 ? 'left' : 'right';\n    }\n\n    var font = labelModel.getFont();\n    var labelRotate = labelModel.get('rotate') ? dx < 0 ? -midAngle + Math.PI : -midAngle : 0;\n    var text = seriesModel.getFormattedLabel(idx, 'normal') || data.getName(idx);\n    var textRect = textContain.getBoundingRect(text, font, textAlign, 'top');\n    hasLabelRotate = !!labelRotate;\n    layout.label = {\n      x: textX,\n      y: textY,\n      position: labelPosition,\n      height: textRect.height,\n      len: labelLineLen,\n      len2: labelLineLen2,\n      linePoints: linePoints,\n      textAlign: textAlign,\n      verticalAlign: 'middle',\n      rotation: labelRotate,\n      inside: isLabelInside\n    }; // Not layout the inside label\n\n    if (!isLabelInside) {\n      labelLayoutList.push(layout.label);\n    }\n  });\n\n  if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\n    avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight);\n  }\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar lang = require(\"../lang\");\n\nvar _dataProvider = require(\"../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(dom, ecModel) {\n  var ariaModel = ecModel.getModel('aria');\n\n  if (!ariaModel.get('show')) {\n    return;\n  } else if (ariaModel.get('description')) {\n    dom.setAttribute('aria-label', ariaModel.get('description'));\n    return;\n  }\n\n  var seriesCnt = 0;\n  ecModel.eachSeries(function (seriesModel, idx) {\n    ++seriesCnt;\n  }, this);\n  var maxDataCnt = ariaModel.get('data.maxCount') || 10;\n  var maxSeriesCnt = ariaModel.get('series.maxCount') || 10;\n  var displaySeriesCnt = Math.min(seriesCnt, maxSeriesCnt);\n  var ariaLabel;\n\n  if (seriesCnt < 1) {\n    // No series, no aria label\n    return;\n  } else {\n    var title = getTitle();\n\n    if (title) {\n      ariaLabel = replace(getConfig('general.withTitle'), {\n        title: title\n      });\n    } else {\n      ariaLabel = getConfig('general.withoutTitle');\n    }\n\n    var seriesLabels = [];\n    var prefix = seriesCnt > 1 ? 'series.multiple.prefix' : 'series.single.prefix';\n    ariaLabel += replace(getConfig(prefix), {\n      seriesCount: seriesCnt\n    });\n    ecModel.eachSeries(function (seriesModel, idx) {\n      if (idx < displaySeriesCnt) {\n        var seriesLabel;\n        var seriesName = seriesModel.get('name');\n        var seriesTpl = 'series.' + (seriesCnt > 1 ? 'multiple' : 'single') + '.';\n        seriesLabel = getConfig(seriesName ? seriesTpl + 'withName' : seriesTpl + 'withoutName');\n        seriesLabel = replace(seriesLabel, {\n          seriesId: seriesModel.seriesIndex,\n          seriesName: seriesModel.get('name'),\n          seriesType: getSeriesTypeName(seriesModel.subType)\n        });\n        var data = seriesModel.getData();\n        window.data = data;\n\n        if (data.count() > maxDataCnt) {\n          // Show part of data\n          seriesLabel += replace(getConfig('data.partialData'), {\n            displayCnt: maxDataCnt\n          });\n        } else {\n          seriesLabel += getConfig('data.allData');\n        }\n\n        var dataLabels = [];\n\n        for (var i = 0; i < data.count(); i++) {\n          if (i < maxDataCnt) {\n            var name = data.getName(i);\n            var value = retrieveRawValue(data, i);\n            dataLabels.push(replace(name ? getConfig('data.withName') : getConfig('data.withoutName'), {\n              name: name,\n              value: value\n            }));\n          }\n        }\n\n        seriesLabel += dataLabels.join(getConfig('data.separator.middle')) + getConfig('data.separator.end');\n        seriesLabels.push(seriesLabel);\n      }\n    });\n    ariaLabel += seriesLabels.join(getConfig('series.multiple.separator.middle')) + getConfig('series.multiple.separator.end');\n    dom.setAttribute('aria-label', ariaLabel);\n  }\n\n  function replace(str, keyValues) {\n    if (typeof str !== 'string') {\n      return str;\n    }\n\n    var result = str;\n    zrUtil.each(keyValues, function (value, key) {\n      result = result.replace(new RegExp('\\\\{\\\\s*' + key + '\\\\s*\\\\}', 'g'), value);\n    });\n    return result;\n  }\n\n  function getConfig(path) {\n    var userConfig = ariaModel.get(path);\n\n    if (userConfig == null) {\n      var pathArr = path.split('.');\n      var result = lang.aria;\n\n      for (var i = 0; i < pathArr.length; ++i) {\n        result = result[pathArr[i]];\n      }\n\n      return result;\n    } else {\n      return userConfig;\n    }\n  }\n\n  function getTitle() {\n    var title = ecModel.getModel('title').option;\n\n    if (title && title.length) {\n      title = title[0];\n    }\n\n    return title && title.text;\n  }\n\n  function getSeriesTypeName(type) {\n    return lang.series.typeNames[type] || '自定义图';\n  }\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * payload: {\n *      brushIndex: number, or,\n *      brushId: string, or,\n *      brushName: string,\n *      globalRanges: Array\n * }\n */\necharts.registerAction({\n  type: 'brush',\n  event: 'brush'\n  /*, update: 'updateView' */\n\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'brush',\n    query: payload\n  }, function (brushModel) {\n    brushModel.setAreas(payload.areas);\n  });\n});\n/**\n * payload: {\n *      brushComponents: [\n *          {\n *              brushId,\n *              brushIndex,\n *              brushName,\n *              series: [\n *                  {\n *                      seriesId,\n *                      seriesIndex,\n *                      seriesName,\n *                      rawIndices: [21, 34, ...]\n *                  },\n *                  ...\n *              ]\n *          },\n *          ...\n *      ]\n * }\n */\n\necharts.registerAction({\n  type: 'brushSelect',\n  event: 'brushSelected',\n  update: 'none'\n}, function () {});","var echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerAction({\n  type: 'treeExpandAndCollapse',\n  event: 'treeExpandAndCollapse',\n  update: 'update'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'tree',\n    query: payload\n  }, function (seriesModel) {\n    var dataIndex = payload.dataIndex;\n    var tree = seriesModel.getData().tree;\n    var node = tree.getNodeByDataIndex(dataIndex);\n    node.isExpand = !node.isExpand;\n  });\n});","var Component = require(\"../../model/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nComponent.registerSubTypeDefaulter('visualMap', function (option) {\n  // Compatible with ec2, when splitNumber === 0, continuous visualMap will be used.\n  return !option.categories && (!(option.pieces ? option.pieces.length > 0 : option.splitNumber > 0) || option.calculable) ? 'continuous' : 'piecewise';\n});","var Definable = require(\"./Definable\");\n\nvar zrUtil = require(\"../../core/util\");\n\n/**\n * @file Manages SVG shadow elements.\n * @author Zhang Wenli\n */\n\n/**\n * Manages SVG shadow elements.\n *\n * @class\n * @extends Definable\n * @param   {number}     zrId    zrender instance id\n * @param   {SVGElement} svgRoot root of SVG document\n */\nfunction ShadowManager(zrId, svgRoot) {\n  Definable.call(this, zrId, svgRoot, ['filter'], '__filter_in_use__', '_shadowDom');\n}\n\nzrUtil.inherits(ShadowManager, Definable);\n/**\n * Create new shadow DOM for fill or stroke if not exist,\n * but will not update shadow if exists.\n *\n * @param {SvgElement}  svgElement   SVG element to paint\n * @param {Displayable} displayable  zrender displayable element\n */\n\nShadowManager.prototype.addWithoutUpdate = function (svgElement, displayable) {\n  if (displayable && hasShadow(displayable.style)) {\n    var style = displayable.style; // Create dom in <defs> if not exists\n\n    var dom;\n\n    if (style._shadowDom) {\n      // Gradient exists\n      dom = style._shadowDom;\n      var defs = this.getDefs(true);\n\n      if (!defs.contains(style._shadowDom)) {\n        // _shadowDom is no longer in defs, recreate\n        this.addDom(dom);\n      }\n    } else {\n      // New dom\n      dom = this.add(displayable);\n    }\n\n    this.markUsed(displayable);\n    var id = dom.getAttribute('id');\n    svgElement.style.filter = 'url(#' + id + ')';\n  }\n};\n/**\n * Add a new shadow tag in <defs>\n *\n * @param {Displayable} displayable  zrender displayable element\n * @return {SVGFilterElement} created DOM\n */\n\n\nShadowManager.prototype.add = function (displayable) {\n  var dom = this.createElement('filter');\n  var style = displayable.style; // Set dom id with shadow id, since each shadow instance\n  // will have no more than one dom element.\n  // id may exists before for those dirty elements, in which case\n  // id should remain the same, and other attributes should be\n  // updated.\n\n  style._shadowDomId = style._shadowDomId || this.nextId++;\n  dom.setAttribute('id', 'zr' + this._zrId + '-shadow-' + style._shadowDomId);\n  this.updateDom(displayable, dom);\n  this.addDom(dom);\n  return dom;\n};\n/**\n * Update shadow.\n *\n * @param {Displayable} displayable  zrender displayable element\n */\n\n\nShadowManager.prototype.update = function (svgElement, displayable) {\n  var style = displayable.style;\n\n  if (hasShadow(style)) {\n    var that = this;\n    Definable.prototype.update.call(this, displayable, function (style) {\n      that.updateDom(displayable, style._shadowDom);\n    });\n  } else {\n    // Remove shadow\n    this.remove(svgElement, style);\n  }\n};\n/**\n * Remove DOM and clear parent filter\n */\n\n\nShadowManager.prototype.remove = function (svgElement, style) {\n  if (style._shadowDomId != null) {\n    this.removeDom(style);\n    svgElement.style.filter = '';\n  }\n};\n/**\n * Update shadow dom\n *\n * @param {Displayable} displayable  zrender displayable element\n * @param {SVGFilterElement} dom DOM to update\n */\n\n\nShadowManager.prototype.updateDom = function (displayable, dom) {\n  var domChild = dom.getElementsByTagName('feDropShadow');\n\n  if (domChild.length === 0) {\n    domChild = this.createElement('feDropShadow');\n  } else {\n    domChild = domChild[0];\n  }\n\n  var style = displayable.style;\n  var scaleX = displayable.scale ? displayable.scale[0] || 1 : 1;\n  var scaleY = displayable.scale ? displayable.scale[1] || 1 : 1; // TODO: textBoxShadowBlur is not supported yet\n\n  var offsetX, offsetY, blur, color;\n\n  if (style.shadowBlur || style.shadowOffsetX || style.shadowOffsetY) {\n    offsetX = style.shadowOffsetX || 0;\n    offsetY = style.shadowOffsetY || 0;\n    blur = style.shadowBlur;\n    color = style.shadowColor;\n  } else if (style.textShadowBlur) {\n    offsetX = style.textShadowOffsetX || 0;\n    offsetY = style.textShadowOffsetY || 0;\n    blur = style.textShadowBlur;\n    color = style.textShadowColor;\n  } else {\n    // Remove shadow\n    this.removeDom(dom, style);\n    return;\n  }\n\n  domChild.setAttribute('dx', offsetX / scaleX);\n  domChild.setAttribute('dy', offsetY / scaleY);\n  domChild.setAttribute('flood-color', color); // Divide by two here so that it looks the same as in canvas\n  // See: https://html.spec.whatwg.org/multipage/canvas.html#dom-context-2d-shadowblur\n\n  var stdDx = blur / 2 / scaleX;\n  var stdDy = blur / 2 / scaleY;\n  var stdDeviation = stdDx + ' ' + stdDy;\n  domChild.setAttribute('stdDeviation', stdDeviation); // Fix filter clipping problem\n\n  dom.setAttribute('x', '-100%');\n  dom.setAttribute('y', '-100%');\n  dom.setAttribute('width', Math.ceil(blur / 2 * 200) + '%');\n  dom.setAttribute('height', Math.ceil(blur / 2 * 200) + '%');\n  dom.appendChild(domChild); // Store dom element in shadow, to avoid creating multiple\n  // dom instances for the same shadow element\n\n  style._shadowDom = dom;\n};\n/**\n * Mark a single shadow to be used\n *\n * @param {Displayable} displayable displayable element\n */\n\n\nShadowManager.prototype.markUsed = function (displayable) {\n  var style = displayable.style;\n\n  if (style && style._shadowDom) {\n    Definable.prototype.markUsed.call(this, style._shadowDom);\n  }\n};\n\nfunction hasShadow(style) {\n  // TODO: textBoxShadowBlur is not supported yet\n  return style && (style.shadowBlur || style.shadowOffsetX || style.shadowOffsetY || style.textShadowBlur || style.textShadowOffsetX || style.textShadowOffsetY);\n}\n\nvar _default = ShadowManager;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar singleAxisHelper = require(\"../../coord/single/singleAxisHelper\");\n\nvar AxisView = require(\"./AxisView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttr = 'splitLine';\nvar SingleAxisView = AxisView.extend({\n  type: 'singleAxis',\n  axisPointerClass: 'SingleAxisPointer',\n  render: function (axisModel, ecModel, api, payload) {\n    var group = this.group;\n    group.removeAll();\n    var layout = singleAxisHelper.layout(axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n    group.add(axisBuilder.getGroup());\n\n    if (axisModel.get(selfBuilderAttr + '.show')) {\n      this['_' + selfBuilderAttr](axisModel);\n    }\n\n    SingleAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n  _splitLine: function (axisModel) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineWidth = lineStyleModel.get('width');\n    var lineColors = lineStyleModel.get('color');\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var gridRect = axisModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var splitLines = [];\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords({\n      tickModel: splitLineModel\n    });\n    var p1 = [];\n    var p2 = [];\n\n    for (var i = 0; i < ticksCoords.length; ++i) {\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Line(graphic.subPixelOptimizeLine({\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: {\n          lineWidth: lineWidth\n        },\n        silent: true\n      })));\n    }\n\n    for (var i = 0; i < splitLines.length; ++i) {\n      this.group.add(graphic.mergePath(splitLines[i], {\n        style: {\n          stroke: lineColors[i % lineColors.length],\n          lineDash: lineStyleModel.getLineDash(lineWidth),\n          lineWidth: lineWidth\n        },\n        silent: true\n      }));\n    }\n  }\n});\nvar _default = SingleAxisView;\nmodule.exports = _default;","var Animator = require(\"../animation/Animator\");\n\nvar log = require(\"../core/log\");\n\nvar _util = require(\"../core/util\");\n\nvar isString = _util.isString;\nvar isFunction = _util.isFunction;\nvar isObject = _util.isObject;\nvar isArrayLike = _util.isArrayLike;\nvar indexOf = _util.indexOf;\n\n/**\n * @alias modue:zrender/mixin/Animatable\n * @constructor\n */\nvar Animatable = function () {\n  /**\n   * @type {Array.<module:zrender/animation/Animator>}\n   * @readOnly\n   */\n  this.animators = [];\n};\n\nAnimatable.prototype = {\n  constructor: Animatable,\n\n  /**\n   * 动画\n   *\n   * @param {string} path The path to fetch value from object, like 'a.b.c'.\n   * @param {boolean} [loop] Whether to loop animation.\n   * @return {module:zrender/animation/Animator}\n   * @example:\n   *     el.animate('style', false)\n   *         .when(1000, {x: 10} )\n   *         .done(function(){ // Animation done })\n   *         .start()\n   */\n  animate: function (path, loop) {\n    var target;\n    var animatingShape = false;\n    var el = this;\n    var zr = this.__zr;\n\n    if (path) {\n      var pathSplitted = path.split('.');\n      var prop = el; // If animating shape\n\n      animatingShape = pathSplitted[0] === 'shape';\n\n      for (var i = 0, l = pathSplitted.length; i < l; i++) {\n        if (!prop) {\n          continue;\n        }\n\n        prop = prop[pathSplitted[i]];\n      }\n\n      if (prop) {\n        target = prop;\n      }\n    } else {\n      target = el;\n    }\n\n    if (!target) {\n      log('Property \"' + path + '\" is not existed in element ' + el.id);\n      return;\n    }\n\n    var animators = el.animators;\n    var animator = new Animator(target, loop);\n    animator.during(function (target) {\n      el.dirty(animatingShape);\n    }).done(function () {\n      // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n      animators.splice(indexOf(animators, animator), 1);\n    });\n    animators.push(animator); // If animate after added to the zrender\n\n    if (zr) {\n      zr.animation.addAnimator(animator);\n    }\n\n    return animator;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stopAnimation: function (forwardToLast) {\n    var animators = this.animators;\n    var len = animators.length;\n\n    for (var i = 0; i < len; i++) {\n      animators[i].stop(forwardToLast);\n    }\n\n    animators.length = 0;\n    return this;\n  },\n\n  /**\n   * Caution: this method will stop previous animation.\n   * So do not use this method to one element twice before\n   * animation starts, unless you know what you are doing.\n   * @param {Object} target\n   * @param {number} [time=500] Time in ms\n   * @param {string} [easing='linear']\n   * @param {number} [delay=0]\n   * @param {Function} [callback]\n   * @param {Function} [forceAnimate] Prevent stop animation and callback\n   *        immediently when target values are the same as current values.\n   *\n   * @example\n   *  // Animate position\n   *  el.animateTo({\n   *      position: [10, 10]\n   *  }, function () { // done })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n   *  el.animateTo({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100, 'cubicOut', function () { // done })\n   */\n  // TODO Return animation key\n  animateTo: function (target, time, delay, easing, callback, forceAnimate) {\n    // animateTo(target, time, easing, callback);\n    if (isString(delay)) {\n      callback = easing;\n      easing = delay;\n      delay = 0;\n    } // animateTo(target, time, delay, callback);\n    else if (isFunction(easing)) {\n        callback = easing;\n        easing = 'linear';\n        delay = 0;\n      } // animateTo(target, time, callback);\n      else if (isFunction(delay)) {\n          callback = delay;\n          delay = 0;\n        } // animateTo(target, callback)\n        else if (isFunction(time)) {\n            callback = time;\n            time = 500;\n          } // animateTo(target)\n          else if (!time) {\n              time = 500;\n            } // Stop all previous animations\n\n\n    this.stopAnimation();\n\n    this._animateToShallow('', this, target, time, delay); // Animators may be removed immediately after start\n    // if there is nothing to animate\n\n\n    var animators = this.animators.slice();\n    var count = animators.length;\n\n    function done() {\n      count--;\n\n      if (!count) {\n        callback && callback();\n      }\n    } // No animators. This should be checked before animators[i].start(),\n    // because 'done' may be executed immediately if no need to animate.\n\n\n    if (!count) {\n      callback && callback();\n    } // Start after all animators created\n    // Incase any animator is done immediately when all animation properties are not changed\n\n\n    for (var i = 0; i < animators.length; i++) {\n      animators[i].done(done).start(easing, forceAnimate);\n    }\n  },\n\n  /**\n   * @private\n   * @param {string} path=''\n   * @param {Object} source=this\n   * @param {Object} target\n   * @param {number} [time=500]\n   * @param {number} [delay=0]\n   *\n   * @example\n   *  // Animate position\n   *  el._animateToShallow({\n   *      position: [10, 10]\n   *  })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms\n   *  el._animateToShallow({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100)\n   */\n  _animateToShallow: function (path, source, target, time, delay) {\n    var objShallow = {};\n    var propertyCount = 0;\n\n    for (var name in target) {\n      if (!target.hasOwnProperty(name)) {\n        continue;\n      }\n\n      if (source[name] != null) {\n        if (isObject(target[name]) && !isArrayLike(target[name])) {\n          this._animateToShallow(path ? path + '.' + name : name, source[name], target[name], time, delay);\n        } else {\n          objShallow[name] = target[name];\n          propertyCount++;\n        }\n      } else if (target[name] != null) {\n        // Attr directly if not has property\n        // FIXME, if some property not needed for element ?\n        if (!path) {\n          this.attr(name, target[name]);\n        } else {\n          // Shape or style\n          var props = {};\n          props[path] = {};\n          props[path][name] = target[name];\n          this.attr(props);\n        }\n      }\n    }\n\n    if (propertyCount > 0) {\n      this.animate(path, false).when(time == null ? 500 : time, objShallow).delay(delay || 0);\n    }\n\n    return this;\n  }\n};\nvar _default = Animatable;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar brushHelper = require(\"./brushHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar indexOf = zrUtil.indexOf;\nvar curry = zrUtil.curry;\nvar COORD_CONVERTS = ['dataToPoint', 'pointToData']; // FIXME\n// how to genarialize to more coordinate systems.\n\nvar INCLUDE_FINDER_MAIN_TYPES = ['grid', 'xAxis', 'yAxis', 'geo', 'graph', 'polar', 'radiusAxis', 'angleAxis', 'bmap'];\n/**\n * [option in constructor]:\n * {\n *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n * }\n *\n *\n * [targetInfo]:\n *\n * There can be multiple axes in a single targetInfo. Consider the case\n * of `grid` component, a targetInfo represents a grid which contains one or more\n * cartesian and one or more axes. And consider the case of parallel system,\n * which has multiple axes in a coordinate system.\n * Can be {\n *     panelId: ...,\n *     coordSys: <a representitive cartesian in grid (first cartesian by default)>,\n *     coordSyses: all cartesians.\n *     gridModel: <grid component>\n *     xAxes: correspond to coordSyses on index\n *     yAxes: correspond to coordSyses on index\n * }\n * or {\n *     panelId: ...,\n *     coordSys: <geo coord sys>\n *     coordSyses: [<geo coord sys>]\n *     geoModel: <geo component>\n * }\n *\n *\n * [panelOpt]:\n *\n * Make from targetInfo. Input to BrushController.\n * {\n *     panelId: ...,\n *     rect: ...\n * }\n *\n *\n * [area]:\n *\n * Generated by BrushController or user input.\n * {\n *     panelId: Used to locate coordInfo directly. If user inpput, no panelId.\n *     brushType: determine how to convert to/from coord('rect' or 'polygon' or 'lineX/Y').\n *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n *     range: pixel range.\n *     coordRange: representitive coord range (the first one of coordRanges).\n *     coordRanges: <Array> coord ranges, used in multiple cartesian in one grid.\n * }\n */\n\n/**\n * @param {Object} option contains Index/Id/Name of xAxis/yAxis/geo/grid\n *        Each can be {number|Array.<number>}. like: {xAxisIndex: [3, 4]}\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} [opt]\n * @param {Array.<string>} [opt.include] include coordinate system types.\n */\n\nfunction BrushTargetManager(option, ecModel, opt) {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  var targetInfoList = this._targetInfoList = [];\n  var info = {};\n  var foundCpts = parseFinder(ecModel, option);\n  each(targetInfoBuilders, function (builder, type) {\n    if (!opt || !opt.include || indexOf(opt.include, type) >= 0) {\n      builder(foundCpts, targetInfoList, info);\n    }\n  });\n}\n\nvar proto = BrushTargetManager.prototype;\n\nproto.setOutputRanges = function (areas, ecModel) {\n  this.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n    (area.coordRanges || (area.coordRanges = [])).push(coordRange); // area.coordRange is the first of area.coordRanges\n\n    if (!area.coordRange) {\n      area.coordRange = coordRange; // In 'category' axis, coord to pixel is not reversible, so we can not\n      // rebuild range by coordRange accrately, which may bring trouble when\n      // brushing only one item. So we use __rangeOffset to rebuilding range\n      // by coordRange. And this it only used in brush component so it is no\n      // need to be adapted to coordRanges.\n\n      var result = coordConvert[area.brushType](0, coordSys, coordRange);\n      area.__rangeOffset = {\n        offset: diffProcessor[area.brushType](result.values, area.range, [1, 1]),\n        xyMinMax: result.xyMinMax\n      };\n    }\n  });\n};\n\nproto.matchOutputRanges = function (areas, ecModel, cb) {\n  each(areas, function (area) {\n    var targetInfo = this.findTargetInfo(area, ecModel);\n\n    if (targetInfo && targetInfo !== true) {\n      zrUtil.each(targetInfo.coordSyses, function (coordSys) {\n        var result = coordConvert[area.brushType](1, coordSys, area.range);\n        cb(area, result.values, coordSys, ecModel);\n      });\n    }\n  }, this);\n};\n\nproto.setInputRanges = function (areas, ecModel) {\n  each(areas, function (area) {\n    var targetInfo = this.findTargetInfo(area, ecModel);\n    area.range = area.range || []; // convert coordRange to global range and set panelId.\n\n    if (targetInfo && targetInfo !== true) {\n      area.panelId = targetInfo.panelId; // (1) area.range shoule always be calculate from coordRange but does\n      // not keep its original value, for the sake of the dataZoom scenario,\n      // where area.coordRange remains unchanged but area.range may be changed.\n      // (2) Only support converting one coordRange to pixel range in brush\n      // component. So do not consider `coordRanges`.\n      // (3) About __rangeOffset, see comment above.\n\n      var result = coordConvert[area.brushType](0, targetInfo.coordSys, area.coordRange);\n      var rangeOffset = area.__rangeOffset;\n      area.range = rangeOffset ? diffProcessor[area.brushType](result.values, rangeOffset.offset, getScales(result.xyMinMax, rangeOffset.xyMinMax)) : result.values;\n    }\n  }, this);\n};\n\nproto.makePanelOpts = function (api, getDefaultBrushType) {\n  return zrUtil.map(this._targetInfoList, function (targetInfo) {\n    var rect = targetInfo.getPanelRect();\n    return {\n      panelId: targetInfo.panelId,\n      defaultBrushType: getDefaultBrushType && getDefaultBrushType(targetInfo),\n      clipPath: brushHelper.makeRectPanelClipPath(rect),\n      isTargetByCursor: brushHelper.makeRectIsTargetByCursor(rect, api, targetInfo.coordSysModel),\n      getLinearBrushOtherExtent: brushHelper.makeLinearBrushOtherExtent(rect)\n    };\n  });\n};\n\nproto.controlSeries = function (area, seriesModel, ecModel) {\n  // Check whether area is bound in coord, and series do not belong to that coord.\n  // If do not do this check, some brush (like lineX) will controll all axes.\n  var targetInfo = this.findTargetInfo(area, ecModel);\n  return targetInfo === true || targetInfo && indexOf(targetInfo.coordSyses, seriesModel.coordinateSystem) >= 0;\n};\n/**\n * If return Object, a coord found.\n * If reutrn true, global found.\n * Otherwise nothing found.\n *\n * @param {Object} area\n * @param {Array} targetInfoList\n * @return {Object|boolean}\n */\n\n\nproto.findTargetInfo = function (area, ecModel) {\n  var targetInfoList = this._targetInfoList;\n  var foundCpts = parseFinder(ecModel, area);\n\n  for (var i = 0; i < targetInfoList.length; i++) {\n    var targetInfo = targetInfoList[i];\n    var areaPanelId = area.panelId;\n\n    if (areaPanelId) {\n      if (targetInfo.panelId === areaPanelId) {\n        return targetInfo;\n      }\n    } else {\n      for (var i = 0; i < targetInfoMatchers.length; i++) {\n        if (targetInfoMatchers[i](foundCpts, targetInfo)) {\n          return targetInfo;\n        }\n      }\n    }\n  }\n\n  return true;\n};\n\nfunction formatMinMax(minMax) {\n  minMax[0] > minMax[1] && minMax.reverse();\n  return minMax;\n}\n\nfunction parseFinder(ecModel, option) {\n  return modelUtil.parseFinder(ecModel, option, {\n    includeMainTypes: INCLUDE_FINDER_MAIN_TYPES\n  });\n}\n\nvar targetInfoBuilders = {\n  grid: function (foundCpts, targetInfoList) {\n    var xAxisModels = foundCpts.xAxisModels;\n    var yAxisModels = foundCpts.yAxisModels;\n    var gridModels = foundCpts.gridModels; // Remove duplicated.\n\n    var gridModelMap = zrUtil.createHashMap();\n    var xAxesHas = {};\n    var yAxesHas = {};\n\n    if (!xAxisModels && !yAxisModels && !gridModels) {\n      return;\n    }\n\n    each(xAxisModels, function (axisModel) {\n      var gridModel = axisModel.axis.grid.model;\n      gridModelMap.set(gridModel.id, gridModel);\n      xAxesHas[gridModel.id] = true;\n    });\n    each(yAxisModels, function (axisModel) {\n      var gridModel = axisModel.axis.grid.model;\n      gridModelMap.set(gridModel.id, gridModel);\n      yAxesHas[gridModel.id] = true;\n    });\n    each(gridModels, function (gridModel) {\n      gridModelMap.set(gridModel.id, gridModel);\n      xAxesHas[gridModel.id] = true;\n      yAxesHas[gridModel.id] = true;\n    });\n    gridModelMap.each(function (gridModel) {\n      var grid = gridModel.coordinateSystem;\n      var cartesians = [];\n      each(grid.getCartesians(), function (cartesian, index) {\n        if (indexOf(xAxisModels, cartesian.getAxis('x').model) >= 0 || indexOf(yAxisModels, cartesian.getAxis('y').model) >= 0) {\n          cartesians.push(cartesian);\n        }\n      });\n      targetInfoList.push({\n        panelId: 'grid--' + gridModel.id,\n        gridModel: gridModel,\n        coordSysModel: gridModel,\n        // Use the first one as the representitive coordSys.\n        coordSys: cartesians[0],\n        coordSyses: cartesians,\n        getPanelRect: panelRectBuilder.grid,\n        xAxisDeclared: xAxesHas[gridModel.id],\n        yAxisDeclared: yAxesHas[gridModel.id]\n      });\n    });\n  },\n  geo: function (foundCpts, targetInfoList) {\n    each(foundCpts.geoModels, function (geoModel) {\n      var coordSys = geoModel.coordinateSystem;\n      targetInfoList.push({\n        panelId: 'geo--' + geoModel.id,\n        geoModel: geoModel,\n        coordSysModel: geoModel,\n        coordSys: coordSys,\n        coordSyses: [coordSys],\n        getPanelRect: panelRectBuilder.geo\n      });\n    });\n  }\n};\nvar targetInfoMatchers = [// grid\nfunction (foundCpts, targetInfo) {\n  var xAxisModel = foundCpts.xAxisModel;\n  var yAxisModel = foundCpts.yAxisModel;\n  var gridModel = foundCpts.gridModel;\n  !gridModel && xAxisModel && (gridModel = xAxisModel.axis.grid.model);\n  !gridModel && yAxisModel && (gridModel = yAxisModel.axis.grid.model);\n  return gridModel && gridModel === targetInfo.gridModel;\n}, // geo\nfunction (foundCpts, targetInfo) {\n  var geoModel = foundCpts.geoModel;\n  return geoModel && geoModel === targetInfo.geoModel;\n}];\nvar panelRectBuilder = {\n  grid: function () {\n    // grid is not Transformable.\n    return this.coordSys.grid.getRect().clone();\n  },\n  geo: function () {\n    var coordSys = this.coordSys;\n    var rect = coordSys.getBoundingRect().clone(); // geo roam and zoom transform\n\n    rect.applyTransform(graphic.getTransform(coordSys));\n    return rect;\n  }\n};\nvar coordConvert = {\n  lineX: curry(axisConvert, 0),\n  lineY: curry(axisConvert, 1),\n  rect: function (to, coordSys, rangeOrCoordRange) {\n    var xminymin = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][0], rangeOrCoordRange[1][0]]);\n    var xmaxymax = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][1], rangeOrCoordRange[1][1]]);\n    var values = [formatMinMax([xminymin[0], xmaxymax[0]]), formatMinMax([xminymin[1], xmaxymax[1]])];\n    return {\n      values: values,\n      xyMinMax: values\n    };\n  },\n  polygon: function (to, coordSys, rangeOrCoordRange) {\n    var xyMinMax = [[Infinity, -Infinity], [Infinity, -Infinity]];\n    var values = zrUtil.map(rangeOrCoordRange, function (item) {\n      var p = coordSys[COORD_CONVERTS[to]](item);\n      xyMinMax[0][0] = Math.min(xyMinMax[0][0], p[0]);\n      xyMinMax[1][0] = Math.min(xyMinMax[1][0], p[1]);\n      xyMinMax[0][1] = Math.max(xyMinMax[0][1], p[0]);\n      xyMinMax[1][1] = Math.max(xyMinMax[1][1], p[1]);\n      return p;\n    });\n    return {\n      values: values,\n      xyMinMax: xyMinMax\n    };\n  }\n};\n\nfunction axisConvert(axisNameIndex, to, coordSys, rangeOrCoordRange) {\n  var axis = coordSys.getAxis(['x', 'y'][axisNameIndex]);\n  var values = formatMinMax(zrUtil.map([0, 1], function (i) {\n    return to ? axis.coordToData(axis.toLocalCoord(rangeOrCoordRange[i])) : axis.toGlobalCoord(axis.dataToCoord(rangeOrCoordRange[i]));\n  }));\n  var xyMinMax = [];\n  xyMinMax[axisNameIndex] = values;\n  xyMinMax[1 - axisNameIndex] = [NaN, NaN];\n  return {\n    values: values,\n    xyMinMax: xyMinMax\n  };\n}\n\nvar diffProcessor = {\n  lineX: curry(axisDiffProcessor, 0),\n  lineY: curry(axisDiffProcessor, 1),\n  rect: function (values, refer, scales) {\n    return [[values[0][0] - scales[0] * refer[0][0], values[0][1] - scales[0] * refer[0][1]], [values[1][0] - scales[1] * refer[1][0], values[1][1] - scales[1] * refer[1][1]]];\n  },\n  polygon: function (values, refer, scales) {\n    return zrUtil.map(values, function (item, idx) {\n      return [item[0] - scales[0] * refer[idx][0], item[1] - scales[1] * refer[idx][1]];\n    });\n  }\n};\n\nfunction axisDiffProcessor(axisNameIndex, values, refer, scales) {\n  return [values[0] - scales[axisNameIndex] * refer[0], values[1] - scales[axisNameIndex] * refer[1]];\n} // We have to process scale caused by dataZoom manually,\n// although it might be not accurate.\n\n\nfunction getScales(xyMinMaxCurr, xyMinMaxOrigin) {\n  var sizeCurr = getSize(xyMinMaxCurr);\n  var sizeOrigin = getSize(xyMinMaxOrigin);\n  var scales = [sizeCurr[0] / sizeOrigin[0], sizeCurr[1] / sizeOrigin[1]];\n  isNaN(scales[0]) && (scales[0] = 1);\n  isNaN(scales[1]) && (scales[1] = 1);\n  return scales;\n}\n\nfunction getSize(xyMinMax) {\n  return xyMinMax ? [xyMinMax[0][1] - xyMinMax[0][0], xyMinMax[1][1] - xyMinMax[1][0]] : [NaN, NaN];\n}\n\nvar _default = BrushTargetManager;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _whiskerBoxCommon = require(\"../helper/whiskerBoxCommon\");\n\nvar seriesModelMixin = _whiskerBoxCommon.seriesModelMixin;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar CandlestickSeries = SeriesModel.extend({\n  type: 'series.candlestick',\n  dependencies: ['xAxis', 'yAxis', 'grid'],\n\n  /**\n   * @readOnly\n   */\n  defaultValueDimensions: [{\n    name: 'open',\n    defaultTooltip: true\n  }, {\n    name: 'close',\n    defaultTooltip: true\n  }, {\n    name: 'lowest',\n    defaultTooltip: true\n  }, {\n    name: 'highest',\n    defaultTooltip: true\n  }],\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: null,\n\n  /**\n   * @override\n   */\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    layout: null,\n    // 'horizontal' or 'vertical'\n    itemStyle: {\n      color: '#c23531',\n      // 阳线 positive\n      color0: '#314656',\n      // 阴线 negative     '#c23531', '#314656'\n      borderWidth: 1,\n      // FIXME\n      // ec2中使用的是lineStyle.color 和 lineStyle.color0\n      borderColor: '#c23531',\n      borderColor0: '#314656'\n    },\n    emphasis: {\n      itemStyle: {\n        borderWidth: 2\n      }\n    },\n    barMaxWidth: null,\n    barMinWidth: null,\n    barWidth: null,\n    large: true,\n    largeThreshold: 600,\n    progressive: 5e3,\n    progressiveThreshold: 1e4,\n    progressiveChunkMode: 'mod',\n    animationUpdate: false,\n    animationEasing: 'linear',\n    animationDuration: 300\n  },\n\n  /**\n   * Get dimension for shadow in dataZoom\n   * @return {string} dimension name\n   */\n  getShadowDim: function () {\n    return 'open';\n  },\n  brushSelector: function (dataIndex, data, selectors) {\n    var itemLayout = data.getItemLayout(dataIndex);\n    return itemLayout && selectors.rect(itemLayout.brushRect);\n  }\n});\nzrUtil.mixin(CandlestickSeries, seriesModelMixin, true);\nvar _default = CandlestickSeries;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Region = require(\"./Region\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Parse and decode geo json\n * @module echarts/coord/geo/parseGeoJson\n */\nfunction decode(json) {\n  if (!json.UTF8Encoding) {\n    return json;\n  }\n\n  var encodeScale = json.UTF8Scale;\n\n  if (encodeScale == null) {\n    encodeScale = 1024;\n  }\n\n  var features = json.features;\n\n  for (var f = 0; f < features.length; f++) {\n    var feature = features[f];\n    var geometry = feature.geometry;\n    var coordinates = geometry.coordinates;\n    var encodeOffsets = geometry.encodeOffsets;\n\n    for (var c = 0; c < coordinates.length; c++) {\n      var coordinate = coordinates[c];\n\n      if (geometry.type === 'Polygon') {\n        coordinates[c] = decodePolygon(coordinate, encodeOffsets[c], encodeScale);\n      } else if (geometry.type === 'MultiPolygon') {\n        for (var c2 = 0; c2 < coordinate.length; c2++) {\n          var polygon = coordinate[c2];\n          coordinate[c2] = decodePolygon(polygon, encodeOffsets[c][c2], encodeScale);\n        }\n      }\n    }\n  } // Has been decoded\n\n\n  json.UTF8Encoding = false;\n  return json;\n}\n\nfunction decodePolygon(coordinate, encodeOffsets, encodeScale) {\n  var result = [];\n  var prevX = encodeOffsets[0];\n  var prevY = encodeOffsets[1];\n\n  for (var i = 0; i < coordinate.length; i += 2) {\n    var x = coordinate.charCodeAt(i) - 64;\n    var y = coordinate.charCodeAt(i + 1) - 64; // ZigZag decoding\n\n    x = x >> 1 ^ -(x & 1);\n    y = y >> 1 ^ -(y & 1); // Delta deocding\n\n    x += prevX;\n    y += prevY;\n    prevX = x;\n    prevY = y; // Dequantize\n\n    result.push([x / encodeScale, y / encodeScale]);\n  }\n\n  return result;\n}\n/**\n * @alias module:echarts/coord/geo/parseGeoJson\n * @param {Object} geoJson\n * @return {module:zrender/container/Group}\n */\n\n\nfunction _default(geoJson) {\n  decode(geoJson);\n  return zrUtil.map(zrUtil.filter(geoJson.features, function (featureObj) {\n    // Output of mapshaper may have geometry null\n    return featureObj.geometry && featureObj.properties && featureObj.geometry.coordinates.length > 0;\n  }), function (featureObj) {\n    var properties = featureObj.properties;\n    var geo = featureObj.geometry;\n    var coordinates = geo.coordinates;\n    var geometries = [];\n\n    if (geo.type === 'Polygon') {\n      geometries.push({\n        type: 'polygon',\n        // According to the GeoJSON specification.\n        // First must be exterior, and the rest are all interior(holes).\n        exterior: coordinates[0],\n        interiors: coordinates.slice(1)\n      });\n    }\n\n    if (geo.type === 'MultiPolygon') {\n      zrUtil.each(coordinates, function (item) {\n        if (item[0]) {\n          geometries.push({\n            type: 'polygon',\n            exterior: item[0],\n            interiors: item.slice(1)\n          });\n        }\n      });\n    }\n\n    var region = new Region(properties.name, geometries, properties.cp);\n    region.properties = properties;\n    return region;\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerAction({\n  type: 'dragNode',\n  event: 'dragNode',\n  // here can only use 'update' now, other value is not support in echarts.\n  update: 'update'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'sankey',\n    query: payload\n  }, function (seriesModel) {\n    seriesModel.setNodePosition(payload.dataIndex, [payload.localX, payload.localY]);\n  });\n});","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"./pie/PieSeries\");\n\nrequire(\"./pie/PieView\");\n\nvar createDataSelectAction = require(\"../action/createDataSelectAction\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar pieLayout = require(\"./pie/pieLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\ncreateDataSelectAction('pie', [{\n  type: 'pieToggleSelect',\n  event: 'pieselectchanged',\n  method: 'toggleSelected'\n}, {\n  type: 'pieSelect',\n  event: 'pieselected',\n  method: 'select'\n}, {\n  type: 'pieUnSelect',\n  event: 'pieunselected',\n  method: 'unSelect'\n}]);\necharts.registerVisual(dataColor('pie'));\necharts.registerLayout(zrUtil.curry(pieLayout, 'pie'));\necharts.registerProcessor(dataFilter('pie'));","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BrushController = require(\"../helper/BrushController\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendComponentView({\n  type: 'brush',\n  init: function (ecModel, api) {\n    /**\n     * @readOnly\n     * @type {module:echarts/model/Global}\n     */\n    this.ecModel = ecModel;\n    /**\n     * @readOnly\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this.api = api;\n    /**\n     * @readOnly\n     * @type {module:echarts/component/brush/BrushModel}\n     */\n\n    this.model;\n    /**\n     * @private\n     * @type {module:echarts/component/helper/BrushController}\n     */\n\n    (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this)).mount();\n  },\n\n  /**\n   * @override\n   */\n  render: function (brushModel) {\n    this.model = brushModel;\n    return updateController.apply(this, arguments);\n  },\n\n  /**\n   * @override\n   */\n  updateTransform: updateController,\n\n  /**\n   * @override\n   */\n  updateView: updateController,\n  // /**\n  //  * @override\n  //  */\n  // updateLayout: updateController,\n  // /**\n  //  * @override\n  //  */\n  // updateVisual: updateController,\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._brushController.dispose();\n  },\n\n  /**\n   * @private\n   */\n  _onBrush: function (areas, opt) {\n    var modelId = this.model.id;\n    this.model.brushTargetManager.setOutputRanges(areas, this.ecModel); // Action is not dispatched on drag end, because the drag end\n    // emits the same params with the last drag move event, and\n    // may have some delay when using touch pad, which makes\n    // animation not smooth (when using debounce).\n\n    (!opt.isEnd || opt.removeOnClick) && this.api.dispatchAction({\n      type: 'brush',\n      brushId: modelId,\n      areas: zrUtil.clone(areas),\n      $from: modelId\n    });\n  }\n});\n\nfunction updateController(brushModel, ecModel, api, payload) {\n  // Do not update controller when drawing.\n  (!payload || payload.$from !== brushModel.id) && this._brushController.setPanels(brushModel.brushTargetManager.makePanelOpts(api)).enableBrush(brushModel.brushOption).updateCovers(brushModel.areas.slice());\n}\n\nmodule.exports = _default;","var _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @return {string} label string. Not null/undefined\n */\nfunction getDefaultLabel(data, dataIndex) {\n  var labelDims = data.mapDimension('defaultedLabel', true);\n  var len = labelDims.length; // Simple optimization (in lots of cases, label dims length is 1)\n\n  if (len === 1) {\n    return retrieveRawValue(data, dataIndex, labelDims[0]);\n  } else if (len) {\n    var vals = [];\n\n    for (var i = 0; i < labelDims.length; i++) {\n      var val = retrieveRawValue(data, dataIndex, labelDims[i]);\n      vals.push(val);\n    }\n\n    return vals.join(' ');\n  }\n}\n\nexports.getDefaultLabel = getDefaultLabel;","var Path = require(\"../Path\");\n\nvar roundRectHelper = require(\"../helper/roundRect\");\n\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\nvar _default = Path.extend({\n  type: 'rect',\n  shape: {\n    // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n    // r缩写为1         相当于 [1, 1, 1, 1]\n    // r缩写为[1]       相当于 [1, 1, 1, 1]\n    // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n    // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n    r: 0,\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var width = shape.width;\n    var height = shape.height;\n\n    if (!shape.r) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, shape);\n    }\n\n    ctx.closePath();\n    return;\n  }\n});\n\nmodule.exports = _default;","require(\"../coord/parallel/parallelCreator\");\n\nrequire(\"./axis/parallelAxisAction\");\n\nrequire(\"./axis/ParallelAxisView\");","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar IRRELEVANT_EXCLUDES = {\n  'axisPointer': 1,\n  'tooltip': 1,\n  'brush': 1\n};\n/**\n * Avoid that: mouse click on a elements that is over geo or graph,\n * but roam is triggered.\n */\n\nfunction onIrrelevantElement(e, api, targetCoordSysModel) {\n  var model = api.getComponentByElement(e.topTarget); // If model is axisModel, it works only if it is injected with coordinateSystem.\n\n  var coordSys = model && model.coordinateSystem;\n  return model && model !== targetCoordSysModel && !IRRELEVANT_EXCLUDES[model.mainType] && coordSys && coordSys.model !== targetCoordSysModel;\n}\n\nexports.onIrrelevantElement = onIrrelevantElement;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar colorAll = ['#37A2DA', '#32C5E9', '#67E0E3', '#9FE6B8', '#FFDB5C', '#ff9f7f', '#fb7293', '#E062AE', '#E690D1', '#e7bcf3', '#9d96f5', '#8378EA', '#96BFFF'];\nvar _default = {\n  color: colorAll,\n  colorLayer: [['#37A2DA', '#ffd85c', '#fd7b5f'], ['#37A2DA', '#67E0E3', '#FFDB5C', '#ff9f7f', '#E062AE', '#9d96f5'], ['#37A2DA', '#32C5E9', '#9FE6B8', '#FFDB5C', '#ff9f7f', '#fb7293', '#e7bcf3', '#8378EA', '#96BFFF'], colorAll]\n};\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisModel = ComponentModel.extend({\n  type: 'singleAxis',\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/single/SingleAxis}\n   */\n  axis: null,\n\n  /**\n   * @type {module:echarts/coord/single/Single}\n   */\n  coordinateSystem: null,\n\n  /**\n   * @override\n   */\n  getCoordSysModel: function () {\n    return this;\n  }\n});\nvar defaultOption = {\n  left: '5%',\n  top: '5%',\n  right: '5%',\n  bottom: '5%',\n  type: 'value',\n  position: 'bottom',\n  orient: 'horizontal',\n  axisLine: {\n    show: true,\n    lineStyle: {\n      width: 2,\n      type: 'solid'\n    }\n  },\n  // Single coordinate system and single axis is the,\n  // which is used as the parent tooltip model.\n  // same model, so we set default tooltip show as true.\n  tooltip: {\n    show: true\n  },\n  axisTick: {\n    show: true,\n    length: 6,\n    lineStyle: {\n      width: 2\n    }\n  },\n  axisLabel: {\n    show: true,\n    interval: 'auto'\n  },\n  splitLine: {\n    show: true,\n    lineStyle: {\n      type: 'dashed',\n      opacity: 0.2\n    }\n  }\n};\n\nfunction getAxisType(axisName, option) {\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\naxisModelCreator('single', AxisModel, getAxisType, defaultOption);\nvar _default = AxisModel;\nmodule.exports = _default;","var Displayable = require(\"./Displayable\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar pathContain = require(\"../contain/path\");\n\nvar Pattern = require(\"./Pattern\");\n\nvar getCanvasPattern = Pattern.prototype.getCanvasPattern;\nvar abs = Math.abs;\nvar pathProxyForDraw = new PathProxy(true);\n/**\n * @alias module:zrender/graphic/Path\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\n\nfunction Path(opts) {\n  Displayable.call(this, opts);\n  /**\n   * @type {module:zrender/core/PathProxy}\n   * @readOnly\n   */\n\n  this.path = null;\n}\n\nPath.prototype = {\n  constructor: Path,\n  type: 'path',\n  __dirtyPath: true,\n  strokeContainThreshold: 5,\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var path = this.path || pathProxyForDraw;\n    var hasStroke = style.hasStroke();\n    var hasFill = style.hasFill();\n    var fill = style.fill;\n    var stroke = style.stroke;\n    var hasFillGradient = hasFill && !!fill.colorStops;\n    var hasStrokeGradient = hasStroke && !!stroke.colorStops;\n    var hasFillPattern = hasFill && !!fill.image;\n    var hasStrokePattern = hasStroke && !!stroke.image;\n    style.bind(ctx, this, prevEl);\n    this.setTransform(ctx);\n\n    if (this.__dirty) {\n      var rect; // Update gradient because bounding rect may changed\n\n      if (hasFillGradient) {\n        rect = rect || this.getBoundingRect();\n        this._fillGradient = style.getGradient(ctx, fill, rect);\n      }\n\n      if (hasStrokeGradient) {\n        rect = rect || this.getBoundingRect();\n        this._strokeGradient = style.getGradient(ctx, stroke, rect);\n      }\n    } // Use the gradient or pattern\n\n\n    if (hasFillGradient) {\n      // PENDING If may have affect the state\n      ctx.fillStyle = this._fillGradient;\n    } else if (hasFillPattern) {\n      ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n    }\n\n    if (hasStrokeGradient) {\n      ctx.strokeStyle = this._strokeGradient;\n    } else if (hasStrokePattern) {\n      ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n    }\n\n    var lineDash = style.lineDash;\n    var lineDashOffset = style.lineDashOffset;\n    var ctxLineDash = !!ctx.setLineDash; // Update path sx, sy\n\n    var scale = this.getGlobalScale();\n    path.setScale(scale[0], scale[1]); // Proxy context\n    // Rebuild path in following 2 cases\n    // 1. Path is dirty\n    // 2. Path needs javascript implemented lineDash stroking.\n    //    In this case, lineDash information will not be saved in PathProxy\n\n    if (this.__dirtyPath || lineDash && !ctxLineDash && hasStroke) {\n      path.beginPath(ctx); // Setting line dash before build path\n\n      if (lineDash && !ctxLineDash) {\n        path.setLineDash(lineDash);\n        path.setLineDashOffset(lineDashOffset);\n      }\n\n      this.buildPath(path, this.shape, false); // Clear path dirty flag\n\n      if (this.path) {\n        this.__dirtyPath = false;\n      }\n    } else {\n      // Replay path building\n      ctx.beginPath();\n      this.path.rebuildPath(ctx);\n    }\n\n    hasFill && path.fill(ctx);\n\n    if (lineDash && ctxLineDash) {\n      ctx.setLineDash(lineDash);\n      ctx.lineDashOffset = lineDashOffset;\n    }\n\n    hasStroke && path.stroke(ctx);\n\n    if (lineDash && ctxLineDash) {\n      // PENDING\n      // Remove lineDash\n      ctx.setLineDash([]);\n    } // Draw rect text\n\n\n    if (style.text != null) {\n      // Only restore transform when needs draw text.\n      this.restoreTransform(ctx);\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n  // Like in circle\n  buildPath: function (ctx, shapeCfg, inBundle) {},\n  createPathProxy: function () {\n    this.path = new PathProxy();\n  },\n  getBoundingRect: function () {\n    var rect = this._rect;\n    var style = this.style;\n    var needsUpdateRect = !rect;\n\n    if (needsUpdateRect) {\n      var path = this.path;\n\n      if (!path) {\n        // Create path on demand.\n        path = this.path = new PathProxy();\n      }\n\n      if (this.__dirtyPath) {\n        path.beginPath();\n        this.buildPath(path, this.shape, false);\n      }\n\n      rect = path.getBoundingRect();\n    }\n\n    this._rect = rect;\n\n    if (style.hasStroke()) {\n      // Needs update rect with stroke lineWidth when\n      // 1. Element changes scale or lineWidth\n      // 2. Shape is changed\n      var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n\n      if (this.__dirty || needsUpdateRect) {\n        rectWithStroke.copy(rect); // FIXME Must after updateTransform\n\n        var w = style.lineWidth; // PENDING, Min line width is needed when line is horizontal or vertical\n\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Only add extra hover lineWidth when there are no fill\n\n        if (!style.hasFill()) {\n          w = Math.max(w, this.strokeContainThreshold || 4);\n        } // Consider line width\n        // Line scale can't be 0;\n\n\n        if (lineScale > 1e-10) {\n          rectWithStroke.width += w / lineScale;\n          rectWithStroke.height += w / lineScale;\n          rectWithStroke.x -= w / lineScale / 2;\n          rectWithStroke.y -= w / lineScale / 2;\n        }\n      } // Return rect with stroke\n\n\n      return rectWithStroke;\n    }\n\n    return rect;\n  },\n  contain: function (x, y) {\n    var localPos = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    var style = this.style;\n    x = localPos[0];\n    y = localPos[1];\n\n    if (rect.contain(x, y)) {\n      var pathData = this.path.data;\n\n      if (style.hasStroke()) {\n        var lineWidth = style.lineWidth;\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Line scale can't be 0;\n\n        if (lineScale > 1e-10) {\n          // Only add extra hover lineWidth when there are no fill\n          if (!style.hasFill()) {\n            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n          }\n\n          if (pathContain.containStroke(pathData, lineWidth / lineScale, x, y)) {\n            return true;\n          }\n        }\n      }\n\n      if (style.hasFill()) {\n        return pathContain.contain(pathData, x, y);\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @param  {boolean} dirtyPath\n   */\n  dirty: function (dirtyPath) {\n    if (dirtyPath == null) {\n      dirtyPath = true;\n    } // Only mark dirty, not mark clean\n\n\n    if (dirtyPath) {\n      this.__dirtyPath = dirtyPath;\n      this._rect = null;\n    }\n\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh(); // Used as a clipping path\n\n    if (this.__clipTarget) {\n      this.__clipTarget.dirty();\n    }\n  },\n\n  /**\n   * Alias for animate('shape')\n   * @param {boolean} loop\n   */\n  animateShape: function (loop) {\n    return this.animate('shape', loop);\n  },\n  // Overwrite attrKV\n  attrKV: function (key, value) {\n    // FIXME\n    if (key === 'shape') {\n      this.setShape(value);\n      this.__dirtyPath = true;\n      this._rect = null;\n    } else {\n      Displayable.prototype.attrKV.call(this, key, value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setShape: function (key, value) {\n    var shape = this.shape; // Path from string may not have shape\n\n    if (shape) {\n      if (zrUtil.isObject(key)) {\n        for (var name in key) {\n          if (key.hasOwnProperty(name)) {\n            shape[name] = key[name];\n          }\n        }\n      } else {\n        shape[key] = value;\n      }\n\n      this.dirty(true);\n    }\n\n    return this;\n  },\n  getLineScale: function () {\n    var m = this.transform; // Get the line scale.\n    // Determinant of `m` means how much the area is enlarged by the\n    // transformation. So its square root can be used as a scale factor\n    // for width.\n\n    return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10 ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1])) : 1;\n  }\n};\n/**\n * 扩展一个 Path element, 比如星形，圆等。\n * Extend a path element\n * @param {Object} props\n * @param {string} props.type Path type\n * @param {Function} props.init Initialize\n * @param {Function} props.buildPath Overwrite buildPath method\n * @param {Object} [props.style] Extended default style config\n * @param {Object} [props.shape] Extended default shape config\n */\n\nPath.extend = function (defaults) {\n  var Sub = function (opts) {\n    Path.call(this, opts);\n\n    if (defaults.style) {\n      // Extend default style\n      this.style.extendFrom(defaults.style, false);\n    } // Extend default shape\n\n\n    var defaultShape = defaults.shape;\n\n    if (defaultShape) {\n      this.shape = this.shape || {};\n      var thisShape = this.shape;\n\n      for (var name in defaultShape) {\n        if (!thisShape.hasOwnProperty(name) && defaultShape.hasOwnProperty(name)) {\n          thisShape[name] = defaultShape[name];\n        }\n      }\n    }\n\n    defaults.init && defaults.init.call(this, opts);\n  };\n\n  zrUtil.inherits(Sub, Path); // FIXME 不能 extend position, rotation 等引用对象\n\n  for (var name in defaults) {\n    // Extending prototype values and methods\n    if (name !== 'style' && name !== 'shape') {\n      Sub.prototype[name] = defaults[name];\n    }\n  }\n\n  return Sub;\n};\n\nzrUtil.inherits(Path, Displayable);\nvar _default = Path;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Cartesian = require(\"./Cartesian\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction Cartesian2D(name) {\n  Cartesian.call(this, name);\n}\n\nCartesian2D.prototype = {\n  constructor: Cartesian2D,\n  type: 'cartesian2d',\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/cartesian/Axis2D}\n   */\n  getBaseAxis: function () {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAxis('x');\n  },\n\n  /**\n   * If contain point\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var axisX = this.getAxis('x');\n    var axisY = this.getAxis('y');\n    return axisX.contain(axisX.toLocalCoord(point[0])) && axisY.contain(axisY.toLocalCoord(point[1]));\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.getAxis('x').containData(data[0]) && this.getAxis('y').containData(data[1]);\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, reserved, out) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    out = out || [];\n    out[0] = xAxis.toGlobalCoord(xAxis.dataToCoord(data[0]));\n    out[1] = yAxis.toGlobalCoord(yAxis.dataToCoord(data[1]));\n    return out;\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  clampData: function (data, out) {\n    var xScale = this.getAxis('x').scale;\n    var yScale = this.getAxis('y').scale;\n    var xAxisExtent = xScale.getExtent();\n    var yAxisExtent = yScale.getExtent();\n    var x = xScale.parse(data[0]);\n    var y = yScale.parse(data[1]);\n    out = out || [];\n    out[0] = Math.min(Math.max(Math.min(xAxisExtent[0], xAxisExtent[1]), x), Math.max(xAxisExtent[0], xAxisExtent[1]));\n    out[1] = Math.min(Math.max(Math.min(yAxisExtent[0], yAxisExtent[1]), y), Math.max(yAxisExtent[0], yAxisExtent[1]));\n    return out;\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  pointToData: function (point, out) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    out = out || [];\n    out[0] = xAxis.coordToData(xAxis.toLocalCoord(point[0]));\n    out[1] = yAxis.coordToData(yAxis.toLocalCoord(point[1]));\n    return out;\n  },\n\n  /**\n   * Get other axis\n   * @param {module:echarts/coord/cartesian/Axis2D} axis\n   */\n  getOtherAxis: function (axis) {\n    return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n  }\n};\nzrUtil.inherits(Cartesian2D, Cartesian);\nvar _default = Cartesian2D;\nmodule.exports = _default;","// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\nfunction Draggable() {\n  this.on('mousedown', this._dragStart, this);\n  this.on('mousemove', this._drag, this);\n  this.on('mouseup', this._dragEnd, this);\n  this.on('globalout', this._dragEnd, this); // this._dropTarget = null;\n  // this._draggingTarget = null;\n  // this._x = 0;\n  // this._y = 0;\n}\n\nDraggable.prototype = {\n  constructor: Draggable,\n  _dragStart: function (e) {\n    var draggingTarget = e.target;\n\n    if (draggingTarget && draggingTarget.draggable) {\n      this._draggingTarget = draggingTarget;\n      draggingTarget.dragging = true;\n      this._x = e.offsetX;\n      this._y = e.offsetY;\n      this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n    }\n  },\n  _drag: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      var x = e.offsetX;\n      var y = e.offsetY;\n      var dx = x - this._x;\n      var dy = y - this._y;\n      this._x = x;\n      this._y = y;\n      draggingTarget.drift(dx, dy, e);\n      this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n      var dropTarget = this.findHover(x, y, draggingTarget).target;\n      var lastDropTarget = this._dropTarget;\n      this._dropTarget = dropTarget;\n\n      if (draggingTarget !== dropTarget) {\n        if (lastDropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n        }\n\n        if (dropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n        }\n      }\n    }\n  },\n  _dragEnd: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      draggingTarget.dragging = false;\n    }\n\n    this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n    if (this._dropTarget) {\n      this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n    }\n\n    this._draggingTarget = null;\n    this._dropTarget = null;\n  }\n};\n\nfunction param(target, e) {\n  return {\n    target: target,\n    topTarget: e && e.topTarget\n  };\n}\n\nvar _default = Draggable;\nmodule.exports = _default;","var createListFromArray = require(\"../helper/createListFromArray\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.scatter',\n  dependencies: ['grid', 'polar', 'geo', 'singleAxis', 'calendar'],\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  brushSelector: 'point',\n  getProgressive: function () {\n    var progressive = this.option.progressive;\n\n    if (progressive == null) {\n      // PENDING\n      return this.option.large ? 5e3 : this.get('progressive');\n    }\n\n    return progressive;\n  },\n  getProgressiveThreshold: function () {\n    var progressiveThreshold = this.option.progressiveThreshold;\n\n    if (progressiveThreshold == null) {\n      // PENDING\n      return this.option.large ? 1e4 : this.get('progressiveThreshold');\n    }\n\n    return progressiveThreshold;\n  },\n  defaultOption: {\n    coordinateSystem: 'cartesian2d',\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Polar coordinate system\n    // polarIndex: 0,\n    // Geo coordinate system\n    // geoIndex: 0,\n    // symbol: null,        // 图形类型\n    symbolSize: 10,\n    // 图形大小，半宽（半径）参数，当图形为方向或菱形则总宽度为symbolSize * 2\n    // symbolRotate: null,  // 图形旋转控制\n    large: false,\n    // Available when large is true\n    largeThreshold: 2000,\n    // cursor: null,\n    // label: {\n    // show: false\n    // distance: 5,\n    // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n    // position: 默认自适应，水平布局为'top'，垂直布局为'right'，可选为\n    //           'inside'|'left'|'right'|'top'|'bottom'\n    // 默认使用全局文本样式，详见TEXTSTYLE\n    // },\n    itemStyle: {\n      opacity: 0.8 // color: 各异\n      // progressive: null\n\n    }\n  }\n});\n\nmodule.exports = _default;","var _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PI2 = Math.PI * 2;\nvar RADIAN = Math.PI / 180;\n\nfunction _default(seriesType, ecModel, api, payload) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var center = seriesModel.get('center');\n    var radius = seriesModel.get('radius');\n\n    if (!zrUtil.isArray(radius)) {\n      radius = [0, radius];\n    }\n\n    if (!zrUtil.isArray(center)) {\n      center = [center, center];\n    }\n\n    var width = api.getWidth();\n    var height = api.getHeight();\n    var size = Math.min(width, height);\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var r0 = parsePercent(radius[0], size / 2);\n    var r = parsePercent(radius[1], size / 2);\n    var startAngle = -seriesModel.get('startAngle') * RADIAN;\n    var minAngle = seriesModel.get('minAngle') * RADIAN;\n    var virtualRoot = seriesModel.getData().tree.root;\n    var treeRoot = seriesModel.getViewRoot();\n    var rootDepth = treeRoot.depth;\n    var sort = seriesModel.get('sort');\n\n    if (sort != null) {\n      initChildren(treeRoot, sort);\n    }\n\n    var validDataCount = 0;\n    zrUtil.each(treeRoot.children, function (child) {\n      !isNaN(child.getValue()) && validDataCount++;\n    });\n    var sum = treeRoot.getValue(); // Sum may be 0\n\n    var unitRadian = Math.PI / (sum || validDataCount) * 2;\n    var renderRollupNode = treeRoot.depth > 0;\n    var levels = treeRoot.height - (renderRollupNode ? -1 : 1);\n    var rPerLevel = (r - r0) / (levels || 1);\n    var clockwise = seriesModel.get('clockwise');\n    var stillShowZeroSum = seriesModel.get('stillShowZeroSum'); // In the case some sector angle is smaller than minAngle\n\n    var restAngle = PI2;\n    var valueSumLargerThanMinAngle = 0;\n    var dir = clockwise ? 1 : -1;\n    /**\n     * Render a tree\n     * @return increased angle\n     */\n\n    var renderNode = function (node, startAngle) {\n      if (!node) {\n        return;\n      }\n\n      var endAngle = startAngle; // Render self\n\n      if (node !== virtualRoot) {\n        // Tree node is virtual, so it doesn't need to be drawn\n        var value = node.getValue();\n        var angle = sum === 0 && stillShowZeroSum ? unitRadian : value * unitRadian;\n\n        if (angle < minAngle) {\n          angle = minAngle;\n          restAngle -= minAngle;\n        } else {\n          valueSumLargerThanMinAngle += value;\n        }\n\n        endAngle = startAngle + dir * angle;\n        var depth = node.depth - rootDepth - (renderRollupNode ? -1 : 1);\n        var rStart = r0 + rPerLevel * depth;\n        var rEnd = r0 + rPerLevel * (depth + 1);\n        var itemModel = node.getModel();\n\n        if (itemModel.get('r0') != null) {\n          rStart = parsePercent(itemModel.get('r0'), size / 2);\n        }\n\n        if (itemModel.get('r') != null) {\n          rEnd = parsePercent(itemModel.get('r'), size / 2);\n        }\n\n        node.setLayout({\n          angle: angle,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          clockwise: clockwise,\n          cx: cx,\n          cy: cy,\n          r0: rStart,\n          r: rEnd\n        });\n      } // Render children\n\n\n      if (node.children && node.children.length) {\n        // currentAngle = startAngle;\n        var siblingAngle = 0;\n        zrUtil.each(node.children, function (node) {\n          siblingAngle += renderNode(node, startAngle + siblingAngle);\n        });\n      }\n\n      return endAngle - startAngle;\n    }; // Virtual root node for roll up\n\n\n    if (renderRollupNode) {\n      var rStart = r0;\n      var rEnd = r0 + rPerLevel;\n      var angle = Math.PI * 2;\n      virtualRoot.setLayout({\n        angle: angle,\n        startAngle: startAngle,\n        endAngle: startAngle + angle,\n        clockwise: clockwise,\n        cx: cx,\n        cy: cy,\n        r0: rStart,\n        r: rEnd\n      });\n    }\n\n    renderNode(treeRoot, startAngle);\n  });\n}\n/**\n * Init node children by order and update visual\n *\n * @param {TreeNode} node  root node\n * @param {boolean}  isAsc if is in ascendant order\n */\n\n\nfunction initChildren(node, isAsc) {\n  var children = node.children || [];\n  node.children = sort(children, isAsc); // Init children recursively\n\n  if (children.length) {\n    zrUtil.each(node.children, function (child) {\n      initChildren(child, isAsc);\n    });\n  }\n}\n/**\n * Sort children nodes\n *\n * @param {TreeNode[]}               children children of node to be sorted\n * @param {string | function | null} sort sort method\n *                                   See SunburstSeries.js for details.\n */\n\n\nfunction sort(children, sortOrder) {\n  if (typeof sortOrder === 'function') {\n    return children.sort(sortOrder);\n  } else {\n    var isAsc = sortOrder === 'asc';\n    return children.sort(function (a, b) {\n      var diff = (a.getValue() - b.getValue()) * (isAsc ? 1 : -1);\n      return diff === 0 ? (a.dataIndex - b.dataIndex) * (isAsc ? -1 : 1) : diff;\n    });\n  }\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisPointerModelHelper = require(\"./axisPointer/modelHelper\");\n\nvar axisTrigger = require(\"./axisPointer/axisTrigger\");\n\nrequire(\"./axisPointer/AxisPointerModel\");\n\nrequire(\"./axisPointer/AxisPointerView\");\n\nrequire(\"./axisPointer/CartesianAxisPointer\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// CartesianAxisPointer is not supposed to be required here. But consider\n// echarts.simple.js and online build tooltip, which only require gridSimple,\n// CartesianAxisPointer should be able to required somewhere.\necharts.registerPreprocessor(function (option) {\n  // Always has a global axisPointerModel for default setting.\n  if (option) {\n    (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});\n    var link = option.axisPointer.link; // Normalize to array to avoid object mergin. But if link\n    // is not set, remain null/undefined, otherwise it will\n    // override existent link setting.\n\n    if (link && !zrUtil.isArray(link)) {\n      option.axisPointer.link = [link];\n    }\n  }\n}); // This process should proformed after coordinate systems created\n// and series data processed. So put it on statistic processing stage.\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n  // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n  // allAxesInfo should be updated when setOption performed.\n  ecModel.getComponent('axisPointer').coordSysAxesInfo = axisPointerModelHelper.collect(ecModel, api);\n}); // Broadcast to all views.\n\necharts.registerAction({\n  type: 'updateAxisPointer',\n  event: 'updateAxisPointer',\n  update: ':updateAxisPointer'\n}, axisTrigger);","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/component/visualMap/VisualMapModel} visualMapModel\\\n * @param {module:echarts/ExtensionAPI} api\n * @param {Array.<number>} itemSize always [short, long]\n * @return {string} 'left' or 'right' or 'top' or 'bottom'\n */\nfunction getItemAlign(visualMapModel, api, itemSize) {\n  var modelOption = visualMapModel.option;\n  var itemAlign = modelOption.align;\n\n  if (itemAlign != null && itemAlign !== 'auto') {\n    return itemAlign;\n  } // Auto decision align.\n\n\n  var ecSize = {\n    width: api.getWidth(),\n    height: api.getHeight()\n  };\n  var realIndex = modelOption.orient === 'horizontal' ? 1 : 0;\n  var paramsSet = [['left', 'right', 'width'], ['top', 'bottom', 'height']];\n  var reals = paramsSet[realIndex];\n  var fakeValue = [0, null, 10];\n  var layoutInput = {};\n\n  for (var i = 0; i < 3; i++) {\n    layoutInput[paramsSet[1 - realIndex][i]] = fakeValue[i];\n    layoutInput[reals[i]] = i === 2 ? itemSize[0] : modelOption[reals[i]];\n  }\n\n  var rParam = [['x', 'width', 3], ['y', 'height', 0]][realIndex];\n  var rect = getLayoutRect(layoutInput, ecSize, modelOption.padding);\n  return reals[(rect.margin[rParam[2]] || 0) + rect[rParam[0]] + rect[rParam[1]] * 0.5 < ecSize[rParam[1]] * 0.5 ? 0 : 1];\n}\n/**\n * Prepare dataIndex for outside usage, where dataIndex means rawIndex, and\n * dataIndexInside means filtered index.\n */\n\n\nfunction convertDataIndex(batch) {\n  zrUtil.each(batch || [], function (batchItem) {\n    if (batch.dataIndex != null) {\n      batch.dataIndexInside = batch.dataIndex;\n      batch.dataIndex = null;\n    }\n  });\n  return batch;\n}\n\nexports.getItemAlign = getItemAlign;\nexports.convertDataIndex = convertDataIndex;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar _graphic = require(\"../../util/graphic\");\n\nvar Group = _graphic.Group;\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar SymbolClz = require(\"./Symbol\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Symbol with ripple effect\n * @module echarts/chart/helper/EffectSymbol\n */\nvar EFFECT_RIPPLE_NUMBER = 3;\n\nfunction normalizeSymbolSize(symbolSize) {\n  if (!zrUtil.isArray(symbolSize)) {\n    symbolSize = [+symbolSize, +symbolSize];\n  }\n\n  return symbolSize;\n}\n\nfunction updateRipplePath(rippleGroup, effectCfg) {\n  rippleGroup.eachChild(function (ripplePath) {\n    ripplePath.attr({\n      z: effectCfg.z,\n      zlevel: effectCfg.zlevel,\n      style: {\n        stroke: effectCfg.brushType === 'stroke' ? effectCfg.color : null,\n        fill: effectCfg.brushType === 'fill' ? effectCfg.color : null\n      }\n    });\n  });\n}\n/**\n * @constructor\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction EffectSymbol(data, idx) {\n  Group.call(this);\n  var symbol = new SymbolClz(data, idx);\n  var rippleGroup = new Group();\n  this.add(symbol);\n  this.add(rippleGroup);\n\n  rippleGroup.beforeUpdate = function () {\n    this.attr(symbol.getScale());\n  };\n\n  this.updateData(data, idx);\n}\n\nvar effectSymbolProto = EffectSymbol.prototype;\n\neffectSymbolProto.stopEffectAnimation = function () {\n  this.childAt(1).removeAll();\n};\n\neffectSymbolProto.startEffectAnimation = function (effectCfg) {\n  var symbolType = effectCfg.symbolType;\n  var color = effectCfg.color;\n  var rippleGroup = this.childAt(1);\n\n  for (var i = 0; i < EFFECT_RIPPLE_NUMBER; i++) {\n    // var ripplePath = createSymbol(\n    //     symbolType, -0.5, -0.5, 1, 1, color\n    // );\n    // If width/height are set too small (e.g., set to 1) on ios10\n    // and macOS Sierra, a circle stroke become a rect, no matter what\n    // the scale is set. So we set width/height as 2. See #4136.\n    var ripplePath = createSymbol(symbolType, -1, -1, 2, 2, color);\n    ripplePath.attr({\n      style: {\n        strokeNoScale: true\n      },\n      z2: 99,\n      silent: true,\n      scale: [0.5, 0.5]\n    });\n    var delay = -i / EFFECT_RIPPLE_NUMBER * effectCfg.period + effectCfg.effectOffset; // TODO Configurable effectCfg.period\n\n    ripplePath.animate('', true).when(effectCfg.period, {\n      scale: [effectCfg.rippleScale / 2, effectCfg.rippleScale / 2]\n    }).delay(delay).start();\n    ripplePath.animateStyle(true).when(effectCfg.period, {\n      opacity: 0\n    }).delay(delay).start();\n    rippleGroup.add(ripplePath);\n  }\n\n  updateRipplePath(rippleGroup, effectCfg);\n};\n/**\n * Update effect symbol\n */\n\n\neffectSymbolProto.updateEffectAnimation = function (effectCfg) {\n  var oldEffectCfg = this._effectCfg;\n  var rippleGroup = this.childAt(1); // Must reinitialize effect if following configuration changed\n\n  var DIFFICULT_PROPS = ['symbolType', 'period', 'rippleScale'];\n\n  for (var i = 0; i < DIFFICULT_PROPS.length; i++) {\n    var propName = DIFFICULT_PROPS[i];\n\n    if (oldEffectCfg[propName] !== effectCfg[propName]) {\n      this.stopEffectAnimation();\n      this.startEffectAnimation(effectCfg);\n      return;\n    }\n  }\n\n  updateRipplePath(rippleGroup, effectCfg);\n};\n/**\n * Highlight symbol\n */\n\n\neffectSymbolProto.highlight = function () {\n  this.trigger('emphasis');\n};\n/**\n * Downplay symbol\n */\n\n\neffectSymbolProto.downplay = function () {\n  this.trigger('normal');\n};\n/**\n * Update symbol properties\n * @param  {module:echarts/data/List} data\n * @param  {number} idx\n */\n\n\neffectSymbolProto.updateData = function (data, idx) {\n  var seriesModel = data.hostModel;\n  this.childAt(0).updateData(data, idx);\n  var rippleGroup = this.childAt(1);\n  var itemModel = data.getItemModel(idx);\n  var symbolType = data.getItemVisual(idx, 'symbol');\n  var symbolSize = normalizeSymbolSize(data.getItemVisual(idx, 'symbolSize'));\n  var color = data.getItemVisual(idx, 'color');\n  rippleGroup.attr('scale', symbolSize);\n  rippleGroup.traverse(function (ripplePath) {\n    ripplePath.attr({\n      fill: color\n    });\n  });\n  var symbolOffset = itemModel.getShallow('symbolOffset');\n\n  if (symbolOffset) {\n    var pos = rippleGroup.position;\n    pos[0] = parsePercent(symbolOffset[0], symbolSize[0]);\n    pos[1] = parsePercent(symbolOffset[1], symbolSize[1]);\n  }\n\n  rippleGroup.rotation = (itemModel.getShallow('symbolRotate') || 0) * Math.PI / 180 || 0;\n  var effectCfg = {};\n  effectCfg.showEffectOn = seriesModel.get('showEffectOn');\n  effectCfg.rippleScale = itemModel.get('rippleEffect.scale');\n  effectCfg.brushType = itemModel.get('rippleEffect.brushType');\n  effectCfg.period = itemModel.get('rippleEffect.period') * 1000;\n  effectCfg.effectOffset = idx / data.count();\n  effectCfg.z = itemModel.getShallow('z') || 0;\n  effectCfg.zlevel = itemModel.getShallow('zlevel') || 0;\n  effectCfg.symbolType = symbolType;\n  effectCfg.color = color;\n  this.off('mouseover').off('mouseout').off('emphasis').off('normal');\n\n  if (effectCfg.showEffectOn === 'render') {\n    this._effectCfg ? this.updateEffectAnimation(effectCfg) : this.startEffectAnimation(effectCfg);\n    this._effectCfg = effectCfg;\n  } else {\n    // Not keep old effect config\n    this._effectCfg = null;\n    this.stopEffectAnimation();\n    var symbol = this.childAt(0);\n\n    var onEmphasis = function () {\n      symbol.highlight();\n\n      if (effectCfg.showEffectOn !== 'render') {\n        this.startEffectAnimation(effectCfg);\n      }\n    };\n\n    var onNormal = function () {\n      symbol.downplay();\n\n      if (effectCfg.showEffectOn !== 'render') {\n        this.stopEffectAnimation();\n      }\n    };\n\n    this.on('mouseover', onEmphasis, this).on('mouseout', onNormal, this).on('emphasis', onEmphasis, this).on('normal', onNormal, this);\n  }\n\n  this._effectCfg = effectCfg;\n};\n\neffectSymbolProto.fadeOut = function (cb) {\n  this.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  cb && cb();\n};\n\nzrUtil.inherits(EffectSymbol, Group);\nvar _default = EffectSymbol;\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar IncrementalDisplayable = require(\"zrender/lib/graphic/IncrementalDisplayable\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO Batch by color\nvar BOOST_SIZE_THRESHOLD = 4;\nvar LargeSymbolPath = graphic.extendShape({\n  shape: {\n    points: null\n  },\n  symbolProxy: null,\n  buildPath: function (path, shape) {\n    var points = shape.points;\n    var size = shape.size;\n    var symbolProxy = this.symbolProxy;\n    var symbolProxyShape = symbolProxy.shape;\n    var ctx = path.getContext ? path.getContext() : path;\n    var canBoost = ctx && size[0] < BOOST_SIZE_THRESHOLD; // Do draw in afterBrush.\n\n    if (canBoost) {\n      return;\n    }\n\n    for (var i = 0; i < points.length;) {\n      var x = points[i++];\n      var y = points[i++];\n\n      if (isNaN(x) || isNaN(y)) {\n        continue;\n      }\n\n      symbolProxyShape.x = x - size[0] / 2;\n      symbolProxyShape.y = y - size[1] / 2;\n      symbolProxyShape.width = size[0];\n      symbolProxyShape.height = size[1];\n      symbolProxy.buildPath(path, symbolProxyShape, true);\n    }\n  },\n  afterBrush: function (ctx) {\n    var shape = this.shape;\n    var points = shape.points;\n    var size = shape.size;\n    var canBoost = size[0] < BOOST_SIZE_THRESHOLD;\n\n    if (!canBoost) {\n      return;\n    }\n\n    this.setTransform(ctx); // PENDING If style or other canvas status changed?\n\n    for (var i = 0; i < points.length;) {\n      var x = points[i++];\n      var y = points[i++];\n\n      if (isNaN(x) || isNaN(y)) {\n        continue;\n      } // fillRect is faster than building a rect path and draw.\n      // And it support light globalCompositeOperation.\n\n\n      ctx.fillRect(x - size[0] / 2, y - size[1] / 2, size[0], size[1]);\n    }\n\n    this.restoreTransform(ctx);\n  },\n  findDataIndex: function (x, y) {\n    // TODO ???\n    // Consider transform\n    var shape = this.shape;\n    var points = shape.points;\n    var size = shape.size;\n    var w = Math.max(size[0], 4);\n    var h = Math.max(size[1], 4); // Not consider transform\n    // Treat each element as a rect\n    // top down traverse\n\n    for (var idx = points.length / 2 - 1; idx >= 0; idx--) {\n      var i = idx * 2;\n      var x0 = points[i] - w / 2;\n      var y0 = points[i + 1] - h / 2;\n\n      if (x >= x0 && y >= y0 && x <= x0 + w && y <= y0 + h) {\n        return idx;\n      }\n    }\n\n    return -1;\n  }\n});\n\nfunction LargeSymbolDraw() {\n  this.group = new graphic.Group();\n}\n\nvar largeSymbolProto = LargeSymbolDraw.prototype;\n\nlargeSymbolProto.isPersistent = function () {\n  return !this._incremental;\n};\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n */\n\n\nlargeSymbolProto.updateData = function (data) {\n  this.group.removeAll();\n  var symbolEl = new LargeSymbolPath({\n    rectHover: true,\n    cursor: 'default'\n  });\n  symbolEl.setShape({\n    points: data.getLayout('symbolPoints')\n  });\n\n  this._setCommon(symbolEl, data);\n\n  this.group.add(symbolEl);\n  this._incremental = null;\n};\n\nlargeSymbolProto.updateLayout = function (data) {\n  if (this._incremental) {\n    return;\n  }\n\n  var points = data.getLayout('symbolPoints');\n  this.group.eachChild(function (child) {\n    if (child.startIndex != null) {\n      var len = (child.endIndex - child.startIndex) * 2;\n      var byteOffset = child.startIndex * 4 * 2;\n      points = new Float32Array(points.buffer, byteOffset, len);\n    }\n\n    child.setShape('points', points);\n  });\n};\n\nlargeSymbolProto.incrementalPrepareUpdate = function (data) {\n  this.group.removeAll();\n\n  this._clearIncremental(); // Only use incremental displayables when data amount is larger than 2 million.\n  // PENDING Incremental data?\n\n\n  if (data.count() > 2e6) {\n    if (!this._incremental) {\n      this._incremental = new IncrementalDisplayable({\n        silent: true\n      });\n    }\n\n    this.group.add(this._incremental);\n  } else {\n    this._incremental = null;\n  }\n};\n\nlargeSymbolProto.incrementalUpdate = function (taskParams, data) {\n  var symbolEl;\n\n  if (this._incremental) {\n    symbolEl = new LargeSymbolPath();\n\n    this._incremental.addDisplayable(symbolEl, true);\n  } else {\n    symbolEl = new LargeSymbolPath({\n      rectHover: true,\n      cursor: 'default',\n      startIndex: taskParams.start,\n      endIndex: taskParams.end\n    });\n    symbolEl.incremental = true;\n    this.group.add(symbolEl);\n  }\n\n  symbolEl.setShape({\n    points: data.getLayout('symbolPoints')\n  });\n\n  this._setCommon(symbolEl, data, !!this._incremental);\n};\n\nlargeSymbolProto._setCommon = function (symbolEl, data, isIncremental) {\n  var hostModel = data.hostModel; // TODO\n  // if (data.hasItemVisual.symbolSize) {\n  //     // TODO typed array?\n  //     symbolEl.setShape('sizes', data.mapArray(\n  //         function (idx) {\n  //             var size = data.getItemVisual(idx, 'symbolSize');\n  //             return (size instanceof Array) ? size : [size, size];\n  //         }\n  //     ));\n  // }\n  // else {\n\n  var size = data.getVisual('symbolSize');\n  symbolEl.setShape('size', size instanceof Array ? size : [size, size]); // }\n  // Create symbolProxy to build path for each data\n\n  symbolEl.symbolProxy = createSymbol(data.getVisual('symbol'), 0, 0, 0, 0); // Use symbolProxy setColor method\n\n  symbolEl.setColor = symbolEl.symbolProxy.setColor;\n  var extrudeShadow = symbolEl.shape.size[0] < BOOST_SIZE_THRESHOLD;\n  symbolEl.useStyle( // Draw shadow when doing fillRect is extremely slow.\n  hostModel.getModel('itemStyle').getItemStyle(extrudeShadow ? ['color', 'shadowBlur', 'shadowColor'] : ['color']));\n  var visualColor = data.getVisual('color');\n\n  if (visualColor) {\n    symbolEl.setColor(visualColor);\n  }\n\n  if (!isIncremental) {\n    // Enable tooltip\n    // PENDING May have performance issue when path is extremely large\n    symbolEl.seriesIndex = hostModel.seriesIndex;\n    symbolEl.on('mousemove', function (e) {\n      symbolEl.dataIndex = null;\n      var dataIndex = symbolEl.findDataIndex(e.offsetX, e.offsetY);\n\n      if (dataIndex >= 0) {\n        // Provide dataIndex for tooltip\n        symbolEl.dataIndex = dataIndex + (symbolEl.startIndex || 0);\n      }\n    });\n  }\n};\n\nlargeSymbolProto.remove = function () {\n  this._clearIncremental();\n\n  this._incremental = null;\n  this.group.removeAll();\n};\n\nlargeSymbolProto._clearIncremental = function () {\n  var incremental = this._incremental;\n\n  if (incremental) {\n    incremental.clearDisplaybles();\n  }\n};\n\nvar _default = LargeSymbolDraw;\nmodule.exports = _default;","var _traversalHelper = require(\"./traversalHelper\");\n\nvar eachAfter = _traversalHelper.eachAfter;\nvar eachBefore = _traversalHelper.eachBefore;\n\nvar _layoutHelper = require(\"./layoutHelper\");\n\nvar init = _layoutHelper.init;\nvar firstWalk = _layoutHelper.firstWalk;\nvar secondWalk = _layoutHelper.secondWalk;\nvar sep = _layoutHelper.separation;\nvar radialCoordinate = _layoutHelper.radialCoordinate;\nvar getViewRect = _layoutHelper.getViewRect;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('tree', function (seriesModel) {\n    commonLayout(seriesModel, api);\n  });\n}\n\nfunction commonLayout(seriesModel, api) {\n  var layoutInfo = getViewRect(seriesModel, api);\n  seriesModel.layoutInfo = layoutInfo;\n  var layout = seriesModel.get('layout');\n  var width = 0;\n  var height = 0;\n  var separation = null;\n\n  if (layout === 'radial') {\n    width = 2 * Math.PI;\n    height = Math.min(layoutInfo.height, layoutInfo.width) / 2;\n    separation = sep(function (node1, node2) {\n      return (node1.parentNode === node2.parentNode ? 1 : 2) / node1.depth;\n    });\n  } else {\n    width = layoutInfo.width;\n    height = layoutInfo.height;\n    separation = sep();\n  }\n\n  var virtualRoot = seriesModel.getData().tree.root;\n  var realRoot = virtualRoot.children[0];\n\n  if (realRoot) {\n    init(virtualRoot);\n    eachAfter(realRoot, firstWalk, separation);\n    virtualRoot.hierNode.modifier = -realRoot.hierNode.prelim;\n    eachBefore(realRoot, secondWalk);\n    var left = realRoot;\n    var right = realRoot;\n    var bottom = realRoot;\n    eachBefore(realRoot, function (node) {\n      var x = node.getLayout().x;\n\n      if (x < left.getLayout().x) {\n        left = node;\n      }\n\n      if (x > right.getLayout().x) {\n        right = node;\n      }\n\n      if (node.depth > bottom.depth) {\n        bottom = node;\n      }\n    });\n    var delta = left === right ? 1 : separation(left, right) / 2;\n    var tx = delta - left.getLayout().x;\n    var kx = 0;\n    var ky = 0;\n    var coorX = 0;\n    var coorY = 0;\n\n    if (layout === 'radial') {\n      kx = width / (right.getLayout().x + delta + tx); // here we use (node.depth - 1), bucause the real root's depth is 1\n\n      ky = height / (bottom.depth - 1 || 1);\n      eachBefore(realRoot, function (node) {\n        coorX = (node.getLayout().x + tx) * kx;\n        coorY = (node.depth - 1) * ky;\n        var finalCoor = radialCoordinate(coorX, coorY);\n        node.setLayout({\n          x: finalCoor.x,\n          y: finalCoor.y,\n          rawX: coorX,\n          rawY: coorY\n        }, true);\n      });\n    } else {\n      var orient = seriesModel.getOrient();\n\n      if (orient === 'RL' || orient === 'LR') {\n        ky = height / (right.getLayout().x + delta + tx);\n        kx = width / (bottom.depth - 1 || 1);\n        eachBefore(realRoot, function (node) {\n          coorY = (node.getLayout().x + tx) * ky;\n          coorX = orient === 'LR' ? (node.depth - 1) * kx : width - (node.depth - 1) * kx;\n          node.setLayout({\n            x: coorX,\n            y: coorY\n          }, true);\n        });\n      } else if (orient === 'TB' || orient === 'BT') {\n        kx = width / (right.getLayout().x + delta + tx);\n        ky = height / (bottom.depth - 1 || 1);\n        eachBefore(realRoot, function (node) {\n          coorX = (node.getLayout().x + tx) * kx;\n          coorY = orient === 'TB' ? (node.depth - 1) * ky : height - (node.depth - 1) * ky;\n          node.setLayout({\n            x: coorX,\n            y: coorY\n          }, true);\n        });\n      }\n    }\n  }\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar ComponentModel = require(\"./Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\nvar each = zrUtil.each;\nvar clone = zrUtil.clone;\nvar map = zrUtil.map;\nvar merge = zrUtil.merge;\nvar QUERY_REG = /^(min|max)?(.+)$/;\n/**\n * TERM EXPLANATIONS:\n *\n * [option]:\n *\n *     An object that contains definitions of components. For example:\n *     var option = {\n *         title: {...},\n *         legend: {...},\n *         visualMap: {...},\n *         series: [\n *             {data: [...]},\n *             {data: [...]},\n *             ...\n *         ]\n *     };\n *\n * [rawOption]:\n *\n *     An object input to echarts.setOption. 'rawOption' may be an\n *     'option', or may be an object contains multi-options. For example:\n *     var option = {\n *         baseOption: {\n *             title: {...},\n *             legend: {...},\n *             series: [\n *                 {data: [...]},\n *                 {data: [...]},\n *                 ...\n *             ]\n *         },\n *         timeline: {...},\n *         options: [\n *             {title: {...}, series: {data: [...]}},\n *             {title: {...}, series: {data: [...]}},\n *             ...\n *         ],\n *         media: [\n *             {\n *                 query: {maxWidth: 320},\n *                 option: {series: {x: 20}, visualMap: {show: false}}\n *             },\n *             {\n *                 query: {minWidth: 320, maxWidth: 720},\n *                 option: {series: {x: 500}, visualMap: {show: true}}\n *             },\n *             {\n *                 option: {series: {x: 1200}, visualMap: {show: true}}\n *             }\n *         ]\n *     };\n *\n * @alias module:echarts/model/OptionManager\n * @param {module:echarts/ExtensionAPI} api\n */\n\nfunction OptionManager(api) {\n  /**\n   * @private\n   * @type {module:echarts/ExtensionAPI}\n   */\n  this._api = api;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._timelineOptions = [];\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n\n  this._mediaList = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._mediaDefault;\n  /**\n   * -1, means default.\n   * empty means no media.\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._currentMediaIndices = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._optionBackup;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._newBaseOption;\n} // timeline.notMerge is not supported in ec3. Firstly there is rearly\n// case that notMerge is needed. Secondly supporting 'notMerge' requires\n// rawOption cloned and backuped when timeline changed, which does no\n// good to performance. What's more, that both timeline and setOption\n// method supply 'notMerge' brings complex and some problems.\n// Consider this case:\n// (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n// (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n\nOptionManager.prototype = {\n  constructor: OptionManager,\n\n  /**\n   * @public\n   * @param {Object} rawOption Raw option.\n   * @param {module:echarts/model/Global} ecModel\n   * @param {Array.<Function>} optionPreprocessorFuncs\n   * @return {Object} Init option\n   */\n  setOption: function (rawOption, optionPreprocessorFuncs) {\n    if (rawOption) {\n      // That set dat primitive is dangerous if user reuse the data when setOption again.\n      zrUtil.each(modelUtil.normalizeToArray(rawOption.series), function (series) {\n        series && series.data && zrUtil.isTypedArray(series.data) && zrUtil.setAsPrimitive(series.data);\n      });\n    } // Caution: some series modify option data, if do not clone,\n    // it should ensure that the repeat modify correctly\n    // (create a new object when modify itself).\n\n\n    rawOption = clone(rawOption, true); // FIXME\n    // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n    var oldOptionBackup = this._optionBackup;\n    var newParsedOption = parseRawOption.call(this, rawOption, optionPreprocessorFuncs, !oldOptionBackup);\n    this._newBaseOption = newParsedOption.baseOption; // For setOption at second time (using merge mode);\n\n    if (oldOptionBackup) {\n      // Only baseOption can be merged.\n      mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption); // For simplicity, timeline options and media options do not support merge,\n      // that is, if you `setOption` twice and both has timeline options, the latter\n      // timeline opitons will not be merged to the formers, but just substitude them.\n\n      if (newParsedOption.timelineOptions.length) {\n        oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n      }\n\n      if (newParsedOption.mediaList.length) {\n        oldOptionBackup.mediaList = newParsedOption.mediaList;\n      }\n\n      if (newParsedOption.mediaDefault) {\n        oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n      }\n    } else {\n      this._optionBackup = newParsedOption;\n    }\n  },\n\n  /**\n   * @param {boolean} isRecreate\n   * @return {Object}\n   */\n  mountOption: function (isRecreate) {\n    var optionBackup = this._optionBackup; // TODO\n    // 如果没有reset功能则不clone。\n\n    this._timelineOptions = map(optionBackup.timelineOptions, clone);\n    this._mediaList = map(optionBackup.mediaList, clone);\n    this._mediaDefault = clone(optionBackup.mediaDefault);\n    this._currentMediaIndices = [];\n    return clone(isRecreate // this._optionBackup.baseOption, which is created at the first `setOption`\n    // called, and is merged into every new option by inner method `mergeOption`\n    // each time `setOption` called, can be only used in `isRecreate`, because\n    // its reliability is under suspicion. In other cases option merge is\n    // performed by `model.mergeOption`.\n    ? optionBackup.baseOption : this._newBaseOption);\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Object}\n   */\n  getTimelineOption: function (ecModel) {\n    var option;\n    var timelineOptions = this._timelineOptions;\n\n    if (timelineOptions.length) {\n      // getTimelineOption can only be called after ecModel inited,\n      // so we can get currentIndex from timelineModel.\n      var timelineModel = ecModel.getComponent('timeline');\n\n      if (timelineModel) {\n        option = clone(timelineOptions[timelineModel.getCurrentIndex()], true);\n      }\n    }\n\n    return option;\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Array.<Object>}\n   */\n  getMediaOption: function (ecModel) {\n    var ecWidth = this._api.getWidth();\n\n    var ecHeight = this._api.getHeight();\n\n    var mediaList = this._mediaList;\n    var mediaDefault = this._mediaDefault;\n    var indices = [];\n    var result = []; // No media defined.\n\n    if (!mediaList.length && !mediaDefault) {\n      return result;\n    } // Multi media may be applied, the latter defined media has higher priority.\n\n\n    for (var i = 0, len = mediaList.length; i < len; i++) {\n      if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n        indices.push(i);\n      }\n    } // FIXME\n    // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n\n\n    if (!indices.length && mediaDefault) {\n      indices = [-1];\n    }\n\n    if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n      result = map(indices, function (index) {\n        return clone(index === -1 ? mediaDefault.option : mediaList[index].option);\n      });\n    } // Otherwise return nothing.\n\n\n    this._currentMediaIndices = indices;\n    return result;\n  }\n};\n\nfunction parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n  var timelineOptions = [];\n  var mediaList = [];\n  var mediaDefault;\n  var baseOption; // Compatible with ec2.\n\n  var timelineOpt = rawOption.timeline;\n\n  if (rawOption.baseOption) {\n    baseOption = rawOption.baseOption;\n  } // For timeline\n\n\n  if (timelineOpt || rawOption.options) {\n    baseOption = baseOption || {};\n    timelineOptions = (rawOption.options || []).slice();\n  } // For media query\n\n\n  if (rawOption.media) {\n    baseOption = baseOption || {};\n    var media = rawOption.media;\n    each(media, function (singleMedia) {\n      if (singleMedia && singleMedia.option) {\n        if (singleMedia.query) {\n          mediaList.push(singleMedia);\n        } else if (!mediaDefault) {\n          // Use the first media default.\n          mediaDefault = singleMedia;\n        }\n      }\n    });\n  } // For normal option\n\n\n  if (!baseOption) {\n    baseOption = rawOption;\n  } // Set timelineOpt to baseOption in ec3,\n  // which is convenient for merge option.\n\n\n  if (!baseOption.timeline) {\n    baseOption.timeline = timelineOpt;\n  } // Preprocess.\n\n\n  each([baseOption].concat(timelineOptions).concat(zrUtil.map(mediaList, function (media) {\n    return media.option;\n  })), function (option) {\n    each(optionPreprocessorFuncs, function (preProcess) {\n      preProcess(option, isNew);\n    });\n  });\n  return {\n    baseOption: baseOption,\n    timelineOptions: timelineOptions,\n    mediaDefault: mediaDefault,\n    mediaList: mediaList\n  };\n}\n/**\n * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n * Support: width, height, aspectRatio\n * Can use max or min as prefix.\n */\n\n\nfunction applyMediaQuery(query, ecWidth, ecHeight) {\n  var realMap = {\n    width: ecWidth,\n    height: ecHeight,\n    aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n\n  };\n  var applicatable = true;\n  zrUtil.each(query, function (value, attr) {\n    var matched = attr.match(QUERY_REG);\n\n    if (!matched || !matched[1] || !matched[2]) {\n      return;\n    }\n\n    var operator = matched[1];\n    var realAttr = matched[2].toLowerCase();\n\n    if (!compare(realMap[realAttr], value, operator)) {\n      applicatable = false;\n    }\n  });\n  return applicatable;\n}\n\nfunction compare(real, expect, operator) {\n  if (operator === 'min') {\n    return real >= expect;\n  } else if (operator === 'max') {\n    return real <= expect;\n  } else {\n    // Equals\n    return real === expect;\n  }\n}\n\nfunction indicesEquals(indices1, indices2) {\n  // indices is always order by asc and has only finite number.\n  return indices1.join(',') === indices2.join(',');\n}\n/**\n * Consider case:\n * `chart.setOption(opt1);`\n * Then user do some interaction like dataZoom, dataView changing.\n * `chart.setOption(opt2);`\n * Then user press 'reset button' in toolbox.\n *\n * After doing that all of the interaction effects should be reset, the\n * chart should be the same as the result of invoke\n * `chart.setOption(opt1); chart.setOption(opt2);`.\n *\n * Although it is not able ensure that\n * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n * `chart.setOption(merge(opt1, opt2));` exactly,\n * this might be the only simple way to implement that feature.\n *\n * MEMO: We've considered some other approaches:\n * 1. Each model handle its self restoration but not uniform treatment.\n *     (Too complex in logic and error-prone)\n * 2. Use a shadow ecModel. (Performace expensive)\n */\n\n\nfunction mergeOption(oldOption, newOption) {\n  newOption = newOption || {};\n  each(newOption, function (newCptOpt, mainType) {\n    if (newCptOpt == null) {\n      return;\n    }\n\n    var oldCptOpt = oldOption[mainType];\n\n    if (!ComponentModel.hasClass(mainType)) {\n      oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n    } else {\n      newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n      oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n      var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n      oldOption[mainType] = map(mapResult, function (item) {\n        return item.option && item.exist ? merge(item.exist, item.option, true) : item.exist || item.option;\n      });\n    }\n  });\n}\n\nvar _default = OptionManager;\nmodule.exports = _default;","var Path = require(\"../Path\");\n\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\nvar _default = Path.extend({\n  type: 'line',\n  shape: {\n    // Start point\n    x1: 0,\n    y1: 0,\n    // End point\n    x2: 0,\n    y2: 0,\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (percent < 1) {\n      x2 = x1 * (1 - percent) + x2 * percent;\n      y2 = y1 * (1 - percent) + y2 * percent;\n    }\n\n    ctx.lineTo(x2, y2);\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} percent\n   * @return {Array.<number>}\n   */\n  pointAt: function (p) {\n    var shape = this.shape;\n    return [shape.x1 * (1 - p) + shape.x2 * p, shape.y1 * (1 - p) + shape.y2 * p];\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\nfunction dimAxisMapper(dim) {\n  return this._axes[dim];\n}\n/**\n * @alias module:echarts/coord/Cartesian\n * @constructor\n */\n\n\nvar Cartesian = function (name) {\n  this._axes = {};\n  this._dimList = [];\n  /**\n   * @type {string}\n   */\n\n  this.name = name || '';\n};\n\nCartesian.prototype = {\n  constructor: Cartesian,\n  type: 'cartesian',\n\n  /**\n   * Get axis\n   * @param  {number|string} dim\n   * @return {module:echarts/coord/Cartesian~Axis}\n   */\n  getAxis: function (dim) {\n    return this._axes[dim];\n  },\n\n  /**\n   * Get axes list\n   * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n   */\n  getAxes: function () {\n    return zrUtil.map(this._dimList, dimAxisMapper, this);\n  },\n\n  /**\n   * Get axes list by given scale type\n   */\n  getAxesByScale: function (scaleType) {\n    scaleType = scaleType.toLowerCase();\n    return zrUtil.filter(this.getAxes(), function (axis) {\n      return axis.scale.type === scaleType;\n    });\n  },\n\n  /**\n   * Add axis\n   * @param {module:echarts/coord/Cartesian.Axis}\n   */\n  addAxis: function (axis) {\n    var dim = axis.dim;\n    this._axes[dim] = axis;\n\n    this._dimList.push(dim);\n  },\n\n  /**\n   * Convert data to coord in nd space\n   * @param {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  dataToCoord: function (val) {\n    return this._dataCoordConvert(val, 'dataToCoord');\n  },\n\n  /**\n   * Convert coord in nd space to data\n   * @param  {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  coordToData: function (val) {\n    return this._dataCoordConvert(val, 'coordToData');\n  },\n  _dataCoordConvert: function (input, method) {\n    var dimList = this._dimList;\n    var output = input instanceof Array ? [] : {};\n\n    for (var i = 0; i < dimList.length; i++) {\n      var dim = dimList[i];\n      var axis = this._axes[dim];\n      output[dim] = axis[method](input[dim]);\n    }\n\n    return output;\n  }\n};\nvar _default = Cartesian;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar helper = require(\"./helper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar asc = numberUtil.asc;\n/**\n * Operate single axis.\n * One axis can only operated by one axis operator.\n * Different dataZoomModels may be defined to operate the same axis.\n * (i.e. 'inside' data zoom and 'slider' data zoom components)\n * So dataZoomModels share one axisProxy in that case.\n *\n * @class\n */\n\nvar AxisProxy = function (dimName, axisIndex, dataZoomModel, ecModel) {\n  /**\n   * @private\n   * @type {string}\n   */\n  this._dimName = dimName;\n  /**\n   * @private\n   */\n\n  this._axisIndex = axisIndex;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._valueWindow;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._percentWindow;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._dataExtent;\n  /**\n   * {minSpan, maxSpan, minValueSpan, maxValueSpan}\n   * @private\n   * @type {Object}\n   */\n\n  this._minMaxSpan;\n  /**\n   * @readOnly\n   * @type {module: echarts/model/Global}\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @private\n   * @type {module: echarts/component/dataZoom/DataZoomModel}\n   */\n\n  this._dataZoomModel = dataZoomModel; // /**\n  //  * @readOnly\n  //  * @private\n  //  */\n  // this.hasSeriesStacked;\n};\n\nAxisProxy.prototype = {\n  constructor: AxisProxy,\n\n  /**\n   * Whether the axisProxy is hosted by dataZoomModel.\n   *\n   * @public\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   * @return {boolean}\n   */\n  hostedBy: function (dataZoomModel) {\n    return this._dataZoomModel === dataZoomModel;\n  },\n\n  /**\n   * @return {Array.<number>} Value can only be NaN or finite value.\n   */\n  getDataValueWindow: function () {\n    return this._valueWindow.slice();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getDataPercentWindow: function () {\n    return this._percentWindow.slice();\n  },\n\n  /**\n   * @public\n   * @param {number} axisIndex\n   * @return {Array} seriesModels\n   */\n  getTargetSeriesModels: function () {\n    var seriesModels = [];\n    var ecModel = this.ecModel;\n    ecModel.eachSeries(function (seriesModel) {\n      if (helper.isCoordSupported(seriesModel.get('coordinateSystem'))) {\n        var dimName = this._dimName;\n        var axisModel = ecModel.queryComponents({\n          mainType: dimName + 'Axis',\n          index: seriesModel.get(dimName + 'AxisIndex'),\n          id: seriesModel.get(dimName + 'AxisId')\n        })[0];\n\n        if (this._axisIndex === (axisModel && axisModel.componentIndex)) {\n          seriesModels.push(seriesModel);\n        }\n      }\n    }, this);\n    return seriesModels;\n  },\n  getAxisModel: function () {\n    return this.ecModel.getComponent(this._dimName + 'Axis', this._axisIndex);\n  },\n  getOtherAxisModel: function () {\n    var axisDim = this._dimName;\n    var ecModel = this.ecModel;\n    var axisModel = this.getAxisModel();\n    var isCartesian = axisDim === 'x' || axisDim === 'y';\n    var otherAxisDim;\n    var coordSysIndexName;\n\n    if (isCartesian) {\n      coordSysIndexName = 'gridIndex';\n      otherAxisDim = axisDim === 'x' ? 'y' : 'x';\n    } else {\n      coordSysIndexName = 'polarIndex';\n      otherAxisDim = axisDim === 'angle' ? 'radius' : 'angle';\n    }\n\n    var foundOtherAxisModel;\n    ecModel.eachComponent(otherAxisDim + 'Axis', function (otherAxisModel) {\n      if ((otherAxisModel.get(coordSysIndexName) || 0) === (axisModel.get(coordSysIndexName) || 0)) {\n        foundOtherAxisModel = otherAxisModel;\n      }\n    });\n    return foundOtherAxisModel;\n  },\n  getMinMaxSpan: function () {\n    return zrUtil.clone(this._minMaxSpan);\n  },\n\n  /**\n   * Only calculate by given range and this._dataExtent, do not change anything.\n   *\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   */\n  calculateDataWindow: function (opt) {\n    var dataExtent = this._dataExtent;\n    var axisModel = this.getAxisModel();\n    var scale = axisModel.axis.scale;\n\n    var rangePropMode = this._dataZoomModel.getRangePropMode();\n\n    var percentExtent = [0, 100];\n    var percentWindow = [opt.start, opt.end];\n    var valueWindow = [];\n    each(['startValue', 'endValue'], function (prop) {\n      valueWindow.push(opt[prop] != null ? scale.parse(opt[prop]) : null);\n    }); // Normalize bound.\n\n    each([0, 1], function (idx) {\n      var boundValue = valueWindow[idx];\n      var boundPercent = percentWindow[idx]; // Notice: dataZoom is based either on `percentProp` ('start', 'end') or\n      // on `valueProp` ('startValue', 'endValue'). The former one is suitable\n      // for cases that a dataZoom component controls multiple axes with different\n      // unit or extent, and the latter one is suitable for accurate zoom by pixel\n      // (e.g., in dataZoomSelect). `valueProp` can be calculated from `percentProp`,\n      // but it is awkward that `percentProp` can not be obtained from `valueProp`\n      // accurately (because all of values that are overflow the `dataExtent` will\n      // be calculated to percent '100%'). So we have to use\n      // `dataZoom.getRangePropMode()` to mark which prop is used.\n      // `rangePropMode` is updated only when setOption or dispatchAction, otherwise\n      // it remains its original value.\n\n      if (rangePropMode[idx] === 'percent') {\n        if (boundPercent == null) {\n          boundPercent = percentExtent[idx];\n        } // Use scale.parse to math round for category or time axis.\n\n\n        boundValue = scale.parse(numberUtil.linearMap(boundPercent, percentExtent, dataExtent, true));\n      } else {\n        // Calculating `percent` from `value` may be not accurate, because\n        // This calculation can not be inversed, because all of values that\n        // are overflow the `dataExtent` will be calculated to percent '100%'\n        boundPercent = numberUtil.linearMap(boundValue, dataExtent, percentExtent, true);\n      } // valueWindow[idx] = round(boundValue);\n      // percentWindow[idx] = round(boundPercent);\n\n\n      valueWindow[idx] = boundValue;\n      percentWindow[idx] = boundPercent;\n    });\n    return {\n      valueWindow: asc(valueWindow),\n      percentWindow: asc(percentWindow)\n    };\n  },\n\n  /**\n   * Notice: reset should not be called before series.restoreData() called,\n   * so it is recommanded to be called in \"process stage\" but not \"model init\n   * stage\".\n   *\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  reset: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    var targetSeries = this.getTargetSeriesModels(); // Culculate data window and data extent, and record them.\n\n    this._dataExtent = calculateDataExtent(this, this._dimName, targetSeries); // this.hasSeriesStacked = false;\n    // each(targetSeries, function (series) {\n    // var data = series.getData();\n    // var dataDim = data.mapDimension(this._dimName);\n    // var stackedDimension = data.getCalculationInfo('stackedDimension');\n    // if (stackedDimension && stackedDimension === dataDim) {\n    // this.hasSeriesStacked = true;\n    // }\n    // }, this);\n\n    var dataWindow = this.calculateDataWindow(dataZoomModel.option);\n    this._valueWindow = dataWindow.valueWindow;\n    this._percentWindow = dataWindow.percentWindow;\n    setMinMaxSpan(this); // Update axis setting then.\n\n    setAxisModel(this);\n  },\n\n  /**\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  restore: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    this._valueWindow = this._percentWindow = null;\n    setAxisModel(this, true);\n  },\n\n  /**\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  filterData: function (dataZoomModel, api) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    var axisDim = this._dimName;\n    var seriesModels = this.getTargetSeriesModels();\n    var filterMode = dataZoomModel.get('filterMode');\n    var valueWindow = this._valueWindow;\n\n    if (filterMode === 'none') {\n      return;\n    } // FIXME\n    // Toolbox may has dataZoom injected. And if there are stacked bar chart\n    // with NaN data, NaN will be filtered and stack will be wrong.\n    // So we need to force the mode to be set empty.\n    // In fect, it is not a big deal that do not support filterMode-'filter'\n    // when using toolbox#dataZoom, utill tooltip#dataZoom support \"single axis\n    // selection\" some day, which might need \"adapt to data extent on the\n    // otherAxis\", which is disabled by filterMode-'empty'.\n    // But currently, stack has been fixed to based on value but not index,\n    // so this is not an issue any more.\n    // var otherAxisModel = this.getOtherAxisModel();\n    // if (dataZoomModel.get('$fromToolbox')\n    //     && otherAxisModel\n    //     && otherAxisModel.hasSeriesStacked\n    // ) {\n    //     filterMode = 'empty';\n    // }\n    // TODO\n    // filterMode 'weakFilter' and 'empty' is not optimized for huge data yet.\n    // Process series data\n\n\n    each(seriesModels, function (seriesModel) {\n      var seriesData = seriesModel.getData();\n      var dataDims = seriesData.mapDimension(axisDim, true);\n\n      if (filterMode === 'weakFilter') {\n        seriesData.filterSelf(function (dataIndex) {\n          var leftOut;\n          var rightOut;\n          var hasValue;\n\n          for (var i = 0; i < dataDims.length; i++) {\n            var value = seriesData.get(dataDims[i], dataIndex);\n            var thisHasValue = !isNaN(value);\n            var thisLeftOut = value < valueWindow[0];\n            var thisRightOut = value > valueWindow[1];\n\n            if (thisHasValue && !thisLeftOut && !thisRightOut) {\n              return true;\n            }\n\n            thisHasValue && (hasValue = true);\n            thisLeftOut && (leftOut = true);\n            thisRightOut && (rightOut = true);\n          } // If both left out and right out, do not filter.\n\n\n          return hasValue && leftOut && rightOut;\n        });\n      } else {\n        each(dataDims, function (dim) {\n          if (filterMode === 'empty') {\n            seriesModel.setData(seriesData.map(dim, function (value) {\n              return !isInWindow(value) ? NaN : value;\n            }));\n          } else {\n            var range = {};\n            range[dim] = valueWindow; // console.time('select');\n\n            seriesData.selectRange(range); // console.timeEnd('select');\n          }\n        });\n      }\n\n      each(dataDims, function (dim) {\n        seriesData.setApproximateExtent(valueWindow, dim);\n      });\n    });\n\n    function isInWindow(value) {\n      return value >= valueWindow[0] && value <= valueWindow[1];\n    }\n  }\n};\n\nfunction calculateDataExtent(axisProxy, axisDim, seriesModels) {\n  var dataExtent = [Infinity, -Infinity];\n  each(seriesModels, function (seriesModel) {\n    var seriesData = seriesModel.getData();\n\n    if (seriesData) {\n      each(seriesData.mapDimension(axisDim, true), function (dim) {\n        var seriesExtent = seriesData.getApproximateExtent(dim);\n        seriesExtent[0] < dataExtent[0] && (dataExtent[0] = seriesExtent[0]);\n        seriesExtent[1] > dataExtent[1] && (dataExtent[1] = seriesExtent[1]);\n      });\n    }\n  });\n\n  if (dataExtent[1] < dataExtent[0]) {\n    dataExtent = [NaN, NaN];\n  } // It is important to get \"consistent\" extent when more then one axes is\n  // controlled by a `dataZoom`, otherwise those axes will not be synchronized\n  // when zooming. But it is difficult to know what is \"consistent\", considering\n  // axes have different type or even different meanings (For example, two\n  // time axes are used to compare data of the same date in different years).\n  // So basically dataZoom just obtains extent by series.data (in category axis\n  // extent can be obtained from axis.data).\n  // Nevertheless, user can set min/max/scale on axes to make extent of axes\n  // consistent.\n\n\n  fixExtentByAxis(axisProxy, dataExtent);\n  return dataExtent;\n}\n\nfunction fixExtentByAxis(axisProxy, dataExtent) {\n  var axisModel = axisProxy.getAxisModel();\n  var min = axisModel.getMin(true); // For category axis, if min/max/scale are not set, extent is determined\n  // by axis.data by default.\n\n  var isCategoryAxis = axisModel.get('type') === 'category';\n  var axisDataLen = isCategoryAxis && axisModel.getCategories().length;\n\n  if (min != null && min !== 'dataMin' && typeof min !== 'function') {\n    dataExtent[0] = min;\n  } else if (isCategoryAxis) {\n    dataExtent[0] = axisDataLen > 0 ? 0 : NaN;\n  }\n\n  var max = axisModel.getMax(true);\n\n  if (max != null && max !== 'dataMax' && typeof max !== 'function') {\n    dataExtent[1] = max;\n  } else if (isCategoryAxis) {\n    dataExtent[1] = axisDataLen > 0 ? axisDataLen - 1 : NaN;\n  }\n\n  if (!axisModel.get('scale', true)) {\n    dataExtent[0] > 0 && (dataExtent[0] = 0);\n    dataExtent[1] < 0 && (dataExtent[1] = 0);\n  } // For value axis, if min/max/scale are not set, we just use the extent obtained\n  // by series data, which may be a little different from the extent calculated by\n  // `axisHelper.getScaleExtent`. But the different just affects the experience a\n  // little when zooming. So it will not be fixed until some users require it strongly.\n\n\n  return dataExtent;\n}\n\nfunction setAxisModel(axisProxy, isRestore) {\n  var axisModel = axisProxy.getAxisModel();\n  var percentWindow = axisProxy._percentWindow;\n  var valueWindow = axisProxy._valueWindow;\n\n  if (!percentWindow) {\n    return;\n  } // [0, 500]: arbitrary value, guess axis extent.\n\n\n  var precision = numberUtil.getPixelPrecision(valueWindow, [0, 500]);\n  precision = Math.min(precision, 20); // isRestore or isFull\n\n  var useOrigin = isRestore || percentWindow[0] === 0 && percentWindow[1] === 100;\n  axisModel.setRange(useOrigin ? null : +valueWindow[0].toFixed(precision), useOrigin ? null : +valueWindow[1].toFixed(precision));\n}\n\nfunction setMinMaxSpan(axisProxy) {\n  var minMaxSpan = axisProxy._minMaxSpan = {};\n  var dataZoomModel = axisProxy._dataZoomModel;\n  each(['min', 'max'], function (minMax) {\n    minMaxSpan[minMax + 'Span'] = dataZoomModel.get(minMax + 'Span'); // minValueSpan and maxValueSpan has higher priority than minSpan and maxSpan\n\n    var valueSpan = dataZoomModel.get(minMax + 'ValueSpan');\n\n    if (valueSpan != null) {\n      minMaxSpan[minMax + 'ValueSpan'] = valueSpan;\n      valueSpan = axisProxy.getAxisModel().axis.scale.parse(valueSpan);\n\n      if (valueSpan != null) {\n        var dataExtent = axisProxy._dataExtent;\n        minMaxSpan[minMax + 'Span'] = numberUtil.linearMap(dataExtent[0] + valueSpan, dataExtent, [0, 100], true);\n      }\n    }\n  });\n}\n\nvar _default = AxisProxy;\nmodule.exports = _default;","var _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @return {string} If large mode changed, return string 'reset';\n */\nfunction _default() {\n  var inner = makeInner();\n  return function (seriesModel) {\n    var fields = inner(seriesModel);\n    var pipelineContext = seriesModel.pipelineContext;\n    var originalLarge = fields.large;\n    var originalProgressive = fields.progressiveRender;\n    var large = fields.large = pipelineContext.large;\n    var progressive = fields.progressiveRender = pipelineContext.progressiveRender;\n    return !!(originalLarge ^ large || originalProgressive ^ progressive) && 'reset';\n  };\n}\n\nmodule.exports = _default;","require(\"./gridSimple\");\n\nrequire(\"./axisPointer/CartesianAxisPointer\");\n\nrequire(\"./axisPointer\");","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar curry = zrUtil.curry; // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n// allAxesInfo should be updated when setOption performed.\n\nfunction collect(ecModel, api) {\n  var result = {\n    /**\n     * key: makeKey(axis.model)\n     * value: {\n     *      axis,\n     *      coordSys,\n     *      axisPointerModel,\n     *      triggerTooltip,\n     *      involveSeries,\n     *      snap,\n     *      seriesModels,\n     *      seriesDataCount\n     * }\n     */\n    axesInfo: {},\n    seriesInvolved: false,\n\n    /**\n     * key: makeKey(coordSys.model)\n     * value: Object: key makeKey(axis.model), value: axisInfo\n     */\n    coordSysAxesInfo: {},\n    coordSysMap: {}\n  };\n  collectAxesInfo(result, ecModel, api); // Check seriesInvolved for performance, in case too many series in some chart.\n\n  result.seriesInvolved && collectSeriesInfo(result, ecModel);\n  return result;\n}\n\nfunction collectAxesInfo(result, ecModel, api) {\n  var globalTooltipModel = ecModel.getComponent('tooltip');\n  var globalAxisPointerModel = ecModel.getComponent('axisPointer'); // links can only be set on global.\n\n  var linksOption = globalAxisPointerModel.get('link', true) || [];\n  var linkGroups = []; // Collect axes info.\n\n  each(api.getCoordinateSystems(), function (coordSys) {\n    // Some coordinate system do not support axes, like geo.\n    if (!coordSys.axisPointerEnabled) {\n      return;\n    }\n\n    var coordSysKey = makeKey(coordSys.model);\n    var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n    result.coordSysMap[coordSysKey] = coordSys; // Set tooltip (like 'cross') is a convienent way to show axisPointer\n    // for user. So we enable seting tooltip on coordSys model.\n\n    var coordSysModel = coordSys.model;\n    var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n    each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null)); // If axis tooltip used, choose tooltip axis for each coordSys.\n    // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n\n    if (coordSys.getTooltipAxes && globalTooltipModel // If tooltip.showContent is set as false, tooltip will not\n    // show but axisPointer will show as normal.\n    && baseTooltipModel.get('show')) {\n      // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n      // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n      var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n      var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n      var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n\n      if (triggerAxis || cross) {\n        each(tooltipAxes.baseAxes, curry(saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis));\n      }\n\n      if (cross) {\n        each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n      }\n    } // fromTooltip: true | false | 'cross'\n    // triggerTooltip: true | false | null\n\n\n    function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n      var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n      var axisPointerShow = axisPointerModel.get('show');\n\n      if (!axisPointerShow || axisPointerShow === 'auto' && !fromTooltip && !isHandleTrigger(axisPointerModel)) {\n        return;\n      }\n\n      if (triggerTooltip == null) {\n        triggerTooltip = axisPointerModel.get('triggerTooltip');\n      }\n\n      axisPointerModel = fromTooltip ? makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) : axisPointerModel;\n      var snap = axisPointerModel.get('snap');\n      var key = makeKey(axis.model);\n      var involveSeries = triggerTooltip || snap || axis.type === 'category'; // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n\n      var axisInfo = result.axesInfo[key] = {\n        key: key,\n        axis: axis,\n        coordSys: coordSys,\n        axisPointerModel: axisPointerModel,\n        triggerTooltip: triggerTooltip,\n        involveSeries: involveSeries,\n        snap: snap,\n        useHandle: isHandleTrigger(axisPointerModel),\n        seriesModels: []\n      };\n      axesInfoInCoordSys[key] = axisInfo;\n      result.seriesInvolved |= involveSeries;\n      var groupIndex = getLinkGroupIndex(linksOption, axis);\n\n      if (groupIndex != null) {\n        var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {\n          axesInfo: {}\n        });\n        linkGroup.axesInfo[key] = axisInfo;\n        linkGroup.mapper = linksOption[groupIndex].mapper;\n        axisInfo.linkGroup = linkGroup;\n      }\n    }\n  });\n}\n\nfunction makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) {\n  var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n  var volatileOption = {};\n  each(['type', 'snap', 'lineStyle', 'shadowStyle', 'label', 'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'], function (field) {\n    volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n  }); // category axis do not auto snap, otherwise some tick that do not\n  // has value can not be hovered. value/time/log axis default snap if\n  // triggered from tooltip and trigger tooltip.\n\n  volatileOption.snap = axis.type !== 'category' && !!triggerTooltip; // Compatibel with previous behavior, tooltip axis do not show label by default.\n  // Only these properties can be overrided from tooltip to axisPointer.\n\n  if (tooltipAxisPointerModel.get('type') === 'cross') {\n    volatileOption.type = 'line';\n  }\n\n  var labelOption = volatileOption.label || (volatileOption.label = {}); // Follow the convention, do not show label when triggered by tooltip by default.\n\n  labelOption.show == null && (labelOption.show = false);\n\n  if (fromTooltip === 'cross') {\n    // When 'cross', both axes show labels.\n    var tooltipAxisPointerLabelShow = tooltipAxisPointerModel.get('label.show');\n    labelOption.show = tooltipAxisPointerLabelShow != null ? tooltipAxisPointerLabelShow : true; // If triggerTooltip, this is a base axis, which should better not use cross style\n    // (cross style is dashed by default)\n\n    if (!triggerTooltip) {\n      var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n      crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n    }\n  }\n\n  return axis.model.getModel('axisPointer', new Model(volatileOption, globalAxisPointerModel, ecModel));\n}\n\nfunction collectSeriesInfo(result, ecModel) {\n  // Prepare data for axis trigger\n  ecModel.eachSeries(function (seriesModel) {\n    // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n    var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n\n    if (!coordSys || seriesTooltipTrigger === 'none' || seriesTooltipTrigger === false || seriesTooltipTrigger === 'item' || seriesTooltipShow === false || seriesModel.get('axisPointer.show', true) === false) {\n      return;\n    }\n\n    each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n      var axis = axisInfo.axis;\n\n      if (coordSys.getAxis(axis.dim) === axis) {\n        axisInfo.seriesModels.push(seriesModel);\n        axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n        axisInfo.seriesDataCount += seriesModel.getData().count();\n      }\n    });\n  }, this);\n}\n/**\n * For example:\n * {\n *     axisPointer: {\n *         links: [{\n *             xAxisIndex: [2, 4],\n *             yAxisIndex: 'all'\n *         }, {\n *             xAxisId: ['a5', 'a7'],\n *             xAxisName: 'xxx'\n *         }]\n *     }\n * }\n */\n\n\nfunction getLinkGroupIndex(linksOption, axis) {\n  var axisModel = axis.model;\n  var dim = axis.dim;\n\n  for (var i = 0; i < linksOption.length; i++) {\n    var linkOption = linksOption[i] || {};\n\n    if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id) || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex) || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)) {\n      return i;\n    }\n  }\n}\n\nfunction checkPropInLink(linkPropValue, axisPropValue) {\n  return linkPropValue === 'all' || zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0 || linkPropValue === axisPropValue;\n}\n\nfunction fixValue(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n\n  if (!axisInfo) {\n    return;\n  }\n\n  var axisPointerModel = axisInfo.axisPointerModel;\n  var scale = axisInfo.axis.scale;\n  var option = axisPointerModel.option;\n  var status = axisPointerModel.get('status');\n  var value = axisPointerModel.get('value'); // Parse init value for category and time axis.\n\n  if (value != null) {\n    value = scale.parse(value);\n  }\n\n  var useHandle = isHandleTrigger(axisPointerModel); // If `handle` used, `axisPointer` will always be displayed, so value\n  // and status should be initialized.\n\n  if (status == null) {\n    option.status = useHandle ? 'show' : 'hide';\n  }\n\n  var extent = scale.getExtent().slice();\n  extent[0] > extent[1] && extent.reverse();\n\n  if ( // Pick a value on axis when initializing.\n  value == null // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n  // where we should re-pick a value to keep `handle` displaying normally.\n  || value > extent[1]) {\n    // Make handle displayed on the end of the axis when init, which looks better.\n    value = extent[1];\n  }\n\n  if (value < extent[0]) {\n    value = extent[0];\n  }\n\n  option.value = value;\n\n  if (useHandle) {\n    option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n  }\n}\n\nfunction getAxisInfo(axisModel) {\n  var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n  return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n}\n\nfunction getAxisPointerModel(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n  return axisInfo && axisInfo.axisPointerModel;\n}\n\nfunction isHandleTrigger(axisPointerModel) {\n  return !!axisPointerModel.get('handle.show');\n}\n/**\n * @param {module:echarts/model/Model} model\n * @return {string} unique key\n */\n\n\nfunction makeKey(model) {\n  return model.type + '||' + model.id;\n}\n\nexports.collect = collect;\nexports.fixValue = fixValue;\nexports.getAxisInfo = getAxisInfo;\nexports.getAxisPointerModel = getAxisPointerModel;\nexports.makeKey = makeKey;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file defines echarts Heatmap Chart\n * @author Ovilia (me@zhangwenli.com)\n * Inspired by https://github.com/mourner/simpleheat\n *\n * @module\n */\nvar GRADIENT_LEVELS = 256;\n/**\n * Heatmap Chart\n *\n * @class\n */\n\nfunction Heatmap() {\n  var canvas = zrUtil.createCanvas();\n  this.canvas = canvas;\n  this.blurSize = 30;\n  this.pointSize = 20;\n  this.maxOpacity = 1;\n  this.minOpacity = 0;\n  this._gradientPixels = {};\n}\n\nHeatmap.prototype = {\n  /**\n   * Renders Heatmap and returns the rendered canvas\n   * @param {Array} data array of data, each has x, y, value\n   * @param {number} width canvas width\n   * @param {number} height canvas height\n   */\n  update: function (data, width, height, normalize, colorFunc, isInRange) {\n    var brush = this._getBrush();\n\n    var gradientInRange = this._getGradient(data, colorFunc, 'inRange');\n\n    var gradientOutOfRange = this._getGradient(data, colorFunc, 'outOfRange');\n\n    var r = this.pointSize + this.blurSize;\n    var canvas = this.canvas;\n    var ctx = canvas.getContext('2d');\n    var len = data.length;\n    canvas.width = width;\n    canvas.height = height;\n\n    for (var i = 0; i < len; ++i) {\n      var p = data[i];\n      var x = p[0];\n      var y = p[1];\n      var value = p[2]; // calculate alpha using value\n\n      var alpha = normalize(value); // draw with the circle brush with alpha\n\n      ctx.globalAlpha = alpha;\n      ctx.drawImage(brush, x - r, y - r);\n    }\n\n    if (!canvas.width || !canvas.height) {\n      // Avoid \"Uncaught DOMException: Failed to execute 'getImageData' on\n      // 'CanvasRenderingContext2D': The source height is 0.\"\n      return canvas;\n    } // colorize the canvas using alpha value and set with gradient\n\n\n    var imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n    var pixels = imageData.data;\n    var offset = 0;\n    var pixelLen = pixels.length;\n    var minOpacity = this.minOpacity;\n    var maxOpacity = this.maxOpacity;\n    var diffOpacity = maxOpacity - minOpacity;\n\n    while (offset < pixelLen) {\n      var alpha = pixels[offset + 3] / 256;\n      var gradientOffset = Math.floor(alpha * (GRADIENT_LEVELS - 1)) * 4; // Simple optimize to ignore the empty data\n\n      if (alpha > 0) {\n        var gradient = isInRange(alpha) ? gradientInRange : gradientOutOfRange; // Any alpha > 0 will be mapped to [minOpacity, maxOpacity]\n\n        alpha > 0 && (alpha = alpha * diffOpacity + minOpacity);\n        pixels[offset++] = gradient[gradientOffset];\n        pixels[offset++] = gradient[gradientOffset + 1];\n        pixels[offset++] = gradient[gradientOffset + 2];\n        pixels[offset++] = gradient[gradientOffset + 3] * alpha * 256;\n      } else {\n        offset += 4;\n      }\n    }\n\n    ctx.putImageData(imageData, 0, 0);\n    return canvas;\n  },\n\n  /**\n   * get canvas of a black circle brush used for canvas to draw later\n   * @private\n   * @returns {Object} circle brush canvas\n   */\n  _getBrush: function () {\n    var brushCanvas = this._brushCanvas || (this._brushCanvas = zrUtil.createCanvas()); // set brush size\n\n    var r = this.pointSize + this.blurSize;\n    var d = r * 2;\n    brushCanvas.width = d;\n    brushCanvas.height = d;\n    var ctx = brushCanvas.getContext('2d');\n    ctx.clearRect(0, 0, d, d); // in order to render shadow without the distinct circle,\n    // draw the distinct circle in an invisible place,\n    // and use shadowOffset to draw shadow in the center of the canvas\n\n    ctx.shadowOffsetX = d;\n    ctx.shadowBlur = this.blurSize; // draw the shadow in black, and use alpha and shadow blur to generate\n    // color in color map\n\n    ctx.shadowColor = '#000'; // draw circle in the left to the canvas\n\n    ctx.beginPath();\n    ctx.arc(-r, r, this.pointSize, 0, Math.PI * 2, true);\n    ctx.closePath();\n    ctx.fill();\n    return brushCanvas;\n  },\n\n  /**\n   * get gradient color map\n   * @private\n   */\n  _getGradient: function (data, colorFunc, state) {\n    var gradientPixels = this._gradientPixels;\n    var pixelsSingleState = gradientPixels[state] || (gradientPixels[state] = new Uint8ClampedArray(256 * 4));\n    var color = [0, 0, 0, 0];\n    var off = 0;\n\n    for (var i = 0; i < 256; i++) {\n      colorFunc[state](i / 255, true, color);\n      pixelsSingleState[off++] = color[0];\n      pixelsSingleState[off++] = color[1];\n      pixelsSingleState[off++] = color[2];\n      pixelsSingleState[off++] = color[3];\n    }\n\n    return pixelsSingleState;\n  }\n};\nvar _default = Heatmap;\nmodule.exports = _default;","var _event = require(\"../core/event\");\n\nvar addEventListener = _event.addEventListener;\nvar removeEventListener = _event.removeEventListener;\nvar normalizeEvent = _event.normalizeEvent;\n\nvar zrUtil = require(\"../core/util\");\n\nvar Eventful = require(\"../mixin/Eventful\");\n\nvar env = require(\"../core/env\");\n\nvar GestureMgr = require(\"../core/GestureMgr\");\n\nvar TOUCH_CLICK_DELAY = 300;\nvar mouseHandlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\nvar touchHandlerNames = ['touchstart', 'touchend', 'touchmove'];\nvar pointerEventNames = {\n  pointerdown: 1,\n  pointerup: 1,\n  pointermove: 1,\n  pointerout: 1\n};\nvar pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n  var nm = name.replace('mouse', 'pointer');\n  return pointerEventNames[nm] ? nm : name;\n});\n\nfunction eventNameFix(name) {\n  return name === 'mousewheel' && env.browser.firefox ? 'DOMMouseScroll' : name;\n}\n\nfunction processGesture(proxy, event, stage) {\n  var gestureMgr = proxy._gestureMgr;\n  stage === 'start' && gestureMgr.clear();\n  var gestureInfo = gestureMgr.recognize(event, proxy.handler.findHover(event.zrX, event.zrY, null).target, proxy.dom);\n  stage === 'end' && gestureMgr.clear(); // Do not do any preventDefault here. Upper application do that if necessary.\n\n  if (gestureInfo) {\n    var type = gestureInfo.type;\n    event.gestureEvent = type;\n    proxy.handler.dispatchToElement({\n      target: gestureInfo.target\n    }, type, gestureInfo.event);\n  }\n} // function onMSGestureChange(proxy, event) {\n//     if (event.translationX || event.translationY) {\n//         // mousemove is carried by MSGesture to reduce the sensitivity.\n//         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n//     }\n//     if (event.scale !== 1) {\n//         event.pinchX = event.offsetX;\n//         event.pinchY = event.offsetY;\n//         event.pinchScale = event.scale;\n//         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n//     }\n// }\n\n/**\n * Prevent mouse event from being dispatched after Touch Events action\n * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n * Result: Blocking Mouse Events for 700ms.\n */\n\n\nfunction setTouchTimer(instance) {\n  instance._touching = true;\n  clearTimeout(instance._touchTimer);\n  instance._touchTimer = setTimeout(function () {\n    instance._touching = false;\n  }, 700);\n}\n\nvar domHandlers = {\n  /**\n   * Mouse move handler\n   * @inner\n   * @param {Event} event\n   */\n  mousemove: function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger('mousemove', event);\n  },\n\n  /**\n   * Mouse out handler\n   * @inner\n   * @param {Event} event\n   */\n  mouseout: function (event) {\n    event = normalizeEvent(this.dom, event);\n    var element = event.toElement || event.relatedTarget;\n\n    if (element != this.dom) {\n      while (element && element.nodeType != 9) {\n        // 忽略包含在root中的dom引起的mouseOut\n        if (element === this.dom) {\n          return;\n        }\n\n        element = element.parentNode;\n      }\n    }\n\n    this.trigger('mouseout', event);\n  },\n\n  /**\n   * Touch开始响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchstart: function (event) {\n    // Default mouse behaviour should not be disabled here.\n    // For example, page may needs to be slided.\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    this._lastTouchMoment = new Date();\n    processGesture(this, event, 'start'); // In touch device, trigger `mousemove`(`mouseover`) should\n    // be triggered, and must before `mousedown` triggered.\n\n    domHandlers.mousemove.call(this, event);\n    domHandlers.mousedown.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch移动响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchmove: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'change'); // Mouse move should always be triggered no matter whether\n    // there is gestrue event, because mouse move and pinch may\n    // be used at the same time.\n\n    domHandlers.mousemove.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch结束响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchend: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'end');\n    domHandlers.mouseup.call(this, event); // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n    // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n    // we can conveniently implement \"hover style\" in both PC and touch device just\n    // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n    // to remove \"hover style\" on an element, without any additional code for\n    // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n    // style\" will remain for user view)\n    // click event should always be triggered no matter whether\n    // there is gestrue event. System click can not be prevented.\n\n    if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n      domHandlers.click.call(this, event);\n    }\n\n    setTouchTimer(this);\n  },\n  pointerdown: function (event) {\n    domHandlers.mousedown.call(this, event); // if (useMSGuesture(this, event)) {\n    //     this._msGesture.addPointer(event.pointerId);\n    // }\n  },\n  pointermove: function (event) {\n    // FIXME\n    // pointermove is so sensitive that it always triggered when\n    // tap(click) on touch screen, which affect some judgement in\n    // upper application. So, we dont support mousemove on MS touch\n    // device yet.\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mousemove.call(this, event);\n    }\n  },\n  pointerup: function (event) {\n    domHandlers.mouseup.call(this, event);\n  },\n  pointerout: function (event) {\n    // pointerout will be triggered when tap on touch screen\n    // (IE11+/Edge on MS Surface) after click event triggered,\n    // which is inconsistent with the mousout behavior we defined\n    // in touchend. So we unify them.\n    // (check domHandlers.touchend for detailed explanation)\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mouseout.call(this, event);\n    }\n  }\n};\n\nfunction isPointerFromTouch(event) {\n  var pointerType = event.pointerType;\n  return pointerType === 'pen' || pointerType === 'touch';\n} // function useMSGuesture(handlerProxy, event) {\n//     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n// }\n// Common handlers\n\n\nzrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  domHandlers[name] = function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger(name, event);\n  };\n});\n/**\n * 为控制类实例初始化dom 事件处理函数\n *\n * @inner\n * @param {module:zrender/Handler} instance 控制类实例\n */\n\nfunction initDomHandler(instance) {\n  zrUtil.each(touchHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(pointerHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(mouseHandlerNames, function (name) {\n    instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n  });\n\n  function makeMouseHandler(fn, instance) {\n    return function () {\n      if (instance._touching) {\n        return;\n      }\n\n      return fn.apply(instance, arguments);\n    };\n  }\n}\n\nfunction HandlerDomProxy(dom) {\n  Eventful.call(this);\n  this.dom = dom;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._touching = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._touchTimer;\n  /**\n   * @private\n   * @type {module:zrender/core/GestureMgr}\n   */\n\n  this._gestureMgr = new GestureMgr();\n  this._handlers = {};\n  initDomHandler(this);\n\n  if (env.pointerEventsSupported) {\n    // Only IE11+/Edge\n    // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n    // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n    // at the same time.\n    // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n    // screen, which do not occurs in pointer event.\n    // So we use pointer event to both detect touch gesture and mouse behavior.\n    mountHandlers(pointerHandlerNames, this); // FIXME\n    // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n    // which does not prevent defuault behavior occasionally (which may cause view port\n    // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n    // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n    // touch screen. And we only support click behavior on MS touch screen now.\n    // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n    // We dont support touch on IE on win7.\n    // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n    // if (typeof MSGesture === 'function') {\n    //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n    //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n    // }\n  } else {\n    if (env.touchEventsSupported) {\n      mountHandlers(touchHandlerNames, this); // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n      // addEventListener(root, 'mouseout', this._mouseoutHandler);\n    } // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n    // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n    // mouse event can not be handle in those devices.\n    // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n    // mouseevent after touch event triggered, see `setTouchTimer`.\n\n\n    mountHandlers(mouseHandlerNames, this);\n  }\n\n  function mountHandlers(handlerNames, instance) {\n    zrUtil.each(handlerNames, function (name) {\n      addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n    }, instance);\n  }\n}\n\nvar handlerDomProxyProto = HandlerDomProxy.prototype;\n\nhandlerDomProxyProto.dispose = function () {\n  var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n  for (var i = 0; i < handlerNames.length; i++) {\n    var name = handlerNames[i];\n    removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n  }\n};\n\nhandlerDomProxyProto.setCursor = function (cursorStyle) {\n  this.dom.style && (this.dom.style.cursor = cursorStyle || 'default');\n};\n\nzrUtil.mixin(HandlerDomProxy, Eventful);\nvar _default = HandlerDomProxy;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  var processedMapType = {};\n  ecModel.eachSeriesByType('map', function (mapSeries) {\n    var mapType = mapSeries.getMapType();\n\n    if (mapSeries.getHostGeoModel() || processedMapType[mapType]) {\n      return;\n    }\n\n    var mapSymbolOffsets = {};\n    zrUtil.each(mapSeries.seriesGroup, function (subMapSeries) {\n      var geo = subMapSeries.coordinateSystem;\n      var data = subMapSeries.originalData;\n\n      if (subMapSeries.get('showLegendSymbol') && ecModel.getComponent('legend')) {\n        data.each(data.mapDimension('value'), function (value, idx) {\n          var name = data.getName(idx);\n          var region = geo.getRegion(name); // If input series.data is [11, 22, '-'/null/undefined, 44],\n          // it will be filled with NaN: [11, 22, NaN, 44] and NaN will\n          // not be drawn. So here must validate if value is NaN.\n\n          if (!region || isNaN(value)) {\n            return;\n          }\n\n          var offset = mapSymbolOffsets[name] || 0;\n          var point = geo.dataToPoint(region.center);\n          mapSymbolOffsets[name] = offset + 1;\n          data.setItemLayout(idx, {\n            point: point,\n            offset: offset\n          });\n        });\n      }\n    }); // Show label of those region not has legendSymbol(which is offset 0)\n\n    var data = mapSeries.getData();\n    data.each(function (idx) {\n      var name = data.getName(idx);\n      var layout = data.getItemLayout(idx) || {};\n      layout.showLabel = !mapSymbolOffsets[name];\n      data.setItemLayout(idx, layout);\n    });\n    processedMapType[mapType] = true;\n  });\n}\n\nmodule.exports = _default;"],"sourceRoot":""}